{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/yilia/source/CNAME","path":"CNAME","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/weixin.png","path":"img/weixin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2015-10-23DB常见操作.md","hash":"1acca3eab379f9627140706eadda97cdc394561c","modified":1656429489523},{"_id":"source/_posts/2015-10-23常见环境问题及解决方案.md","hash":"f2d0e18921048a526c6c90bc91e282696dfeb51c","modified":1656428818459},{"_id":"source/_posts/2017-9-27服务器被攻击勒索案例.md","hash":"b40b98c500c454156f895f8ab5d3b84965a1dd04","modified":1656427702971},{"_id":"source/_posts/2022-6-26git merge策略解析.md","hash":"848e6d3cad15c2ddb415f7c491230a6c9509f565","modified":1656428131475},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1656398567722},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1656398567639},{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1656398567639},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1656398567639},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1656398567640},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1656398567640},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1656398567648},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1656398567648},{"_id":"themes/yilia/_config.yml","hash":"f1d25a9b1baa30720881593a21679f48ea12725e","modified":1656427566340},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1656398567742},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1656398567810},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1656398567724},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1656398567724},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656398567725},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656398567742},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1656398567723},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1656398567742},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1656398567724},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1656398567649},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1656398567650},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1656398567651},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1656398567650},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1656398567650},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1656398567665},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1656398567650},{"_id":"themes/yilia/source/CNAME","hash":"f6851ef14855632a3db6ebac3079d959d808c8c3","modified":1656417979875},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1656398567807},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1656398567809},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1656398567743},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1656398567802},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1656398567669},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1656398567670},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"8dea8f5f93a60185439b330b0f1d1649a6ab4bd0","modified":1656398567673},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1656398567672},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1656398567674},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1656398567675},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1656398567701},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1656398567701},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1656398567723},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1656398567723},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1656398567806},{"_id":"themes/yilia/source/img/head.jpg","hash":"d5333246af065c0cc9f77df9b2e2e0e013fb1fa3","modified":1654226753586},{"_id":"themes/yilia/source/img/favicon.ico","hash":"078838b5553f72be9ccc8e35d8e400878a291b79","modified":1651986633433},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1656398567806},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656398567807},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656398567804},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656398567806},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656398567804},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1656398567744},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1656398567743},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1656398567744},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1656398567745},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1656398567744},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1656398567745},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1656398567756},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1656398567759},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1656398567758},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1656398567769},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1656398567776},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1656398567776},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1656398567777},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1656398567777},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1656398567779},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1656398567779},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1656398567779},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1656398567780},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1656398567780},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1656398567780},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1656398567781},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1656398567781},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1656398567781},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1656398567783},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1656398567783},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1656398567784},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1656398567784},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1656398567785},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1656398567785},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1656398567800},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1656398567800},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1656398567784},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1656398567800},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1656398567801},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1656398567801},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1656398567801},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1656398567705},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1656398567705},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1656398567706},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1656398567720},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1656398567721},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1656398567721},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1656398567721},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1656398567761},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1656398567766},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1656398567763},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1656398567765},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656398567772},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1656398567768},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656398567773},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656398567774},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656398567775},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1656398567778},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656398567778},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656398567778},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1656398567808},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1656398567809},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1656398567722},{"_id":"themes/yilia/source/img/alipay.png","hash":"d67fa17e8d9920e8937c3e3470eb76b4d2c978e9","modified":1656408814518},{"_id":"themes/yilia/source/img/weixin.png","hash":"5695522539c0f8cecfbffdb0b477c56f8d2b2e46","modified":1656408834297},{"_id":"public/content.json","hash":"12b1d13c7bfd4812dab8ef1f2a69fc5a6abf0676","modified":1656429492366},{"_id":"public/2022/06/26/2022-6-26git merge策略解析/index.html","hash":"a0802e9bf4215aaadab7ba023155d05af87c5922","modified":1656429492366},{"_id":"public/archives/index.html","hash":"3735e31263fe8b747e54eb95721fcb6fb289bff5","modified":1656429492366},{"_id":"public/2017/09/27/2017-9-27服务器被攻击勒索案例/index.html","hash":"6cfd445b562944a20d6a1db6cd1246de3f91e6e7","modified":1656429492366},{"_id":"public/2015/10/23/2015-10-23DB常见操作/index.html","hash":"d5a61deb7ba15723a791be931855a3a0ad925152","modified":1656429492366},{"_id":"public/2015/10/23/2015-10-23常见环境问题及解决方案/index.html","hash":"630dd80ede7b4dd1f3272ce705645f53225d6043","modified":1656429492366},{"_id":"public/archives/2015/index.html","hash":"241e1b9bfffd4775117dd83ddf71877a392b22c6","modified":1656429492366},{"_id":"public/archives/2015/10/index.html","hash":"90f8cba3767d6b22fd2b4771cef5e09d7ff4f168","modified":1656429492366},{"_id":"public/archives/2017/index.html","hash":"5fd2e0058aaef27c4904cfec2066d77929685430","modified":1656429492366},{"_id":"public/archives/2017/09/index.html","hash":"c310381729f0355550c310306c15515bb635d2d6","modified":1656429492366},{"_id":"public/index.html","hash":"7cbf8525d9070775e0da15d3938b68ed3f592fc8","modified":1656429492366},{"_id":"public/archives/2022/index.html","hash":"dd8f611420285e083531bf30945cdd2b4cea02dc","modified":1656429492366},{"_id":"public/archives/2022/06/index.html","hash":"637a327ad95b97d9d23018b378070baa4d571634","modified":1656429492366},{"_id":"public/tags/DB/index.html","hash":"d47ab3eeffb554ec28d5d29a19c1e7b3a8487746","modified":1656429492366},{"_id":"public/tags/环境/index.html","hash":"f12f282843c2064b7eb0cc295d84ef10f9bd42b6","modified":1656429492366},{"_id":"public/tags/攻击/index.html","hash":"0eb4a3b8f0f32016f6b08c047319a4599628669c","modified":1656429492366},{"_id":"public/tags/git/index.html","hash":"038087879d9accf75d73284d7784c63afa5457d2","modified":1656429492366},{"_id":"public/tags/merge/index.html","hash":"b4effa89d5b76bab48b1d69c013caf0d57c0a48c","modified":1656429492366},{"_id":"public/tags/策略/index.html","hash":"362fd9a1ba730021a28e856a3964cc7e9b14d1bd","modified":1656429492366},{"_id":"public/CNAME","hash":"f6851ef14855632a3db6ebac3079d959d808c8c3","modified":1656429492366},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1656429492366},{"_id":"public/img/favicon.ico","hash":"078838b5553f72be9ccc8e35d8e400878a291b79","modified":1656429492366},{"_id":"public/img/head.jpg","hash":"d5333246af065c0cc9f77df9b2e2e0e013fb1fa3","modified":1656429492366},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1656429492366},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1656429492366},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656429492366},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656429492366},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656429492366},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656429492366},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656429492366},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656429492366},{"_id":"public/img/alipay.png","hash":"d67fa17e8d9920e8937c3e3470eb76b4d2c978e9","modified":1656429492366},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1656429492366},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1656429492366},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1656429492366},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1656429492366},{"_id":"public/img/weixin.png","hash":"5695522539c0f8cecfbffdb0b477c56f8d2b2e46","modified":1656429492366}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"DB常见操作","date":"2015-10-22T16:00:00.000Z","_content":"\nDB常见操作\n\n<!--more-->\n\n## 命令\n```\nDDL：数据定义语言\nDQL：数据查询语言\nDML：数据操作语言\nCREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。\nALTER：修改数据库中的某个已有的数据库对象，比如一个表。\nDROP：删除整个表，或者表的视图，或者数据库中的其他对象。\nINSERT：创建一条记录。\nUPDATE：修改记录。\nDELETE：删除记录。\nSELECT：从一个或多个表中检索某些记录。\n```\n\n\n## 运算符\n\n```\n算术运算符\n    +：加法 - 把运算符两边的值相加\ta + b 将得到 30\n    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10\n    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200\n    /：除法 - 左操作数除以右操作数\tb / a 将得到 2\n    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0\n\n比较运算符\n    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。\n    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。\n    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。\n    <>：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a <> b) 为真。\n    >：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a > b) 不为真。\n    <：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a < b) 为真。\n    >=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a >= b) 不为真。\n    <=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a <= b) 为真。\n    !<：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !< b) 为假。\n    !>：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !> b) 为真。\n\n逻辑运算符\n    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。\n    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。\n    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。\n    IN：运算符用于把某个值与一系列指定列表的值进行比较。\n    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。\n    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。\n    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。\n    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。\n    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。\n    IS NULL：运算符用于把某个值与 NULL 值进行比较。\n    IS：运算符与 = 相似。\n    IS NOT：运算符与 != 相似。\n    ||：连接两个不同的字符串，得到一个新的字符串。\n    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。\n\n位运算符\n    &：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A & B) 将得到 \t\t12，即为 0000 1100\n    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101\n    ~：二进制补码运算符是一元运算符，具有\"翻转\"位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。\n    <<：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA << 2 将得到 240，即\t为 1111 0000\n    >>：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA >> 2 将得到 15，即为 0000 1111\n```\n\n## 基本用法\n\n```\n执行顺序：\n    1.from\n    2.join\n    3.where\n    4.group by\n    5.order by\n\n增删改查\n    insert into `user`(`field1`,`field2`) values(value1,value2);\n    delete from `user` where 范围;\n    update `user` set field1=value1 where 范围;\n    select * from `user`;\n\nlike子句\n    select * from `user` where name like 'xxx%';\n    select * from `user` where name like 'xxx_';\n    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。\n\nglob子句\n    select * from `user` where name glob 'xxx*';\n    select * from `user` where name glob 'xxx?';\n    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。\n\nlimit子句（从 offset 偏移量，截取 limit 条数）\n    select * from `user` limit 10 offset 0;\n\norder by子句\n    select * from `user` order by col1,col2 [ASC | DESC];\n\ngroup by子句\n    select * from `user` group by col1,col2 having 条件;\n\ndistinct（去除重复列，distinct后面的所有列）\n    select distinct col1,col2,col3 from `user`;\n```\n\n## 高级\n```\n约束：\n    not null 约束：确保某列不能有 NULL 值。\n    default 约束：当某列没有指定值时，为该列提供默认值。\n    unique 约束：确保某列中的所有值是不同的。\n    primary key 约束：唯一标识数据库表中的各行/记录。\n    check 约束：CHECK 约束确保某列中的所有值满足一定条件。\n    age ingeter check(age > 0),\n\n连接：\n    交叉连接 - CROSS JOIN（结果乘积）\n    内连接 - INNER JOIN（结果交集）\n    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）\n        select * from t1 a\n        left join t2 b on a.id = b.user_id\n\nunion：（union连接两个结果集，union all包括重复列）\n    select * from user1\n    union\n    select * from user2\n\n别名：\n    select a as name from user as A\n    select a name from user A\n\n触发器：\n\n索引：\n    create index index_name on table_name (column1, column2);\n    drop index salary_index;\n    select * from company indexed by salary_index WHERE salary > 5000;\n\n视图：\n    create view xxx_view as select * from `user`;\n    drop view xxx_view;\n\n事务：\n    BEGIN TRANSACTION：开始事务处理。\n    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。\n    ROLLBACK：回滚所做的更改。\n    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。\n\nautoincrement：\n    column1 integer autoincrement,\n\n集合判断：\n    (case \n    when A.status_flag='0' then '退回' \n    when A.status_flag='1' then '新增' \n    when A.status_flag='2' then '待复核' \n    else '其他' \n    end\n    ) status_name\n\n函数：\n    1：SQLite COUNT 函数\n        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。\n    2：SQLite MAX 函数\n        SQLite MAX 聚合函数允许我们选择某列的最大值。\n    3：SQLite MIN 函数\n        SQLite MIN 聚合函数允许我们选择某列的最小值。\n    4：SQLite AVG 函数\n        SQLite AVG 聚合函数计算某列的平均值。\n    5：SQLite SUM 函数\n        SQLite SUM 聚合函数允许为一个数值列计算总和。\n    6：SQLite RANDOM 函数\n        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。\n    7：SQLite ABS 函数\n        SQLite ABS 函数返回数值参数的绝对值。\n    8：SQLite UPPER 函数\n        SQLite UPPER 函数把字符串转换为大写字母。\n    9：SQLite LOWER 函数\n        SQLite LOWER 函数把字符串转换为小写字母。\n    10：SQLite LENGTH 函数\n        SQLite LENGTH 函数返回字符串的长度。\n    11：SQLite sqlite_version 函数\n        SQLite sqlite_version 函数返回 SQLite 库的版本。\n            \n```\n\n## Mysql常用操作\n\n```\nmysql数据类型\n    | 类型 | 描述 |\n    | int/integer | int同integer |\n    | char | 定长字符串 |\n    | varchar | 变长字符串 |\n    | text | 长文本 |\n\n创建表（可放not null和default）\n    drop table if exists `user`;\n    create table `user` (\n     `id` int auto_increment,\n     `name` varchar(32),\n     `age` int,\n     primary key (`id`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n连接mysql，并修改密码\n    mysql -u root -p\n    set password for 'root'@'localhost' = password('newpass');\n\n创建删除数据库\n    drop database `jfinal`;\n    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n修改root密码\n    use mysql;\n    update user set password=password('new password') where user='root';\n\n创建远程用户（删除、创建、授权）\n    drop user 'jmm'@'%';\n    create user 'jmm'@'%' identified by 'jmm';\n    grant all on *.* to 'jmm'@'%';\n\n查看用户\n    select Host,User from mysql.user;\n\n查看 设置 字符集\n    show VARIABLES like 'character%';\n    set character_set_client=utf8;\n```\n\n## sqlite常用操作\n\n```\n创建表\n    drop table if exists `user`;\n    create table if no exists `user` (\n     id integer primary key,    -- integer primary key即为自增\n     name varchar(32),\n     age integer\n    );\n\n查表信息\n    select name from sqlite_master;\n\n查询出某个表的所有字段信息\n    PRAGMA table_info([tablename]);\n```\n","source":"_posts/2015-10-23DB常见操作.md","raw":"---\ntitle: DB常见操作\ndate: 2015-10-23\ntags: [DB]\n---\n\nDB常见操作\n\n<!--more-->\n\n## 命令\n```\nDDL：数据定义语言\nDQL：数据查询语言\nDML：数据操作语言\nCREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。\nALTER：修改数据库中的某个已有的数据库对象，比如一个表。\nDROP：删除整个表，或者表的视图，或者数据库中的其他对象。\nINSERT：创建一条记录。\nUPDATE：修改记录。\nDELETE：删除记录。\nSELECT：从一个或多个表中检索某些记录。\n```\n\n\n## 运算符\n\n```\n算术运算符\n    +：加法 - 把运算符两边的值相加\ta + b 将得到 30\n    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10\n    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200\n    /：除法 - 左操作数除以右操作数\tb / a 将得到 2\n    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0\n\n比较运算符\n    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。\n    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。\n    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。\n    <>：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a <> b) 为真。\n    >：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a > b) 不为真。\n    <：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a < b) 为真。\n    >=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a >= b) 不为真。\n    <=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a <= b) 为真。\n    !<：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !< b) 为假。\n    !>：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !> b) 为真。\n\n逻辑运算符\n    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。\n    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。\n    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。\n    IN：运算符用于把某个值与一系列指定列表的值进行比较。\n    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。\n    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。\n    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。\n    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。\n    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。\n    IS NULL：运算符用于把某个值与 NULL 值进行比较。\n    IS：运算符与 = 相似。\n    IS NOT：运算符与 != 相似。\n    ||：连接两个不同的字符串，得到一个新的字符串。\n    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。\n\n位运算符\n    &：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A & B) 将得到 \t\t12，即为 0000 1100\n    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101\n    ~：二进制补码运算符是一元运算符，具有\"翻转\"位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。\n    <<：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA << 2 将得到 240，即\t为 1111 0000\n    >>：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA >> 2 将得到 15，即为 0000 1111\n```\n\n## 基本用法\n\n```\n执行顺序：\n    1.from\n    2.join\n    3.where\n    4.group by\n    5.order by\n\n增删改查\n    insert into `user`(`field1`,`field2`) values(value1,value2);\n    delete from `user` where 范围;\n    update `user` set field1=value1 where 范围;\n    select * from `user`;\n\nlike子句\n    select * from `user` where name like 'xxx%';\n    select * from `user` where name like 'xxx_';\n    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。\n\nglob子句\n    select * from `user` where name glob 'xxx*';\n    select * from `user` where name glob 'xxx?';\n    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。\n\nlimit子句（从 offset 偏移量，截取 limit 条数）\n    select * from `user` limit 10 offset 0;\n\norder by子句\n    select * from `user` order by col1,col2 [ASC | DESC];\n\ngroup by子句\n    select * from `user` group by col1,col2 having 条件;\n\ndistinct（去除重复列，distinct后面的所有列）\n    select distinct col1,col2,col3 from `user`;\n```\n\n## 高级\n```\n约束：\n    not null 约束：确保某列不能有 NULL 值。\n    default 约束：当某列没有指定值时，为该列提供默认值。\n    unique 约束：确保某列中的所有值是不同的。\n    primary key 约束：唯一标识数据库表中的各行/记录。\n    check 约束：CHECK 约束确保某列中的所有值满足一定条件。\n    age ingeter check(age > 0),\n\n连接：\n    交叉连接 - CROSS JOIN（结果乘积）\n    内连接 - INNER JOIN（结果交集）\n    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）\n        select * from t1 a\n        left join t2 b on a.id = b.user_id\n\nunion：（union连接两个结果集，union all包括重复列）\n    select * from user1\n    union\n    select * from user2\n\n别名：\n    select a as name from user as A\n    select a name from user A\n\n触发器：\n\n索引：\n    create index index_name on table_name (column1, column2);\n    drop index salary_index;\n    select * from company indexed by salary_index WHERE salary > 5000;\n\n视图：\n    create view xxx_view as select * from `user`;\n    drop view xxx_view;\n\n事务：\n    BEGIN TRANSACTION：开始事务处理。\n    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。\n    ROLLBACK：回滚所做的更改。\n    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。\n\nautoincrement：\n    column1 integer autoincrement,\n\n集合判断：\n    (case \n    when A.status_flag='0' then '退回' \n    when A.status_flag='1' then '新增' \n    when A.status_flag='2' then '待复核' \n    else '其他' \n    end\n    ) status_name\n\n函数：\n    1：SQLite COUNT 函数\n        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。\n    2：SQLite MAX 函数\n        SQLite MAX 聚合函数允许我们选择某列的最大值。\n    3：SQLite MIN 函数\n        SQLite MIN 聚合函数允许我们选择某列的最小值。\n    4：SQLite AVG 函数\n        SQLite AVG 聚合函数计算某列的平均值。\n    5：SQLite SUM 函数\n        SQLite SUM 聚合函数允许为一个数值列计算总和。\n    6：SQLite RANDOM 函数\n        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。\n    7：SQLite ABS 函数\n        SQLite ABS 函数返回数值参数的绝对值。\n    8：SQLite UPPER 函数\n        SQLite UPPER 函数把字符串转换为大写字母。\n    9：SQLite LOWER 函数\n        SQLite LOWER 函数把字符串转换为小写字母。\n    10：SQLite LENGTH 函数\n        SQLite LENGTH 函数返回字符串的长度。\n    11：SQLite sqlite_version 函数\n        SQLite sqlite_version 函数返回 SQLite 库的版本。\n            \n```\n\n## Mysql常用操作\n\n```\nmysql数据类型\n    | 类型 | 描述 |\n    | int/integer | int同integer |\n    | char | 定长字符串 |\n    | varchar | 变长字符串 |\n    | text | 长文本 |\n\n创建表（可放not null和default）\n    drop table if exists `user`;\n    create table `user` (\n     `id` int auto_increment,\n     `name` varchar(32),\n     `age` int,\n     primary key (`id`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n连接mysql，并修改密码\n    mysql -u root -p\n    set password for 'root'@'localhost' = password('newpass');\n\n创建删除数据库\n    drop database `jfinal`;\n    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n修改root密码\n    use mysql;\n    update user set password=password('new password') where user='root';\n\n创建远程用户（删除、创建、授权）\n    drop user 'jmm'@'%';\n    create user 'jmm'@'%' identified by 'jmm';\n    grant all on *.* to 'jmm'@'%';\n\n查看用户\n    select Host,User from mysql.user;\n\n查看 设置 字符集\n    show VARIABLES like 'character%';\n    set character_set_client=utf8;\n```\n\n## sqlite常用操作\n\n```\n创建表\n    drop table if exists `user`;\n    create table if no exists `user` (\n     id integer primary key,    -- integer primary key即为自增\n     name varchar(32),\n     age integer\n    );\n\n查表信息\n    select name from sqlite_master;\n\n查询出某个表的所有字段信息\n    PRAGMA table_info([tablename]);\n```\n","slug":"2015-10-23DB常见操作","published":1,"updated":"2022-06-28T15:18:09.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4ybcoev0000h8vv16sg0mqg","content":"<p>DB常见操作</p>\n<span id=\"more\"></span>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DDL：数据定义语言</span><br><span class=\"line\">DQL：数据查询语言</span><br><span class=\"line\">DML：数据操作语言</span><br><span class=\"line\">CREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">ALTER：修改数据库中的某个已有的数据库对象，比如一个表。</span><br><span class=\"line\">DROP：删除整个表，或者表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">INSERT：创建一条记录。</span><br><span class=\"line\">UPDATE：修改记录。</span><br><span class=\"line\">DELETE：删除记录。</span><br><span class=\"line\">SELECT：从一个或多个表中检索某些记录。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算术运算符</span><br><span class=\"line\">    +：加法 - 把运算符两边的值相加\ta + b 将得到 30</span><br><span class=\"line\">    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10</span><br><span class=\"line\">    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200</span><br><span class=\"line\">    /：除法 - 左操作数除以右操作数\tb / a 将得到 2</span><br><span class=\"line\">    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0</span><br><span class=\"line\"></span><br><span class=\"line\">比较运算符</span><br><span class=\"line\">    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。</span><br><span class=\"line\">    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。</span><br><span class=\"line\">    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。</span><br><span class=\"line\">    &lt;&gt;：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a &lt;&gt; b) 为真。</span><br><span class=\"line\">    &gt;：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a &gt; b) 不为真。</span><br><span class=\"line\">    &lt;：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a &lt; b) 为真。</span><br><span class=\"line\">    &gt;=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a &gt;= b) 不为真。</span><br><span class=\"line\">    &lt;=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a &lt;= b) 为真。</span><br><span class=\"line\">    !&lt;：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !&lt; b) 为假。</span><br><span class=\"line\">    !&gt;：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !&gt; b) 为真。</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符</span><br><span class=\"line\">    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。</span><br><span class=\"line\">    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。</span><br><span class=\"line\">    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。</span><br><span class=\"line\">    IN：运算符用于把某个值与一系列指定列表的值进行比较。</span><br><span class=\"line\">    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。</span><br><span class=\"line\">    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。</span><br><span class=\"line\">    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。</span><br><span class=\"line\">    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。</span><br><span class=\"line\">    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。</span><br><span class=\"line\">    IS NULL：运算符用于把某个值与 NULL 值进行比较。</span><br><span class=\"line\">    IS：运算符与 = 相似。</span><br><span class=\"line\">    IS NOT：运算符与 != 相似。</span><br><span class=\"line\">    ||：连接两个不同的字符串，得到一个新的字符串。</span><br><span class=\"line\">    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。</span><br><span class=\"line\"></span><br><span class=\"line\">位运算符</span><br><span class=\"line\">    &amp;：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A &amp; B) 将得到 \t\t12，即为 0000 1100</span><br><span class=\"line\">    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101</span><br><span class=\"line\">    ~：二进制补码运算符是一元运算符，具有&quot;翻转&quot;位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。</span><br><span class=\"line\">    &lt;&lt;：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA &lt;&lt; 2 将得到 240，即\t为 1111 0000</span><br><span class=\"line\">    &gt;&gt;：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA &gt;&gt; 2 将得到 15，即为 0000 1111</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行顺序：</span><br><span class=\"line\">    1.from</span><br><span class=\"line\">    2.join</span><br><span class=\"line\">    3.where</span><br><span class=\"line\">    4.group by</span><br><span class=\"line\">    5.order by</span><br><span class=\"line\"></span><br><span class=\"line\">增删改查</span><br><span class=\"line\">    insert into `user`(`field1`,`field2`) values(value1,value2);</span><br><span class=\"line\">    delete from `user` where 范围;</span><br><span class=\"line\">    update `user` set field1=value1 where 范围;</span><br><span class=\"line\">    select * from `user`;</span><br><span class=\"line\"></span><br><span class=\"line\">like子句</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx%&#x27;;</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx_&#x27;;</span><br><span class=\"line\">    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">glob子句</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx*&#x27;;</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx?&#x27;;</span><br><span class=\"line\">    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">limit子句（从 offset 偏移量，截取 limit 条数）</span><br><span class=\"line\">    select * from `user` limit 10 offset 0;</span><br><span class=\"line\"></span><br><span class=\"line\">order by子句</span><br><span class=\"line\">    select * from `user` order by col1,col2 [ASC | DESC];</span><br><span class=\"line\"></span><br><span class=\"line\">group by子句</span><br><span class=\"line\">    select * from `user` group by col1,col2 having 条件;</span><br><span class=\"line\"></span><br><span class=\"line\">distinct（去除重复列，distinct后面的所有列）</span><br><span class=\"line\">    select distinct col1,col2,col3 from `user`;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束：</span><br><span class=\"line\">    not null 约束：确保某列不能有 NULL 值。</span><br><span class=\"line\">    default 约束：当某列没有指定值时，为该列提供默认值。</span><br><span class=\"line\">    unique 约束：确保某列中的所有值是不同的。</span><br><span class=\"line\">    primary key 约束：唯一标识数据库表中的各行/记录。</span><br><span class=\"line\">    check 约束：CHECK 约束确保某列中的所有值满足一定条件。</span><br><span class=\"line\">    age ingeter check(age &gt; 0),</span><br><span class=\"line\"></span><br><span class=\"line\">连接：</span><br><span class=\"line\">    交叉连接 - CROSS JOIN（结果乘积）</span><br><span class=\"line\">    内连接 - INNER JOIN（结果交集）</span><br><span class=\"line\">    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）</span><br><span class=\"line\">        select * from t1 a</span><br><span class=\"line\">        left join t2 b on a.id = b.user_id</span><br><span class=\"line\"></span><br><span class=\"line\">union：（union连接两个结果集，union all包括重复列）</span><br><span class=\"line\">    select * from user1</span><br><span class=\"line\">    union</span><br><span class=\"line\">    select * from user2</span><br><span class=\"line\"></span><br><span class=\"line\">别名：</span><br><span class=\"line\">    select a as name from user as A</span><br><span class=\"line\">    select a name from user A</span><br><span class=\"line\"></span><br><span class=\"line\">触发器：</span><br><span class=\"line\"></span><br><span class=\"line\">索引：</span><br><span class=\"line\">    create index index_name on table_name (column1, column2);</span><br><span class=\"line\">    drop index salary_index;</span><br><span class=\"line\">    select * from company indexed by salary_index WHERE salary &gt; 5000;</span><br><span class=\"line\"></span><br><span class=\"line\">视图：</span><br><span class=\"line\">    create view xxx_view as select * from `user`;</span><br><span class=\"line\">    drop view xxx_view;</span><br><span class=\"line\"></span><br><span class=\"line\">事务：</span><br><span class=\"line\">    BEGIN TRANSACTION：开始事务处理。</span><br><span class=\"line\">    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。</span><br><span class=\"line\">    ROLLBACK：回滚所做的更改。</span><br><span class=\"line\">    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。</span><br><span class=\"line\"></span><br><span class=\"line\">autoincrement：</span><br><span class=\"line\">    column1 integer autoincrement,</span><br><span class=\"line\"></span><br><span class=\"line\">集合判断：</span><br><span class=\"line\">    (case </span><br><span class=\"line\">    when A.status_flag=&#x27;0&#x27; then &#x27;退回&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;1&#x27; then &#x27;新增&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;2&#x27; then &#x27;待复核&#x27; </span><br><span class=\"line\">    else &#x27;其他&#x27; </span><br><span class=\"line\">    end</span><br><span class=\"line\">    ) status_name</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">    1：SQLite COUNT 函数</span><br><span class=\"line\">        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。</span><br><span class=\"line\">    2：SQLite MAX 函数</span><br><span class=\"line\">        SQLite MAX 聚合函数允许我们选择某列的最大值。</span><br><span class=\"line\">    3：SQLite MIN 函数</span><br><span class=\"line\">        SQLite MIN 聚合函数允许我们选择某列的最小值。</span><br><span class=\"line\">    4：SQLite AVG 函数</span><br><span class=\"line\">        SQLite AVG 聚合函数计算某列的平均值。</span><br><span class=\"line\">    5：SQLite SUM 函数</span><br><span class=\"line\">        SQLite SUM 聚合函数允许为一个数值列计算总和。</span><br><span class=\"line\">    6：SQLite RANDOM 函数</span><br><span class=\"line\">        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。</span><br><span class=\"line\">    7：SQLite ABS 函数</span><br><span class=\"line\">        SQLite ABS 函数返回数值参数的绝对值。</span><br><span class=\"line\">    8：SQLite UPPER 函数</span><br><span class=\"line\">        SQLite UPPER 函数把字符串转换为大写字母。</span><br><span class=\"line\">    9：SQLite LOWER 函数</span><br><span class=\"line\">        SQLite LOWER 函数把字符串转换为小写字母。</span><br><span class=\"line\">    10：SQLite LENGTH 函数</span><br><span class=\"line\">        SQLite LENGTH 函数返回字符串的长度。</span><br><span class=\"line\">    11：SQLite sqlite_version 函数</span><br><span class=\"line\">        SQLite sqlite_version 函数返回 SQLite 库的版本。</span><br><span class=\"line\">            </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mysql常用操作\"><a href=\"#Mysql常用操作\" class=\"headerlink\" title=\"Mysql常用操作\"></a>Mysql常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql数据类型</span><br><span class=\"line\">    | 类型 | 描述 |</span><br><span class=\"line\">    | int/integer | int同integer |</span><br><span class=\"line\">    | char | 定长字符串 |</span><br><span class=\"line\">    | varchar | 变长字符串 |</span><br><span class=\"line\">    | text | 长文本 |</span><br><span class=\"line\"></span><br><span class=\"line\">创建表（可放not null和default）</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table `user` (</span><br><span class=\"line\">     `id` int auto_increment,</span><br><span class=\"line\">     `name` varchar(32),</span><br><span class=\"line\">     `age` int,</span><br><span class=\"line\">     primary key (`id`)</span><br><span class=\"line\">    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">连接mysql，并修改密码</span><br><span class=\"line\">    mysql -u root -p</span><br><span class=\"line\">    set password for &#x27;root&#x27;@&#x27;localhost&#x27; = password(&#x27;newpass&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">创建删除数据库</span><br><span class=\"line\">    drop database `jfinal`;</span><br><span class=\"line\">    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">修改root密码</span><br><span class=\"line\">    use mysql;</span><br><span class=\"line\">    update user set password=password(&#x27;new password&#x27;) where user=&#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">创建远程用户（删除、创建、授权）</span><br><span class=\"line\">    drop user &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">    create user &#x27;jmm&#x27;@&#x27;%&#x27; identified by &#x27;jmm&#x27;;</span><br><span class=\"line\">    grant all on *.* to &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">查看用户</span><br><span class=\"line\">    select Host,User from mysql.user;</span><br><span class=\"line\"></span><br><span class=\"line\">查看 设置 字符集</span><br><span class=\"line\">    show VARIABLES like &#x27;character%&#x27;;</span><br><span class=\"line\">    set character_set_client=utf8;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqlite常用操作\"><a href=\"#sqlite常用操作\" class=\"headerlink\" title=\"sqlite常用操作\"></a>sqlite常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建表</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table if no exists `user` (</span><br><span class=\"line\">     id integer primary key,    -- integer primary key即为自增</span><br><span class=\"line\">     name varchar(32),</span><br><span class=\"line\">     age integer</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">查表信息</span><br><span class=\"line\">    select name from sqlite_master;</span><br><span class=\"line\"></span><br><span class=\"line\">查询出某个表的所有字段信息</span><br><span class=\"line\">    PRAGMA table_info([tablename]);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>DB常见操作</p>","more":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DDL：数据定义语言</span><br><span class=\"line\">DQL：数据查询语言</span><br><span class=\"line\">DML：数据操作语言</span><br><span class=\"line\">CREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">ALTER：修改数据库中的某个已有的数据库对象，比如一个表。</span><br><span class=\"line\">DROP：删除整个表，或者表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">INSERT：创建一条记录。</span><br><span class=\"line\">UPDATE：修改记录。</span><br><span class=\"line\">DELETE：删除记录。</span><br><span class=\"line\">SELECT：从一个或多个表中检索某些记录。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算术运算符</span><br><span class=\"line\">    +：加法 - 把运算符两边的值相加\ta + b 将得到 30</span><br><span class=\"line\">    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10</span><br><span class=\"line\">    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200</span><br><span class=\"line\">    /：除法 - 左操作数除以右操作数\tb / a 将得到 2</span><br><span class=\"line\">    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0</span><br><span class=\"line\"></span><br><span class=\"line\">比较运算符</span><br><span class=\"line\">    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。</span><br><span class=\"line\">    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。</span><br><span class=\"line\">    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。</span><br><span class=\"line\">    &lt;&gt;：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a &lt;&gt; b) 为真。</span><br><span class=\"line\">    &gt;：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a &gt; b) 不为真。</span><br><span class=\"line\">    &lt;：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a &lt; b) 为真。</span><br><span class=\"line\">    &gt;=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a &gt;= b) 不为真。</span><br><span class=\"line\">    &lt;=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a &lt;= b) 为真。</span><br><span class=\"line\">    !&lt;：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !&lt; b) 为假。</span><br><span class=\"line\">    !&gt;：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !&gt; b) 为真。</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符</span><br><span class=\"line\">    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。</span><br><span class=\"line\">    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。</span><br><span class=\"line\">    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。</span><br><span class=\"line\">    IN：运算符用于把某个值与一系列指定列表的值进行比较。</span><br><span class=\"line\">    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。</span><br><span class=\"line\">    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。</span><br><span class=\"line\">    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。</span><br><span class=\"line\">    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。</span><br><span class=\"line\">    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。</span><br><span class=\"line\">    IS NULL：运算符用于把某个值与 NULL 值进行比较。</span><br><span class=\"line\">    IS：运算符与 = 相似。</span><br><span class=\"line\">    IS NOT：运算符与 != 相似。</span><br><span class=\"line\">    ||：连接两个不同的字符串，得到一个新的字符串。</span><br><span class=\"line\">    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。</span><br><span class=\"line\"></span><br><span class=\"line\">位运算符</span><br><span class=\"line\">    &amp;：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A &amp; B) 将得到 \t\t12，即为 0000 1100</span><br><span class=\"line\">    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101</span><br><span class=\"line\">    ~：二进制补码运算符是一元运算符，具有&quot;翻转&quot;位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。</span><br><span class=\"line\">    &lt;&lt;：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA &lt;&lt; 2 将得到 240，即\t为 1111 0000</span><br><span class=\"line\">    &gt;&gt;：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA &gt;&gt; 2 将得到 15，即为 0000 1111</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行顺序：</span><br><span class=\"line\">    1.from</span><br><span class=\"line\">    2.join</span><br><span class=\"line\">    3.where</span><br><span class=\"line\">    4.group by</span><br><span class=\"line\">    5.order by</span><br><span class=\"line\"></span><br><span class=\"line\">增删改查</span><br><span class=\"line\">    insert into `user`(`field1`,`field2`) values(value1,value2);</span><br><span class=\"line\">    delete from `user` where 范围;</span><br><span class=\"line\">    update `user` set field1=value1 where 范围;</span><br><span class=\"line\">    select * from `user`;</span><br><span class=\"line\"></span><br><span class=\"line\">like子句</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx%&#x27;;</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx_&#x27;;</span><br><span class=\"line\">    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">glob子句</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx*&#x27;;</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx?&#x27;;</span><br><span class=\"line\">    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">limit子句（从 offset 偏移量，截取 limit 条数）</span><br><span class=\"line\">    select * from `user` limit 10 offset 0;</span><br><span class=\"line\"></span><br><span class=\"line\">order by子句</span><br><span class=\"line\">    select * from `user` order by col1,col2 [ASC | DESC];</span><br><span class=\"line\"></span><br><span class=\"line\">group by子句</span><br><span class=\"line\">    select * from `user` group by col1,col2 having 条件;</span><br><span class=\"line\"></span><br><span class=\"line\">distinct（去除重复列，distinct后面的所有列）</span><br><span class=\"line\">    select distinct col1,col2,col3 from `user`;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束：</span><br><span class=\"line\">    not null 约束：确保某列不能有 NULL 值。</span><br><span class=\"line\">    default 约束：当某列没有指定值时，为该列提供默认值。</span><br><span class=\"line\">    unique 约束：确保某列中的所有值是不同的。</span><br><span class=\"line\">    primary key 约束：唯一标识数据库表中的各行/记录。</span><br><span class=\"line\">    check 约束：CHECK 约束确保某列中的所有值满足一定条件。</span><br><span class=\"line\">    age ingeter check(age &gt; 0),</span><br><span class=\"line\"></span><br><span class=\"line\">连接：</span><br><span class=\"line\">    交叉连接 - CROSS JOIN（结果乘积）</span><br><span class=\"line\">    内连接 - INNER JOIN（结果交集）</span><br><span class=\"line\">    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）</span><br><span class=\"line\">        select * from t1 a</span><br><span class=\"line\">        left join t2 b on a.id = b.user_id</span><br><span class=\"line\"></span><br><span class=\"line\">union：（union连接两个结果集，union all包括重复列）</span><br><span class=\"line\">    select * from user1</span><br><span class=\"line\">    union</span><br><span class=\"line\">    select * from user2</span><br><span class=\"line\"></span><br><span class=\"line\">别名：</span><br><span class=\"line\">    select a as name from user as A</span><br><span class=\"line\">    select a name from user A</span><br><span class=\"line\"></span><br><span class=\"line\">触发器：</span><br><span class=\"line\"></span><br><span class=\"line\">索引：</span><br><span class=\"line\">    create index index_name on table_name (column1, column2);</span><br><span class=\"line\">    drop index salary_index;</span><br><span class=\"line\">    select * from company indexed by salary_index WHERE salary &gt; 5000;</span><br><span class=\"line\"></span><br><span class=\"line\">视图：</span><br><span class=\"line\">    create view xxx_view as select * from `user`;</span><br><span class=\"line\">    drop view xxx_view;</span><br><span class=\"line\"></span><br><span class=\"line\">事务：</span><br><span class=\"line\">    BEGIN TRANSACTION：开始事务处理。</span><br><span class=\"line\">    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。</span><br><span class=\"line\">    ROLLBACK：回滚所做的更改。</span><br><span class=\"line\">    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。</span><br><span class=\"line\"></span><br><span class=\"line\">autoincrement：</span><br><span class=\"line\">    column1 integer autoincrement,</span><br><span class=\"line\"></span><br><span class=\"line\">集合判断：</span><br><span class=\"line\">    (case </span><br><span class=\"line\">    when A.status_flag=&#x27;0&#x27; then &#x27;退回&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;1&#x27; then &#x27;新增&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;2&#x27; then &#x27;待复核&#x27; </span><br><span class=\"line\">    else &#x27;其他&#x27; </span><br><span class=\"line\">    end</span><br><span class=\"line\">    ) status_name</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">    1：SQLite COUNT 函数</span><br><span class=\"line\">        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。</span><br><span class=\"line\">    2：SQLite MAX 函数</span><br><span class=\"line\">        SQLite MAX 聚合函数允许我们选择某列的最大值。</span><br><span class=\"line\">    3：SQLite MIN 函数</span><br><span class=\"line\">        SQLite MIN 聚合函数允许我们选择某列的最小值。</span><br><span class=\"line\">    4：SQLite AVG 函数</span><br><span class=\"line\">        SQLite AVG 聚合函数计算某列的平均值。</span><br><span class=\"line\">    5：SQLite SUM 函数</span><br><span class=\"line\">        SQLite SUM 聚合函数允许为一个数值列计算总和。</span><br><span class=\"line\">    6：SQLite RANDOM 函数</span><br><span class=\"line\">        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。</span><br><span class=\"line\">    7：SQLite ABS 函数</span><br><span class=\"line\">        SQLite ABS 函数返回数值参数的绝对值。</span><br><span class=\"line\">    8：SQLite UPPER 函数</span><br><span class=\"line\">        SQLite UPPER 函数把字符串转换为大写字母。</span><br><span class=\"line\">    9：SQLite LOWER 函数</span><br><span class=\"line\">        SQLite LOWER 函数把字符串转换为小写字母。</span><br><span class=\"line\">    10：SQLite LENGTH 函数</span><br><span class=\"line\">        SQLite LENGTH 函数返回字符串的长度。</span><br><span class=\"line\">    11：SQLite sqlite_version 函数</span><br><span class=\"line\">        SQLite sqlite_version 函数返回 SQLite 库的版本。</span><br><span class=\"line\">            </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mysql常用操作\"><a href=\"#Mysql常用操作\" class=\"headerlink\" title=\"Mysql常用操作\"></a>Mysql常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql数据类型</span><br><span class=\"line\">    | 类型 | 描述 |</span><br><span class=\"line\">    | int/integer | int同integer |</span><br><span class=\"line\">    | char | 定长字符串 |</span><br><span class=\"line\">    | varchar | 变长字符串 |</span><br><span class=\"line\">    | text | 长文本 |</span><br><span class=\"line\"></span><br><span class=\"line\">创建表（可放not null和default）</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table `user` (</span><br><span class=\"line\">     `id` int auto_increment,</span><br><span class=\"line\">     `name` varchar(32),</span><br><span class=\"line\">     `age` int,</span><br><span class=\"line\">     primary key (`id`)</span><br><span class=\"line\">    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">连接mysql，并修改密码</span><br><span class=\"line\">    mysql -u root -p</span><br><span class=\"line\">    set password for &#x27;root&#x27;@&#x27;localhost&#x27; = password(&#x27;newpass&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">创建删除数据库</span><br><span class=\"line\">    drop database `jfinal`;</span><br><span class=\"line\">    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">修改root密码</span><br><span class=\"line\">    use mysql;</span><br><span class=\"line\">    update user set password=password(&#x27;new password&#x27;) where user=&#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">创建远程用户（删除、创建、授权）</span><br><span class=\"line\">    drop user &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">    create user &#x27;jmm&#x27;@&#x27;%&#x27; identified by &#x27;jmm&#x27;;</span><br><span class=\"line\">    grant all on *.* to &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">查看用户</span><br><span class=\"line\">    select Host,User from mysql.user;</span><br><span class=\"line\"></span><br><span class=\"line\">查看 设置 字符集</span><br><span class=\"line\">    show VARIABLES like &#x27;character%&#x27;;</span><br><span class=\"line\">    set character_set_client=utf8;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqlite常用操作\"><a href=\"#sqlite常用操作\" class=\"headerlink\" title=\"sqlite常用操作\"></a>sqlite常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建表</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table if no exists `user` (</span><br><span class=\"line\">     id integer primary key,    -- integer primary key即为自增</span><br><span class=\"line\">     name varchar(32),</span><br><span class=\"line\">     age integer</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">查表信息</span><br><span class=\"line\">    select name from sqlite_master;</span><br><span class=\"line\"></span><br><span class=\"line\">查询出某个表的所有字段信息</span><br><span class=\"line\">    PRAGMA table_info([tablename]);</span><br></pre></td></tr></table></figure>"},{"title":"常见环境问题及解决方案","date":"2015-10-22T16:00:00.000Z","_content":"\n常见环境问题及解决方案\n\n<!--more-->\n\n## 二级路由器设置\n\n```\n1.动态获取\n    一级lan连二级wan\n    二级wan改为动态获取\n    二级lan改为192.168.2.1\n2.做交换机\n    一级lan连二级lan\n    二级lan改为192.168.1.2\n    二级关闭dhcp服务\n3.设置WDS无线桥接\n    二级路由器设置WDS无线桥接\n    连接一级路由器无线网络\n```\n\n## Wifi信道\n\n```\n802.11 （1997年发布）\n802.11b （1999年发布）\n802.11b （1999年发布）\n802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps\n802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps\n802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps\n802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps\n```\n\n## Raid\n\n```\nraid 0：错开存储，容量不变，速度*2\nraid 1：备份存储，容量/2，速度不变\nraid 5：相互校验存储，容量n-1，速度*(n-1)\n```\n\n## row和raw\n\n```\nrow指的是硬盘\nraw指的是内存\n```\n\n## 计算机网络接口初始化\n\n```\nipconfig/registerdns\nnetsh winsock reset\n```\n\n## github网络过慢问题\n\n```\n查询dns\n    https://tool.chinaz.com/dns\n修改hosts文件地址\n    C:\\Windows\\System32\\drivers\\etc\\hosts\n    20.205.243.166 github.com\n重启dns\n    ipconfig/flushdns\n```","source":"_posts/2015-10-23常见环境问题及解决方案.md","raw":"---\ntitle: 常见环境问题及解决方案\ndate: 2015-10-23\ntags: [环境]\n---\n\n常见环境问题及解决方案\n\n<!--more-->\n\n## 二级路由器设置\n\n```\n1.动态获取\n    一级lan连二级wan\n    二级wan改为动态获取\n    二级lan改为192.168.2.1\n2.做交换机\n    一级lan连二级lan\n    二级lan改为192.168.1.2\n    二级关闭dhcp服务\n3.设置WDS无线桥接\n    二级路由器设置WDS无线桥接\n    连接一级路由器无线网络\n```\n\n## Wifi信道\n\n```\n802.11 （1997年发布）\n802.11b （1999年发布）\n802.11b （1999年发布）\n802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps\n802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps\n802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps\n802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps\n```\n\n## Raid\n\n```\nraid 0：错开存储，容量不变，速度*2\nraid 1：备份存储，容量/2，速度不变\nraid 5：相互校验存储，容量n-1，速度*(n-1)\n```\n\n## row和raw\n\n```\nrow指的是硬盘\nraw指的是内存\n```\n\n## 计算机网络接口初始化\n\n```\nipconfig/registerdns\nnetsh winsock reset\n```\n\n## github网络过慢问题\n\n```\n查询dns\n    https://tool.chinaz.com/dns\n修改hosts文件地址\n    C:\\Windows\\System32\\drivers\\etc\\hosts\n    20.205.243.166 github.com\n重启dns\n    ipconfig/flushdns\n```","slug":"2015-10-23常见环境问题及解决方案","published":1,"updated":"2022-06-28T15:06:58.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4ybcof00001h8vv16ss18we","content":"<p>常见环境问题及解决方案</p>\n<span id=\"more\"></span>\n\n<h2 id=\"二级路由器设置\"><a href=\"#二级路由器设置\" class=\"headerlink\" title=\"二级路由器设置\"></a>二级路由器设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.动态获取</span><br><span class=\"line\">    一级lan连二级wan</span><br><span class=\"line\">    二级wan改为动态获取</span><br><span class=\"line\">    二级lan改为192.168.2.1</span><br><span class=\"line\">2.做交换机</span><br><span class=\"line\">    一级lan连二级lan</span><br><span class=\"line\">    二级lan改为192.168.1.2</span><br><span class=\"line\">    二级关闭dhcp服务</span><br><span class=\"line\">3.设置WDS无线桥接</span><br><span class=\"line\">    二级路由器设置WDS无线桥接</span><br><span class=\"line\">    连接一级路由器无线网络</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Wifi信道\"><a href=\"#Wifi信道\" class=\"headerlink\" title=\"Wifi信道\"></a>Wifi信道</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">802.11 （1997年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps</span><br><span class=\"line\">802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps</span><br><span class=\"line\">802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps</span><br><span class=\"line\">802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Raid\"><a href=\"#Raid\" class=\"headerlink\" title=\"Raid\"></a>Raid</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raid 0：错开存储，容量不变，速度*2</span><br><span class=\"line\">raid 1：备份存储，容量/2，速度不变</span><br><span class=\"line\">raid 5：相互校验存储，容量n-1，速度*(n-1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"row和raw\"><a href=\"#row和raw\" class=\"headerlink\" title=\"row和raw\"></a>row和raw</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row指的是硬盘</span><br><span class=\"line\">raw指的是内存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"计算机网络接口初始化\"><a href=\"#计算机网络接口初始化\" class=\"headerlink\" title=\"计算机网络接口初始化\"></a>计算机网络接口初始化</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig/registerdns</span><br><span class=\"line\">netsh winsock reset</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github网络过慢问题\"><a href=\"#github网络过慢问题\" class=\"headerlink\" title=\"github网络过慢问题\"></a>github网络过慢问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查询dns</span><br><span class=\"line\">    https://tool.chinaz.com/dns</span><br><span class=\"line\">修改hosts文件地址</span><br><span class=\"line\">    C:\\Windows\\System32\\drivers\\etc\\hosts</span><br><span class=\"line\">    20.205.243.166 github.com</span><br><span class=\"line\">重启dns</span><br><span class=\"line\">    ipconfig/flushdns</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>常见环境问题及解决方案</p>","more":"<h2 id=\"二级路由器设置\"><a href=\"#二级路由器设置\" class=\"headerlink\" title=\"二级路由器设置\"></a>二级路由器设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.动态获取</span><br><span class=\"line\">    一级lan连二级wan</span><br><span class=\"line\">    二级wan改为动态获取</span><br><span class=\"line\">    二级lan改为192.168.2.1</span><br><span class=\"line\">2.做交换机</span><br><span class=\"line\">    一级lan连二级lan</span><br><span class=\"line\">    二级lan改为192.168.1.2</span><br><span class=\"line\">    二级关闭dhcp服务</span><br><span class=\"line\">3.设置WDS无线桥接</span><br><span class=\"line\">    二级路由器设置WDS无线桥接</span><br><span class=\"line\">    连接一级路由器无线网络</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Wifi信道\"><a href=\"#Wifi信道\" class=\"headerlink\" title=\"Wifi信道\"></a>Wifi信道</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">802.11 （1997年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps</span><br><span class=\"line\">802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps</span><br><span class=\"line\">802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps</span><br><span class=\"line\">802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Raid\"><a href=\"#Raid\" class=\"headerlink\" title=\"Raid\"></a>Raid</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raid 0：错开存储，容量不变，速度*2</span><br><span class=\"line\">raid 1：备份存储，容量/2，速度不变</span><br><span class=\"line\">raid 5：相互校验存储，容量n-1，速度*(n-1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"row和raw\"><a href=\"#row和raw\" class=\"headerlink\" title=\"row和raw\"></a>row和raw</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row指的是硬盘</span><br><span class=\"line\">raw指的是内存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"计算机网络接口初始化\"><a href=\"#计算机网络接口初始化\" class=\"headerlink\" title=\"计算机网络接口初始化\"></a>计算机网络接口初始化</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig/registerdns</span><br><span class=\"line\">netsh winsock reset</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github网络过慢问题\"><a href=\"#github网络过慢问题\" class=\"headerlink\" title=\"github网络过慢问题\"></a>github网络过慢问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查询dns</span><br><span class=\"line\">    https://tool.chinaz.com/dns</span><br><span class=\"line\">修改hosts文件地址</span><br><span class=\"line\">    C:\\Windows\\System32\\drivers\\etc\\hosts</span><br><span class=\"line\">    20.205.243.166 github.com</span><br><span class=\"line\">重启dns</span><br><span class=\"line\">    ipconfig/flushdns</span><br></pre></td></tr></table></figure>"},{"title":"服务器被攻击勒索案例","date":"2017-09-26T16:00:00.000Z","_content":"\n服务器被攻击勒索案例\n\n<!--more-->\n\n## 背景\n``2017-9-27``，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。\n\n## 勒索数据\n\n```\nHello,\n\nI am a security researcher from Sweden, \nhaving interest on web security and other focus areas.\n\nYour database \"mm_wiki\" was breached by a 3rd party and\nfiles were backed up to their cloud hosting storage.\n\nI accidently discovered this dedicated cloud storage and was able to secure the files.\n\nIt is scheduled to be sold online.\n\nThe short-term consequences of this data leak could be fees, fines and frustration.\n\nTo prevent this i will remove all files from online storage above\nand restore the database if needed.\n\n    please send exactly 0.1 bitcoin (BTC) to the following \n    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V\n\nemail me after the payment confirms(about an hour),\nand I email you back the link to download the original \ndump file mm_wiki.sql.gz created with mysql mydumper.\n\nI will shred the files and terminate their cloud hosting account in 24hrs after the payment.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\nTo buy bitcoin instantly you can use paxful.com like services.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\ndatabase summary:\n\n* total tables count: 17\n* total approx. documents count for all tables: 388\n\ntable: \"mw_log\" => 127 documents\ntable: \"mw_privilege\" => 92 documents\ntable: \"mw_log_document\" => 88 documents\ntable: \"mw_role_privilege\" => 30 documents\ntable: \"mw_document\" => 20 documents\n.......................\n\nfull database dump file: mm_wiki.sql.gz, about 0.29 MB.\n\n* system/stat/views/functions/triggers or other special tables not counted.\n    these numbers for reference only.\n    binary format, total size depends on zlib compression ratio, data sparsity.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n```\n\n## 服务器防范措施\n\n- 1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：https://suijimimashengcheng.51240.com/\n- 2)删除服务器上设置的不需要的用户\n- 3)对于不需要登录的用户，请将用户的权限设置为禁止登录\n- 4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆\nWindows远程端口修改参考文档：https://cloud.tencent.com/developer/article/1052163\nLinux远程端口修改参考文档：https://cloud.tencent.com/developer/article/1124500\n- 5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）\n- 6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： https://cloud.tencent.com/document/product/215/20398\n- 7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问\n- 8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求\n需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。\n- 9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。\n\n\n## 日常查看和维护\n\n- 定期修改密码``passwd``\n- 查看用户登录情况``who、who am i``\n- 查看用户登录信息``last``\n- 查看各个用户登录信息``lastlog``\n- 查看登录失败信息``lastb``，这个可以查看嗅探的IP，以此来禁用\n- 查看用户命令历史``history``\n- 日志和监控``ELK、Prometheus``","source":"_posts/2017-9-27服务器被攻击勒索案例.md","raw":"---\ntitle: 服务器被攻击勒索案例\ndate: 2017-9-27\ntags: [攻击]\n---\n\n服务器被攻击勒索案例\n\n<!--more-->\n\n## 背景\n``2017-9-27``，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。\n\n## 勒索数据\n\n```\nHello,\n\nI am a security researcher from Sweden, \nhaving interest on web security and other focus areas.\n\nYour database \"mm_wiki\" was breached by a 3rd party and\nfiles were backed up to their cloud hosting storage.\n\nI accidently discovered this dedicated cloud storage and was able to secure the files.\n\nIt is scheduled to be sold online.\n\nThe short-term consequences of this data leak could be fees, fines and frustration.\n\nTo prevent this i will remove all files from online storage above\nand restore the database if needed.\n\n    please send exactly 0.1 bitcoin (BTC) to the following \n    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V\n\nemail me after the payment confirms(about an hour),\nand I email you back the link to download the original \ndump file mm_wiki.sql.gz created with mysql mydumper.\n\nI will shred the files and terminate their cloud hosting account in 24hrs after the payment.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\nTo buy bitcoin instantly you can use paxful.com like services.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\ndatabase summary:\n\n* total tables count: 17\n* total approx. documents count for all tables: 388\n\ntable: \"mw_log\" => 127 documents\ntable: \"mw_privilege\" => 92 documents\ntable: \"mw_log_document\" => 88 documents\ntable: \"mw_role_privilege\" => 30 documents\ntable: \"mw_document\" => 20 documents\n.......................\n\nfull database dump file: mm_wiki.sql.gz, about 0.29 MB.\n\n* system/stat/views/functions/triggers or other special tables not counted.\n    these numbers for reference only.\n    binary format, total size depends on zlib compression ratio, data sparsity.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n```\n\n## 服务器防范措施\n\n- 1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：https://suijimimashengcheng.51240.com/\n- 2)删除服务器上设置的不需要的用户\n- 3)对于不需要登录的用户，请将用户的权限设置为禁止登录\n- 4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆\nWindows远程端口修改参考文档：https://cloud.tencent.com/developer/article/1052163\nLinux远程端口修改参考文档：https://cloud.tencent.com/developer/article/1124500\n- 5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）\n- 6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： https://cloud.tencent.com/document/product/215/20398\n- 7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问\n- 8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求\n需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。\n- 9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。\n\n\n## 日常查看和维护\n\n- 定期修改密码``passwd``\n- 查看用户登录情况``who、who am i``\n- 查看用户登录信息``last``\n- 查看各个用户登录信息``lastlog``\n- 查看登录失败信息``lastb``，这个可以查看嗅探的IP，以此来禁用\n- 查看用户命令历史``history``\n- 日志和监控``ELK、Prometheus``","slug":"2017-9-27服务器被攻击勒索案例","published":1,"updated":"2022-06-28T14:48:22.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4ybcof30003h8vvh5pmdgo7","content":"<p>服务器被攻击勒索案例</p>\n<span id=\"more\"></span>\n\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><code>2017-9-27</code>，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。</p>\n<h2 id=\"勒索数据\"><a href=\"#勒索数据\" class=\"headerlink\" title=\"勒索数据\"></a>勒索数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,</span><br><span class=\"line\"></span><br><span class=\"line\">I am a security researcher from Sweden, </span><br><span class=\"line\">having interest on web security and other focus areas.</span><br><span class=\"line\"></span><br><span class=\"line\">Your database &quot;mm_wiki&quot; was breached by a 3rd party and</span><br><span class=\"line\">files were backed up to their cloud hosting storage.</span><br><span class=\"line\"></span><br><span class=\"line\">I accidently discovered this dedicated cloud storage and was able to secure the files.</span><br><span class=\"line\"></span><br><span class=\"line\">It is scheduled to be sold online.</span><br><span class=\"line\"></span><br><span class=\"line\">The short-term consequences of this data leak could be fees, fines and frustration.</span><br><span class=\"line\"></span><br><span class=\"line\">To prevent this i will remove all files from online storage above</span><br><span class=\"line\">and restore the database if needed.</span><br><span class=\"line\"></span><br><span class=\"line\">    please send exactly 0.1 bitcoin (BTC) to the following </span><br><span class=\"line\">    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V</span><br><span class=\"line\"></span><br><span class=\"line\">email me after the payment confirms(about an hour),</span><br><span class=\"line\">and I email you back the link to download the original </span><br><span class=\"line\">dump file mm_wiki.sql.gz created with mysql mydumper.</span><br><span class=\"line\"></span><br><span class=\"line\">I will shred the files and terminate their cloud hosting account in 24hrs after the payment.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">To buy bitcoin instantly you can use paxful.com like services.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">database summary:</span><br><span class=\"line\"></span><br><span class=\"line\">* total tables count: 17</span><br><span class=\"line\">* total approx. documents count for all tables: 388</span><br><span class=\"line\"></span><br><span class=\"line\">table: &quot;mw_log&quot; =&gt; 127 documents</span><br><span class=\"line\">table: &quot;mw_privilege&quot; =&gt; 92 documents</span><br><span class=\"line\">table: &quot;mw_log_document&quot; =&gt; 88 documents</span><br><span class=\"line\">table: &quot;mw_role_privilege&quot; =&gt; 30 documents</span><br><span class=\"line\">table: &quot;mw_document&quot; =&gt; 20 documents</span><br><span class=\"line\">.......................</span><br><span class=\"line\"></span><br><span class=\"line\">full database dump file: mm_wiki.sql.gz, about 0.29 MB.</span><br><span class=\"line\"></span><br><span class=\"line\">* system/stat/views/functions/triggers or other special tables not counted.</span><br><span class=\"line\">    these numbers for reference only.</span><br><span class=\"line\">    binary format, total size depends on zlib compression ratio, data sparsity.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器防范措施\"><a href=\"#服务器防范措施\" class=\"headerlink\" title=\"服务器防范措施\"></a>服务器防范措施</h2><ul>\n<li>1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：<a href=\"https://suijimimashengcheng.51240.com/\">https://suijimimashengcheng.51240.com/</a></li>\n<li>2)删除服务器上设置的不需要的用户</li>\n<li>3)对于不需要登录的用户，请将用户的权限设置为禁止登录</li>\n<li>4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆<br>Windows远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1052163\">https://cloud.tencent.com/developer/article/1052163</a><br>Linux远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1124500\">https://cloud.tencent.com/developer/article/1124500</a></li>\n<li>5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）</li>\n<li>6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： <a href=\"https://cloud.tencent.com/document/product/215/20398\">https://cloud.tencent.com/document/product/215/20398</a></li>\n<li>7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问</li>\n<li>8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求<br>需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。</li>\n<li>9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。</li>\n</ul>\n<h2 id=\"日常查看和维护\"><a href=\"#日常查看和维护\" class=\"headerlink\" title=\"日常查看和维护\"></a>日常查看和维护</h2><ul>\n<li>定期修改密码<code>passwd</code></li>\n<li>查看用户登录情况<code>who、who am i</code></li>\n<li>查看用户登录信息<code>last</code></li>\n<li>查看各个用户登录信息<code>lastlog</code></li>\n<li>查看登录失败信息<code>lastb</code>，这个可以查看嗅探的IP，以此来禁用</li>\n<li>查看用户命令历史<code>history</code></li>\n<li>日志和监控<code>ELK、Prometheus</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>服务器被攻击勒索案例</p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><code>2017-9-27</code>，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。</p>\n<h2 id=\"勒索数据\"><a href=\"#勒索数据\" class=\"headerlink\" title=\"勒索数据\"></a>勒索数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,</span><br><span class=\"line\"></span><br><span class=\"line\">I am a security researcher from Sweden, </span><br><span class=\"line\">having interest on web security and other focus areas.</span><br><span class=\"line\"></span><br><span class=\"line\">Your database &quot;mm_wiki&quot; was breached by a 3rd party and</span><br><span class=\"line\">files were backed up to their cloud hosting storage.</span><br><span class=\"line\"></span><br><span class=\"line\">I accidently discovered this dedicated cloud storage and was able to secure the files.</span><br><span class=\"line\"></span><br><span class=\"line\">It is scheduled to be sold online.</span><br><span class=\"line\"></span><br><span class=\"line\">The short-term consequences of this data leak could be fees, fines and frustration.</span><br><span class=\"line\"></span><br><span class=\"line\">To prevent this i will remove all files from online storage above</span><br><span class=\"line\">and restore the database if needed.</span><br><span class=\"line\"></span><br><span class=\"line\">    please send exactly 0.1 bitcoin (BTC) to the following </span><br><span class=\"line\">    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V</span><br><span class=\"line\"></span><br><span class=\"line\">email me after the payment confirms(about an hour),</span><br><span class=\"line\">and I email you back the link to download the original </span><br><span class=\"line\">dump file mm_wiki.sql.gz created with mysql mydumper.</span><br><span class=\"line\"></span><br><span class=\"line\">I will shred the files and terminate their cloud hosting account in 24hrs after the payment.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">To buy bitcoin instantly you can use paxful.com like services.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">database summary:</span><br><span class=\"line\"></span><br><span class=\"line\">* total tables count: 17</span><br><span class=\"line\">* total approx. documents count for all tables: 388</span><br><span class=\"line\"></span><br><span class=\"line\">table: &quot;mw_log&quot; =&gt; 127 documents</span><br><span class=\"line\">table: &quot;mw_privilege&quot; =&gt; 92 documents</span><br><span class=\"line\">table: &quot;mw_log_document&quot; =&gt; 88 documents</span><br><span class=\"line\">table: &quot;mw_role_privilege&quot; =&gt; 30 documents</span><br><span class=\"line\">table: &quot;mw_document&quot; =&gt; 20 documents</span><br><span class=\"line\">.......................</span><br><span class=\"line\"></span><br><span class=\"line\">full database dump file: mm_wiki.sql.gz, about 0.29 MB.</span><br><span class=\"line\"></span><br><span class=\"line\">* system/stat/views/functions/triggers or other special tables not counted.</span><br><span class=\"line\">    these numbers for reference only.</span><br><span class=\"line\">    binary format, total size depends on zlib compression ratio, data sparsity.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器防范措施\"><a href=\"#服务器防范措施\" class=\"headerlink\" title=\"服务器防范措施\"></a>服务器防范措施</h2><ul>\n<li>1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：<a href=\"https://suijimimashengcheng.51240.com/\">https://suijimimashengcheng.51240.com/</a></li>\n<li>2)删除服务器上设置的不需要的用户</li>\n<li>3)对于不需要登录的用户，请将用户的权限设置为禁止登录</li>\n<li>4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆<br>Windows远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1052163\">https://cloud.tencent.com/developer/article/1052163</a><br>Linux远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1124500\">https://cloud.tencent.com/developer/article/1124500</a></li>\n<li>5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）</li>\n<li>6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： <a href=\"https://cloud.tencent.com/document/product/215/20398\">https://cloud.tencent.com/document/product/215/20398</a></li>\n<li>7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问</li>\n<li>8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求<br>需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。</li>\n<li>9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。</li>\n</ul>\n<h2 id=\"日常查看和维护\"><a href=\"#日常查看和维护\" class=\"headerlink\" title=\"日常查看和维护\"></a>日常查看和维护</h2><ul>\n<li>定期修改密码<code>passwd</code></li>\n<li>查看用户登录情况<code>who、who am i</code></li>\n<li>查看用户登录信息<code>last</code></li>\n<li>查看各个用户登录信息<code>lastlog</code></li>\n<li>查看登录失败信息<code>lastb</code>，这个可以查看嗅探的IP，以此来禁用</li>\n<li>查看用户命令历史<code>history</code></li>\n<li>日志和监控<code>ELK、Prometheus</code></li>\n</ul>"},{"title":"git merge策略解析","date":"2022-06-25T16:00:00.000Z","_content":"\ngit merge策略解析\n\n<!--more-->\n\n## 命令\n``git merge BRANCH_NAME [-s, --strategy <strategy>] [-X, --strategy-option <option=value>]``\n\n## git merge策略，参数：``-s``\n\n- resolve\n- recursive\n- octopus\n- ours\n- subtree\n\n### resolve\n\n```\n这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。\n此策略会 “仔细地” 寻找其中一个共同祖先。\n由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。\n不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。\n所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。\n```\n\n### recursive\n\n```\n这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。\n```\n\n### octopus\n\n```\n此策略允许合并多个 git 提交节点（分支）。\n不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。\n此策略就是用来把多个分支聚集在一起的。\n```\n\n### ours\n\n```\n在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。\n\n你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。\n\n注意 recursive 策略中也有一个 ours 参数，与这个不同的。\n```\n\n### subtree\n\n```\n此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。\n```\n\n## git merge策略的参数，参数：``-X``\n\n- ours\n- theirs\n- ignore-space-change\n- find-renames=0\n- diff-algorithm={patience|minimal|histogram|myers}\n\n### resolve\n\n```\n-X ours（使用我们的）\n-X theirs（使用他们的）\n-X ignore-space-change（空格改动的话就忽略）\n-X find-renames=0（值越小，使文件越相同）\n-X diff-algorithm={patience|minimal|histogram|myers}（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）\n    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法\n```\n\n## git merge其他参数\n\n``git merge BRANCH_NAME``\n\n- no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认--ff）\n- no-edit             不进入编辑页面，直接提交\n- squash              创建一个单独的提交而不是做一次合并\n- stat                show a diffstat at the end of the merge\n- summary             (synonym to --stat)\n\n\n## git merge方案\n\n- 可使用``git merge-base -a [branch1] [branch2]``查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些\n- 使用``git merge --no-ff -s recursive -X ignore-space-change  -m \"Upgrade from xxx\" --no-edit -q [BRANCH_NAME]``合入代码\n- 使用``git ls-files -u``查看未合并的文件\n- 提交到审查系统修改后统一合入\n","source":"_posts/2022-6-26git merge策略解析.md","raw":"---\ntitle: git merge策略解析\ndate: 2022-6-26\ntags: [git, merge, 策略]\n---\n\ngit merge策略解析\n\n<!--more-->\n\n## 命令\n``git merge BRANCH_NAME [-s, --strategy <strategy>] [-X, --strategy-option <option=value>]``\n\n## git merge策略，参数：``-s``\n\n- resolve\n- recursive\n- octopus\n- ours\n- subtree\n\n### resolve\n\n```\n这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。\n此策略会 “仔细地” 寻找其中一个共同祖先。\n由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。\n不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。\n所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。\n```\n\n### recursive\n\n```\n这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。\n```\n\n### octopus\n\n```\n此策略允许合并多个 git 提交节点（分支）。\n不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。\n此策略就是用来把多个分支聚集在一起的。\n```\n\n### ours\n\n```\n在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。\n\n你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。\n\n注意 recursive 策略中也有一个 ours 参数，与这个不同的。\n```\n\n### subtree\n\n```\n此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。\n```\n\n## git merge策略的参数，参数：``-X``\n\n- ours\n- theirs\n- ignore-space-change\n- find-renames=0\n- diff-algorithm={patience|minimal|histogram|myers}\n\n### resolve\n\n```\n-X ours（使用我们的）\n-X theirs（使用他们的）\n-X ignore-space-change（空格改动的话就忽略）\n-X find-renames=0（值越小，使文件越相同）\n-X diff-algorithm={patience|minimal|histogram|myers}（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）\n    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法\n```\n\n## git merge其他参数\n\n``git merge BRANCH_NAME``\n\n- no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认--ff）\n- no-edit             不进入编辑页面，直接提交\n- squash              创建一个单独的提交而不是做一次合并\n- stat                show a diffstat at the end of the merge\n- summary             (synonym to --stat)\n\n\n## git merge方案\n\n- 可使用``git merge-base -a [branch1] [branch2]``查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些\n- 使用``git merge --no-ff -s recursive -X ignore-space-change  -m \"Upgrade from xxx\" --no-edit -q [BRANCH_NAME]``合入代码\n- 使用``git ls-files -u``查看未合并的文件\n- 提交到审查系统修改后统一合入\n","slug":"2022-6-26git merge策略解析","published":1,"updated":"2022-06-28T14:55:31.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4ybcof40004h8vv3iec78lm","content":"<p>git merge策略解析</p>\n<span id=\"more\"></span>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p><code>git merge BRANCH_NAME [-s, --strategy &lt;strategy&gt;] [-X, --strategy-option &lt;option=value&gt;]</code></p>\n<h2 id=\"git-merge策略，参数：-s\"><a href=\"#git-merge策略，参数：-s\" class=\"headerlink\" title=\"git merge策略，参数：-s\"></a>git merge策略，参数：<code>-s</code></h2><ul>\n<li>resolve</li>\n<li>recursive</li>\n<li>octopus</li>\n<li>ours</li>\n<li>subtree</li>\n</ul>\n<h3 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。</span><br><span class=\"line\">此策略会 “仔细地” 寻找其中一个共同祖先。</span><br><span class=\"line\">由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。</span><br><span class=\"line\">不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。</span><br><span class=\"line\">所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"octopus\"><a href=\"#octopus\" class=\"headerlink\" title=\"octopus\"></a>octopus</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略允许合并多个 git 提交节点（分支）。</span><br><span class=\"line\">不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。</span><br><span class=\"line\">此策略就是用来把多个分支聚集在一起的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ours\"><a href=\"#ours\" class=\"headerlink\" title=\"ours\"></a>ours</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。</span><br><span class=\"line\"></span><br><span class=\"line\">你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。</span><br><span class=\"line\"></span><br><span class=\"line\">注意 recursive 策略中也有一个 ours 参数，与这个不同的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"subtree\"><a href=\"#subtree\" class=\"headerlink\" title=\"subtree\"></a>subtree</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge策略的参数，参数：-X\"><a href=\"#git-merge策略的参数，参数：-X\" class=\"headerlink\" title=\"git merge策略的参数，参数：-X\"></a>git merge策略的参数，参数：<code>-X</code></h2><ul>\n<li>ours</li>\n<li>theirs</li>\n<li>ignore-space-change</li>\n<li>find-renames&#x3D;0</li>\n<li>diff-algorithm&#x3D;{patience|minimal|histogram|myers}</li>\n</ul>\n<h3 id=\"resolve-1\"><a href=\"#resolve-1\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-X ours（使用我们的）</span><br><span class=\"line\">-X theirs（使用他们的）</span><br><span class=\"line\">-X ignore-space-change（空格改动的话就忽略）</span><br><span class=\"line\">-X find-renames=0（值越小，使文件越相同）</span><br><span class=\"line\">-X diff-algorithm=&#123;patience|minimal|histogram|myers&#125;（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）</span><br><span class=\"line\">    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge其他参数\"><a href=\"#git-merge其他参数\" class=\"headerlink\" title=\"git merge其他参数\"></a>git merge其他参数</h2><p><code>git merge BRANCH_NAME</code></p>\n<ul>\n<li>no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认–ff）</li>\n<li>no-edit             不进入编辑页面，直接提交</li>\n<li>squash              创建一个单独的提交而不是做一次合并</li>\n<li>stat                show a diffstat at the end of the merge</li>\n<li>summary             (synonym to –stat)</li>\n</ul>\n<h2 id=\"git-merge方案\"><a href=\"#git-merge方案\" class=\"headerlink\" title=\"git merge方案\"></a>git merge方案</h2><ul>\n<li>可使用<code>git merge-base -a [branch1] [branch2]</code>查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些</li>\n<li>使用<code>git merge --no-ff -s recursive -X ignore-space-change  -m &quot;Upgrade from xxx&quot; --no-edit -q [BRANCH_NAME]</code>合入代码</li>\n<li>使用<code>git ls-files -u</code>查看未合并的文件</li>\n<li>提交到审查系统修改后统一合入</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>git merge策略解析</p>","more":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p><code>git merge BRANCH_NAME [-s, --strategy &lt;strategy&gt;] [-X, --strategy-option &lt;option=value&gt;]</code></p>\n<h2 id=\"git-merge策略，参数：-s\"><a href=\"#git-merge策略，参数：-s\" class=\"headerlink\" title=\"git merge策略，参数：-s\"></a>git merge策略，参数：<code>-s</code></h2><ul>\n<li>resolve</li>\n<li>recursive</li>\n<li>octopus</li>\n<li>ours</li>\n<li>subtree</li>\n</ul>\n<h3 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。</span><br><span class=\"line\">此策略会 “仔细地” 寻找其中一个共同祖先。</span><br><span class=\"line\">由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。</span><br><span class=\"line\">不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。</span><br><span class=\"line\">所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"octopus\"><a href=\"#octopus\" class=\"headerlink\" title=\"octopus\"></a>octopus</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略允许合并多个 git 提交节点（分支）。</span><br><span class=\"line\">不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。</span><br><span class=\"line\">此策略就是用来把多个分支聚集在一起的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ours\"><a href=\"#ours\" class=\"headerlink\" title=\"ours\"></a>ours</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。</span><br><span class=\"line\"></span><br><span class=\"line\">你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。</span><br><span class=\"line\"></span><br><span class=\"line\">注意 recursive 策略中也有一个 ours 参数，与这个不同的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"subtree\"><a href=\"#subtree\" class=\"headerlink\" title=\"subtree\"></a>subtree</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge策略的参数，参数：-X\"><a href=\"#git-merge策略的参数，参数：-X\" class=\"headerlink\" title=\"git merge策略的参数，参数：-X\"></a>git merge策略的参数，参数：<code>-X</code></h2><ul>\n<li>ours</li>\n<li>theirs</li>\n<li>ignore-space-change</li>\n<li>find-renames&#x3D;0</li>\n<li>diff-algorithm&#x3D;{patience|minimal|histogram|myers}</li>\n</ul>\n<h3 id=\"resolve-1\"><a href=\"#resolve-1\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-X ours（使用我们的）</span><br><span class=\"line\">-X theirs（使用他们的）</span><br><span class=\"line\">-X ignore-space-change（空格改动的话就忽略）</span><br><span class=\"line\">-X find-renames=0（值越小，使文件越相同）</span><br><span class=\"line\">-X diff-algorithm=&#123;patience|minimal|histogram|myers&#125;（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）</span><br><span class=\"line\">    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge其他参数\"><a href=\"#git-merge其他参数\" class=\"headerlink\" title=\"git merge其他参数\"></a>git merge其他参数</h2><p><code>git merge BRANCH_NAME</code></p>\n<ul>\n<li>no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认–ff）</li>\n<li>no-edit             不进入编辑页面，直接提交</li>\n<li>squash              创建一个单独的提交而不是做一次合并</li>\n<li>stat                show a diffstat at the end of the merge</li>\n<li>summary             (synonym to –stat)</li>\n</ul>\n<h2 id=\"git-merge方案\"><a href=\"#git-merge方案\" class=\"headerlink\" title=\"git merge方案\"></a>git merge方案</h2><ul>\n<li>可使用<code>git merge-base -a [branch1] [branch2]</code>查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些</li>\n<li>使用<code>git merge --no-ff -s recursive -X ignore-space-change  -m &quot;Upgrade from xxx&quot; --no-edit -q [BRANCH_NAME]</code>合入代码</li>\n<li>使用<code>git ls-files -u</code>查看未合并的文件</li>\n<li>提交到审查系统修改后统一合入</li>\n</ul>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl4ybcoev0000h8vv16sg0mqg","tag_id":"cl4ybcof20002h8vvhehd3ksy","_id":"cl4ybcof60006h8vv6fbw2q38"},{"post_id":"cl4ybcof00001h8vv16ss18we","tag_id":"cl4ybcof50005h8vvhyma2ba2","_id":"cl4ybcof60008h8vvfhal9ily"},{"post_id":"cl4ybcof30003h8vvh5pmdgo7","tag_id":"cl4ybcof60007h8vvaavu2ca6","_id":"cl4ybcof7000ah8vvf4t9cq61"},{"post_id":"cl4ybcof40004h8vv3iec78lm","tag_id":"cl4ybcof60009h8vv6l8i9r5w","_id":"cl4ybcof7000dh8vv52jgf8r0"},{"post_id":"cl4ybcof40004h8vv3iec78lm","tag_id":"cl4ybcof7000bh8vv1ezwf4er","_id":"cl4ybcof8000eh8vv97uk71m4"},{"post_id":"cl4ybcof40004h8vv3iec78lm","tag_id":"cl4ybcof7000ch8vv9quocvrg","_id":"cl4ybcof8000fh8vv594vdkvy"}],"Tag":[{"name":"DB","_id":"cl4ybcof20002h8vvhehd3ksy"},{"name":"环境","_id":"cl4ybcof50005h8vvhyma2ba2"},{"name":"攻击","_id":"cl4ybcof60007h8vvaavu2ca6"},{"name":"git","_id":"cl4ybcof60009h8vv6l8i9r5w"},{"name":"merge","_id":"cl4ybcof7000bh8vv1ezwf4er"},{"name":"策略","_id":"cl4ybcof7000ch8vv9quocvrg"}]}}