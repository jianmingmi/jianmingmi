{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/yilia/source/CNAME","path":"CNAME","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/weixin.png","path":"img/weixin.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/2015-10-23DB常见操作.md","hash":"e9b0e268eb47b6f7f726cd9dae015442ae526d8d","modified":1656606464046},{"_id":"source/_posts/2015-10-23常见环境问题及解决方案.md","hash":"f2d0e18921048a526c6c90bc91e282696dfeb51c","modified":1656428818459},{"_id":"source/_posts/2015-5-5HTML基础.md","hash":"5f129502474289c65bb27c05594c76e752f03c6d","modified":1656606330967},{"_id":"source/_posts/2015-9-1Java基础.md","hash":"c27bd29a431bef9ba3c25795e8b179fbe7d35384","modified":1656606416253},{"_id":"source/_posts/2016-10-16C基础.md","hash":"605b5f474233ce759c067438f7be4abdb72e9f0f","modified":1656606250189},{"_id":"source/_posts/2017-9-27服务器被攻击勒索案例.md","hash":"b40b98c500c454156f895f8ab5d3b84965a1dd04","modified":1656427702971},{"_id":"source/_posts/2016-6-5Android基础.md","hash":"bbbb9ddc99b5441ff6ec454a6b84fa8285c1acfc","modified":1656606146697},{"_id":"source/_posts/2018-6-5食物药理及营养(5类66种).md","hash":"01ee39fb4df0c3c03a3faef54925840067255490","modified":1656606602884},{"_id":"source/_posts/2022-6-26git merge策略解析.md","hash":"848e6d3cad15c2ddb415f7c491230a6c9509f565","modified":1656428131475},{"_id":"source/_posts/2022-6-28Linux常见问题.md","hash":"716cb5ebcc95136b5f622334ea3ced5d54815c18","modified":1656430547633},{"_id":"source/_posts/2022-6-29Python常见问题.md","hash":"79db2c7837c2700edc1324c554b1b2d787aa0b9c","modified":1656490651202},{"_id":"source/_posts/2022-6-30git-lfs.md","hash":"6a544a4b82c7451381be4aca0e4c5046403af45d","modified":1656581522557},{"_id":"source/_posts/2022-6-30flask基础.md","hash":"62799c8bf24bfbcbe252658c39506cf5d373fea1","modified":1656605283010},{"_id":"source/_posts/2022-6-30升级repo的好处.md","hash":"1cf7bd17dc19fb97cc749409d863e32fd001fcc3","modified":1656605283007},{"_id":"source/_posts/2022-6-30git底层原理.md","hash":"2520a4496e12bbbaab5f1516a4a44b56baefd816","modified":1656602529312},{"_id":"source/_posts/2022-7-1OTA升级.md","hash":"c47efb100fb72d974b3be977f0a0ab5cc212dd68","modified":1656769939469},{"_id":"source/_posts/2022-7-2APK集成.md","hash":"e41344777821e89d78ac40aae707276d0e93856d","modified":1656770260070},{"_id":"source/_posts/2022-7-1Android APK签名.md","hash":"e13dcecf3c829ce538ce8f62c9412307647a7ee8","modified":1656732370333},{"_id":"source/_posts/2022-7-1Android系统介绍.md","hash":"91e25d3b4f87f208dec3498154ac8da19260d8dd","modified":1656769272614},{"_id":"source/_posts/2022-7-2Android.mk和Android.bp.md","hash":"140ff490fabaf2aacf9b32eee4187c74b2a326b7","modified":1656771011216},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1656398567722},{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1656398567639},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1656398567639},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1656398567639},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1656398567640},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1656398567648},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1656398567640},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1656398567648},{"_id":"themes/yilia/_config.yml","hash":"0be633a7662b7b13a4cebe663887981a3f2034f9","modified":1656430985059},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1656398567742},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1656398567810},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1656398567724},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1656398567723},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1656398567724},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656398567725},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1656398567724},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656398567742},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1656398567742},{"_id":"themes/yilia/source/CNAME","hash":"f6851ef14855632a3db6ebac3079d959d808c8c3","modified":1656417979875},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1656398567807},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1656398567809},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1656398567743},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1656398567802},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1656398567650},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1656398567649},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1656398567650},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1656398567650},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1656398567651},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1656398567650},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1656398567665},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1656398567669},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"8dea8f5f93a60185439b330b0f1d1649a6ab4bd0","modified":1656398567673},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1656398567670},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1656398567672},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1656398567675},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1656398567674},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1656398567701},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"4051ee275e7cb6ae79e1ca0d5249462403bfb03a","modified":1656431695095},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1656398567702},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1656398567703},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1656398567723},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1656398567723},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656398567803},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656398567804},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656398567804},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656398567806},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1656398567806},{"_id":"themes/yilia/source/img/favicon.ico","hash":"078838b5553f72be9ccc8e35d8e400878a291b79","modified":1651986633433},{"_id":"themes/yilia/source/img/head.jpg","hash":"d5333246af065c0cc9f77df9b2e2e0e013fb1fa3","modified":1654226753586},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1656398567806},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656398567807},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1656398567743},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1656398567744},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1656398567744},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1656398567744},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1656398567745},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1656398567758},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1656398567745},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1656398567759},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1656398567756},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1656398567769},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1656398567776},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1656398567776},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1656398567777},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1656398567777},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1656398567779},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1656398567779},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1656398567779},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1656398567780},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1656398567780},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1656398567780},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1656398567781},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1656398567781},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1656398567781},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1656398567782},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1656398567783},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1656398567783},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1656398567784},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1656398567784},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1656398567785},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1656398567784},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1656398567785},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1656398567800},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1656398567800},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1656398567800},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1656398567801},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1656398567801},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1656398567801},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1656398567704},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1656398567705},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1656398567720},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1656398567705},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1656398567721},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1656398567706},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1656398567721},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1656398567721},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1656398567761},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1656398567763},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1656398567765},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1656398567768},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1656398567766},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656398567772},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656398567774},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656398567773},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1656398567778},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656398567775},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656398567778},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656398567778},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1656398567808},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1656398567809},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1656398567722},{"_id":"themes/yilia/source/img/alipay.png","hash":"d67fa17e8d9920e8937c3e3470eb76b4d2c978e9","modified":1656408814518},{"_id":"themes/yilia/source/img/weixin.png","hash":"5695522539c0f8cecfbffdb0b477c56f8d2b2e46","modified":1656408834297},{"_id":"public/content.json","hash":"daaaef8e8c479f944b42cea150014051a73b0bb5","modified":1656771014270},{"_id":"public/2022/07/02/2022-7-2APK集成/index.html","hash":"55c1bc66b257b46e866e0cb18e483d5be74d671a","modified":1656771014270},{"_id":"public/2022/07/02/2022-7-2Android.mk和Android.bp/index.html","hash":"9d04af3a8b96e20c2626297d06ade1899abb2633","modified":1656771014270},{"_id":"public/2022/07/01/2022-7-1Android APK签名/index.html","hash":"f763df9100499b27bb245d361197b9bb7f5f1d8e","modified":1656771014270},{"_id":"public/2022/07/01/2022-7-1Android系统介绍/index.html","hash":"23f931eea5ed1c3fc3bfeab436a8a2a62fdbc2d9","modified":1656771014270},{"_id":"public/2022/07/01/2022-7-1OTA升级/index.html","hash":"4b24649404a043dbd03dcffc5bc88923f50532e6","modified":1656771014270},{"_id":"public/2022/06/30/2022-6-30git-lfs/index.html","hash":"d5f9c464d33c65af402a03e4009c315203bf9a74","modified":1656771014270},{"_id":"public/2022/06/30/2022-6-30flask基础/index.html","hash":"e5c52fb231196e4e09718f3934294feb958ae61c","modified":1656771014270},{"_id":"public/2022/06/30/2022-6-30升级repo的好处/index.html","hash":"b6ce3144c25f05dc491bc61d1425f2d3c0af10e7","modified":1656771014270},{"_id":"public/2022/06/29/2022-6-29Python常见问题/index.html","hash":"c3106e51526f0816797fe25cb43fcaef0fdc261b","modified":1656771014270},{"_id":"public/2022/06/30/2022-6-30git底层原理/index.html","hash":"6fe6b67a9dfb9ae4358dabacc079e4bfdcff8e43","modified":1656771014270},{"_id":"public/2022/06/28/2022-6-28Linux常见问题/index.html","hash":"a9415ffac58dba7d95a916fb120d107a56e522e9","modified":1656771014270},{"_id":"public/2022/06/26/2022-6-26git merge策略解析/index.html","hash":"6d0e73bb4b1deec6252900bc6a7ff97cdf5b9047","modified":1656771014270},{"_id":"public/2018/06/05/2018-6-5食物药理及营养(5类66种)/index.html","hash":"c283eaa5788853ec339ec345243932ca5685cdb9","modified":1656771014270},{"_id":"public/2017/09/27/2017-9-27服务器被攻击勒索案例/index.html","hash":"f27fe3bc4d435fe4a4a7af664a6d7a92ec6105c8","modified":1656771014270},{"_id":"public/2016/10/16/2016-10-16C基础/index.html","hash":"3c439c4761037a939212b1a81d618677818ca5a6","modified":1656771014270},{"_id":"public/2016/06/05/2016-6-5Android基础/index.html","hash":"36c05429d82f7675ebe3ee5187d640a4bf492c14","modified":1656771014270},{"_id":"public/2015/10/23/2015-10-23DB常见操作/index.html","hash":"31103a159e974c87cf3f1acd406c513fce7f1769","modified":1656771014270},{"_id":"public/2015/10/23/2015-10-23常见环境问题及解决方案/index.html","hash":"6458ec823744d600fa8f68b5f095e3f2efb25757","modified":1656771014270},{"_id":"public/2015/09/01/2015-9-1Java基础/index.html","hash":"265e2944bbd081bd371ed8201fe32380d44f8680","modified":1656771014270},{"_id":"public/2015/05/05/2015-5-5HTML基础/index.html","hash":"31f5059f4f5be686596688c953fb604ed16a5c2f","modified":1656771014270},{"_id":"public/archives/index.html","hash":"074d7391fd5139bbb23294027b2430c7ea282f9e","modified":1656771014270},{"_id":"public/archives/page/2/index.html","hash":"0d259b41a7e1dbc55a958be012d7bba7a2751f76","modified":1656771014270},{"_id":"public/archives/2015/index.html","hash":"4a3224f907100600954a7aa5286c1eeac1282af3","modified":1656771014270},{"_id":"public/archives/2015/05/index.html","hash":"bbd4d493863826538ae39296811912b2c07fe993","modified":1656771014270},{"_id":"public/archives/2015/09/index.html","hash":"8966cb3a04d4850f7b9418aa9aa8a7b5b7a4c5d0","modified":1656771014270},{"_id":"public/archives/2015/10/index.html","hash":"3971abaebd403cd9d53d25bb6fc8233d26c95761","modified":1656771014270},{"_id":"public/archives/2016/index.html","hash":"379ab8e885cdf64b2a9325bc2f00a335ea023893","modified":1656771014270},{"_id":"public/archives/2016/06/index.html","hash":"dcfa2be4e39f8ca302c1352d0e291993dc132045","modified":1656771014270},{"_id":"public/archives/2016/10/index.html","hash":"1864490692c44883ecad4266f09ac5a0b262b06c","modified":1656771014270},{"_id":"public/archives/2017/index.html","hash":"80dd28b9e7760ec141d672de43de0066dad4e81b","modified":1656771014270},{"_id":"public/archives/2017/09/index.html","hash":"a64aa7b85ffad3373de85e48ea734b63a8c9cad0","modified":1656771014270},{"_id":"public/archives/2018/index.html","hash":"6a6c974a47c6197e1861fdf035d37d9d724c174b","modified":1656771014270},{"_id":"public/archives/2018/06/index.html","hash":"ea8e11595cbd46f454a8881e0e6405984186b07f","modified":1656771014270},{"_id":"public/archives/2022/index.html","hash":"6a477f6fb690e3291242b46de3d0c2bbdbcfee93","modified":1656771014270},{"_id":"public/archives/2022/page/2/index.html","hash":"00f52468d0aa99ff468bf8fedd1b2422884a7378","modified":1656771014270},{"_id":"public/archives/2022/06/index.html","hash":"470e3e15430ecf2ccf075bc4a1a36386f03e0016","modified":1656771014270},{"_id":"public/archives/2022/07/index.html","hash":"7e638a6234b444b70534ffae3eb42ddf0df77f22","modified":1656771014270},{"_id":"public/tags/DB/index.html","hash":"12c793c5653dfa0f86c64aa262f0bc41bc25f1e1","modified":1656771014270},{"_id":"public/tags/环境/index.html","hash":"873b3f18f4983c1f013ed38d8c23007af29535b8","modified":1656771014270},{"_id":"public/tags/html/index.html","hash":"536ab6ee30f810e3113ab056f211e73b54971c27","modified":1656771014270},{"_id":"public/tags/Java/index.html","hash":"ee277efb35f1d502db39136be5af41ab1e809a96","modified":1656771014270},{"_id":"public/tags/C/index.html","hash":"30ad6ac945aa2a99f67e95e1be2280739aa10674","modified":1656771014270},{"_id":"public/tags/攻击/index.html","hash":"9168823334c27916397c3b3cd252c4ec0d549ec7","modified":1656771014270},{"_id":"public/tags/Android/index.html","hash":"121a8db6d08953c848c28051447bda0f1ba3d4fa","modified":1656771014270},{"_id":"public/tags/git/index.html","hash":"30d3088d00ff716417fa151f5856c35079200f40","modified":1656771014270},{"_id":"public/tags/merge/index.html","hash":"59414961cf3c6a43075995de629e11b148a9ae66","modified":1656771014270},{"_id":"public/tags/策略/index.html","hash":"4640a7907da6f5f5f4ae46aeb292be8a7ec7fbf4","modified":1656771014270},{"_id":"public/tags/食物/index.html","hash":"f068709a32bdaed2acb028433adee1693f0e02e2","modified":1656771014270},{"_id":"public/tags/linux/index.html","hash":"efc5c4d861f53e3b5203c512ae512ddcc7a79484","modified":1656771014270},{"_id":"public/tags/python/index.html","hash":"60dc337de92b892a7b6681a83f3acbc8f30702bd","modified":1656771014270},{"_id":"public/tags/lfs/index.html","hash":"2642a750443ccae0c03a8e47dae2c5c132fc33de","modified":1656771014270},{"_id":"public/tags/flask/index.html","hash":"6d3446bbe0eec4925f2152e53a46649973b49421","modified":1656771014270},{"_id":"public/tags/repo/index.html","hash":"f8fa9632f02c4a1178f8066556a3152af8f3d470","modified":1656771014270},{"_id":"public/tags/android/index.html","hash":"dae72f911683d240056a852b710c5a39a02623a4","modified":1656771014270},{"_id":"public/tags/apk/index.html","hash":"81198c7bb0bbe328a04a2fcc338902325404d155","modified":1656771014270},{"_id":"public/tags/签名/index.html","hash":"30c8dcc03172b520559b149b98686d641f788d1f","modified":1656771014270},{"_id":"public/tags/ota/index.html","hash":"c50c2663e1d48facda146d478589eda9c9a5c477","modified":1656771014270},{"_id":"public/tags/集成/index.html","hash":"3d08c7cbaf7574abb8fc6f84bb707da0c9e1df0f","modified":1656771014270},{"_id":"public/index.html","hash":"ab02ade238fb2eb32b2d97a6111971e6a3915ac5","modified":1656771014270},{"_id":"public/tags/mk/index.html","hash":"40a7822235576cb98bb5f954735a671a617a69a5","modified":1656771014270},{"_id":"public/tags/bp/index.html","hash":"229ee96c8b3d8a25a32158664a6d24faef07ba41","modified":1656771014270},{"_id":"public/page/2/index.html","hash":"cc934badc5583c599e3779c17982162abb415bac","modified":1656771014270},{"_id":"public/CNAME","hash":"f6851ef14855632a3db6ebac3079d959d808c8c3","modified":1656771014270},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1656771014270},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656771014270},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1656771014270},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656771014270},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656771014270},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1656771014270},{"_id":"public/img/favicon.ico","hash":"078838b5553f72be9ccc8e35d8e400878a291b79","modified":1656771014270},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656771014270},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1656771014270},{"_id":"public/img/head.jpg","hash":"d5333246af065c0cc9f77df9b2e2e0e013fb1fa3","modified":1656771014270},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656771014270},{"_id":"public/img/alipay.png","hash":"d67fa17e8d9920e8937c3e3470eb76b4d2c978e9","modified":1656771014270},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1656771014270},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1656771014270},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1656771014270},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1656771014270},{"_id":"public/img/weixin.png","hash":"5695522539c0f8cecfbffdb0b477c56f8d2b2e46","modified":1656771014270}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"DB常见操作","date":"2015-10-22T16:00:00.000Z","_content":"\nDB常见操作\n\n<!--more-->\n\n## 命令\n```\nDDL：数据定义语言\nDQL：数据查询语言\nDML：数据操作语言\nCREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。\nALTER：修改数据库中的某个已有的数据库对象，比如一个表。\nDROP：删除整个表，或者表的视图，或者数据库中的其他对象。\nINSERT：创建一条记录。\nUPDATE：修改记录。\nDELETE：删除记录。\nSELECT：从一个或多个表中检索某些记录。\n```\n\n\n## 运算符\n\n```\n算术运算符\n    +：加法 - 把运算符两边的值相加\ta + b 将得到 30\n    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10\n    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200\n    /：除法 - 左操作数除以右操作数\tb / a 将得到 2\n    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0\n\n比较运算符\n    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。\n    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。\n    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。\n    <>：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a <> b) 为真。\n    >：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a > b) 不为真。\n    <：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a < b) 为真。\n    >=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a >= b) 不为真。\n    <=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a <= b) 为真。\n    !<：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !< b) 为假。\n    !>：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !> b) 为真。\n\n逻辑运算符\n    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。\n    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。\n    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。\n    IN：运算符用于把某个值与一系列指定列表的值进行比较。\n    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。\n    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。\n    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。\n    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。\n    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。\n    IS NULL：运算符用于把某个值与 NULL 值进行比较。\n    IS：运算符与 = 相似。\n    IS NOT：运算符与 != 相似。\n    ||：连接两个不同的字符串，得到一个新的字符串。\n    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。\n\n位运算符\n    &：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A & B) 将得到 \t\t12，即为 0000 1100\n    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101\n    ~：二进制补码运算符是一元运算符，具有\"翻转\"位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。\n    <<：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA << 2 将得到 240，即\t为 1111 0000\n    >>：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA >> 2 将得到 15，即为 0000 1111\n```\n\n## 基本用法\n\n```\n执行顺序：\n    1.from\n    2.join\n    3.where\n    4.group by\n    5.order by\n\n增删改查\n    insert into `user`(`field1`,`field2`) values(value1,value2);\n    delete from `user` where 范围;\n    update `user` set field1=value1 where 范围;\n    select * from `user`;\n\nlike子句\n    select * from `user` where name like 'xxx%';\n    select * from `user` where name like 'xxx_';\n    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。\n\nglob子句\n    select * from `user` where name glob 'xxx*';\n    select * from `user` where name glob 'xxx?';\n    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。\n\nlimit子句（从 offset 偏移量，截取 limit 条数）\n    select * from `user` limit 10 offset 0;\n\norder by子句\n    select * from `user` order by col1,col2 [ASC | DESC];\n\ngroup by子句\n    select * from `user` group by col1,col2 having 条件;\n\ndistinct（去除重复列，distinct后面的所有列）\n    select distinct col1,col2,col3 from `user`;\n```\n\n## 高级\n```\n约束：\n    not null 约束：确保某列不能有 NULL 值。\n    default 约束：当某列没有指定值时，为该列提供默认值。\n    unique 约束：确保某列中的所有值是不同的。\n    primary key 约束：唯一标识数据库表中的各行/记录。\n    check 约束：CHECK 约束确保某列中的所有值满足一定条件。\n    age ingeter check(age > 0),\n\n连接：\n    交叉连接 - CROSS JOIN（结果乘积）\n    内连接 - INNER JOIN（结果交集）\n    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）\n        select * from t1 a\n        left join t2 b on a.id = b.user_id\n\nunion：（union连接两个结果集，union all包括重复列）\n    select * from user1\n    union\n    select * from user2\n\n别名：\n    select a as name from user as A\n    select a name from user A\n\n触发器：\n\n索引：\n    create index index_name on table_name (column1, column2);\n    drop index salary_index;\n    select * from company indexed by salary_index WHERE salary > 5000;\n\n视图：\n    create view xxx_view as select * from `user`;\n    drop view xxx_view;\n\n事务：\n    BEGIN TRANSACTION：开始事务处理。\n    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。\n    ROLLBACK：回滚所做的更改。\n    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。\n\nautoincrement：\n    column1 integer autoincrement,\n\n集合判断：\n    (case \n    when A.status_flag='0' then '退回' \n    when A.status_flag='1' then '新增' \n    when A.status_flag='2' then '待复核' \n    else '其他' \n    end\n    ) status_name\n\n函数：\n    1：SQLite COUNT 函数\n        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。\n    2：SQLite MAX 函数\n        SQLite MAX 聚合函数允许我们选择某列的最大值。\n    3：SQLite MIN 函数\n        SQLite MIN 聚合函数允许我们选择某列的最小值。\n    4：SQLite AVG 函数\n        SQLite AVG 聚合函数计算某列的平均值。\n    5：SQLite SUM 函数\n        SQLite SUM 聚合函数允许为一个数值列计算总和。\n    6：SQLite RANDOM 函数\n        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。\n    7：SQLite ABS 函数\n        SQLite ABS 函数返回数值参数的绝对值。\n    8：SQLite UPPER 函数\n        SQLite UPPER 函数把字符串转换为大写字母。\n    9：SQLite LOWER 函数\n        SQLite LOWER 函数把字符串转换为小写字母。\n    10：SQLite LENGTH 函数\n        SQLite LENGTH 函数返回字符串的长度。\n    11：SQLite sqlite_version 函数\n        SQLite sqlite_version 函数返回 SQLite 库的版本。\n            \n```\n\n## Mysql常用操作\n\n```\nmysql数据类型\n    | 类型 | 描述 |\n    | int/integer | int同integer |\n    | char | 定长字符串 |\n    | varchar | 变长字符串 |\n    | text | 长文本 |\n\n创建表（可放not null和default）\n    drop table if exists `user`;\n    create table `user` (\n     `id` int auto_increment,\n     `name` varchar(32),\n     `age` int,\n     primary key (`id`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n连接mysql，并修改密码\n    mysql -u root -p\n    set password for 'root'@'localhost' = password('newpass');\n\n创建删除数据库\n    drop database `jfinal`;\n    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n修改root密码\n    use mysql;\n    update user set password=password('new password') where user='root';\n\n创建远程用户（删除、创建、授权）\n    drop user 'jmm'@'%';\n    create user 'jmm'@'%' identified by 'jmm';\n    grant all on *.* to 'jmm'@'%';\n\n查看用户\n    select Host,User from mysql.user;\n\n查看 设置 字符集\n    show VARIABLES like 'character%';\n    set character_set_client=utf8;\n```\n\n## sqlite常用操作\n\n```\n创建表\n    drop table if exists `user`;\n    create table if no exists `user` (\n     id integer primary key,    -- integer primary key即为自增\n     name varchar(32),\n     age integer\n    );\n\n查表信息\n    select name from sqlite_master;\n\n查询出某个表的所有字段信息\n    PRAGMA table_info([tablename]);\n```\n\n## 其他\n```\nsql  操作\n\n一.sql语句\n  \n\t增\tinsert into user (id,name,sex) values (1,'王明',1)\n\t删\tdelete from user where id = 1\n\t改\tupdate user set name='张',sex=1 where id = 1\n\t查\tselect * from user where name like %'张'% limit 0,10\n\n二.JDBC操作\n      \n\t================================数据库操作，五步==========================\n\t\n\t//1.加载驱动\n\tClass.forName(\"com.mysql.jdbc.Driver\");\n\n\t//2.连接数据库\n\tConnection connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/数据库名?useUnicode=true&characterEncoding=utf-8\",\"用户\",\"密码\");\n\n\t//3.使用Connection创建语句\n\tString sql = \"select * from user\";\n\tPreparedStatement pst = connection.prepareStatement(sql);\n\t\n\t//4.执行\n\tResultSet rs = pst.executeQuery();//查询\n\tResultSet rs = pst.executeUpdate();//增删改\n\n\t/*\n\twhile(rs.next()){\n\t\tint id = rs.getInt(\"id\");\n\t\tString name = rs.getString(\"name\");\n\t\tString pwd = rs.getString(\"pwd\");\n\t}\n\t*/\n\t\n\t//5.关闭数据，从下到上\n\trs.close();\n\tpst.close();\n\tconnection.close();\n\n\t======================================结束=======================================\n\t\n\n三.读取配置文件信息（database.properties）（单例模式）\n\n\n//读取配置文件的工具类-单例模式\n\npublic class ConfigManager {\n\tprivate static ConfigManager configManager;\n\tprivate static Properties properties;\n\t\n\t//私有构造器\n\tprivate ConfigManager(){\n\t\tString configFile = \"database.properties\";\n\t\tproperties = new Properties();\n\t\t//通过classpath找资源\n\t\tInputStream is = ConfigManager.class.getClassLoader().getResourceAsStream(configFile);\n\t\ttry {\n\t\t\tproperties.load(is);\n\t\t\tis.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t/*\n\t * \n\t * 线程不安全，在并发的情况下，很有可能会出现多个ConfigManager实例\n\t * 考虑同步,可以采用synchronized\n\t * \n\t * */\n\t//全局访问点\n\tpublic static synchronized ConfigManager getInstance(){\n\t\tif(configManager == null){\n\t\t\tconfigManager = new ConfigManager();\n\t\t}\n\t\treturn configManager;\n\t}\n\t\n\tpublic String getValue(String key){\n\t\t return properties.getProperty(key);\n\t}\n}\n\n\t\n\t//用key取出properties里面的value\n\tString driver = ConfigManager.getInstance().getString(\"driver\");\n\tString url = ConfigManager.getInstance().getString(\"url\");\n\tString user = ConfigManager.getInstance().getString(\"user\");\n\tString pwd = ConfigManager.getInstance().getString(\"pwd\");\n```","source":"_posts/2015-10-23DB常见操作.md","raw":"---\ntitle: DB常见操作\ndate: 2015-10-23\ntags: [DB]\n---\n\nDB常见操作\n\n<!--more-->\n\n## 命令\n```\nDDL：数据定义语言\nDQL：数据查询语言\nDML：数据操作语言\nCREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。\nALTER：修改数据库中的某个已有的数据库对象，比如一个表。\nDROP：删除整个表，或者表的视图，或者数据库中的其他对象。\nINSERT：创建一条记录。\nUPDATE：修改记录。\nDELETE：删除记录。\nSELECT：从一个或多个表中检索某些记录。\n```\n\n\n## 运算符\n\n```\n算术运算符\n    +：加法 - 把运算符两边的值相加\ta + b 将得到 30\n    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10\n    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200\n    /：除法 - 左操作数除以右操作数\tb / a 将得到 2\n    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0\n\n比较运算符\n    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。\n    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。\n    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。\n    <>：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a <> b) 为真。\n    >：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a > b) 不为真。\n    <：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a < b) 为真。\n    >=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a >= b) 不为真。\n    <=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a <= b) 为真。\n    !<：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !< b) 为假。\n    !>：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !> b) 为真。\n\n逻辑运算符\n    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。\n    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。\n    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。\n    IN：运算符用于把某个值与一系列指定列表的值进行比较。\n    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。\n    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。\n    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。\n    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。\n    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。\n    IS NULL：运算符用于把某个值与 NULL 值进行比较。\n    IS：运算符与 = 相似。\n    IS NOT：运算符与 != 相似。\n    ||：连接两个不同的字符串，得到一个新的字符串。\n    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。\n\n位运算符\n    &：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A & B) 将得到 \t\t12，即为 0000 1100\n    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101\n    ~：二进制补码运算符是一元运算符，具有\"翻转\"位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。\n    <<：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA << 2 将得到 240，即\t为 1111 0000\n    >>：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA >> 2 将得到 15，即为 0000 1111\n```\n\n## 基本用法\n\n```\n执行顺序：\n    1.from\n    2.join\n    3.where\n    4.group by\n    5.order by\n\n增删改查\n    insert into `user`(`field1`,`field2`) values(value1,value2);\n    delete from `user` where 范围;\n    update `user` set field1=value1 where 范围;\n    select * from `user`;\n\nlike子句\n    select * from `user` where name like 'xxx%';\n    select * from `user` where name like 'xxx_';\n    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。\n\nglob子句\n    select * from `user` where name glob 'xxx*';\n    select * from `user` where name glob 'xxx?';\n    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。\n\nlimit子句（从 offset 偏移量，截取 limit 条数）\n    select * from `user` limit 10 offset 0;\n\norder by子句\n    select * from `user` order by col1,col2 [ASC | DESC];\n\ngroup by子句\n    select * from `user` group by col1,col2 having 条件;\n\ndistinct（去除重复列，distinct后面的所有列）\n    select distinct col1,col2,col3 from `user`;\n```\n\n## 高级\n```\n约束：\n    not null 约束：确保某列不能有 NULL 值。\n    default 约束：当某列没有指定值时，为该列提供默认值。\n    unique 约束：确保某列中的所有值是不同的。\n    primary key 约束：唯一标识数据库表中的各行/记录。\n    check 约束：CHECK 约束确保某列中的所有值满足一定条件。\n    age ingeter check(age > 0),\n\n连接：\n    交叉连接 - CROSS JOIN（结果乘积）\n    内连接 - INNER JOIN（结果交集）\n    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）\n        select * from t1 a\n        left join t2 b on a.id = b.user_id\n\nunion：（union连接两个结果集，union all包括重复列）\n    select * from user1\n    union\n    select * from user2\n\n别名：\n    select a as name from user as A\n    select a name from user A\n\n触发器：\n\n索引：\n    create index index_name on table_name (column1, column2);\n    drop index salary_index;\n    select * from company indexed by salary_index WHERE salary > 5000;\n\n视图：\n    create view xxx_view as select * from `user`;\n    drop view xxx_view;\n\n事务：\n    BEGIN TRANSACTION：开始事务处理。\n    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。\n    ROLLBACK：回滚所做的更改。\n    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。\n\nautoincrement：\n    column1 integer autoincrement,\n\n集合判断：\n    (case \n    when A.status_flag='0' then '退回' \n    when A.status_flag='1' then '新增' \n    when A.status_flag='2' then '待复核' \n    else '其他' \n    end\n    ) status_name\n\n函数：\n    1：SQLite COUNT 函数\n        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。\n    2：SQLite MAX 函数\n        SQLite MAX 聚合函数允许我们选择某列的最大值。\n    3：SQLite MIN 函数\n        SQLite MIN 聚合函数允许我们选择某列的最小值。\n    4：SQLite AVG 函数\n        SQLite AVG 聚合函数计算某列的平均值。\n    5：SQLite SUM 函数\n        SQLite SUM 聚合函数允许为一个数值列计算总和。\n    6：SQLite RANDOM 函数\n        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。\n    7：SQLite ABS 函数\n        SQLite ABS 函数返回数值参数的绝对值。\n    8：SQLite UPPER 函数\n        SQLite UPPER 函数把字符串转换为大写字母。\n    9：SQLite LOWER 函数\n        SQLite LOWER 函数把字符串转换为小写字母。\n    10：SQLite LENGTH 函数\n        SQLite LENGTH 函数返回字符串的长度。\n    11：SQLite sqlite_version 函数\n        SQLite sqlite_version 函数返回 SQLite 库的版本。\n            \n```\n\n## Mysql常用操作\n\n```\nmysql数据类型\n    | 类型 | 描述 |\n    | int/integer | int同integer |\n    | char | 定长字符串 |\n    | varchar | 变长字符串 |\n    | text | 长文本 |\n\n创建表（可放not null和default）\n    drop table if exists `user`;\n    create table `user` (\n     `id` int auto_increment,\n     `name` varchar(32),\n     `age` int,\n     primary key (`id`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n连接mysql，并修改密码\n    mysql -u root -p\n    set password for 'root'@'localhost' = password('newpass');\n\n创建删除数据库\n    drop database `jfinal`;\n    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n修改root密码\n    use mysql;\n    update user set password=password('new password') where user='root';\n\n创建远程用户（删除、创建、授权）\n    drop user 'jmm'@'%';\n    create user 'jmm'@'%' identified by 'jmm';\n    grant all on *.* to 'jmm'@'%';\n\n查看用户\n    select Host,User from mysql.user;\n\n查看 设置 字符集\n    show VARIABLES like 'character%';\n    set character_set_client=utf8;\n```\n\n## sqlite常用操作\n\n```\n创建表\n    drop table if exists `user`;\n    create table if no exists `user` (\n     id integer primary key,    -- integer primary key即为自增\n     name varchar(32),\n     age integer\n    );\n\n查表信息\n    select name from sqlite_master;\n\n查询出某个表的所有字段信息\n    PRAGMA table_info([tablename]);\n```\n\n## 其他\n```\nsql  操作\n\n一.sql语句\n  \n\t增\tinsert into user (id,name,sex) values (1,'王明',1)\n\t删\tdelete from user where id = 1\n\t改\tupdate user set name='张',sex=1 where id = 1\n\t查\tselect * from user where name like %'张'% limit 0,10\n\n二.JDBC操作\n      \n\t================================数据库操作，五步==========================\n\t\n\t//1.加载驱动\n\tClass.forName(\"com.mysql.jdbc.Driver\");\n\n\t//2.连接数据库\n\tConnection connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/数据库名?useUnicode=true&characterEncoding=utf-8\",\"用户\",\"密码\");\n\n\t//3.使用Connection创建语句\n\tString sql = \"select * from user\";\n\tPreparedStatement pst = connection.prepareStatement(sql);\n\t\n\t//4.执行\n\tResultSet rs = pst.executeQuery();//查询\n\tResultSet rs = pst.executeUpdate();//增删改\n\n\t/*\n\twhile(rs.next()){\n\t\tint id = rs.getInt(\"id\");\n\t\tString name = rs.getString(\"name\");\n\t\tString pwd = rs.getString(\"pwd\");\n\t}\n\t*/\n\t\n\t//5.关闭数据，从下到上\n\trs.close();\n\tpst.close();\n\tconnection.close();\n\n\t======================================结束=======================================\n\t\n\n三.读取配置文件信息（database.properties）（单例模式）\n\n\n//读取配置文件的工具类-单例模式\n\npublic class ConfigManager {\n\tprivate static ConfigManager configManager;\n\tprivate static Properties properties;\n\t\n\t//私有构造器\n\tprivate ConfigManager(){\n\t\tString configFile = \"database.properties\";\n\t\tproperties = new Properties();\n\t\t//通过classpath找资源\n\t\tInputStream is = ConfigManager.class.getClassLoader().getResourceAsStream(configFile);\n\t\ttry {\n\t\t\tproperties.load(is);\n\t\t\tis.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t/*\n\t * \n\t * 线程不安全，在并发的情况下，很有可能会出现多个ConfigManager实例\n\t * 考虑同步,可以采用synchronized\n\t * \n\t * */\n\t//全局访问点\n\tpublic static synchronized ConfigManager getInstance(){\n\t\tif(configManager == null){\n\t\t\tconfigManager = new ConfigManager();\n\t\t}\n\t\treturn configManager;\n\t}\n\t\n\tpublic String getValue(String key){\n\t\t return properties.getProperty(key);\n\t}\n}\n\n\t\n\t//用key取出properties里面的value\n\tString driver = ConfigManager.getInstance().getString(\"driver\");\n\tString url = ConfigManager.getInstance().getString(\"url\");\n\tString user = ConfigManager.getInstance().getString(\"user\");\n\tString pwd = ConfigManager.getInstance().getString(\"pwd\");\n```","slug":"2015-10-23DB常见操作","published":1,"updated":"2022-06-30T16:27:44.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooej0000nkvv1ht7660g","content":"<p>DB常见操作</p>\n<span id=\"more\"></span>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DDL：数据定义语言</span><br><span class=\"line\">DQL：数据查询语言</span><br><span class=\"line\">DML：数据操作语言</span><br><span class=\"line\">CREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">ALTER：修改数据库中的某个已有的数据库对象，比如一个表。</span><br><span class=\"line\">DROP：删除整个表，或者表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">INSERT：创建一条记录。</span><br><span class=\"line\">UPDATE：修改记录。</span><br><span class=\"line\">DELETE：删除记录。</span><br><span class=\"line\">SELECT：从一个或多个表中检索某些记录。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算术运算符</span><br><span class=\"line\">    +：加法 - 把运算符两边的值相加\ta + b 将得到 30</span><br><span class=\"line\">    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10</span><br><span class=\"line\">    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200</span><br><span class=\"line\">    /：除法 - 左操作数除以右操作数\tb / a 将得到 2</span><br><span class=\"line\">    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0</span><br><span class=\"line\"></span><br><span class=\"line\">比较运算符</span><br><span class=\"line\">    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。</span><br><span class=\"line\">    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。</span><br><span class=\"line\">    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。</span><br><span class=\"line\">    &lt;&gt;：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a &lt;&gt; b) 为真。</span><br><span class=\"line\">    &gt;：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a &gt; b) 不为真。</span><br><span class=\"line\">    &lt;：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a &lt; b) 为真。</span><br><span class=\"line\">    &gt;=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a &gt;= b) 不为真。</span><br><span class=\"line\">    &lt;=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a &lt;= b) 为真。</span><br><span class=\"line\">    !&lt;：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !&lt; b) 为假。</span><br><span class=\"line\">    !&gt;：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !&gt; b) 为真。</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符</span><br><span class=\"line\">    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。</span><br><span class=\"line\">    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。</span><br><span class=\"line\">    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。</span><br><span class=\"line\">    IN：运算符用于把某个值与一系列指定列表的值进行比较。</span><br><span class=\"line\">    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。</span><br><span class=\"line\">    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。</span><br><span class=\"line\">    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。</span><br><span class=\"line\">    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。</span><br><span class=\"line\">    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。</span><br><span class=\"line\">    IS NULL：运算符用于把某个值与 NULL 值进行比较。</span><br><span class=\"line\">    IS：运算符与 = 相似。</span><br><span class=\"line\">    IS NOT：运算符与 != 相似。</span><br><span class=\"line\">    ||：连接两个不同的字符串，得到一个新的字符串。</span><br><span class=\"line\">    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。</span><br><span class=\"line\"></span><br><span class=\"line\">位运算符</span><br><span class=\"line\">    &amp;：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A &amp; B) 将得到 \t\t12，即为 0000 1100</span><br><span class=\"line\">    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101</span><br><span class=\"line\">    ~：二进制补码运算符是一元运算符，具有&quot;翻转&quot;位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。</span><br><span class=\"line\">    &lt;&lt;：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA &lt;&lt; 2 将得到 240，即\t为 1111 0000</span><br><span class=\"line\">    &gt;&gt;：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA &gt;&gt; 2 将得到 15，即为 0000 1111</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行顺序：</span><br><span class=\"line\">    1.from</span><br><span class=\"line\">    2.join</span><br><span class=\"line\">    3.where</span><br><span class=\"line\">    4.group by</span><br><span class=\"line\">    5.order by</span><br><span class=\"line\"></span><br><span class=\"line\">增删改查</span><br><span class=\"line\">    insert into `user`(`field1`,`field2`) values(value1,value2);</span><br><span class=\"line\">    delete from `user` where 范围;</span><br><span class=\"line\">    update `user` set field1=value1 where 范围;</span><br><span class=\"line\">    select * from `user`;</span><br><span class=\"line\"></span><br><span class=\"line\">like子句</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx%&#x27;;</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx_&#x27;;</span><br><span class=\"line\">    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">glob子句</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx*&#x27;;</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx?&#x27;;</span><br><span class=\"line\">    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">limit子句（从 offset 偏移量，截取 limit 条数）</span><br><span class=\"line\">    select * from `user` limit 10 offset 0;</span><br><span class=\"line\"></span><br><span class=\"line\">order by子句</span><br><span class=\"line\">    select * from `user` order by col1,col2 [ASC | DESC];</span><br><span class=\"line\"></span><br><span class=\"line\">group by子句</span><br><span class=\"line\">    select * from `user` group by col1,col2 having 条件;</span><br><span class=\"line\"></span><br><span class=\"line\">distinct（去除重复列，distinct后面的所有列）</span><br><span class=\"line\">    select distinct col1,col2,col3 from `user`;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束：</span><br><span class=\"line\">    not null 约束：确保某列不能有 NULL 值。</span><br><span class=\"line\">    default 约束：当某列没有指定值时，为该列提供默认值。</span><br><span class=\"line\">    unique 约束：确保某列中的所有值是不同的。</span><br><span class=\"line\">    primary key 约束：唯一标识数据库表中的各行/记录。</span><br><span class=\"line\">    check 约束：CHECK 约束确保某列中的所有值满足一定条件。</span><br><span class=\"line\">    age ingeter check(age &gt; 0),</span><br><span class=\"line\"></span><br><span class=\"line\">连接：</span><br><span class=\"line\">    交叉连接 - CROSS JOIN（结果乘积）</span><br><span class=\"line\">    内连接 - INNER JOIN（结果交集）</span><br><span class=\"line\">    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）</span><br><span class=\"line\">        select * from t1 a</span><br><span class=\"line\">        left join t2 b on a.id = b.user_id</span><br><span class=\"line\"></span><br><span class=\"line\">union：（union连接两个结果集，union all包括重复列）</span><br><span class=\"line\">    select * from user1</span><br><span class=\"line\">    union</span><br><span class=\"line\">    select * from user2</span><br><span class=\"line\"></span><br><span class=\"line\">别名：</span><br><span class=\"line\">    select a as name from user as A</span><br><span class=\"line\">    select a name from user A</span><br><span class=\"line\"></span><br><span class=\"line\">触发器：</span><br><span class=\"line\"></span><br><span class=\"line\">索引：</span><br><span class=\"line\">    create index index_name on table_name (column1, column2);</span><br><span class=\"line\">    drop index salary_index;</span><br><span class=\"line\">    select * from company indexed by salary_index WHERE salary &gt; 5000;</span><br><span class=\"line\"></span><br><span class=\"line\">视图：</span><br><span class=\"line\">    create view xxx_view as select * from `user`;</span><br><span class=\"line\">    drop view xxx_view;</span><br><span class=\"line\"></span><br><span class=\"line\">事务：</span><br><span class=\"line\">    BEGIN TRANSACTION：开始事务处理。</span><br><span class=\"line\">    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。</span><br><span class=\"line\">    ROLLBACK：回滚所做的更改。</span><br><span class=\"line\">    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。</span><br><span class=\"line\"></span><br><span class=\"line\">autoincrement：</span><br><span class=\"line\">    column1 integer autoincrement,</span><br><span class=\"line\"></span><br><span class=\"line\">集合判断：</span><br><span class=\"line\">    (case </span><br><span class=\"line\">    when A.status_flag=&#x27;0&#x27; then &#x27;退回&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;1&#x27; then &#x27;新增&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;2&#x27; then &#x27;待复核&#x27; </span><br><span class=\"line\">    else &#x27;其他&#x27; </span><br><span class=\"line\">    end</span><br><span class=\"line\">    ) status_name</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">    1：SQLite COUNT 函数</span><br><span class=\"line\">        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。</span><br><span class=\"line\">    2：SQLite MAX 函数</span><br><span class=\"line\">        SQLite MAX 聚合函数允许我们选择某列的最大值。</span><br><span class=\"line\">    3：SQLite MIN 函数</span><br><span class=\"line\">        SQLite MIN 聚合函数允许我们选择某列的最小值。</span><br><span class=\"line\">    4：SQLite AVG 函数</span><br><span class=\"line\">        SQLite AVG 聚合函数计算某列的平均值。</span><br><span class=\"line\">    5：SQLite SUM 函数</span><br><span class=\"line\">        SQLite SUM 聚合函数允许为一个数值列计算总和。</span><br><span class=\"line\">    6：SQLite RANDOM 函数</span><br><span class=\"line\">        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。</span><br><span class=\"line\">    7：SQLite ABS 函数</span><br><span class=\"line\">        SQLite ABS 函数返回数值参数的绝对值。</span><br><span class=\"line\">    8：SQLite UPPER 函数</span><br><span class=\"line\">        SQLite UPPER 函数把字符串转换为大写字母。</span><br><span class=\"line\">    9：SQLite LOWER 函数</span><br><span class=\"line\">        SQLite LOWER 函数把字符串转换为小写字母。</span><br><span class=\"line\">    10：SQLite LENGTH 函数</span><br><span class=\"line\">        SQLite LENGTH 函数返回字符串的长度。</span><br><span class=\"line\">    11：SQLite sqlite_version 函数</span><br><span class=\"line\">        SQLite sqlite_version 函数返回 SQLite 库的版本。</span><br><span class=\"line\">            </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mysql常用操作\"><a href=\"#Mysql常用操作\" class=\"headerlink\" title=\"Mysql常用操作\"></a>Mysql常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql数据类型</span><br><span class=\"line\">    | 类型 | 描述 |</span><br><span class=\"line\">    | int/integer | int同integer |</span><br><span class=\"line\">    | char | 定长字符串 |</span><br><span class=\"line\">    | varchar | 变长字符串 |</span><br><span class=\"line\">    | text | 长文本 |</span><br><span class=\"line\"></span><br><span class=\"line\">创建表（可放not null和default）</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table `user` (</span><br><span class=\"line\">     `id` int auto_increment,</span><br><span class=\"line\">     `name` varchar(32),</span><br><span class=\"line\">     `age` int,</span><br><span class=\"line\">     primary key (`id`)</span><br><span class=\"line\">    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">连接mysql，并修改密码</span><br><span class=\"line\">    mysql -u root -p</span><br><span class=\"line\">    set password for &#x27;root&#x27;@&#x27;localhost&#x27; = password(&#x27;newpass&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">创建删除数据库</span><br><span class=\"line\">    drop database `jfinal`;</span><br><span class=\"line\">    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">修改root密码</span><br><span class=\"line\">    use mysql;</span><br><span class=\"line\">    update user set password=password(&#x27;new password&#x27;) where user=&#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">创建远程用户（删除、创建、授权）</span><br><span class=\"line\">    drop user &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">    create user &#x27;jmm&#x27;@&#x27;%&#x27; identified by &#x27;jmm&#x27;;</span><br><span class=\"line\">    grant all on *.* to &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">查看用户</span><br><span class=\"line\">    select Host,User from mysql.user;</span><br><span class=\"line\"></span><br><span class=\"line\">查看 设置 字符集</span><br><span class=\"line\">    show VARIABLES like &#x27;character%&#x27;;</span><br><span class=\"line\">    set character_set_client=utf8;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqlite常用操作\"><a href=\"#sqlite常用操作\" class=\"headerlink\" title=\"sqlite常用操作\"></a>sqlite常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建表</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table if no exists `user` (</span><br><span class=\"line\">     id integer primary key,    -- integer primary key即为自增</span><br><span class=\"line\">     name varchar(32),</span><br><span class=\"line\">     age integer</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">查表信息</span><br><span class=\"line\">    select name from sqlite_master;</span><br><span class=\"line\"></span><br><span class=\"line\">查询出某个表的所有字段信息</span><br><span class=\"line\">    PRAGMA table_info([tablename]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql  操作</span><br><span class=\"line\"></span><br><span class=\"line\">一.sql语句</span><br><span class=\"line\">  </span><br><span class=\"line\">\t增\tinsert into user (id,name,sex) values (1,&#x27;王明&#x27;,1)</span><br><span class=\"line\">\t删\tdelete from user where id = 1</span><br><span class=\"line\">\t改\tupdate user set name=&#x27;张&#x27;,sex=1 where id = 1</span><br><span class=\"line\">\t查\tselect * from user where name like %&#x27;张&#x27;% limit 0,10</span><br><span class=\"line\"></span><br><span class=\"line\">二.JDBC操作</span><br><span class=\"line\">      </span><br><span class=\"line\">\t================================数据库操作，五步==========================</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//1.加载驱动</span><br><span class=\"line\">\tClass.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t//2.连接数据库</span><br><span class=\"line\">\tConnection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/数据库名?useUnicode=true&amp;characterEncoding=utf-8&quot;,&quot;用户&quot;,&quot;密码&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t//3.使用Connection创建语句</span><br><span class=\"line\">\tString sql = &quot;select * from user&quot;;</span><br><span class=\"line\">\tPreparedStatement pst = connection.prepareStatement(sql);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//4.执行</span><br><span class=\"line\">\tResultSet rs = pst.executeQuery();//查询</span><br><span class=\"line\">\tResultSet rs = pst.executeUpdate();//增删改</span><br><span class=\"line\"></span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\twhile(rs.next())&#123;</span><br><span class=\"line\">\t\tint id = rs.getInt(&quot;id&quot;);</span><br><span class=\"line\">\t\tString name = rs.getString(&quot;name&quot;);</span><br><span class=\"line\">\t\tString pwd = rs.getString(&quot;pwd&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//5.关闭数据，从下到上</span><br><span class=\"line\">\trs.close();</span><br><span class=\"line\">\tpst.close();</span><br><span class=\"line\">\tconnection.close();</span><br><span class=\"line\"></span><br><span class=\"line\">\t======================================结束=======================================</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">三.读取配置文件信息（database.properties）（单例模式）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//读取配置文件的工具类-单例模式</span><br><span class=\"line\"></span><br><span class=\"line\">public class ConfigManager &#123;</span><br><span class=\"line\">\tprivate static ConfigManager configManager;</span><br><span class=\"line\">\tprivate static Properties properties;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//私有构造器</span><br><span class=\"line\">\tprivate ConfigManager()&#123;</span><br><span class=\"line\">\t\tString configFile = &quot;database.properties&quot;;</span><br><span class=\"line\">\t\tproperties = new Properties();</span><br><span class=\"line\">\t\t//通过classpath找资源</span><br><span class=\"line\">\t\tInputStream is = ConfigManager.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tproperties.load(is);</span><br><span class=\"line\">\t\t\tis.close();</span><br><span class=\"line\">\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t// TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 线程不安全，在并发的情况下，很有可能会出现多个ConfigManager实例</span><br><span class=\"line\">\t * 考虑同步,可以采用synchronized</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * */</span><br><span class=\"line\">\t//全局访问点</span><br><span class=\"line\">\tpublic static synchronized ConfigManager getInstance()&#123;</span><br><span class=\"line\">\t\tif(configManager == null)&#123;</span><br><span class=\"line\">\t\t\tconfigManager = new ConfigManager();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn configManager;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic String getValue(String key)&#123;</span><br><span class=\"line\">\t\t return properties.getProperty(key);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//用key取出properties里面的value</span><br><span class=\"line\">\tString driver = ConfigManager.getInstance().getString(&quot;driver&quot;);</span><br><span class=\"line\">\tString url = ConfigManager.getInstance().getString(&quot;url&quot;);</span><br><span class=\"line\">\tString user = ConfigManager.getInstance().getString(&quot;user&quot;);</span><br><span class=\"line\">\tString pwd = ConfigManager.getInstance().getString(&quot;pwd&quot;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>DB常见操作</p>","more":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DDL：数据定义语言</span><br><span class=\"line\">DQL：数据查询语言</span><br><span class=\"line\">DML：数据操作语言</span><br><span class=\"line\">CREATE：创建一个新的表，一个表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">ALTER：修改数据库中的某个已有的数据库对象，比如一个表。</span><br><span class=\"line\">DROP：删除整个表，或者表的视图，或者数据库中的其他对象。</span><br><span class=\"line\">INSERT：创建一条记录。</span><br><span class=\"line\">UPDATE：修改记录。</span><br><span class=\"line\">DELETE：删除记录。</span><br><span class=\"line\">SELECT：从一个或多个表中检索某些记录。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算术运算符</span><br><span class=\"line\">    +：加法 - 把运算符两边的值相加\ta + b 将得到 30</span><br><span class=\"line\">    -：减法 - 左操作数减去右操作数\ta - b 将得到 -10</span><br><span class=\"line\">    *：乘法 - 把运算符两边的值相乘\ta * b 将得到 200</span><br><span class=\"line\">    /：除法 - 左操作数除以右操作数\tb / a 将得到 2</span><br><span class=\"line\">    %：取模 - 左操作数除以右操作数后得到的余数\tb % a will give 0</span><br><span class=\"line\"></span><br><span class=\"line\">比较运算符</span><br><span class=\"line\">    ==：检查两个操作数的值是否相等，如果相等则条件为真。\t(a == b) 不为真。</span><br><span class=\"line\">    =：检查两个操作数的值是否相等，如果相等则条件为真。\t(a = b) 不为真。</span><br><span class=\"line\">    !=：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a != b) 为真。</span><br><span class=\"line\">    &lt;&gt;：检查两个操作数的值是否相等，如果不相等则条件为真。\t(a &lt;&gt; b) 为真。</span><br><span class=\"line\">    &gt;：检查左操作数的值是否大于右操作数的值，如果是则条件为真。\t(a &gt; b) 不为真。</span><br><span class=\"line\">    &lt;：检查左操作数的值是否小于右操作数的值，如果是则条件为真。\t(a &lt; b) 为真。</span><br><span class=\"line\">    &gt;=：检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。\t(a &gt;= b) 不为真。</span><br><span class=\"line\">    &lt;=：检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。\t(a &lt;= b) 为真。</span><br><span class=\"line\">    !&lt;：检查左操作数的值是否不小于右操作数的值，如果是则条件为真。\t(a !&lt; b) 为假。</span><br><span class=\"line\">    !&gt;：检查左操作数的值是否不大于右操作数的值，如果是则条件为真。\t(a !&gt; b) 为真。</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符</span><br><span class=\"line\">    AND：运算符允许在一个 SQL 语句的 WHERE 子句中的多个条件的存在。</span><br><span class=\"line\">    BETWEEN：运算符用于在给定最小值和最大值范围内的一系列值中搜索值。</span><br><span class=\"line\">    EXISTS：运算符用于在满足一定条件的指定表中搜索行的存在。</span><br><span class=\"line\">    IN：运算符用于把某个值与一系列指定列表的值进行比较。</span><br><span class=\"line\">    NOT IN：运算符的对立面，用于把某个值与不在一系列指定列表的值进行比较。</span><br><span class=\"line\">    LIKE：运算符用于把某个值与使用通配符运算符的相似值进行比较。</span><br><span class=\"line\">    GLOB：运算符用于把某个值与使用通配符运算符的相似值进行比较。GLOB 与 LIKE 不同\t\t之处在于，它是大小写敏感的。</span><br><span class=\"line\">    NOT：运算符是所用的逻辑运算符的对立面。比如 NOT EXISTS、NOT BETWEEN、NOT IN，等等。它是否定运算符。</span><br><span class=\"line\">    OR：运算符用于结合一个 SQL 语句的 WHERE 子句中的多个条件。</span><br><span class=\"line\">    IS NULL：运算符用于把某个值与 NULL 值进行比较。</span><br><span class=\"line\">    IS：运算符与 = 相似。</span><br><span class=\"line\">    IS NOT：运算符与 != 相似。</span><br><span class=\"line\">    ||：连接两个不同的字符串，得到一个新的字符串。</span><br><span class=\"line\">    UNIQUE：运算符搜索指定表中的每一行，确保唯一性（无重复）。</span><br><span class=\"line\"></span><br><span class=\"line\">位运算符</span><br><span class=\"line\">    &amp;：如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。\t(A &amp; B) 将得到 \t\t12，即为 0000 1100</span><br><span class=\"line\">    |：如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。\t(A | B) 将得到 61，即\t为 0011 1101</span><br><span class=\"line\">    ~：二进制补码运算符是一元运算符，具有&quot;翻转&quot;位效应，即0变成1，1变成0。\t(~A ) 将得到 \t-61，即为 1100 0011，一个有符号二进制数的补码形式。</span><br><span class=\"line\">    &lt;&lt;：二进制左移运算符。左操作数的值向左移动右操作数指定的位数。\tA &lt;&lt; 2 将得到 240，即\t为 1111 0000</span><br><span class=\"line\">    &gt;&gt;：二进制右移运算符。左操作数的值向右移动右操作数指定的位数。\tA &gt;&gt; 2 将得到 15，即为 0000 1111</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行顺序：</span><br><span class=\"line\">    1.from</span><br><span class=\"line\">    2.join</span><br><span class=\"line\">    3.where</span><br><span class=\"line\">    4.group by</span><br><span class=\"line\">    5.order by</span><br><span class=\"line\"></span><br><span class=\"line\">增删改查</span><br><span class=\"line\">    insert into `user`(`field1`,`field2`) values(value1,value2);</span><br><span class=\"line\">    delete from `user` where 范围;</span><br><span class=\"line\">    update `user` set field1=value1 where 范围;</span><br><span class=\"line\">    select * from `user`;</span><br><span class=\"line\"></span><br><span class=\"line\">like子句</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx%&#x27;;</span><br><span class=\"line\">    select * from `user` where name like &#x27;xxx_&#x27;;</span><br><span class=\"line\">    通配符：百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">glob子句</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx*&#x27;;</span><br><span class=\"line\">    select * from `user` where name glob &#x27;xxx?&#x27;;</span><br><span class=\"line\">    通配符：星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。</span><br><span class=\"line\"></span><br><span class=\"line\">limit子句（从 offset 偏移量，截取 limit 条数）</span><br><span class=\"line\">    select * from `user` limit 10 offset 0;</span><br><span class=\"line\"></span><br><span class=\"line\">order by子句</span><br><span class=\"line\">    select * from `user` order by col1,col2 [ASC | DESC];</span><br><span class=\"line\"></span><br><span class=\"line\">group by子句</span><br><span class=\"line\">    select * from `user` group by col1,col2 having 条件;</span><br><span class=\"line\"></span><br><span class=\"line\">distinct（去除重复列，distinct后面的所有列）</span><br><span class=\"line\">    select distinct col1,col2,col3 from `user`;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级\"><a href=\"#高级\" class=\"headerlink\" title=\"高级\"></a>高级</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束：</span><br><span class=\"line\">    not null 约束：确保某列不能有 NULL 值。</span><br><span class=\"line\">    default 约束：当某列没有指定值时，为该列提供默认值。</span><br><span class=\"line\">    unique 约束：确保某列中的所有值是不同的。</span><br><span class=\"line\">    primary key 约束：唯一标识数据库表中的各行/记录。</span><br><span class=\"line\">    check 约束：CHECK 约束确保某列中的所有值满足一定条件。</span><br><span class=\"line\">    age ingeter check(age &gt; 0),</span><br><span class=\"line\"></span><br><span class=\"line\">连接：</span><br><span class=\"line\">    交叉连接 - CROSS JOIN（结果乘积）</span><br><span class=\"line\">    内连接 - INNER JOIN（结果交集）</span><br><span class=\"line\">    外连接 - OUTER JOIN（left、right）（on只对关联条件起作用）</span><br><span class=\"line\">        select * from t1 a</span><br><span class=\"line\">        left join t2 b on a.id = b.user_id</span><br><span class=\"line\"></span><br><span class=\"line\">union：（union连接两个结果集，union all包括重复列）</span><br><span class=\"line\">    select * from user1</span><br><span class=\"line\">    union</span><br><span class=\"line\">    select * from user2</span><br><span class=\"line\"></span><br><span class=\"line\">别名：</span><br><span class=\"line\">    select a as name from user as A</span><br><span class=\"line\">    select a name from user A</span><br><span class=\"line\"></span><br><span class=\"line\">触发器：</span><br><span class=\"line\"></span><br><span class=\"line\">索引：</span><br><span class=\"line\">    create index index_name on table_name (column1, column2);</span><br><span class=\"line\">    drop index salary_index;</span><br><span class=\"line\">    select * from company indexed by salary_index WHERE salary &gt; 5000;</span><br><span class=\"line\"></span><br><span class=\"line\">视图：</span><br><span class=\"line\">    create view xxx_view as select * from `user`;</span><br><span class=\"line\">    drop view xxx_view;</span><br><span class=\"line\"></span><br><span class=\"line\">事务：</span><br><span class=\"line\">    BEGIN TRANSACTION：开始事务处理。</span><br><span class=\"line\">    COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。</span><br><span class=\"line\">    ROLLBACK：回滚所做的更改。</span><br><span class=\"line\">    事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。</span><br><span class=\"line\"></span><br><span class=\"line\">autoincrement：</span><br><span class=\"line\">    column1 integer autoincrement,</span><br><span class=\"line\"></span><br><span class=\"line\">集合判断：</span><br><span class=\"line\">    (case </span><br><span class=\"line\">    when A.status_flag=&#x27;0&#x27; then &#x27;退回&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;1&#x27; then &#x27;新增&#x27; </span><br><span class=\"line\">    when A.status_flag=&#x27;2&#x27; then &#x27;待复核&#x27; </span><br><span class=\"line\">    else &#x27;其他&#x27; </span><br><span class=\"line\">    end</span><br><span class=\"line\">    ) status_name</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">    1：SQLite COUNT 函数</span><br><span class=\"line\">        SQLite COUNT 聚集函数是用来计算一个数据库表中的行数。</span><br><span class=\"line\">    2：SQLite MAX 函数</span><br><span class=\"line\">        SQLite MAX 聚合函数允许我们选择某列的最大值。</span><br><span class=\"line\">    3：SQLite MIN 函数</span><br><span class=\"line\">        SQLite MIN 聚合函数允许我们选择某列的最小值。</span><br><span class=\"line\">    4：SQLite AVG 函数</span><br><span class=\"line\">        SQLite AVG 聚合函数计算某列的平均值。</span><br><span class=\"line\">    5：SQLite SUM 函数</span><br><span class=\"line\">        SQLite SUM 聚合函数允许为一个数值列计算总和。</span><br><span class=\"line\">    6：SQLite RANDOM 函数</span><br><span class=\"line\">        SQLite RANDOM 函数返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的伪随机整数。</span><br><span class=\"line\">    7：SQLite ABS 函数</span><br><span class=\"line\">        SQLite ABS 函数返回数值参数的绝对值。</span><br><span class=\"line\">    8：SQLite UPPER 函数</span><br><span class=\"line\">        SQLite UPPER 函数把字符串转换为大写字母。</span><br><span class=\"line\">    9：SQLite LOWER 函数</span><br><span class=\"line\">        SQLite LOWER 函数把字符串转换为小写字母。</span><br><span class=\"line\">    10：SQLite LENGTH 函数</span><br><span class=\"line\">        SQLite LENGTH 函数返回字符串的长度。</span><br><span class=\"line\">    11：SQLite sqlite_version 函数</span><br><span class=\"line\">        SQLite sqlite_version 函数返回 SQLite 库的版本。</span><br><span class=\"line\">            </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mysql常用操作\"><a href=\"#Mysql常用操作\" class=\"headerlink\" title=\"Mysql常用操作\"></a>Mysql常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql数据类型</span><br><span class=\"line\">    | 类型 | 描述 |</span><br><span class=\"line\">    | int/integer | int同integer |</span><br><span class=\"line\">    | char | 定长字符串 |</span><br><span class=\"line\">    | varchar | 变长字符串 |</span><br><span class=\"line\">    | text | 长文本 |</span><br><span class=\"line\"></span><br><span class=\"line\">创建表（可放not null和default）</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table `user` (</span><br><span class=\"line\">     `id` int auto_increment,</span><br><span class=\"line\">     `name` varchar(32),</span><br><span class=\"line\">     `age` int,</span><br><span class=\"line\">     primary key (`id`)</span><br><span class=\"line\">    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">连接mysql，并修改密码</span><br><span class=\"line\">    mysql -u root -p</span><br><span class=\"line\">    set password for &#x27;root&#x27;@&#x27;localhost&#x27; = password(&#x27;newpass&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">创建删除数据库</span><br><span class=\"line\">    drop database `jfinal`;</span><br><span class=\"line\">    create database `jfinal` CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">修改root密码</span><br><span class=\"line\">    use mysql;</span><br><span class=\"line\">    update user set password=password(&#x27;new password&#x27;) where user=&#x27;root&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">创建远程用户（删除、创建、授权）</span><br><span class=\"line\">    drop user &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">    create user &#x27;jmm&#x27;@&#x27;%&#x27; identified by &#x27;jmm&#x27;;</span><br><span class=\"line\">    grant all on *.* to &#x27;jmm&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">查看用户</span><br><span class=\"line\">    select Host,User from mysql.user;</span><br><span class=\"line\"></span><br><span class=\"line\">查看 设置 字符集</span><br><span class=\"line\">    show VARIABLES like &#x27;character%&#x27;;</span><br><span class=\"line\">    set character_set_client=utf8;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sqlite常用操作\"><a href=\"#sqlite常用操作\" class=\"headerlink\" title=\"sqlite常用操作\"></a>sqlite常用操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建表</span><br><span class=\"line\">    drop table if exists `user`;</span><br><span class=\"line\">    create table if no exists `user` (</span><br><span class=\"line\">     id integer primary key,    -- integer primary key即为自增</span><br><span class=\"line\">     name varchar(32),</span><br><span class=\"line\">     age integer</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">查表信息</span><br><span class=\"line\">    select name from sqlite_master;</span><br><span class=\"line\"></span><br><span class=\"line\">查询出某个表的所有字段信息</span><br><span class=\"line\">    PRAGMA table_info([tablename]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sql  操作</span><br><span class=\"line\"></span><br><span class=\"line\">一.sql语句</span><br><span class=\"line\">  </span><br><span class=\"line\">\t增\tinsert into user (id,name,sex) values (1,&#x27;王明&#x27;,1)</span><br><span class=\"line\">\t删\tdelete from user where id = 1</span><br><span class=\"line\">\t改\tupdate user set name=&#x27;张&#x27;,sex=1 where id = 1</span><br><span class=\"line\">\t查\tselect * from user where name like %&#x27;张&#x27;% limit 0,10</span><br><span class=\"line\"></span><br><span class=\"line\">二.JDBC操作</span><br><span class=\"line\">      </span><br><span class=\"line\">\t================================数据库操作，五步==========================</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//1.加载驱动</span><br><span class=\"line\">\tClass.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t//2.连接数据库</span><br><span class=\"line\">\tConnection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/数据库名?useUnicode=true&amp;characterEncoding=utf-8&quot;,&quot;用户&quot;,&quot;密码&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t//3.使用Connection创建语句</span><br><span class=\"line\">\tString sql = &quot;select * from user&quot;;</span><br><span class=\"line\">\tPreparedStatement pst = connection.prepareStatement(sql);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//4.执行</span><br><span class=\"line\">\tResultSet rs = pst.executeQuery();//查询</span><br><span class=\"line\">\tResultSet rs = pst.executeUpdate();//增删改</span><br><span class=\"line\"></span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\twhile(rs.next())&#123;</span><br><span class=\"line\">\t\tint id = rs.getInt(&quot;id&quot;);</span><br><span class=\"line\">\t\tString name = rs.getString(&quot;name&quot;);</span><br><span class=\"line\">\t\tString pwd = rs.getString(&quot;pwd&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//5.关闭数据，从下到上</span><br><span class=\"line\">\trs.close();</span><br><span class=\"line\">\tpst.close();</span><br><span class=\"line\">\tconnection.close();</span><br><span class=\"line\"></span><br><span class=\"line\">\t======================================结束=======================================</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">三.读取配置文件信息（database.properties）（单例模式）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//读取配置文件的工具类-单例模式</span><br><span class=\"line\"></span><br><span class=\"line\">public class ConfigManager &#123;</span><br><span class=\"line\">\tprivate static ConfigManager configManager;</span><br><span class=\"line\">\tprivate static Properties properties;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//私有构造器</span><br><span class=\"line\">\tprivate ConfigManager()&#123;</span><br><span class=\"line\">\t\tString configFile = &quot;database.properties&quot;;</span><br><span class=\"line\">\t\tproperties = new Properties();</span><br><span class=\"line\">\t\t//通过classpath找资源</span><br><span class=\"line\">\t\tInputStream is = ConfigManager.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class=\"line\">\t\ttry &#123;</span><br><span class=\"line\">\t\t\tproperties.load(is);</span><br><span class=\"line\">\t\t\tis.close();</span><br><span class=\"line\">\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t// TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * 线程不安全，在并发的情况下，很有可能会出现多个ConfigManager实例</span><br><span class=\"line\">\t * 考虑同步,可以采用synchronized</span><br><span class=\"line\">\t * </span><br><span class=\"line\">\t * */</span><br><span class=\"line\">\t//全局访问点</span><br><span class=\"line\">\tpublic static synchronized ConfigManager getInstance()&#123;</span><br><span class=\"line\">\t\tif(configManager == null)&#123;</span><br><span class=\"line\">\t\t\tconfigManager = new ConfigManager();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn configManager;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tpublic String getValue(String key)&#123;</span><br><span class=\"line\">\t\t return properties.getProperty(key);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t//用key取出properties里面的value</span><br><span class=\"line\">\tString driver = ConfigManager.getInstance().getString(&quot;driver&quot;);</span><br><span class=\"line\">\tString url = ConfigManager.getInstance().getString(&quot;url&quot;);</span><br><span class=\"line\">\tString user = ConfigManager.getInstance().getString(&quot;user&quot;);</span><br><span class=\"line\">\tString pwd = ConfigManager.getInstance().getString(&quot;pwd&quot;);</span><br></pre></td></tr></table></figure>"},{"title":"常见环境问题及解决方案","date":"2015-10-22T16:00:00.000Z","_content":"\n常见环境问题及解决方案\n\n<!--more-->\n\n## 二级路由器设置\n\n```\n1.动态获取\n    一级lan连二级wan\n    二级wan改为动态获取\n    二级lan改为192.168.2.1\n2.做交换机\n    一级lan连二级lan\n    二级lan改为192.168.1.2\n    二级关闭dhcp服务\n3.设置WDS无线桥接\n    二级路由器设置WDS无线桥接\n    连接一级路由器无线网络\n```\n\n## Wifi信道\n\n```\n802.11 （1997年发布）\n802.11b （1999年发布）\n802.11b （1999年发布）\n802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps\n802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps\n802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps\n802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps\n```\n\n## Raid\n\n```\nraid 0：错开存储，容量不变，速度*2\nraid 1：备份存储，容量/2，速度不变\nraid 5：相互校验存储，容量n-1，速度*(n-1)\n```\n\n## row和raw\n\n```\nrow指的是硬盘\nraw指的是内存\n```\n\n## 计算机网络接口初始化\n\n```\nipconfig/registerdns\nnetsh winsock reset\n```\n\n## github网络过慢问题\n\n```\n查询dns\n    https://tool.chinaz.com/dns\n修改hosts文件地址\n    C:\\Windows\\System32\\drivers\\etc\\hosts\n    20.205.243.166 github.com\n重启dns\n    ipconfig/flushdns\n```","source":"_posts/2015-10-23常见环境问题及解决方案.md","raw":"---\ntitle: 常见环境问题及解决方案\ndate: 2015-10-23\ntags: [环境]\n---\n\n常见环境问题及解决方案\n\n<!--more-->\n\n## 二级路由器设置\n\n```\n1.动态获取\n    一级lan连二级wan\n    二级wan改为动态获取\n    二级lan改为192.168.2.1\n2.做交换机\n    一级lan连二级lan\n    二级lan改为192.168.1.2\n    二级关闭dhcp服务\n3.设置WDS无线桥接\n    二级路由器设置WDS无线桥接\n    连接一级路由器无线网络\n```\n\n## Wifi信道\n\n```\n802.11 （1997年发布）\n802.11b （1999年发布）\n802.11b （1999年发布）\n802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps\n802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps\n802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps\n802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps\n```\n\n## Raid\n\n```\nraid 0：错开存储，容量不变，速度*2\nraid 1：备份存储，容量/2，速度不变\nraid 5：相互校验存储，容量n-1，速度*(n-1)\n```\n\n## row和raw\n\n```\nrow指的是硬盘\nraw指的是内存\n```\n\n## 计算机网络接口初始化\n\n```\nipconfig/registerdns\nnetsh winsock reset\n```\n\n## github网络过慢问题\n\n```\n查询dns\n    https://tool.chinaz.com/dns\n修改hosts文件地址\n    C:\\Windows\\System32\\drivers\\etc\\hosts\n    20.205.243.166 github.com\n重启dns\n    ipconfig/flushdns\n```","slug":"2015-10-23常见环境问题及解决方案","published":1,"updated":"2022-06-28T15:06:58.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooeo0001nkvvfrw7hl6u","content":"<p>常见环境问题及解决方案</p>\n<span id=\"more\"></span>\n\n<h2 id=\"二级路由器设置\"><a href=\"#二级路由器设置\" class=\"headerlink\" title=\"二级路由器设置\"></a>二级路由器设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.动态获取</span><br><span class=\"line\">    一级lan连二级wan</span><br><span class=\"line\">    二级wan改为动态获取</span><br><span class=\"line\">    二级lan改为192.168.2.1</span><br><span class=\"line\">2.做交换机</span><br><span class=\"line\">    一级lan连二级lan</span><br><span class=\"line\">    二级lan改为192.168.1.2</span><br><span class=\"line\">    二级关闭dhcp服务</span><br><span class=\"line\">3.设置WDS无线桥接</span><br><span class=\"line\">    二级路由器设置WDS无线桥接</span><br><span class=\"line\">    连接一级路由器无线网络</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Wifi信道\"><a href=\"#Wifi信道\" class=\"headerlink\" title=\"Wifi信道\"></a>Wifi信道</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">802.11 （1997年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps</span><br><span class=\"line\">802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps</span><br><span class=\"line\">802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps</span><br><span class=\"line\">802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Raid\"><a href=\"#Raid\" class=\"headerlink\" title=\"Raid\"></a>Raid</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raid 0：错开存储，容量不变，速度*2</span><br><span class=\"line\">raid 1：备份存储，容量/2，速度不变</span><br><span class=\"line\">raid 5：相互校验存储，容量n-1，速度*(n-1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"row和raw\"><a href=\"#row和raw\" class=\"headerlink\" title=\"row和raw\"></a>row和raw</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row指的是硬盘</span><br><span class=\"line\">raw指的是内存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"计算机网络接口初始化\"><a href=\"#计算机网络接口初始化\" class=\"headerlink\" title=\"计算机网络接口初始化\"></a>计算机网络接口初始化</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig/registerdns</span><br><span class=\"line\">netsh winsock reset</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github网络过慢问题\"><a href=\"#github网络过慢问题\" class=\"headerlink\" title=\"github网络过慢问题\"></a>github网络过慢问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查询dns</span><br><span class=\"line\">    https://tool.chinaz.com/dns</span><br><span class=\"line\">修改hosts文件地址</span><br><span class=\"line\">    C:\\Windows\\System32\\drivers\\etc\\hosts</span><br><span class=\"line\">    20.205.243.166 github.com</span><br><span class=\"line\">重启dns</span><br><span class=\"line\">    ipconfig/flushdns</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>常见环境问题及解决方案</p>","more":"<h2 id=\"二级路由器设置\"><a href=\"#二级路由器设置\" class=\"headerlink\" title=\"二级路由器设置\"></a>二级路由器设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.动态获取</span><br><span class=\"line\">    一级lan连二级wan</span><br><span class=\"line\">    二级wan改为动态获取</span><br><span class=\"line\">    二级lan改为192.168.2.1</span><br><span class=\"line\">2.做交换机</span><br><span class=\"line\">    一级lan连二级lan</span><br><span class=\"line\">    二级lan改为192.168.1.2</span><br><span class=\"line\">    二级关闭dhcp服务</span><br><span class=\"line\">3.设置WDS无线桥接</span><br><span class=\"line\">    二级路由器设置WDS无线桥接</span><br><span class=\"line\">    连接一级路由器无线网络</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Wifi信道\"><a href=\"#Wifi信道\" class=\"headerlink\" title=\"Wifi信道\"></a>Wifi信道</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">802.11 （1997年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11b （1999年发布）</span><br><span class=\"line\">802.11g （2003年发布） ，又叫 Wi-Fi 3，理论最大传输速率达54Mbps</span><br><span class=\"line\">802.11n （2009年发布） ，又叫 Wi-Fi 4，理论最大传输速率为600 Mbps</span><br><span class=\"line\">802.11ac （2014年发布），又叫 Wi-Fi 5，理论最大传输速率为6.9G bps</span><br><span class=\"line\">802.11ax （2019年发布），又叫 Wi-Fi 6，理论最大传输速率为9.6G bps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Raid\"><a href=\"#Raid\" class=\"headerlink\" title=\"Raid\"></a>Raid</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raid 0：错开存储，容量不变，速度*2</span><br><span class=\"line\">raid 1：备份存储，容量/2，速度不变</span><br><span class=\"line\">raid 5：相互校验存储，容量n-1，速度*(n-1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"row和raw\"><a href=\"#row和raw\" class=\"headerlink\" title=\"row和raw\"></a>row和raw</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">row指的是硬盘</span><br><span class=\"line\">raw指的是内存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"计算机网络接口初始化\"><a href=\"#计算机网络接口初始化\" class=\"headerlink\" title=\"计算机网络接口初始化\"></a>计算机网络接口初始化</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig/registerdns</span><br><span class=\"line\">netsh winsock reset</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github网络过慢问题\"><a href=\"#github网络过慢问题\" class=\"headerlink\" title=\"github网络过慢问题\"></a>github网络过慢问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查询dns</span><br><span class=\"line\">    https://tool.chinaz.com/dns</span><br><span class=\"line\">修改hosts文件地址</span><br><span class=\"line\">    C:\\Windows\\System32\\drivers\\etc\\hosts</span><br><span class=\"line\">    20.205.243.166 github.com</span><br><span class=\"line\">重启dns</span><br><span class=\"line\">    ipconfig/flushdns</span><br></pre></td></tr></table></figure>"},{"title":"HTML基础","date":"2015-05-04T16:00:00.000Z","_content":"\nHTML基础\n\n<!--more-->\n\n```\n/* --------------------------------------html--------------------------------------- */\nDTD：\nhtml 4.01：三种（严格的、普通的、框架的）\nXHTML1.0：三种\n\n例：<!DOCTYPE html PUBLIC \n\"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\nmeta：\n元配置：项目的基本配置\n注：文件编码和解释编码要一致\n\n例：<meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"/>\n\n例（关键字）：<meta name=\"Keywords\" content=\"xx,cc,xx\"/>\n例（页面描述）：<meta name=\"Description\" content=\"This is a description\"/>\n\n标签类型：\nhtml分类：\n容器级：\n* div、ul、dl、ol、h\n* 里面可以放置任何东西\n文本级：\n* a、img、form、span、p\n* 里面只能放置文字、图片、表单元素（这些都属于文字）\n\n\ncss分类：\n块级元素（所有的容器级，加上p）：\n* div、ul、dl、ol、h、p\n* 霸占一行，不能与其他任何元素并列\n* 能接受宽、高\n* 如果不设置宽度，那么宽度就是父亲的100%\n* 转为行内元素：display:inline;\n行内元素（所有文本级，除了p）：\n* a、img、form、span\n* 有空白折叠现象\n* 与其他行内元素并排\n* 不能设置宽、高\n* 转为块级元素：display:block;\n\n\n\n图片：\n例：<img src=\"1.jpg\" alt=\"\"/>\n\nsrc：图片地址\nalt：替代文本（图片无法显示的时候）\n\n超链接：\n例：<a href=\"https://www.baidu.com\" title=\"悬停文本\" target=\"_blank\">百度</a>\n\ntarget：是否在新窗口打开（_blank在新窗口打开）\n\n注：可作为锚点\n<a href=\"#xxx\"></a>\n<a name=\"xxx\" id=\"xxx\"></a>\n地址可写为：file:///C:/WebApplication1/index.html#xxx\n\n注：超链接伪类\n/* 访问之前 */\na:link {\n    color:red;\n}\n/* 访问之后 */\na:visited {\n    color:orange;\n}\n/* 鼠标悬停 */\na:hover {\n    color:blue;\n}\n/* 点击的时候 */\na:active {\n    color:green;\n}\n\n无序列表：\n<ul>\n<li>1</li>\n<li>2</li>\n</ul>\n\n有序列表：\n<ol>\n<li>1</li>\n<li>2</li>\n</ol>\n\n定义列表：\n<dl>\n<dt>南京</dt>\n<dd>六朝古都</dd>\n</dl>\n\n表单：\n<form>\n    <p>\n        姓名：<input type=\"text\" value=\"sdf\"/>\n    </p>\n    <p>\n        密码：<input type=\"password\"/>\n    </p>\n    <p>\n        性别：<input type=\"radio\" name=\"sex\" id=\"nan\" checked=\"checked\"/><label for=\"nan\">男</label>\n        <input type=\"radio\" name=\"sex\" id=\"nv\"/><label for=\"nv\">女</label>\n    </p>\n    <p>\n        爱好：<input type=\"checkbox\" name=\"hobby\"/>篮球\n        <input type=\"checkbox\" name=\"hobby\"/>足球\n    </p>\n    <p>\n        爱好：<input type=\"checkbox\" name=\"hobby\"/>篮球\n        <input type=\"checkbox\" name=\"hobby\"/>足球\n    </p>\n    <p>\n        下拉列表：<select>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n        </select>\n    </p>\n    <p>\n        文本域：<textarea cols=\"30\" rows=\"10\"></textarea>\n    </p>\n    \n    <p>\n        普通按钮：<input type=\"button\" value=\"普通按钮\"/>\n    </p>\n    <p>\n        提交按钮：<input type=\"submit\" value=\"提交按钮\"/>\n    </p>\n    <p>\n        重置按钮：<input type=\"reset\" value=\"重置按钮\"/>\n    </p>\n</form>\n\n废弃的标签：\n* font\t字体\n* b\t\t加粗（这些标签作为css钩子使用）\n* u\t\t下划线\n* i\t\t倾斜\n* del\t\t删除线\n* em\t\t强调\n* strong\t强调\n* hr\t\t水平线\n* br\t\t换行\n\n\n/* --------------------------------------css--------------------------------------- */\n<style type=\"text/css\"></style>\n常用的属性：\ncolor\t\t\t颜色\nfont-size\t\t\t字体大小\nfont-weight\t\t字体加粗\nnormal\t正常\nbold\t\t加粗\nfont-stype\t\t字体\nnormal\t正常\nitalic\t\t斜体\nfont-family\n\"consols\",\"Arial\",\"Times New Roman\"\n\"宋体\",\"微软雅黑\"\ntext-decoration\t字体描述\nnone\t无下划线\nunderline\t下划线\n\n\nbackground-color\t背景色\nbackground-image（:url(xxx.jpg);）\nbackground-repeat（是否重复，no-repeat、repeat-x、repeat-y）\nbackground-position（center top）（水平居中，顶部对其）\nbackground-attachment（fix固定）\n综合就是：\nfont:14px/24px \"宋体\";\nbackground:red url(xxx.jpg) no-repeat center center fix;\n\n\nbox-shadow: 0 0 8px #898580;（阴影，x偏移、y偏移、阴影大小、颜色）\n\n\n选择器（类上样式，id上行为）：\n* 标签选择器：直接写标签\n* id选择器：#id\n* 类选择器：.class（多个类用空格隔开，为了复用）\n* 交集选择器：div.class（表示两个交集，一般以标签开头，类跟后）\n* 并集选择器：div,li（表示两个并集，逗号链接）\n* 后代选择器：.class .li p（后代用空格隔开，某个东西下面的公共东西）\n\ncss继承性：\ncolor、text-开头、line-开头、font-开头的都可以被继承\ncss层叠性：\n分别比较id选择器、类选择器、标签选择器数量\nid选择器 > 类选择器 > 标签选择器\n如果权重一样，谁写在后面听谁的\n注：提高权重 font-size:60px !important;\n\n\n盒子模型（盒子的真实宽度是 width + 2 * padding + 2 * border）：\nwidth\nheight\npadding（上、右、下、左）\nmargin（margin:0 auto;盒子就居中了，本质是上下0，左右auto）\nborder（1px dashed red（solid：实线；dashed：虚线；））\n\n注：\n1.使用margin:0 auto;，必须有width\n2.只有标准流的盒子，才可以使用margin:0 auto;\n3.margin:0 auto;是盒子居中，文本居中是text-align:center;，再设置行高为\n注：标准流中，margin top和bottom有塌陷现象，以比较大的为准\n\n块级元素和行内元素互转：\ndisplay:inline;（转为行内元素）\ndisplay:block;（转为块级元素）\n\n脱标的三种手段（脱离标准文档流）：\n1.浮动\n* float:left;\n* 父亲不会被浮动的儿子撑出高的\n* 有左边贴靠的\n* 浮动的周围有字围现象\n* 清除浮动的方法\n* 父亲增加高度（很多地方不用高度）\n* clear:both;（margin会失效）\n* 隔墙法：中间加div，clear:both;，用自身高度达到margin效果\n* 内墙法：在上面盒子里添加div，clear:both;，用自身高度达到margin\n* 父亲加上overflow:hidden;（内容溢出处理）\n2.绝对定位\n3.固定定位\n\n注：脱标了就不分块级和行内元素，就可以设置宽高\n\n\n/* --------------------------------------js--------------------------------------- */\n<script src=\"jmm.js\" type=\"text/javascript\"></script>\n\n常用方法：\nalert(999);\nprompt(\"请输入变量\");\t\t提示输入\nconsole.log(typeof \"hello\");\t控制台log\n\ndocument.write();\t\t文档打印输出\nwindow.onload = function xx() {}页面加载完才执行\n\n变量类型：\nnumber\nboolean\nstring\nnull\nundifined\n\n强转：parseInt（去小数，去字符）\n\n函数：\nfunction(a, b)\n{\n}\n注：返回值不需要写，a和b不需要写类型\n\n\n/* --------------------------------------jquery--------------------------------------- */\n常用方法：\n$(document).ready(function () {})\n$(function () {})\n$(this)\t\t\t返回或当前元素\n$(this).height()\t\t返回或设置整型\n$(this).css()\t\t返回或设置css样式\n$(\"li\").each(function(){});\t遍历标签\n\n\n选择器：\n基本选择器：\n* id选择器\n* 类选择器\n* 标签选择器\n* 通配符选择器（*）\n* 交集、并集选择器（逗号、不带）\n层级选择器：\n* 后代选择器（空格）\n* 子代选择器（>，表示所有儿子代）\n* 紧邻选择器（+，表示紧挨着的祥和元素）\n* 兄弟选择器（~，表示后面的所有兄弟）\n过滤选择器（基本过滤）：\n$(\"a:eq(index)\")\t选中下标为index的元素\n$(\"a:gt(index)\")\t下标大于index的元素\n$(\"a:lt(index)\")\t\t下标小于index的元素\n$(\"a:odd\")\t\t序号为奇数\n$(\"a:even\")\t\t序号为偶数\n$(\"a:first\")\t\t第一个元素\n$(\"a:last\")\t\t\t最后一个元素\n过滤选择器（属性过滤）：\n$(\"a[href]\")\t\t\t包含属性href的\n$(\"a[href='itcast']\")\t\t属性href为itcast的\n$(\"a[href!='baidu']\")\t\t属性href不为baidu的\n$(\"a[href^='web']\")\t\t属性href以web开头的\n$(\"a[href$='cn']\")\t\t属性href以cn结尾的\n$(\"a[href*='i']\")\t\t\t属性href包含i的\n$(\"a[href][title='我']\")\t过滤多个属性\n筛选选择器：\nparent()\t\t找到父标签\nchildren()\t\t孩子标签\nfirst()\t\t第一个元素\nlast()\t\t最后一个元素\nnext()\t\t后一元素\nprev()\t\t前一个元素\nfind()\t\t查找元素\neq(index)\t\t选择第index的元素\nsiblings()\t\t选择兄弟\n\ndom和jquery对象互转：\ndom转jquery：\nvar btn = document.getElementById(\"btn\");\n$(btn).click()\njquery转dom：\nvar btn = $(\"#btn\")[0].onclick = function(){}\n\n切换样式：\naddClass()\nremoveClass()\ntoggleClass()\nhasClass()\n\n节点操作：\nattr()\t设置或返回属性\nval()\t\t设置或返回值（特指表单中的值）\nhtml()\t设置或返回html（所有子标签以及内容）（*）\ntext()\t设置或返回纯文本（仅所有标签值）\n\n事件：\n.click()\t\t\t\t鼠标单击触发事件，参数可选（data，function）\n.hover(func1,func2)\t\t鼠标移入调用func1函数，移出调用func2函数\n.focus()/.blur()\t\t\t鼠标聚焦/失去焦点触发事件（不支持冒泡）\n.dblclick()\t\t\t\t双击触发，同上\n.mousedown()/up()\t\t鼠标按下/弹起触发事件\n.mousemove()\t\t\t鼠标移动事件\n.mouseover()/out()\t\t鼠标移入/移出触发事件\n.mouseenter()/leave()\t鼠标进入/离开触发事件*\n.focusin()\t\t\t\t鼠标聚焦到该元素时触发事件\n.focusout()\t\t\t鼠标失去焦点时触发事件\n.change()\t\t\t\t表单元素发生改变时触发事件\n.select()\t\t\t\t文本元素被选中时触发事件\n.submit()\t\t\t\t表单提交动作触发*\n.keydown()/up()\t\t键盘按键按下/弹起触发\n.on()\t\t\t\t\t多事件的绑定\n.off()\t\t\t\t\t移除事件的绑定\n.trigger(“event”)\t\t触发事件event调用\n.triggerHandler()\t\t触发事件，不会冒泡，不会触发默认事件\n\n```","source":"_posts/2015-5-5HTML基础.md","raw":"---\ntitle: HTML基础\ndate: 2015-5-5\ntags: [html]\n---\n\nHTML基础\n\n<!--more-->\n\n```\n/* --------------------------------------html--------------------------------------- */\nDTD：\nhtml 4.01：三种（严格的、普通的、框架的）\nXHTML1.0：三种\n\n例：<!DOCTYPE html PUBLIC \n\"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\nmeta：\n元配置：项目的基本配置\n注：文件编码和解释编码要一致\n\n例：<meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"/>\n\n例（关键字）：<meta name=\"Keywords\" content=\"xx,cc,xx\"/>\n例（页面描述）：<meta name=\"Description\" content=\"This is a description\"/>\n\n标签类型：\nhtml分类：\n容器级：\n* div、ul、dl、ol、h\n* 里面可以放置任何东西\n文本级：\n* a、img、form、span、p\n* 里面只能放置文字、图片、表单元素（这些都属于文字）\n\n\ncss分类：\n块级元素（所有的容器级，加上p）：\n* div、ul、dl、ol、h、p\n* 霸占一行，不能与其他任何元素并列\n* 能接受宽、高\n* 如果不设置宽度，那么宽度就是父亲的100%\n* 转为行内元素：display:inline;\n行内元素（所有文本级，除了p）：\n* a、img、form、span\n* 有空白折叠现象\n* 与其他行内元素并排\n* 不能设置宽、高\n* 转为块级元素：display:block;\n\n\n\n图片：\n例：<img src=\"1.jpg\" alt=\"\"/>\n\nsrc：图片地址\nalt：替代文本（图片无法显示的时候）\n\n超链接：\n例：<a href=\"https://www.baidu.com\" title=\"悬停文本\" target=\"_blank\">百度</a>\n\ntarget：是否在新窗口打开（_blank在新窗口打开）\n\n注：可作为锚点\n<a href=\"#xxx\"></a>\n<a name=\"xxx\" id=\"xxx\"></a>\n地址可写为：file:///C:/WebApplication1/index.html#xxx\n\n注：超链接伪类\n/* 访问之前 */\na:link {\n    color:red;\n}\n/* 访问之后 */\na:visited {\n    color:orange;\n}\n/* 鼠标悬停 */\na:hover {\n    color:blue;\n}\n/* 点击的时候 */\na:active {\n    color:green;\n}\n\n无序列表：\n<ul>\n<li>1</li>\n<li>2</li>\n</ul>\n\n有序列表：\n<ol>\n<li>1</li>\n<li>2</li>\n</ol>\n\n定义列表：\n<dl>\n<dt>南京</dt>\n<dd>六朝古都</dd>\n</dl>\n\n表单：\n<form>\n    <p>\n        姓名：<input type=\"text\" value=\"sdf\"/>\n    </p>\n    <p>\n        密码：<input type=\"password\"/>\n    </p>\n    <p>\n        性别：<input type=\"radio\" name=\"sex\" id=\"nan\" checked=\"checked\"/><label for=\"nan\">男</label>\n        <input type=\"radio\" name=\"sex\" id=\"nv\"/><label for=\"nv\">女</label>\n    </p>\n    <p>\n        爱好：<input type=\"checkbox\" name=\"hobby\"/>篮球\n        <input type=\"checkbox\" name=\"hobby\"/>足球\n    </p>\n    <p>\n        爱好：<input type=\"checkbox\" name=\"hobby\"/>篮球\n        <input type=\"checkbox\" name=\"hobby\"/>足球\n    </p>\n    <p>\n        下拉列表：<select>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n        </select>\n    </p>\n    <p>\n        文本域：<textarea cols=\"30\" rows=\"10\"></textarea>\n    </p>\n    \n    <p>\n        普通按钮：<input type=\"button\" value=\"普通按钮\"/>\n    </p>\n    <p>\n        提交按钮：<input type=\"submit\" value=\"提交按钮\"/>\n    </p>\n    <p>\n        重置按钮：<input type=\"reset\" value=\"重置按钮\"/>\n    </p>\n</form>\n\n废弃的标签：\n* font\t字体\n* b\t\t加粗（这些标签作为css钩子使用）\n* u\t\t下划线\n* i\t\t倾斜\n* del\t\t删除线\n* em\t\t强调\n* strong\t强调\n* hr\t\t水平线\n* br\t\t换行\n\n\n/* --------------------------------------css--------------------------------------- */\n<style type=\"text/css\"></style>\n常用的属性：\ncolor\t\t\t颜色\nfont-size\t\t\t字体大小\nfont-weight\t\t字体加粗\nnormal\t正常\nbold\t\t加粗\nfont-stype\t\t字体\nnormal\t正常\nitalic\t\t斜体\nfont-family\n\"consols\",\"Arial\",\"Times New Roman\"\n\"宋体\",\"微软雅黑\"\ntext-decoration\t字体描述\nnone\t无下划线\nunderline\t下划线\n\n\nbackground-color\t背景色\nbackground-image（:url(xxx.jpg);）\nbackground-repeat（是否重复，no-repeat、repeat-x、repeat-y）\nbackground-position（center top）（水平居中，顶部对其）\nbackground-attachment（fix固定）\n综合就是：\nfont:14px/24px \"宋体\";\nbackground:red url(xxx.jpg) no-repeat center center fix;\n\n\nbox-shadow: 0 0 8px #898580;（阴影，x偏移、y偏移、阴影大小、颜色）\n\n\n选择器（类上样式，id上行为）：\n* 标签选择器：直接写标签\n* id选择器：#id\n* 类选择器：.class（多个类用空格隔开，为了复用）\n* 交集选择器：div.class（表示两个交集，一般以标签开头，类跟后）\n* 并集选择器：div,li（表示两个并集，逗号链接）\n* 后代选择器：.class .li p（后代用空格隔开，某个东西下面的公共东西）\n\ncss继承性：\ncolor、text-开头、line-开头、font-开头的都可以被继承\ncss层叠性：\n分别比较id选择器、类选择器、标签选择器数量\nid选择器 > 类选择器 > 标签选择器\n如果权重一样，谁写在后面听谁的\n注：提高权重 font-size:60px !important;\n\n\n盒子模型（盒子的真实宽度是 width + 2 * padding + 2 * border）：\nwidth\nheight\npadding（上、右、下、左）\nmargin（margin:0 auto;盒子就居中了，本质是上下0，左右auto）\nborder（1px dashed red（solid：实线；dashed：虚线；））\n\n注：\n1.使用margin:0 auto;，必须有width\n2.只有标准流的盒子，才可以使用margin:0 auto;\n3.margin:0 auto;是盒子居中，文本居中是text-align:center;，再设置行高为\n注：标准流中，margin top和bottom有塌陷现象，以比较大的为准\n\n块级元素和行内元素互转：\ndisplay:inline;（转为行内元素）\ndisplay:block;（转为块级元素）\n\n脱标的三种手段（脱离标准文档流）：\n1.浮动\n* float:left;\n* 父亲不会被浮动的儿子撑出高的\n* 有左边贴靠的\n* 浮动的周围有字围现象\n* 清除浮动的方法\n* 父亲增加高度（很多地方不用高度）\n* clear:both;（margin会失效）\n* 隔墙法：中间加div，clear:both;，用自身高度达到margin效果\n* 内墙法：在上面盒子里添加div，clear:both;，用自身高度达到margin\n* 父亲加上overflow:hidden;（内容溢出处理）\n2.绝对定位\n3.固定定位\n\n注：脱标了就不分块级和行内元素，就可以设置宽高\n\n\n/* --------------------------------------js--------------------------------------- */\n<script src=\"jmm.js\" type=\"text/javascript\"></script>\n\n常用方法：\nalert(999);\nprompt(\"请输入变量\");\t\t提示输入\nconsole.log(typeof \"hello\");\t控制台log\n\ndocument.write();\t\t文档打印输出\nwindow.onload = function xx() {}页面加载完才执行\n\n变量类型：\nnumber\nboolean\nstring\nnull\nundifined\n\n强转：parseInt（去小数，去字符）\n\n函数：\nfunction(a, b)\n{\n}\n注：返回值不需要写，a和b不需要写类型\n\n\n/* --------------------------------------jquery--------------------------------------- */\n常用方法：\n$(document).ready(function () {})\n$(function () {})\n$(this)\t\t\t返回或当前元素\n$(this).height()\t\t返回或设置整型\n$(this).css()\t\t返回或设置css样式\n$(\"li\").each(function(){});\t遍历标签\n\n\n选择器：\n基本选择器：\n* id选择器\n* 类选择器\n* 标签选择器\n* 通配符选择器（*）\n* 交集、并集选择器（逗号、不带）\n层级选择器：\n* 后代选择器（空格）\n* 子代选择器（>，表示所有儿子代）\n* 紧邻选择器（+，表示紧挨着的祥和元素）\n* 兄弟选择器（~，表示后面的所有兄弟）\n过滤选择器（基本过滤）：\n$(\"a:eq(index)\")\t选中下标为index的元素\n$(\"a:gt(index)\")\t下标大于index的元素\n$(\"a:lt(index)\")\t\t下标小于index的元素\n$(\"a:odd\")\t\t序号为奇数\n$(\"a:even\")\t\t序号为偶数\n$(\"a:first\")\t\t第一个元素\n$(\"a:last\")\t\t\t最后一个元素\n过滤选择器（属性过滤）：\n$(\"a[href]\")\t\t\t包含属性href的\n$(\"a[href='itcast']\")\t\t属性href为itcast的\n$(\"a[href!='baidu']\")\t\t属性href不为baidu的\n$(\"a[href^='web']\")\t\t属性href以web开头的\n$(\"a[href$='cn']\")\t\t属性href以cn结尾的\n$(\"a[href*='i']\")\t\t\t属性href包含i的\n$(\"a[href][title='我']\")\t过滤多个属性\n筛选选择器：\nparent()\t\t找到父标签\nchildren()\t\t孩子标签\nfirst()\t\t第一个元素\nlast()\t\t最后一个元素\nnext()\t\t后一元素\nprev()\t\t前一个元素\nfind()\t\t查找元素\neq(index)\t\t选择第index的元素\nsiblings()\t\t选择兄弟\n\ndom和jquery对象互转：\ndom转jquery：\nvar btn = document.getElementById(\"btn\");\n$(btn).click()\njquery转dom：\nvar btn = $(\"#btn\")[0].onclick = function(){}\n\n切换样式：\naddClass()\nremoveClass()\ntoggleClass()\nhasClass()\n\n节点操作：\nattr()\t设置或返回属性\nval()\t\t设置或返回值（特指表单中的值）\nhtml()\t设置或返回html（所有子标签以及内容）（*）\ntext()\t设置或返回纯文本（仅所有标签值）\n\n事件：\n.click()\t\t\t\t鼠标单击触发事件，参数可选（data，function）\n.hover(func1,func2)\t\t鼠标移入调用func1函数，移出调用func2函数\n.focus()/.blur()\t\t\t鼠标聚焦/失去焦点触发事件（不支持冒泡）\n.dblclick()\t\t\t\t双击触发，同上\n.mousedown()/up()\t\t鼠标按下/弹起触发事件\n.mousemove()\t\t\t鼠标移动事件\n.mouseover()/out()\t\t鼠标移入/移出触发事件\n.mouseenter()/leave()\t鼠标进入/离开触发事件*\n.focusin()\t\t\t\t鼠标聚焦到该元素时触发事件\n.focusout()\t\t\t鼠标失去焦点时触发事件\n.change()\t\t\t\t表单元素发生改变时触发事件\n.select()\t\t\t\t文本元素被选中时触发事件\n.submit()\t\t\t\t表单提交动作触发*\n.keydown()/up()\t\t键盘按键按下/弹起触发\n.on()\t\t\t\t\t多事件的绑定\n.off()\t\t\t\t\t移除事件的绑定\n.trigger(“event”)\t\t触发事件event调用\n.triggerHandler()\t\t触发事件，不会冒泡，不会触发默认事件\n\n```","slug":"2015-5-5HTML基础","published":1,"updated":"2022-06-30T16:25:30.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooer0003nkvvbp4q47xs","content":"<p>HTML基础</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* --------------------------------------html--------------------------------------- */</span><br><span class=\"line\">DTD：</span><br><span class=\"line\">html 4.01：三种（严格的、普通的、框架的）</span><br><span class=\"line\">XHTML1.0：三种</span><br><span class=\"line\"></span><br><span class=\"line\">例：&lt;!DOCTYPE html PUBLIC </span><br><span class=\"line\">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; </span><br><span class=\"line\">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">meta：</span><br><span class=\"line\">元配置：项目的基本配置</span><br><span class=\"line\">注：文件编码和解释编码要一致</span><br><span class=\"line\"></span><br><span class=\"line\">例：&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=gb2312&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">例（关键字）：&lt;meta name=&quot;Keywords&quot; content=&quot;xx,cc,xx&quot;/&gt;</span><br><span class=\"line\">例（页面描述）：&lt;meta name=&quot;Description&quot; content=&quot;This is a description&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">标签类型：</span><br><span class=\"line\">html分类：</span><br><span class=\"line\">容器级：</span><br><span class=\"line\">* div、ul、dl、ol、h</span><br><span class=\"line\">* 里面可以放置任何东西</span><br><span class=\"line\">文本级：</span><br><span class=\"line\">* a、img、form、span、p</span><br><span class=\"line\">* 里面只能放置文字、图片、表单元素（这些都属于文字）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">css分类：</span><br><span class=\"line\">块级元素（所有的容器级，加上p）：</span><br><span class=\"line\">* div、ul、dl、ol、h、p</span><br><span class=\"line\">* 霸占一行，不能与其他任何元素并列</span><br><span class=\"line\">* 能接受宽、高</span><br><span class=\"line\">* 如果不设置宽度，那么宽度就是父亲的100%</span><br><span class=\"line\">* 转为行内元素：display:inline;</span><br><span class=\"line\">行内元素（所有文本级，除了p）：</span><br><span class=\"line\">* a、img、form、span</span><br><span class=\"line\">* 有空白折叠现象</span><br><span class=\"line\">* 与其他行内元素并排</span><br><span class=\"line\">* 不能设置宽、高</span><br><span class=\"line\">* 转为块级元素：display:block;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">图片：</span><br><span class=\"line\">例：&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">src：图片地址</span><br><span class=\"line\">alt：替代文本（图片无法显示的时候）</span><br><span class=\"line\"></span><br><span class=\"line\">超链接：</span><br><span class=\"line\">例：&lt;a href=&quot;https://www.baidu.com&quot; title=&quot;悬停文本&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">target：是否在新窗口打开（_blank在新窗口打开）</span><br><span class=\"line\"></span><br><span class=\"line\">注：可作为锚点</span><br><span class=\"line\">&lt;a href=&quot;#xxx&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">&lt;a name=&quot;xxx&quot; id=&quot;xxx&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">地址可写为：file:///C:/WebApplication1/index.html#xxx</span><br><span class=\"line\"></span><br><span class=\"line\">注：超链接伪类</span><br><span class=\"line\">/* 访问之前 */</span><br><span class=\"line\">a:link &#123;</span><br><span class=\"line\">    color:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 访问之后 */</span><br><span class=\"line\">a:visited &#123;</span><br><span class=\"line\">    color:orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 鼠标悬停 */</span><br><span class=\"line\">a:hover &#123;</span><br><span class=\"line\">    color:blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 点击的时候 */</span><br><span class=\"line\">a:active &#123;</span><br><span class=\"line\">    color:green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">无序列表：</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">&lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">有序列表：</span><br><span class=\"line\">&lt;ol&gt;</span><br><span class=\"line\">&lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">&lt;/ol&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">定义列表：</span><br><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">&lt;dt&gt;南京&lt;/dt&gt;</span><br><span class=\"line\">&lt;dd&gt;六朝古都&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">表单：</span><br><span class=\"line\">&lt;form&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        姓名：&lt;input type=&quot;text&quot; value=&quot;sdf&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        密码：&lt;input type=&quot;password&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;nan&quot; checked=&quot;checked&quot;/&gt;&lt;label for=&quot;nan&quot;&gt;男&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;nv&quot;/&gt;&lt;label for=&quot;nv&quot;&gt;女&lt;/label&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        爱好：&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;篮球</span><br><span class=\"line\">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;足球</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        爱好：&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;篮球</span><br><span class=\"line\">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;足球</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        下拉列表：&lt;select&gt;</span><br><span class=\"line\">            &lt;option&gt;1&lt;/option&gt;</span><br><span class=\"line\">            &lt;option&gt;2&lt;/option&gt;</span><br><span class=\"line\">            &lt;option&gt;3&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        文本域：&lt;textarea cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        普通按钮：&lt;input type=&quot;button&quot; value=&quot;普通按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        提交按钮：&lt;input type=&quot;submit&quot; value=&quot;提交按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        重置按钮：&lt;input type=&quot;reset&quot; value=&quot;重置按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">废弃的标签：</span><br><span class=\"line\">* font\t字体</span><br><span class=\"line\">* b\t\t加粗（这些标签作为css钩子使用）</span><br><span class=\"line\">* u\t\t下划线</span><br><span class=\"line\">* i\t\t倾斜</span><br><span class=\"line\">* del\t\t删除线</span><br><span class=\"line\">* em\t\t强调</span><br><span class=\"line\">* strong\t强调</span><br><span class=\"line\">* hr\t\t水平线</span><br><span class=\"line\">* br\t\t换行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------css--------------------------------------- */</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</span><br><span class=\"line\">常用的属性：</span><br><span class=\"line\">color\t\t\t颜色</span><br><span class=\"line\">font-size\t\t\t字体大小</span><br><span class=\"line\">font-weight\t\t字体加粗</span><br><span class=\"line\">normal\t正常</span><br><span class=\"line\">bold\t\t加粗</span><br><span class=\"line\">font-stype\t\t字体</span><br><span class=\"line\">normal\t正常</span><br><span class=\"line\">italic\t\t斜体</span><br><span class=\"line\">font-family</span><br><span class=\"line\">&quot;consols&quot;,&quot;Arial&quot;,&quot;Times New Roman&quot;</span><br><span class=\"line\">&quot;宋体&quot;,&quot;微软雅黑&quot;</span><br><span class=\"line\">text-decoration\t字体描述</span><br><span class=\"line\">none\t无下划线</span><br><span class=\"line\">underline\t下划线</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">background-color\t背景色</span><br><span class=\"line\">background-image（:url(xxx.jpg);）</span><br><span class=\"line\">background-repeat（是否重复，no-repeat、repeat-x、repeat-y）</span><br><span class=\"line\">background-position（center top）（水平居中，顶部对其）</span><br><span class=\"line\">background-attachment（fix固定）</span><br><span class=\"line\">综合就是：</span><br><span class=\"line\">font:14px/24px &quot;宋体&quot;;</span><br><span class=\"line\">background:red url(xxx.jpg) no-repeat center center fix;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">box-shadow: 0 0 8px #898580;（阴影，x偏移、y偏移、阴影大小、颜色）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">选择器（类上样式，id上行为）：</span><br><span class=\"line\">* 标签选择器：直接写标签</span><br><span class=\"line\">* id选择器：#id</span><br><span class=\"line\">* 类选择器：.class（多个类用空格隔开，为了复用）</span><br><span class=\"line\">* 交集选择器：div.class（表示两个交集，一般以标签开头，类跟后）</span><br><span class=\"line\">* 并集选择器：div,li（表示两个并集，逗号链接）</span><br><span class=\"line\">* 后代选择器：.class .li p（后代用空格隔开，某个东西下面的公共东西）</span><br><span class=\"line\"></span><br><span class=\"line\">css继承性：</span><br><span class=\"line\">color、text-开头、line-开头、font-开头的都可以被继承</span><br><span class=\"line\">css层叠性：</span><br><span class=\"line\">分别比较id选择器、类选择器、标签选择器数量</span><br><span class=\"line\">id选择器 &gt; 类选择器 &gt; 标签选择器</span><br><span class=\"line\">如果权重一样，谁写在后面听谁的</span><br><span class=\"line\">注：提高权重 font-size:60px !important;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">盒子模型（盒子的真实宽度是 width + 2 * padding + 2 * border）：</span><br><span class=\"line\">width</span><br><span class=\"line\">height</span><br><span class=\"line\">padding（上、右、下、左）</span><br><span class=\"line\">margin（margin:0 auto;盒子就居中了，本质是上下0，左右auto）</span><br><span class=\"line\">border（1px dashed red（solid：实线；dashed：虚线；））</span><br><span class=\"line\"></span><br><span class=\"line\">注：</span><br><span class=\"line\">1.使用margin:0 auto;，必须有width</span><br><span class=\"line\">2.只有标准流的盒子，才可以使用margin:0 auto;</span><br><span class=\"line\">3.margin:0 auto;是盒子居中，文本居中是text-align:center;，再设置行高为</span><br><span class=\"line\">注：标准流中，margin top和bottom有塌陷现象，以比较大的为准</span><br><span class=\"line\"></span><br><span class=\"line\">块级元素和行内元素互转：</span><br><span class=\"line\">display:inline;（转为行内元素）</span><br><span class=\"line\">display:block;（转为块级元素）</span><br><span class=\"line\"></span><br><span class=\"line\">脱标的三种手段（脱离标准文档流）：</span><br><span class=\"line\">1.浮动</span><br><span class=\"line\">* float:left;</span><br><span class=\"line\">* 父亲不会被浮动的儿子撑出高的</span><br><span class=\"line\">* 有左边贴靠的</span><br><span class=\"line\">* 浮动的周围有字围现象</span><br><span class=\"line\">* 清除浮动的方法</span><br><span class=\"line\">* 父亲增加高度（很多地方不用高度）</span><br><span class=\"line\">* clear:both;（margin会失效）</span><br><span class=\"line\">* 隔墙法：中间加div，clear:both;，用自身高度达到margin效果</span><br><span class=\"line\">* 内墙法：在上面盒子里添加div，clear:both;，用自身高度达到margin</span><br><span class=\"line\">* 父亲加上overflow:hidden;（内容溢出处理）</span><br><span class=\"line\">2.绝对定位</span><br><span class=\"line\">3.固定定位</span><br><span class=\"line\"></span><br><span class=\"line\">注：脱标了就不分块级和行内元素，就可以设置宽高</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------js--------------------------------------- */</span><br><span class=\"line\">&lt;script src=&quot;jmm.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">常用方法：</span><br><span class=\"line\">alert(999);</span><br><span class=\"line\">prompt(&quot;请输入变量&quot;);\t\t提示输入</span><br><span class=\"line\">console.log(typeof &quot;hello&quot;);\t控制台log</span><br><span class=\"line\"></span><br><span class=\"line\">document.write();\t\t文档打印输出</span><br><span class=\"line\">window.onload = function xx() &#123;&#125;页面加载完才执行</span><br><span class=\"line\"></span><br><span class=\"line\">变量类型：</span><br><span class=\"line\">number</span><br><span class=\"line\">boolean</span><br><span class=\"line\">string</span><br><span class=\"line\">null</span><br><span class=\"line\">undifined</span><br><span class=\"line\"></span><br><span class=\"line\">强转：parseInt（去小数，去字符）</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">function(a, b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注：返回值不需要写，a和b不需要写类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------jquery--------------------------------------- */</span><br><span class=\"line\">常用方法：</span><br><span class=\"line\">$(document).ready(function () &#123;&#125;)</span><br><span class=\"line\">$(function () &#123;&#125;)</span><br><span class=\"line\">$(this)\t\t\t返回或当前元素</span><br><span class=\"line\">$(this).height()\t\t返回或设置整型</span><br><span class=\"line\">$(this).css()\t\t返回或设置css样式</span><br><span class=\"line\">$(&quot;li&quot;).each(function()&#123;&#125;);\t遍历标签</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">选择器：</span><br><span class=\"line\">基本选择器：</span><br><span class=\"line\">* id选择器</span><br><span class=\"line\">* 类选择器</span><br><span class=\"line\">* 标签选择器</span><br><span class=\"line\">* 通配符选择器（*）</span><br><span class=\"line\">* 交集、并集选择器（逗号、不带）</span><br><span class=\"line\">层级选择器：</span><br><span class=\"line\">* 后代选择器（空格）</span><br><span class=\"line\">* 子代选择器（&gt;，表示所有儿子代）</span><br><span class=\"line\">* 紧邻选择器（+，表示紧挨着的祥和元素）</span><br><span class=\"line\">* 兄弟选择器（~，表示后面的所有兄弟）</span><br><span class=\"line\">过滤选择器（基本过滤）：</span><br><span class=\"line\">$(&quot;a:eq(index)&quot;)\t选中下标为index的元素</span><br><span class=\"line\">$(&quot;a:gt(index)&quot;)\t下标大于index的元素</span><br><span class=\"line\">$(&quot;a:lt(index)&quot;)\t\t下标小于index的元素</span><br><span class=\"line\">$(&quot;a:odd&quot;)\t\t序号为奇数</span><br><span class=\"line\">$(&quot;a:even&quot;)\t\t序号为偶数</span><br><span class=\"line\">$(&quot;a:first&quot;)\t\t第一个元素</span><br><span class=\"line\">$(&quot;a:last&quot;)\t\t\t最后一个元素</span><br><span class=\"line\">过滤选择器（属性过滤）：</span><br><span class=\"line\">$(&quot;a[href]&quot;)\t\t\t包含属性href的</span><br><span class=\"line\">$(&quot;a[href=&#x27;itcast&#x27;]&quot;)\t\t属性href为itcast的</span><br><span class=\"line\">$(&quot;a[href!=&#x27;baidu&#x27;]&quot;)\t\t属性href不为baidu的</span><br><span class=\"line\">$(&quot;a[href^=&#x27;web&#x27;]&quot;)\t\t属性href以web开头的</span><br><span class=\"line\">$(&quot;a[href$=&#x27;cn&#x27;]&quot;)\t\t属性href以cn结尾的</span><br><span class=\"line\">$(&quot;a[href*=&#x27;i&#x27;]&quot;)\t\t\t属性href包含i的</span><br><span class=\"line\">$(&quot;a[href][title=&#x27;我&#x27;]&quot;)\t过滤多个属性</span><br><span class=\"line\">筛选选择器：</span><br><span class=\"line\">parent()\t\t找到父标签</span><br><span class=\"line\">children()\t\t孩子标签</span><br><span class=\"line\">first()\t\t第一个元素</span><br><span class=\"line\">last()\t\t最后一个元素</span><br><span class=\"line\">next()\t\t后一元素</span><br><span class=\"line\">prev()\t\t前一个元素</span><br><span class=\"line\">find()\t\t查找元素</span><br><span class=\"line\">eq(index)\t\t选择第index的元素</span><br><span class=\"line\">siblings()\t\t选择兄弟</span><br><span class=\"line\"></span><br><span class=\"line\">dom和jquery对象互转：</span><br><span class=\"line\">dom转jquery：</span><br><span class=\"line\">var btn = document.getElementById(&quot;btn&quot;);</span><br><span class=\"line\">$(btn).click()</span><br><span class=\"line\">jquery转dom：</span><br><span class=\"line\">var btn = $(&quot;#btn&quot;)[0].onclick = function()&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">切换样式：</span><br><span class=\"line\">addClass()</span><br><span class=\"line\">removeClass()</span><br><span class=\"line\">toggleClass()</span><br><span class=\"line\">hasClass()</span><br><span class=\"line\"></span><br><span class=\"line\">节点操作：</span><br><span class=\"line\">attr()\t设置或返回属性</span><br><span class=\"line\">val()\t\t设置或返回值（特指表单中的值）</span><br><span class=\"line\">html()\t设置或返回html（所有子标签以及内容）（*）</span><br><span class=\"line\">text()\t设置或返回纯文本（仅所有标签值）</span><br><span class=\"line\"></span><br><span class=\"line\">事件：</span><br><span class=\"line\">.click()\t\t\t\t鼠标单击触发事件，参数可选（data，function）</span><br><span class=\"line\">.hover(func1,func2)\t\t鼠标移入调用func1函数，移出调用func2函数</span><br><span class=\"line\">.focus()/.blur()\t\t\t鼠标聚焦/失去焦点触发事件（不支持冒泡）</span><br><span class=\"line\">.dblclick()\t\t\t\t双击触发，同上</span><br><span class=\"line\">.mousedown()/up()\t\t鼠标按下/弹起触发事件</span><br><span class=\"line\">.mousemove()\t\t\t鼠标移动事件</span><br><span class=\"line\">.mouseover()/out()\t\t鼠标移入/移出触发事件</span><br><span class=\"line\">.mouseenter()/leave()\t鼠标进入/离开触发事件*</span><br><span class=\"line\">.focusin()\t\t\t\t鼠标聚焦到该元素时触发事件</span><br><span class=\"line\">.focusout()\t\t\t鼠标失去焦点时触发事件</span><br><span class=\"line\">.change()\t\t\t\t表单元素发生改变时触发事件</span><br><span class=\"line\">.select()\t\t\t\t文本元素被选中时触发事件</span><br><span class=\"line\">.submit()\t\t\t\t表单提交动作触发*</span><br><span class=\"line\">.keydown()/up()\t\t键盘按键按下/弹起触发</span><br><span class=\"line\">.on()\t\t\t\t\t多事件的绑定</span><br><span class=\"line\">.off()\t\t\t\t\t移除事件的绑定</span><br><span class=\"line\">.trigger(“event”)\t\t触发事件event调用</span><br><span class=\"line\">.triggerHandler()\t\t触发事件，不会冒泡，不会触发默认事件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>HTML基础</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* --------------------------------------html--------------------------------------- */</span><br><span class=\"line\">DTD：</span><br><span class=\"line\">html 4.01：三种（严格的、普通的、框架的）</span><br><span class=\"line\">XHTML1.0：三种</span><br><span class=\"line\"></span><br><span class=\"line\">例：&lt;!DOCTYPE html PUBLIC </span><br><span class=\"line\">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; </span><br><span class=\"line\">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">meta：</span><br><span class=\"line\">元配置：项目的基本配置</span><br><span class=\"line\">注：文件编码和解释编码要一致</span><br><span class=\"line\"></span><br><span class=\"line\">例：&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=gb2312&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">例（关键字）：&lt;meta name=&quot;Keywords&quot; content=&quot;xx,cc,xx&quot;/&gt;</span><br><span class=\"line\">例（页面描述）：&lt;meta name=&quot;Description&quot; content=&quot;This is a description&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">标签类型：</span><br><span class=\"line\">html分类：</span><br><span class=\"line\">容器级：</span><br><span class=\"line\">* div、ul、dl、ol、h</span><br><span class=\"line\">* 里面可以放置任何东西</span><br><span class=\"line\">文本级：</span><br><span class=\"line\">* a、img、form、span、p</span><br><span class=\"line\">* 里面只能放置文字、图片、表单元素（这些都属于文字）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">css分类：</span><br><span class=\"line\">块级元素（所有的容器级，加上p）：</span><br><span class=\"line\">* div、ul、dl、ol、h、p</span><br><span class=\"line\">* 霸占一行，不能与其他任何元素并列</span><br><span class=\"line\">* 能接受宽、高</span><br><span class=\"line\">* 如果不设置宽度，那么宽度就是父亲的100%</span><br><span class=\"line\">* 转为行内元素：display:inline;</span><br><span class=\"line\">行内元素（所有文本级，除了p）：</span><br><span class=\"line\">* a、img、form、span</span><br><span class=\"line\">* 有空白折叠现象</span><br><span class=\"line\">* 与其他行内元素并排</span><br><span class=\"line\">* 不能设置宽、高</span><br><span class=\"line\">* 转为块级元素：display:block;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">图片：</span><br><span class=\"line\">例：&lt;img src=&quot;1.jpg&quot; alt=&quot;&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">src：图片地址</span><br><span class=\"line\">alt：替代文本（图片无法显示的时候）</span><br><span class=\"line\"></span><br><span class=\"line\">超链接：</span><br><span class=\"line\">例：&lt;a href=&quot;https://www.baidu.com&quot; title=&quot;悬停文本&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">target：是否在新窗口打开（_blank在新窗口打开）</span><br><span class=\"line\"></span><br><span class=\"line\">注：可作为锚点</span><br><span class=\"line\">&lt;a href=&quot;#xxx&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">&lt;a name=&quot;xxx&quot; id=&quot;xxx&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">地址可写为：file:///C:/WebApplication1/index.html#xxx</span><br><span class=\"line\"></span><br><span class=\"line\">注：超链接伪类</span><br><span class=\"line\">/* 访问之前 */</span><br><span class=\"line\">a:link &#123;</span><br><span class=\"line\">    color:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 访问之后 */</span><br><span class=\"line\">a:visited &#123;</span><br><span class=\"line\">    color:orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 鼠标悬停 */</span><br><span class=\"line\">a:hover &#123;</span><br><span class=\"line\">    color:blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* 点击的时候 */</span><br><span class=\"line\">a:active &#123;</span><br><span class=\"line\">    color:green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">无序列表：</span><br><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">&lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">有序列表：</span><br><span class=\"line\">&lt;ol&gt;</span><br><span class=\"line\">&lt;li&gt;1&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;2&lt;/li&gt;</span><br><span class=\"line\">&lt;/ol&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">定义列表：</span><br><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">&lt;dt&gt;南京&lt;/dt&gt;</span><br><span class=\"line\">&lt;dd&gt;六朝古都&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">表单：</span><br><span class=\"line\">&lt;form&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        姓名：&lt;input type=&quot;text&quot; value=&quot;sdf&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        密码：&lt;input type=&quot;password&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;nan&quot; checked=&quot;checked&quot;/&gt;&lt;label for=&quot;nan&quot;&gt;男&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;nv&quot;/&gt;&lt;label for=&quot;nv&quot;&gt;女&lt;/label&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        爱好：&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;篮球</span><br><span class=\"line\">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;足球</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        爱好：&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;篮球</span><br><span class=\"line\">        &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;/&gt;足球</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        下拉列表：&lt;select&gt;</span><br><span class=\"line\">            &lt;option&gt;1&lt;/option&gt;</span><br><span class=\"line\">            &lt;option&gt;2&lt;/option&gt;</span><br><span class=\"line\">            &lt;option&gt;3&lt;/option&gt;</span><br><span class=\"line\">        &lt;/select&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        文本域：&lt;textarea cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        普通按钮：&lt;input type=&quot;button&quot; value=&quot;普通按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        提交按钮：&lt;input type=&quot;submit&quot; value=&quot;提交按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">        重置按钮：&lt;input type=&quot;reset&quot; value=&quot;重置按钮&quot;/&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">废弃的标签：</span><br><span class=\"line\">* font\t字体</span><br><span class=\"line\">* b\t\t加粗（这些标签作为css钩子使用）</span><br><span class=\"line\">* u\t\t下划线</span><br><span class=\"line\">* i\t\t倾斜</span><br><span class=\"line\">* del\t\t删除线</span><br><span class=\"line\">* em\t\t强调</span><br><span class=\"line\">* strong\t强调</span><br><span class=\"line\">* hr\t\t水平线</span><br><span class=\"line\">* br\t\t换行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------css--------------------------------------- */</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</span><br><span class=\"line\">常用的属性：</span><br><span class=\"line\">color\t\t\t颜色</span><br><span class=\"line\">font-size\t\t\t字体大小</span><br><span class=\"line\">font-weight\t\t字体加粗</span><br><span class=\"line\">normal\t正常</span><br><span class=\"line\">bold\t\t加粗</span><br><span class=\"line\">font-stype\t\t字体</span><br><span class=\"line\">normal\t正常</span><br><span class=\"line\">italic\t\t斜体</span><br><span class=\"line\">font-family</span><br><span class=\"line\">&quot;consols&quot;,&quot;Arial&quot;,&quot;Times New Roman&quot;</span><br><span class=\"line\">&quot;宋体&quot;,&quot;微软雅黑&quot;</span><br><span class=\"line\">text-decoration\t字体描述</span><br><span class=\"line\">none\t无下划线</span><br><span class=\"line\">underline\t下划线</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">background-color\t背景色</span><br><span class=\"line\">background-image（:url(xxx.jpg);）</span><br><span class=\"line\">background-repeat（是否重复，no-repeat、repeat-x、repeat-y）</span><br><span class=\"line\">background-position（center top）（水平居中，顶部对其）</span><br><span class=\"line\">background-attachment（fix固定）</span><br><span class=\"line\">综合就是：</span><br><span class=\"line\">font:14px/24px &quot;宋体&quot;;</span><br><span class=\"line\">background:red url(xxx.jpg) no-repeat center center fix;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">box-shadow: 0 0 8px #898580;（阴影，x偏移、y偏移、阴影大小、颜色）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">选择器（类上样式，id上行为）：</span><br><span class=\"line\">* 标签选择器：直接写标签</span><br><span class=\"line\">* id选择器：#id</span><br><span class=\"line\">* 类选择器：.class（多个类用空格隔开，为了复用）</span><br><span class=\"line\">* 交集选择器：div.class（表示两个交集，一般以标签开头，类跟后）</span><br><span class=\"line\">* 并集选择器：div,li（表示两个并集，逗号链接）</span><br><span class=\"line\">* 后代选择器：.class .li p（后代用空格隔开，某个东西下面的公共东西）</span><br><span class=\"line\"></span><br><span class=\"line\">css继承性：</span><br><span class=\"line\">color、text-开头、line-开头、font-开头的都可以被继承</span><br><span class=\"line\">css层叠性：</span><br><span class=\"line\">分别比较id选择器、类选择器、标签选择器数量</span><br><span class=\"line\">id选择器 &gt; 类选择器 &gt; 标签选择器</span><br><span class=\"line\">如果权重一样，谁写在后面听谁的</span><br><span class=\"line\">注：提高权重 font-size:60px !important;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">盒子模型（盒子的真实宽度是 width + 2 * padding + 2 * border）：</span><br><span class=\"line\">width</span><br><span class=\"line\">height</span><br><span class=\"line\">padding（上、右、下、左）</span><br><span class=\"line\">margin（margin:0 auto;盒子就居中了，本质是上下0，左右auto）</span><br><span class=\"line\">border（1px dashed red（solid：实线；dashed：虚线；））</span><br><span class=\"line\"></span><br><span class=\"line\">注：</span><br><span class=\"line\">1.使用margin:0 auto;，必须有width</span><br><span class=\"line\">2.只有标准流的盒子，才可以使用margin:0 auto;</span><br><span class=\"line\">3.margin:0 auto;是盒子居中，文本居中是text-align:center;，再设置行高为</span><br><span class=\"line\">注：标准流中，margin top和bottom有塌陷现象，以比较大的为准</span><br><span class=\"line\"></span><br><span class=\"line\">块级元素和行内元素互转：</span><br><span class=\"line\">display:inline;（转为行内元素）</span><br><span class=\"line\">display:block;（转为块级元素）</span><br><span class=\"line\"></span><br><span class=\"line\">脱标的三种手段（脱离标准文档流）：</span><br><span class=\"line\">1.浮动</span><br><span class=\"line\">* float:left;</span><br><span class=\"line\">* 父亲不会被浮动的儿子撑出高的</span><br><span class=\"line\">* 有左边贴靠的</span><br><span class=\"line\">* 浮动的周围有字围现象</span><br><span class=\"line\">* 清除浮动的方法</span><br><span class=\"line\">* 父亲增加高度（很多地方不用高度）</span><br><span class=\"line\">* clear:both;（margin会失效）</span><br><span class=\"line\">* 隔墙法：中间加div，clear:both;，用自身高度达到margin效果</span><br><span class=\"line\">* 内墙法：在上面盒子里添加div，clear:both;，用自身高度达到margin</span><br><span class=\"line\">* 父亲加上overflow:hidden;（内容溢出处理）</span><br><span class=\"line\">2.绝对定位</span><br><span class=\"line\">3.固定定位</span><br><span class=\"line\"></span><br><span class=\"line\">注：脱标了就不分块级和行内元素，就可以设置宽高</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------js--------------------------------------- */</span><br><span class=\"line\">&lt;script src=&quot;jmm.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">常用方法：</span><br><span class=\"line\">alert(999);</span><br><span class=\"line\">prompt(&quot;请输入变量&quot;);\t\t提示输入</span><br><span class=\"line\">console.log(typeof &quot;hello&quot;);\t控制台log</span><br><span class=\"line\"></span><br><span class=\"line\">document.write();\t\t文档打印输出</span><br><span class=\"line\">window.onload = function xx() &#123;&#125;页面加载完才执行</span><br><span class=\"line\"></span><br><span class=\"line\">变量类型：</span><br><span class=\"line\">number</span><br><span class=\"line\">boolean</span><br><span class=\"line\">string</span><br><span class=\"line\">null</span><br><span class=\"line\">undifined</span><br><span class=\"line\"></span><br><span class=\"line\">强转：parseInt（去小数，去字符）</span><br><span class=\"line\"></span><br><span class=\"line\">函数：</span><br><span class=\"line\">function(a, b)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注：返回值不需要写，a和b不需要写类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------jquery--------------------------------------- */</span><br><span class=\"line\">常用方法：</span><br><span class=\"line\">$(document).ready(function () &#123;&#125;)</span><br><span class=\"line\">$(function () &#123;&#125;)</span><br><span class=\"line\">$(this)\t\t\t返回或当前元素</span><br><span class=\"line\">$(this).height()\t\t返回或设置整型</span><br><span class=\"line\">$(this).css()\t\t返回或设置css样式</span><br><span class=\"line\">$(&quot;li&quot;).each(function()&#123;&#125;);\t遍历标签</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">选择器：</span><br><span class=\"line\">基本选择器：</span><br><span class=\"line\">* id选择器</span><br><span class=\"line\">* 类选择器</span><br><span class=\"line\">* 标签选择器</span><br><span class=\"line\">* 通配符选择器（*）</span><br><span class=\"line\">* 交集、并集选择器（逗号、不带）</span><br><span class=\"line\">层级选择器：</span><br><span class=\"line\">* 后代选择器（空格）</span><br><span class=\"line\">* 子代选择器（&gt;，表示所有儿子代）</span><br><span class=\"line\">* 紧邻选择器（+，表示紧挨着的祥和元素）</span><br><span class=\"line\">* 兄弟选择器（~，表示后面的所有兄弟）</span><br><span class=\"line\">过滤选择器（基本过滤）：</span><br><span class=\"line\">$(&quot;a:eq(index)&quot;)\t选中下标为index的元素</span><br><span class=\"line\">$(&quot;a:gt(index)&quot;)\t下标大于index的元素</span><br><span class=\"line\">$(&quot;a:lt(index)&quot;)\t\t下标小于index的元素</span><br><span class=\"line\">$(&quot;a:odd&quot;)\t\t序号为奇数</span><br><span class=\"line\">$(&quot;a:even&quot;)\t\t序号为偶数</span><br><span class=\"line\">$(&quot;a:first&quot;)\t\t第一个元素</span><br><span class=\"line\">$(&quot;a:last&quot;)\t\t\t最后一个元素</span><br><span class=\"line\">过滤选择器（属性过滤）：</span><br><span class=\"line\">$(&quot;a[href]&quot;)\t\t\t包含属性href的</span><br><span class=\"line\">$(&quot;a[href=&#x27;itcast&#x27;]&quot;)\t\t属性href为itcast的</span><br><span class=\"line\">$(&quot;a[href!=&#x27;baidu&#x27;]&quot;)\t\t属性href不为baidu的</span><br><span class=\"line\">$(&quot;a[href^=&#x27;web&#x27;]&quot;)\t\t属性href以web开头的</span><br><span class=\"line\">$(&quot;a[href$=&#x27;cn&#x27;]&quot;)\t\t属性href以cn结尾的</span><br><span class=\"line\">$(&quot;a[href*=&#x27;i&#x27;]&quot;)\t\t\t属性href包含i的</span><br><span class=\"line\">$(&quot;a[href][title=&#x27;我&#x27;]&quot;)\t过滤多个属性</span><br><span class=\"line\">筛选选择器：</span><br><span class=\"line\">parent()\t\t找到父标签</span><br><span class=\"line\">children()\t\t孩子标签</span><br><span class=\"line\">first()\t\t第一个元素</span><br><span class=\"line\">last()\t\t最后一个元素</span><br><span class=\"line\">next()\t\t后一元素</span><br><span class=\"line\">prev()\t\t前一个元素</span><br><span class=\"line\">find()\t\t查找元素</span><br><span class=\"line\">eq(index)\t\t选择第index的元素</span><br><span class=\"line\">siblings()\t\t选择兄弟</span><br><span class=\"line\"></span><br><span class=\"line\">dom和jquery对象互转：</span><br><span class=\"line\">dom转jquery：</span><br><span class=\"line\">var btn = document.getElementById(&quot;btn&quot;);</span><br><span class=\"line\">$(btn).click()</span><br><span class=\"line\">jquery转dom：</span><br><span class=\"line\">var btn = $(&quot;#btn&quot;)[0].onclick = function()&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">切换样式：</span><br><span class=\"line\">addClass()</span><br><span class=\"line\">removeClass()</span><br><span class=\"line\">toggleClass()</span><br><span class=\"line\">hasClass()</span><br><span class=\"line\"></span><br><span class=\"line\">节点操作：</span><br><span class=\"line\">attr()\t设置或返回属性</span><br><span class=\"line\">val()\t\t设置或返回值（特指表单中的值）</span><br><span class=\"line\">html()\t设置或返回html（所有子标签以及内容）（*）</span><br><span class=\"line\">text()\t设置或返回纯文本（仅所有标签值）</span><br><span class=\"line\"></span><br><span class=\"line\">事件：</span><br><span class=\"line\">.click()\t\t\t\t鼠标单击触发事件，参数可选（data，function）</span><br><span class=\"line\">.hover(func1,func2)\t\t鼠标移入调用func1函数，移出调用func2函数</span><br><span class=\"line\">.focus()/.blur()\t\t\t鼠标聚焦/失去焦点触发事件（不支持冒泡）</span><br><span class=\"line\">.dblclick()\t\t\t\t双击触发，同上</span><br><span class=\"line\">.mousedown()/up()\t\t鼠标按下/弹起触发事件</span><br><span class=\"line\">.mousemove()\t\t\t鼠标移动事件</span><br><span class=\"line\">.mouseover()/out()\t\t鼠标移入/移出触发事件</span><br><span class=\"line\">.mouseenter()/leave()\t鼠标进入/离开触发事件*</span><br><span class=\"line\">.focusin()\t\t\t\t鼠标聚焦到该元素时触发事件</span><br><span class=\"line\">.focusout()\t\t\t鼠标失去焦点时触发事件</span><br><span class=\"line\">.change()\t\t\t\t表单元素发生改变时触发事件</span><br><span class=\"line\">.select()\t\t\t\t文本元素被选中时触发事件</span><br><span class=\"line\">.submit()\t\t\t\t表单提交动作触发*</span><br><span class=\"line\">.keydown()/up()\t\t键盘按键按下/弹起触发</span><br><span class=\"line\">.on()\t\t\t\t\t多事件的绑定</span><br><span class=\"line\">.off()\t\t\t\t\t移除事件的绑定</span><br><span class=\"line\">.trigger(“event”)\t\t触发事件event调用</span><br><span class=\"line\">.triggerHandler()\t\t触发事件，不会冒泡，不会触发默认事件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Java基础","date":"2015-08-31T16:00:00.000Z","_content":"\nJava基础\n\n<!--more-->\n\n```\n一、基础语法\n1. JAVA简介\n1.1 java体系结构：j2se,j2ee,j2me\n1.2 java特点：平台无关（虚拟机）,垃圾回收(使得java更加稳定)\n1.3 JDK、JRE与JVM\nJDK:java开发环境 JRE：java运行环境\nJVM：java虚拟机\n1.4 java程序的开发步骤：.java   编译（javac）成  .class 运行(java)  .class文件\n\n\n2. 基本数据类型（标、关、常、变、基）\n2.1 标志符：自己可以取名字的地方称为标志符\n* 标志符的规则：1，只能是字母，数字，下划线，$;不能以数字开头;严格区分大小写；不能使用关键字作为标志符\n* 规则：（字下美人 数 骆驼）\n\n2.2 关键字：关键字都是小写\n \n2.3 常量：如123，\"hello\"\n* 一般使用static final定义常量，如public static final int SLOW_SPEED=1;\n \n2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据\n* 变量申明：类型  变量名字\n* 变量必须先声明，再赋值，再使用\n* 注意区分基本数据类型的变量与引用数据类型的变量\n* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效\n \n2.5 基本数据类型：java数据类型分为两大类：基本数据类型，引用数据类型\n* 基本数据类型分为4类8中：boolean,char,byte,short,int,long,float,double\n* boolean类型只有true，false\n* char是Unicode编码\n* float,double是有精度的（不是绝对精确的）\n \n2.5.1 基本数据类型之间的转换\n* 123默认是int型，12.3默认是double型（其他要在后面追加l、f）\n* <=int的时候，默认转换为int；否则以式子中最大的类型计算\n* 小容量可以隐式转换为大容量；大容量要强转为小容量\n* byte,short,char——>int——>long——>float——>double\n* boolean与其他类型不兼容\n\n\n3. 运算符与流程控制\n3.1 运算符：算术、关系、逻辑、赋值、位运算符\n算数：+、 -、 *、 /、 %、 ++、 --（自加自减++,--，注意顺序）\n关系：>、 <、 ==、 >=、 <=、 !=\n逻辑：&&、||、!\n赋值：=\n\n* 关系运算符的结果是boolean类型\n* 逻辑运算符，短路逻辑的结果也是boolean类型\n* 三元运算符 (逻辑表达式) ? 表达式一 :表达式二\n\n3.1.1 ++、--顺序\n* 如果运算符在前，那么在本条语句运行之前操作\n* 如果运算符在后，那么在本条语句运行之后操作\n\n3.1.2 &与&&、|与||区别\n* &有两种解释：一是按位与，另一个就是且\n* &&只有且，并带有短路功能（如果前面某个条件被否定了，那么将不会执行后面的条件）\n\n3.2 流程控制语句：顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)\n\n\n3.2.1 break,continue,return\n* break，continue一般用在循环中，也可以用在switch中\n* break：跳出最近的整个循环（结束循环）\n* continue：跳过最近整个循环的本次循环，进入下一次循环\n* return：结束整个方法，或带参返回方法体\n\n\n3.2.2 switch的规则：\n* switch只能探测:byte,short,char,int 类型的值（case后面也只能是这4种）\n* switch中小心case的穿透(代码会一直运行，直到遇到break停止，建议每个case写一个break)\n* default：如果没有找到匹配的case，则执行default\n\n\n3.2.3 for，while，do while搞清楚代码的执行流程\n\n\n二、面向对象\n1. 面向对象基本语法\n1.1 定义一个类\n* 使用class关键字定义类，注意类名大写\n* 成员属性：成员属性不赋值会有默认值\n* 成员方法\n* 构造方法：没有任何返回值，名字与类名一样，构造方法的本意是用来初始化对象（初始化对象的属性值）\n\n\n1.2 实例化对象：Student s = new Student();\n* 使用new + 构造方法  实例化对象\n* new 在堆中开辟了对象的空间，并且给属性赋上默认值\n* 接下来调用构造方法，执行构造方法中的代码\n* 最后返回对象的引用\n\n\n1.3  区分基本数据类型与引用数据类型\n* 基本数据类型在内存中只有一块空间：里面存着值（栈）\n* 引用类型的变量在内存中有两块区域，一块是引用本身，另一块是引用所指向的对象（堆栈）\n\n\n1.4  如何操作对象：使用.操作符\n* 使用对象名.属性操作对象的属性（如:stu.age = 18;）\n* 使用对象名.方法调用对象的方法(如：stu.study());\n* this：每个对象都有this，this是指向本身的引用，代表本身\n* super：super代表父类的引用\n\n1.5 类与对象的初始化过程：\n* 静态属性先初始化，而且仅仅初始化一次\n* 首先给静态属性进行声明，并赋默认值，然后代码从上往下执行静态代码块或静态赋值\n* 每创建一个对象，就先实例化成员属性：首先给成员属性声明，赋默认值，然后.执行赋值语句\n* 成员属性初始化后再调用构造方法\n\n\n1.6 垃圾回收机制\n* java虚拟使用垃圾回收机制进行垃圾回收\n* 垃圾回收本身是一个线程(当内存不够用的时候，一般会进行垃圾回收)\n* 垃圾回收不能通过程序来调用，仅仅能够通过System.gc()建议虚拟机进行垃圾回收\n* 当进行垃圾回收时，会调用对象的finalize方法\n\n1.7 单例模式：一个类仅仅能有一个实例(23个设计模式的一种)\n* 构造方法必须为私有的\n* 提供静态的方法来获得对象\n* 提供静态的属性，该属性是该类的一个对象\n\n\n2. 访问控制，方法定义与调用，重载，方法重写\n2.1 package包的使用\n* 使用 package 定义包：package只能放在代码的第一行\n* import：导包，可以到入包下所有 import java.io.*;可以导入具体的一个类 import java.io.Reader;\n* 包的作用:1,分类；2，隐藏（封装的作用），3,便于管理\n* java本身提供了一些包：java.lang(核心类，此包如需要引入),java.util(集合框架以及其他常用类)，java.io(输入输出),java.awt,javax.swing(图形)\n\n\n2.2 四个访问级别，从大到小：public ，protected，friendly，private\npublic  protected  friendly  private\n其他包 Y\nN N  N\n子孙类 Y\nY N  N\n本包 Y\nY Y  N\n本类 Y\nY Y  Y\n\n* 注意访问级别是针对类来讲的，不是针对对象！！！！！！！\n* 注意类的访问修饰符只能使用public 或 默认\n* 学了访问控制后：类的属性都写private，通过set/get方法对属性进行赋值，取值\n\n3. 面向对象的特性\n3.1 封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的接口\n* 封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生变动的影响\n\n3.2 继承：子类自动共享父类的数据和方法\n* 使用extends关键字表示继承\n* 子类继承父类的所有属性\n* 子类继承父类除private（非同包的时候也除默认的方法）外的所有方法\n* 子类对象拥有super引用，表示父类的引用,可以使用super明确的调用父类的方法或属性\n\n* 子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性\n\n3.2.1 重载与重写\n3.2.1.1 重载：一个类当中，有方法名相同，参数不同的方法，称为重载\n* 不能只改返回值：不能根据方法的返回进行重载\n\n\n3.2.1.2 重写：在继承当中，子类将父类的方法重新写了一遍：重写的方法与被重写的方法拥有相同的方法签名（返回值类型，方法名，参数列数）\n* .重写的方法能够改变被重写的方法的访问级别,注意只能是相等或者扩大\n* .重写的方法不能抛出比被重写方法更多的异常，注意只能缩小异常的范围\n* .如果被重写的方法是具体的，重写之后不能改为abstract\n\n3.2.2 构造方法的继承（基类即父类）\n* 子类的构造过程必须调用其基类的构造方法\n* 子类可以在自己的构造过程中使用super(arg[] list）来调用基类的构造方法\n* 如果调用super，必须写在子类构造方法的第一行\n* 可以使用this(arg[] list)调用本类的另外的构造方法\n* 如果子类的构造方法中没有显示的调用基类的构造方法，系统默认调用基类无参数的构造方法\n* 如果子类构造方法中既没有显式的调用基类构造方法，基类中又没有无参数的构造方法，编译出错\n\n3.2.3 对象的转型\n* 一个基类的引用类型变量可以指向其子类的对象\n* 一个基类的引用不可以访问其子类对象新增的成员\n* 可以使用  instanceof 关键字来判断一个引用类型变量所指向的对象是否是制定的类型\n* 子类的对象可以当作基类来使用称作向上转型，反之称为向下转型\n* 子类可以当成父类来使用，无需显示转换\n* 父类引用转换为子类引用要进行强制转换\n* 注意：不兼容的类型之间不能进行相互转换（只有具有直接或间接父子关系的类才是兼容的类型），否则编译时会报错\n* 注意：兼容类型之间的转换要看对象的实际类型，因此向下转化时最好先用instanceof来判断是否是某个类型，再转换，以免报报错\n\n3.3 多态：同一消息可以根据发送对象的不同而采用多种不同的行为方式\n* 实现多态的技术称为：动态绑定，是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用子类相应的方法\n* 多态成立的条件：1.要有继承。2.要有重写。3.父类的引用指向子类的对象。\n* 多态的作用：消除类型之间的耦合关系\n\n3.4 抽象类：用abstract修饰的类称为抽象类（抽象就是自己不实现，让具体的子类去实现）\n* 抽象方法不能有方法体\n* 如果是具体子类，必须重写父类抽象方法\n如果不是具体子类（抽象类），则可以不重写\n* 抽象类中可以没有抽象方法，但是有抽象方法的一定是抽象类\n\n* 完全抽象类一般用接口代替\n\n\n3.5 接口：interface（继承一个类，实现多个接口）\n* 接口中属性只能为public static final类型（可省略）\n* 接口中方法只能为public abstract类型（可省略）\n* 接口也可以继承接口（不是实现），可以重写父接口的方法，等具体子类去实现\n\n* 接口取代完全抽象类\n\n\n3.6 static\n* 因为是属于类，不属于对象，又叫做类变量或类方法\n* 在类开始被初始化的时候就执行\n* 对于该类的所有对象来说，static成员变量和方法只有一份\n\n* 静态可以通过类直接被访问\n* 在类中，静态方法中不能直接访问非静态成员\n* 在类中，静态成员方法没有this引用\n\n\n3.7 final关键字:final表示最终的意思\n* final的变量的值不能够被改变\n* final的成员变量\n* final的局部变量(形参)\n* final的方法不能够被重写\n* final的类不能够被继承\n\n\n\n\n4. 异常处理\njava的异常处理机制\n异常的关键字Exception\ntry,catch,finally,throw,throws关键字\n\n\n4.1 什么是异常，为什么要引入异常\n* java程序运行时出错，java就抛出异常,程序立即终止（也可以说程序崩溃）\n* java将错误信息封装在异常对象里抛出\n* 学会查看异常的信息：异常的名字，异常的信息，程序抛异常的位置\n* java引入异常处理机制，是防止程序出错崩溃\n\n\n4.2 java的异常的分类\n* java的抛出的错误用异常类来表示,java拥有一个异常体系（有许多异常类，并且相互之间具有关系）\n* java里面的所有异常都是Throwable的子类\n* java虚拟机的异常是Error的子类，一般不需进行处理(因为没法进行处理)\n* 除Error之外还有Exception，Exception分为两类：RuntimeException(运行时异常)，被检查异常（除了RuntimeException都是被检查异常）\n* RuntimeException(运行时异常，可以不捕获或声明抛出，编译不会报错,一般是控制不当造成的)，可检查异常（必须捕获或声明抛出，这类异常通常需要检测并处理，一般使用资源时造成的）\n* 几个常见的异常：NullPointerException(空指针),IndexOutOfBoundsException(索引越界),SQLException(数据库异常),IOException(文件异常)\n\n\n4.3 异常的处理方式\n* 使用try,catch,finally进行处理\n* throws在方法后抛出异常，交给调用此方法的处理（可以连续抛）\n* throw在方法体中抛出异常\n\n\n4.4 try,catch,finally中程序的运行过程\n* 尝试执行try里面的语句\n* 一次运行当中最多执行一个catch块，如果没有抛出异常，catch块不执行\n* finally总会执行，不管有没有抛出异常\n* 如果try块里面有return语句，会先运行finally内容\n\n\n4.5 区分RuntimeException与被检查异常\n* RuntimeException不需要捕获或声明抛出（但是如果你捕获或声明抛出也不会有错）\n* 被检查异常必须要捕获或者声明抛出\n\n\n5. 数组\n数组是引用类型，有长度length的属性\n\n\n声明，创建，赋值\n* 数组声明时要指定数组元素的类型，数组的维度，不需要指定数组的长度，如：int[] a;(a是引用)\n* 数组的创建必须new关键字，并且必须给出数组的长度;new int[5]\n* 如果数组的类型是引用类型的数组，数组里面保存的是引用，而不是对象本身\nnew int[] { 1,3,4,5}\n{1,4,5,6}\n\n\n数组的常用操作类\nArrays提供了数组的常用操作的方法（这些方法都是静态的）\n* 排序：sort\n* 返回数组的字符串表示：ToString\n\n\n二维数组\n* 二维数组的内存分析\n* 数组的拷贝使用System.arrayCopy方法\n\n6. 多线程\n1.线程的概念\n* 程序里面不同的执行路径，每一个执行路径称为一个线程\n* 对于单cpu来讲，某一具体的时刻，只会有一个线程在运行，但是CPU的速度非常快，表面上看起来是许多个线程并行执行\n\n\n2.java中线程的创建与启动\n* 两种实现线程的方式:继承Thread，实现Runnable接口\n* 线程的启动：start.启动线程，运行线程的run方法，run方法运行完线程就结束(注意，start只在Thread里面有，start不同于run)\n* 注意一个Thread对象，只能一次调用start方法\n* Thread与Runnable的区别：1：Runnable是接口，比Thread灵活（因为java只能单继承，可以同时实现许多接口）;2.一个Runnable对象可以启动许多个线程，线程之间共享对象（Thread不能共享对象）\n\n\n3.线程的状态：new ,可运行，运行中，阻塞，死亡\n\n\n4.线程的调度\n* Thread.sleep,使该线程睡眠\n* join：线程合并(结果类似与方法调用)\n* yield:线程让出当前CPU，留给其他线程运行\n* 线程优先级:setPriority设置线程优先级\n* 后台线程:setDaemon,必须在线程运行前设置为后台线程.当所有的前台线程都结束了，后台线程自动结束\n* 线程可以指定名字，取得当前线程的方法Thread.currentThread();\n\n\n5.线程同步\n* synchronized:同一时刻，只会有一个线程执行synchronized代码块\n\n\n6.线程间通讯\n* wait(),notify(),notifyAll是Object类中定义的方法\n* wait()：使得运行该代码的线程进入对象的等待池进行等待，线程进入阻塞状态，wait的线程一直阻塞，指导其他线程调用该对象的notify方法唤醒它。\n* notify()：唤醒对象等待池中的一个线程，使得被唤醒的线程进入可运行状态，如果等待池中没有线程，notify什么也不做。\n* notifyAll()：唤醒对象等待池中的所有线程\n* wait(),notify,notifyAll都必须放在同步代码块里面(Synchronized代码块).\n* wait()的线程会释放对象的锁，而Thread.sleep的线程不会释放对象的锁\n\n\n7.线程安全的类：多线程的环境下使用类或者调用类的方法不会造成同步问题的类称为线程安全的类\n* JDK1.1以前，java的集合框架中有一些线程安全的类：如Vector(被ArrayList代替),HashTable(被HashMap代替)\n\n\n7.内部类\n1.内部类:在一个类的里面再定义一个类称为内部类\n* 内部类可以访问外部类的所有的成员变量与成员方法\n* 如果想在外部实例化内部类，必须使用全名:外部类.内部类\n\n2.事件模型：\n* java事件采用委托模型(授权模型),即事件源本身不处理事件，交给事件监听器来处理,因此需要把事件监听器绑定到事件源里面\n* 事件源，事件，事件监听器。事件有许多种，不同的事件使用不同监听器来处理\n* 事件触发后，系统自动调用事件处理方法（不需要手动调用事件处理方法），并传递事件信息作为方法参数\n* 事件编写步骤：1.实现监听器接口(完成事件处理方法)；2.实例化实现监并绑定到事件源\n\n3.事件实现方式\n* 外部类\n* 内部类\n三、高级特性\n1. 常用类\n常用类:lang包不需要导入，其他的包都需要\n\n\n1.Object:所有类的根类\n* 对象的标识：hashCode()\n* 对象的信息:toString()，默认情况下返回  对象类型@地址信息\n* 对象是否一样：equals,默认情况下根据地址比较相等。==比较的是对象的地址，而equals在语义上提供相等的含义\n* 重写equals与toString方法，参照Money类\n\n2.String:不可变字符串，类，继承Object\n* String重写toString，返回字符串的类容。重写了equals根据字符串的内容进行比较\n* 字符串常量\"1234\"与new String(\"1234\")。常量只有一个，new String（）每new一次就一个新的对像\\\n* 字符串的不变性,字符串一旦创建，内容不能改变\n* 字符串的常用操作\n* 字符串的长度：length\n* 搜索一个字符串:indexOf()\n* 字符串的字串:substring(3，8)\n* 取得指定位置的字符:charAt(8);\n* 判断字符串以什么开头(结尾):startsWith(),endWith()\n* 改变字符串的大小写,toUpperCase(),toLowerCase()\n* 去掉字符串两边的空格：trim()\n* 替换字符串里面的某些内容:replace(\"\")\n* 分割字符串：\nStringBuffer:字符串缓冲，可变字符串，提供对字符串进行更改的方法(其他的方法基本与String类似)\n* 从StringBuffer得到String\n* 追加 append（\"abc\"）;\n* 在字符串中间插入insert(3,\"插入的字符串')\n* 删除字符串 delete(3,6);//不包括6\n\n包装类：提供与字符串之间的转换。Integer是int类型的包装类\n\n\n\n\n\n\nMath类：提供数学上的常用操作，注意：里面的方法都是静态的\n\n\nRandom：随即类，产生随机数，另外Math.random()也能产生0～1之间的随机数\n\n\n日期：Date,SimpleDateFormat(日期格式化) ,日历Calendar \n\n\n获得控制台输入：\n* Scanner sc = new Scanner(System.in);\n* String str = sc.next();\n\n\n2. 集合框架\n集合框架:概念上分为：Set(数学集合)，List（列表），Map（字典）\n\n\n1.Collection接口，Iterator接口\n* Set,List继承Collection，采用Iterator进行迭代(参考testCollection)\n\n\n2.Set:元素不能重复，没有顺序\n* HashSet:根据hashCode判断对象是否重复(重写equals和hashCode)\n* TreeSet:里面的元素按顺序排列（元素必须实现Comparable接口）\n\n\n2.List：元素能够重复，有顺序即索引位置，在Collection的基础上提供了按照索引位置进行操作的方法\n* ArrayList:内部使用数组实现list\n* LinkedList：在List的基础上提供了对首，尾元素进行操作的方法:入getLast（），addFirst(Object o)\n* 数组，AarryList，LinkeList有区别\n3.map：键值对的集合，key不能重复，value可以重复\n* 两次put同一键，后面一个会覆盖前面一个\n* 遍历map的方式：先取得keySet，或者entrySet，再用Set的方式(Iterator)进行遍历\n\n4.泛型：List<Integer> list = new ArrayList<Integer>\n* 存入的元素只能是指定类型,如：<Integer>\n* 取出来不需要强制转换,自动是指定类型，如：<Integer>\n\n\n\n\n5.List的常用操作类Collections，不同于Collection，提供对List的排序，随机排列，倒序的方法\n* Arrays使用在数组里面，提供对数组的常用操作，跟Collections有相似之处，\n\n\n6.Comparable接口\n* compareTo()\n* 如果需要进行排序(Collections.sort())，或者放到排序的集合里面(TreeSet,TreeMap),必须实现Comparable接口\n\n注：Set：（集合：不重复，无序）\nHashSet：\nTreeSet：（由大到小）\nList：（列表：重复，有序）\nArrayList：（有下标，查比较快）\nLinkedList：（无下标，增删改较快）\nMap：（字典）\nHashMap：（存放键值对）\nTreeMap：（由大到小）\n\n\n3. JDBC\nJDBC:java操作数据库的一组API(注意模仿)\n\n1.加载驱动\nClass.forName(\"com.mysql.jdbc.Driver\");\n\n\n2.连接数据库\nConnection connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8\",\"root\",\"1234\");\n\n\n3.PrepareStatement预编译语句\nPrepareStatement pst = connection.prepareStatement(\"select * from user where id = ?\");\npst.setObject(1,param);\n\n4.执行\nResultSet rs = pst.executeQuery();//查询\nint result = pst.executeUpdate();//增删改\n\n\n/*\nwhile(rs.next()){\nint id = rs.getInt(\"id\");\nString name = rs.getString(\"name\");\nString pwd = rs.getString(\"pwd\");\n}\n*/\n\n5.关闭数据，从下到上\nrs.close();\npst.close();\nconnection.close();\n\n6.使用事务\n* 设置手动提交：设置connection.setAutoCommit(false);\n* 在最后手动提交：connection.commit();\n* 在catch中捕获异常，使用connection.rollBack();\n\n\n\n4. 图形-布局，常用Swing组件\n图形用户界面（Swing常用组件，布局管理器，事件模型，绘图）\n\n\n1.AWT与Swing\n* AWT是重量级的组件,Swing是轻量级别组件,Swing是从awt的基础上发展过来的\n* swing依然使用awt里面的布局与事件模型\n* 组件：每一个界面元素都称为一个组件，如按钮，文本框\n* 容器的概念：可以容纳其他元素的组件，通过add()往容器里面加入组件，每一个容器都可以设置自己的布局管理器(Layout)\n\n\n2.常用组件\n* 框架：JFrame（有一个默认的内容面板）,一般来将，所有的其他组件都放在JFrame的默认面板上。通过JFrame.getContentPane()获得默认内容面板\n* 面板：JPanel\n* 标签：JLabel\n* 文本输入框：JTextField\n* 文本域(多行文本):JTextArea\n* 单选按钮:JRadioButton\n* 复选框：JCheckBox\n* 下拉列表：JComboBox\n* 按钮:JButton\n\n3。布局管理器（流布局Flowlayout,边框布局 BorderLayout,网格布局GridLayout）\n* 使用setLayout(new FlowLayout())方法设置容器的布局管理器\n* Flowlayout:当拖动界面的时候，元素的大小不会改变，仅改变元素的位置，可以指定居中对齐，左对齐，右对齐等对齐方式\n* BorderLayout：将界面分为东西南北中五部分.:元素大小会发生改变，但是相对位置不变。除中间区域（自动填充）之外，区域里面不加组件，默认大小为0.如果往区域里加入多个组件，只显示最后添加的组件。\n* GridLayout:每个网格的大小相等，位置不发生改变，大小随容器大小变化而变化\n\n\n\n\n5. 图形-事件处理，绘图\n图形用户界面\n\n\n\n四、总结\n1.结构\n常用类、集合框架、JDBC、swing\n↑\n↑\n封装、继承、多态、抽象\ninterface、static、final\n异常、数组、线程\n↑\n↑\n基本数据类型（引用数据类型）（标关常变）\n运算符\n流程控制\n\n2.面向对象\n封装：（高内聚、低耦合）封装就是保证软件内部具有优良的模块性基础，封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生的变动影响。\n继承：（重用性、扩展性）继承是子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性。\n多态：（灵活性、扩展性）不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，多态性增强了程序的灵活性和扩展性。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ========================================== 内存机制 ==========================================\n\t1)Java把内存划分成两种:一种是栈内存，一种是堆内存\n\t\t栈内存用来存放一些基本类型的变量和对象的引用变量。\n\t\t堆内存用来存放由new创建的对象和数组。     \n\n\n\t2)具体的说:\n\t\t堆的优势:可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。\n\t\t缺点:因为要在运行时动态分配内存，存取速度较慢。 \n\t\t栈的优势:数据可以共享，存取速度比堆要快，仅次于寄存器。\n\t\t缺点:存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。\n\n\t\t栈中主要存放一些基本类型的变量(byte，short，int，long，float，double，boolean，char)和对象句柄。 \n\t\t栈的数据共享: \n\t\tint a = 3;\n\t\tint b = 3;\n\t\t先创建一个变量为a的引用，再存3，再创建变量为b的引用，然后查找栈中是否有3这个值，直接将b指向3。\n\n\t3)String是一个特殊的包装类数据:\n\t\tString str = new String(\"abc\"); \n\t\tString str = \"abc\"; \n\t\t两种的形式来创建，第一种是用new()来新建对象的，它会在存放于堆中。每调用一次就会创建一个新的对象。 \n\t\t而第二种是先在栈中创建一个对String类的对象引用变量str，然后查找栈中常量池有没有存放\"abc\"，如果没有，则将\"abc\"存放进栈，并令str指向”abc”，如果已经有”abc” 则直接令str指向“abc”。 \n\n\t\tequals()和==:\n\t\tequals():比较对象里面的数值是否相等\n\t\t==:比较两个引用指向的地址是否相同(堆内存的首地址)\n\n\t\tString str = new String(\"asd\");\n\t\t创建了1个或2个String Object\n\t\t如果常量池(constant pool)没有\"asd\"，则创建了2个\n\t\t如果常量池(constant pool)有\"asd\"，则只创建了1个\n\t\t当然这里的str本身只是一个引用，放在栈里，用来指向堆中创建出来的对象\n\t\tString str=\"aaa\"; 创建了0个或1个String Object\n\t\tString str=\"aaa\"+\"bbb\"+\"ccc\";\n\t\t创建了0个或1个String Object\n\n\n\t4)内存分配策略:\n\t\t按照编译原理的观点，程序运行时的内存分配有三种策略，分别是静态的，栈式的，和堆式的:\n\n\t\t静态存储分配是指在编译时就能确定每个数据目标在运行时刻的存储空间需求，因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在，也不允许有嵌套或者递归的结构出现，因为它们都会导致编译程序无法计算准确的存储空间需求。\n\t\t堆式存储分配也可称为动态存储分配，和静态存储分配相反，在堆式存储方案中，程序对数据区的需求在编译时是完全未知的，只有到运行的时候才能够知道，但是规定在运行中进入一个程序模块时，必须知道该程序模块所需的数据区大小才能够为其分配内存。和我们在数据结构所熟知的栈一样，堆式存储分配按照先进后出的原则进行分配。 \n\t\t栈式存储分配要求在编译时能知道所有变量的存储要求，栈式存储分配要求在过程的入口处必须知道所有的存储要求。\n\n\n// ========================================== String、StringBuffer和StringBuilder的区别 ==========================================\n\t(1)三者在执行速度方面的比较：\n\t\tStringBuilder>StringBuffer>String\n\n　　(2)区别：\n\t\tString：字符串常量(不可改变)(线程安全)\n\t　　 StringBuffer：字符串变量(可改变)(线程非安全)\n\t　　 StringBuilder：字符串变量(可改变)(线程非安全)\n\n　　(3)对于三者使用的总结：\n\t\t1.如果要操作少量的数据用 = String\n\t\t2.多线程操作字符串缓冲区下操作大量数据 = StringBuffer\n\t\t3.单线程操作字符串缓冲区下操作大量数据 = StringBuilder\n\n\n// ========================================== String类的常用方法 ==========================================\n\t// 常用\n\tlength();  返回字符串的长度\n\tvalueOf();  将参数以字符串类型返回\n\tequals();  比较内容是否相同\n\n\t// 截字符串\n\tsubstring();  截取从a开始到b之前的字符串\n\tindexOf();  返回字符或字符串第一次出现的位置(第一个字母为准)\n\n\t// 替换字符串\n\tcontains();  是否包含某字符串\n\treplace();  替换字符串中字符或字符串\n\n\t// 不常用\n\ttoCharArray();\n\t将字符串转换为数组\n\ttrim();  去掉字符串的前端和后端空格\n\n\n// ========================================== List类常用方法 ==========================================\nsize();  得到List的数量\nget();  得到某个下标的对象\ncontains();  是否包含某一项\n\nadd();  增加一项\naddAll();  增加一个集合\nremove();  移除一条数据\nclear();  清除所有数据\n\t\nCollections.sort();\t\tlist排序\nCollections.reverse();\tlist倒置\n\n\n// ========================================== 反射 ==========================================\n\t1)jdk提供反射机制的类：\n\t\tjava.lang.Class;                \n\t\tjava.lang.reflect.Constructor;\n\t\tjava.lang.reflect.Field;        \n\t\tjava.lang.reflect.Method;\n\t\tjava.lang.reflect.Modifier;\n\n\t2)反射获取类的三种方法：\n\t\t//第一种  \n\t\tClass cla = Employee.class;\n\t\t//第二种  \n\t\tEmployeee = new Employee();\n\t\tClass cla = e.getClass();\n\t\t//第三种  \n\t\tClass cla = Class.forName(\"Employee\");\n\t\n\t3)常用方法：\n\t\tField[] fields = cla.getDeclaredFields();\n\t\t//获取所有的属性\n\t\tMethod[] methods = cla.getDeclaredMethods();\n\t\t//获取所有的方法\n\t\tConstructor[] constructors = cla.getDeclaredConstructors();\n\t\t//获取所有的构造方法\n\t\n\t\tModifier.toString(cla.getModifiers())\n\t\t//获取访问权限\n\t\tcla.getSimpleName()\n\t\t//获取名字\n\t\n\t\tmethod.getReturnType()\n\t\t//获取返回类型\n\t\n\t\n// ========================================== 构造方法 ==========================================\n\t如果只写了有参构造方法，那么将无法调用无参构造方法\n\t\n\t\n// ========================================== 初始值 ==========================================\n\t基本数据类型未初始化有初始值\n\t引用数据类型未初始化没有初始值，且为null\n\t\n\t\n// ========================================== 算法设计 ==========================================\n\t直通\n\t判断\n\t最好用筛选算法，不用包含算法\n\t循环\n\t\n\t\n// ========================================== 接口回调(小偷安装监听器) ==========================================\n\t1)定义接口\n\t\tpublic interface MyListener {\n\t\t\tvoid callMeNoPerson();\n\t\t\tvoid callMeHasPerson();\n\t\t}\n\n\t2)注册接口并提供set方法\n\t\tpublic void goOut(){\n\t\t\tSystem.out.println(\"\\t主人出门\");\n\t\t\tif(myListener != null){\n\t\t\t\tmyListener.callMeNoPerson();\n\t\t\t}\n\t\t}\n\t\tpublic void getIn(){\n\t\t\tSystem.out.println(\"\\t主人回家\");\n\t\t\tif(myListener != null){\n\t\t\t\tmyListener.callMeHasPerson();\n\t\t\t}\n\t\t}\n\n\t\tprivate MyListener myListener;\n\t\tpublic void setMyListener(MyListener myListener){\n\t\t\tthis.myListener = myListener;\n\t\t}\n\n\t3)实现接口\n\t\tfinal House house = new House();\n\t\thouse.setMyListener(new MyListener() {\n\t\t\tpublic void callMeNoPerson() {\n\t\t\t\tSystem.out.println(\"\\t\\t提醒你，家里没人！！！\");\n\t\t\t}\n\t\t\tpublic void callMeHasPerson() {\n\t\t\t\tSystem.out.println(\"\\t\\t提醒你，家里有人！！！\");\n\t\t\t}\n\t\t});\n\t\t\n\t注：接口回调实质：底层调用顶层代码\n\n// ========================================== 文件的创建及存取 ==========================================\n\t1)创建文件夹\n\t\tFile folder = new File(folderPath);\n\t\tif (!folder.isDirectory()) {\n\t\t\tfolder.mkdirs();\n\t\t}\n\t2)创建文件\n\t\tFile file = new File(filePath);\n\t\t\tif (!file.exists()) {\n\t\t\ttry {\n\t\t\t\tfile.createNewFile();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t3)写入文件\n\t\tFileWriter fw = new FileWriter(filePath, isAppend);\n\t\t// boolean是否追加\n\t\tBufferedWriter bw = new BufferedWriter(fw);\n\n\t\tbw.write(content);\n\n\t\tbw.close();\n\t\tfw.close();\n\t4)读出文件\n\t\tFileReader fr = new FileReader(filePath);\n\t\tBufferedReader br = new BufferedReader(fr);\n\n\t\tString str;\n\n\t\twhile((str = br.readLine()) != null) {\n\t\t sb.append(str+\"\\n\");\n\t\t}\n\n\t\tbr.close();\n\t\tfr.close();\n\t5)删除文件\n\t\tfile.delete();\n\t\t\n// ========================================== 分割字符串、正则截数据 ==========================================\n\t1)分割字符串\n        String value = \"192.168.128.33\";\n        String[] names = value.split(\"\\\\.\");\n        for (int i = 0; i < names.length; i++) {\n            System.out.println(names[i]);\n        }\n\t\t\n\t2)正则截数据\n        String str = \"_input_charset=\\\"utf-8\\\"&it_b_pay=\\\"30m\\\"&show_url=\\\"m.alipay.com\\\"&sign=\\\"IaNZM3TOiUnJf%2B5%2FxBanH3PrNEONHUedwLwuICFWAE5lbEZZg%2Bp2zeo6D7O36PzhrRya%2BzyjumDNFEuaHyc79cXngkYeyo4%2FQA6ze0iKtQswVoGEl24%2BOkL%2BF%2FvOEmkapKaG%2FMGFn8cacu4XW39TD0KznUSJo1iF0kEC8dRWQVQ%3D\\\"\";\n\n        Pattern p = Pattern.compile(\"(show_url)= ?\\\"(.*?)\\\"\");\n        Matcher m = p.matcher(str);\n        if (m.find()) {\n            // m.group(2)第一个括号内容\n            System.out.println(m.group(2));\n        }\n\t\t\n\t3)正则替换\n        this.progressStr.replaceAll(\"(.{5})(\\\\d{1,3})(%)\", \"$1\" + progress + \"$3\");\n\n```","source":"_posts/2015-9-1Java基础.md","raw":"---\ntitle: Java基础\ndate: 2015-9-1\ntags: [Java]\n---\n\nJava基础\n\n<!--more-->\n\n```\n一、基础语法\n1. JAVA简介\n1.1 java体系结构：j2se,j2ee,j2me\n1.2 java特点：平台无关（虚拟机）,垃圾回收(使得java更加稳定)\n1.3 JDK、JRE与JVM\nJDK:java开发环境 JRE：java运行环境\nJVM：java虚拟机\n1.4 java程序的开发步骤：.java   编译（javac）成  .class 运行(java)  .class文件\n\n\n2. 基本数据类型（标、关、常、变、基）\n2.1 标志符：自己可以取名字的地方称为标志符\n* 标志符的规则：1，只能是字母，数字，下划线，$;不能以数字开头;严格区分大小写；不能使用关键字作为标志符\n* 规则：（字下美人 数 骆驼）\n\n2.2 关键字：关键字都是小写\n \n2.3 常量：如123，\"hello\"\n* 一般使用static final定义常量，如public static final int SLOW_SPEED=1;\n \n2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据\n* 变量申明：类型  变量名字\n* 变量必须先声明，再赋值，再使用\n* 注意区分基本数据类型的变量与引用数据类型的变量\n* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效\n \n2.5 基本数据类型：java数据类型分为两大类：基本数据类型，引用数据类型\n* 基本数据类型分为4类8中：boolean,char,byte,short,int,long,float,double\n* boolean类型只有true，false\n* char是Unicode编码\n* float,double是有精度的（不是绝对精确的）\n \n2.5.1 基本数据类型之间的转换\n* 123默认是int型，12.3默认是double型（其他要在后面追加l、f）\n* <=int的时候，默认转换为int；否则以式子中最大的类型计算\n* 小容量可以隐式转换为大容量；大容量要强转为小容量\n* byte,short,char——>int——>long——>float——>double\n* boolean与其他类型不兼容\n\n\n3. 运算符与流程控制\n3.1 运算符：算术、关系、逻辑、赋值、位运算符\n算数：+、 -、 *、 /、 %、 ++、 --（自加自减++,--，注意顺序）\n关系：>、 <、 ==、 >=、 <=、 !=\n逻辑：&&、||、!\n赋值：=\n\n* 关系运算符的结果是boolean类型\n* 逻辑运算符，短路逻辑的结果也是boolean类型\n* 三元运算符 (逻辑表达式) ? 表达式一 :表达式二\n\n3.1.1 ++、--顺序\n* 如果运算符在前，那么在本条语句运行之前操作\n* 如果运算符在后，那么在本条语句运行之后操作\n\n3.1.2 &与&&、|与||区别\n* &有两种解释：一是按位与，另一个就是且\n* &&只有且，并带有短路功能（如果前面某个条件被否定了，那么将不会执行后面的条件）\n\n3.2 流程控制语句：顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)\n\n\n3.2.1 break,continue,return\n* break，continue一般用在循环中，也可以用在switch中\n* break：跳出最近的整个循环（结束循环）\n* continue：跳过最近整个循环的本次循环，进入下一次循环\n* return：结束整个方法，或带参返回方法体\n\n\n3.2.2 switch的规则：\n* switch只能探测:byte,short,char,int 类型的值（case后面也只能是这4种）\n* switch中小心case的穿透(代码会一直运行，直到遇到break停止，建议每个case写一个break)\n* default：如果没有找到匹配的case，则执行default\n\n\n3.2.3 for，while，do while搞清楚代码的执行流程\n\n\n二、面向对象\n1. 面向对象基本语法\n1.1 定义一个类\n* 使用class关键字定义类，注意类名大写\n* 成员属性：成员属性不赋值会有默认值\n* 成员方法\n* 构造方法：没有任何返回值，名字与类名一样，构造方法的本意是用来初始化对象（初始化对象的属性值）\n\n\n1.2 实例化对象：Student s = new Student();\n* 使用new + 构造方法  实例化对象\n* new 在堆中开辟了对象的空间，并且给属性赋上默认值\n* 接下来调用构造方法，执行构造方法中的代码\n* 最后返回对象的引用\n\n\n1.3  区分基本数据类型与引用数据类型\n* 基本数据类型在内存中只有一块空间：里面存着值（栈）\n* 引用类型的变量在内存中有两块区域，一块是引用本身，另一块是引用所指向的对象（堆栈）\n\n\n1.4  如何操作对象：使用.操作符\n* 使用对象名.属性操作对象的属性（如:stu.age = 18;）\n* 使用对象名.方法调用对象的方法(如：stu.study());\n* this：每个对象都有this，this是指向本身的引用，代表本身\n* super：super代表父类的引用\n\n1.5 类与对象的初始化过程：\n* 静态属性先初始化，而且仅仅初始化一次\n* 首先给静态属性进行声明，并赋默认值，然后代码从上往下执行静态代码块或静态赋值\n* 每创建一个对象，就先实例化成员属性：首先给成员属性声明，赋默认值，然后.执行赋值语句\n* 成员属性初始化后再调用构造方法\n\n\n1.6 垃圾回收机制\n* java虚拟使用垃圾回收机制进行垃圾回收\n* 垃圾回收本身是一个线程(当内存不够用的时候，一般会进行垃圾回收)\n* 垃圾回收不能通过程序来调用，仅仅能够通过System.gc()建议虚拟机进行垃圾回收\n* 当进行垃圾回收时，会调用对象的finalize方法\n\n1.7 单例模式：一个类仅仅能有一个实例(23个设计模式的一种)\n* 构造方法必须为私有的\n* 提供静态的方法来获得对象\n* 提供静态的属性，该属性是该类的一个对象\n\n\n2. 访问控制，方法定义与调用，重载，方法重写\n2.1 package包的使用\n* 使用 package 定义包：package只能放在代码的第一行\n* import：导包，可以到入包下所有 import java.io.*;可以导入具体的一个类 import java.io.Reader;\n* 包的作用:1,分类；2，隐藏（封装的作用），3,便于管理\n* java本身提供了一些包：java.lang(核心类，此包如需要引入),java.util(集合框架以及其他常用类)，java.io(输入输出),java.awt,javax.swing(图形)\n\n\n2.2 四个访问级别，从大到小：public ，protected，friendly，private\npublic  protected  friendly  private\n其他包 Y\nN N  N\n子孙类 Y\nY N  N\n本包 Y\nY Y  N\n本类 Y\nY Y  Y\n\n* 注意访问级别是针对类来讲的，不是针对对象！！！！！！！\n* 注意类的访问修饰符只能使用public 或 默认\n* 学了访问控制后：类的属性都写private，通过set/get方法对属性进行赋值，取值\n\n3. 面向对象的特性\n3.1 封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的接口\n* 封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生变动的影响\n\n3.2 继承：子类自动共享父类的数据和方法\n* 使用extends关键字表示继承\n* 子类继承父类的所有属性\n* 子类继承父类除private（非同包的时候也除默认的方法）外的所有方法\n* 子类对象拥有super引用，表示父类的引用,可以使用super明确的调用父类的方法或属性\n\n* 子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性\n\n3.2.1 重载与重写\n3.2.1.1 重载：一个类当中，有方法名相同，参数不同的方法，称为重载\n* 不能只改返回值：不能根据方法的返回进行重载\n\n\n3.2.1.2 重写：在继承当中，子类将父类的方法重新写了一遍：重写的方法与被重写的方法拥有相同的方法签名（返回值类型，方法名，参数列数）\n* .重写的方法能够改变被重写的方法的访问级别,注意只能是相等或者扩大\n* .重写的方法不能抛出比被重写方法更多的异常，注意只能缩小异常的范围\n* .如果被重写的方法是具体的，重写之后不能改为abstract\n\n3.2.2 构造方法的继承（基类即父类）\n* 子类的构造过程必须调用其基类的构造方法\n* 子类可以在自己的构造过程中使用super(arg[] list）来调用基类的构造方法\n* 如果调用super，必须写在子类构造方法的第一行\n* 可以使用this(arg[] list)调用本类的另外的构造方法\n* 如果子类的构造方法中没有显示的调用基类的构造方法，系统默认调用基类无参数的构造方法\n* 如果子类构造方法中既没有显式的调用基类构造方法，基类中又没有无参数的构造方法，编译出错\n\n3.2.3 对象的转型\n* 一个基类的引用类型变量可以指向其子类的对象\n* 一个基类的引用不可以访问其子类对象新增的成员\n* 可以使用  instanceof 关键字来判断一个引用类型变量所指向的对象是否是制定的类型\n* 子类的对象可以当作基类来使用称作向上转型，反之称为向下转型\n* 子类可以当成父类来使用，无需显示转换\n* 父类引用转换为子类引用要进行强制转换\n* 注意：不兼容的类型之间不能进行相互转换（只有具有直接或间接父子关系的类才是兼容的类型），否则编译时会报错\n* 注意：兼容类型之间的转换要看对象的实际类型，因此向下转化时最好先用instanceof来判断是否是某个类型，再转换，以免报报错\n\n3.3 多态：同一消息可以根据发送对象的不同而采用多种不同的行为方式\n* 实现多态的技术称为：动态绑定，是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用子类相应的方法\n* 多态成立的条件：1.要有继承。2.要有重写。3.父类的引用指向子类的对象。\n* 多态的作用：消除类型之间的耦合关系\n\n3.4 抽象类：用abstract修饰的类称为抽象类（抽象就是自己不实现，让具体的子类去实现）\n* 抽象方法不能有方法体\n* 如果是具体子类，必须重写父类抽象方法\n如果不是具体子类（抽象类），则可以不重写\n* 抽象类中可以没有抽象方法，但是有抽象方法的一定是抽象类\n\n* 完全抽象类一般用接口代替\n\n\n3.5 接口：interface（继承一个类，实现多个接口）\n* 接口中属性只能为public static final类型（可省略）\n* 接口中方法只能为public abstract类型（可省略）\n* 接口也可以继承接口（不是实现），可以重写父接口的方法，等具体子类去实现\n\n* 接口取代完全抽象类\n\n\n3.6 static\n* 因为是属于类，不属于对象，又叫做类变量或类方法\n* 在类开始被初始化的时候就执行\n* 对于该类的所有对象来说，static成员变量和方法只有一份\n\n* 静态可以通过类直接被访问\n* 在类中，静态方法中不能直接访问非静态成员\n* 在类中，静态成员方法没有this引用\n\n\n3.7 final关键字:final表示最终的意思\n* final的变量的值不能够被改变\n* final的成员变量\n* final的局部变量(形参)\n* final的方法不能够被重写\n* final的类不能够被继承\n\n\n\n\n4. 异常处理\njava的异常处理机制\n异常的关键字Exception\ntry,catch,finally,throw,throws关键字\n\n\n4.1 什么是异常，为什么要引入异常\n* java程序运行时出错，java就抛出异常,程序立即终止（也可以说程序崩溃）\n* java将错误信息封装在异常对象里抛出\n* 学会查看异常的信息：异常的名字，异常的信息，程序抛异常的位置\n* java引入异常处理机制，是防止程序出错崩溃\n\n\n4.2 java的异常的分类\n* java的抛出的错误用异常类来表示,java拥有一个异常体系（有许多异常类，并且相互之间具有关系）\n* java里面的所有异常都是Throwable的子类\n* java虚拟机的异常是Error的子类，一般不需进行处理(因为没法进行处理)\n* 除Error之外还有Exception，Exception分为两类：RuntimeException(运行时异常)，被检查异常（除了RuntimeException都是被检查异常）\n* RuntimeException(运行时异常，可以不捕获或声明抛出，编译不会报错,一般是控制不当造成的)，可检查异常（必须捕获或声明抛出，这类异常通常需要检测并处理，一般使用资源时造成的）\n* 几个常见的异常：NullPointerException(空指针),IndexOutOfBoundsException(索引越界),SQLException(数据库异常),IOException(文件异常)\n\n\n4.3 异常的处理方式\n* 使用try,catch,finally进行处理\n* throws在方法后抛出异常，交给调用此方法的处理（可以连续抛）\n* throw在方法体中抛出异常\n\n\n4.4 try,catch,finally中程序的运行过程\n* 尝试执行try里面的语句\n* 一次运行当中最多执行一个catch块，如果没有抛出异常，catch块不执行\n* finally总会执行，不管有没有抛出异常\n* 如果try块里面有return语句，会先运行finally内容\n\n\n4.5 区分RuntimeException与被检查异常\n* RuntimeException不需要捕获或声明抛出（但是如果你捕获或声明抛出也不会有错）\n* 被检查异常必须要捕获或者声明抛出\n\n\n5. 数组\n数组是引用类型，有长度length的属性\n\n\n声明，创建，赋值\n* 数组声明时要指定数组元素的类型，数组的维度，不需要指定数组的长度，如：int[] a;(a是引用)\n* 数组的创建必须new关键字，并且必须给出数组的长度;new int[5]\n* 如果数组的类型是引用类型的数组，数组里面保存的是引用，而不是对象本身\nnew int[] { 1,3,4,5}\n{1,4,5,6}\n\n\n数组的常用操作类\nArrays提供了数组的常用操作的方法（这些方法都是静态的）\n* 排序：sort\n* 返回数组的字符串表示：ToString\n\n\n二维数组\n* 二维数组的内存分析\n* 数组的拷贝使用System.arrayCopy方法\n\n6. 多线程\n1.线程的概念\n* 程序里面不同的执行路径，每一个执行路径称为一个线程\n* 对于单cpu来讲，某一具体的时刻，只会有一个线程在运行，但是CPU的速度非常快，表面上看起来是许多个线程并行执行\n\n\n2.java中线程的创建与启动\n* 两种实现线程的方式:继承Thread，实现Runnable接口\n* 线程的启动：start.启动线程，运行线程的run方法，run方法运行完线程就结束(注意，start只在Thread里面有，start不同于run)\n* 注意一个Thread对象，只能一次调用start方法\n* Thread与Runnable的区别：1：Runnable是接口，比Thread灵活（因为java只能单继承，可以同时实现许多接口）;2.一个Runnable对象可以启动许多个线程，线程之间共享对象（Thread不能共享对象）\n\n\n3.线程的状态：new ,可运行，运行中，阻塞，死亡\n\n\n4.线程的调度\n* Thread.sleep,使该线程睡眠\n* join：线程合并(结果类似与方法调用)\n* yield:线程让出当前CPU，留给其他线程运行\n* 线程优先级:setPriority设置线程优先级\n* 后台线程:setDaemon,必须在线程运行前设置为后台线程.当所有的前台线程都结束了，后台线程自动结束\n* 线程可以指定名字，取得当前线程的方法Thread.currentThread();\n\n\n5.线程同步\n* synchronized:同一时刻，只会有一个线程执行synchronized代码块\n\n\n6.线程间通讯\n* wait(),notify(),notifyAll是Object类中定义的方法\n* wait()：使得运行该代码的线程进入对象的等待池进行等待，线程进入阻塞状态，wait的线程一直阻塞，指导其他线程调用该对象的notify方法唤醒它。\n* notify()：唤醒对象等待池中的一个线程，使得被唤醒的线程进入可运行状态，如果等待池中没有线程，notify什么也不做。\n* notifyAll()：唤醒对象等待池中的所有线程\n* wait(),notify,notifyAll都必须放在同步代码块里面(Synchronized代码块).\n* wait()的线程会释放对象的锁，而Thread.sleep的线程不会释放对象的锁\n\n\n7.线程安全的类：多线程的环境下使用类或者调用类的方法不会造成同步问题的类称为线程安全的类\n* JDK1.1以前，java的集合框架中有一些线程安全的类：如Vector(被ArrayList代替),HashTable(被HashMap代替)\n\n\n7.内部类\n1.内部类:在一个类的里面再定义一个类称为内部类\n* 内部类可以访问外部类的所有的成员变量与成员方法\n* 如果想在外部实例化内部类，必须使用全名:外部类.内部类\n\n2.事件模型：\n* java事件采用委托模型(授权模型),即事件源本身不处理事件，交给事件监听器来处理,因此需要把事件监听器绑定到事件源里面\n* 事件源，事件，事件监听器。事件有许多种，不同的事件使用不同监听器来处理\n* 事件触发后，系统自动调用事件处理方法（不需要手动调用事件处理方法），并传递事件信息作为方法参数\n* 事件编写步骤：1.实现监听器接口(完成事件处理方法)；2.实例化实现监并绑定到事件源\n\n3.事件实现方式\n* 外部类\n* 内部类\n三、高级特性\n1. 常用类\n常用类:lang包不需要导入，其他的包都需要\n\n\n1.Object:所有类的根类\n* 对象的标识：hashCode()\n* 对象的信息:toString()，默认情况下返回  对象类型@地址信息\n* 对象是否一样：equals,默认情况下根据地址比较相等。==比较的是对象的地址，而equals在语义上提供相等的含义\n* 重写equals与toString方法，参照Money类\n\n2.String:不可变字符串，类，继承Object\n* String重写toString，返回字符串的类容。重写了equals根据字符串的内容进行比较\n* 字符串常量\"1234\"与new String(\"1234\")。常量只有一个，new String（）每new一次就一个新的对像\\\n* 字符串的不变性,字符串一旦创建，内容不能改变\n* 字符串的常用操作\n* 字符串的长度：length\n* 搜索一个字符串:indexOf()\n* 字符串的字串:substring(3，8)\n* 取得指定位置的字符:charAt(8);\n* 判断字符串以什么开头(结尾):startsWith(),endWith()\n* 改变字符串的大小写,toUpperCase(),toLowerCase()\n* 去掉字符串两边的空格：trim()\n* 替换字符串里面的某些内容:replace(\"\")\n* 分割字符串：\nStringBuffer:字符串缓冲，可变字符串，提供对字符串进行更改的方法(其他的方法基本与String类似)\n* 从StringBuffer得到String\n* 追加 append（\"abc\"）;\n* 在字符串中间插入insert(3,\"插入的字符串')\n* 删除字符串 delete(3,6);//不包括6\n\n包装类：提供与字符串之间的转换。Integer是int类型的包装类\n\n\n\n\n\n\nMath类：提供数学上的常用操作，注意：里面的方法都是静态的\n\n\nRandom：随即类，产生随机数，另外Math.random()也能产生0～1之间的随机数\n\n\n日期：Date,SimpleDateFormat(日期格式化) ,日历Calendar \n\n\n获得控制台输入：\n* Scanner sc = new Scanner(System.in);\n* String str = sc.next();\n\n\n2. 集合框架\n集合框架:概念上分为：Set(数学集合)，List（列表），Map（字典）\n\n\n1.Collection接口，Iterator接口\n* Set,List继承Collection，采用Iterator进行迭代(参考testCollection)\n\n\n2.Set:元素不能重复，没有顺序\n* HashSet:根据hashCode判断对象是否重复(重写equals和hashCode)\n* TreeSet:里面的元素按顺序排列（元素必须实现Comparable接口）\n\n\n2.List：元素能够重复，有顺序即索引位置，在Collection的基础上提供了按照索引位置进行操作的方法\n* ArrayList:内部使用数组实现list\n* LinkedList：在List的基础上提供了对首，尾元素进行操作的方法:入getLast（），addFirst(Object o)\n* 数组，AarryList，LinkeList有区别\n3.map：键值对的集合，key不能重复，value可以重复\n* 两次put同一键，后面一个会覆盖前面一个\n* 遍历map的方式：先取得keySet，或者entrySet，再用Set的方式(Iterator)进行遍历\n\n4.泛型：List<Integer> list = new ArrayList<Integer>\n* 存入的元素只能是指定类型,如：<Integer>\n* 取出来不需要强制转换,自动是指定类型，如：<Integer>\n\n\n\n\n5.List的常用操作类Collections，不同于Collection，提供对List的排序，随机排列，倒序的方法\n* Arrays使用在数组里面，提供对数组的常用操作，跟Collections有相似之处，\n\n\n6.Comparable接口\n* compareTo()\n* 如果需要进行排序(Collections.sort())，或者放到排序的集合里面(TreeSet,TreeMap),必须实现Comparable接口\n\n注：Set：（集合：不重复，无序）\nHashSet：\nTreeSet：（由大到小）\nList：（列表：重复，有序）\nArrayList：（有下标，查比较快）\nLinkedList：（无下标，增删改较快）\nMap：（字典）\nHashMap：（存放键值对）\nTreeMap：（由大到小）\n\n\n3. JDBC\nJDBC:java操作数据库的一组API(注意模仿)\n\n1.加载驱动\nClass.forName(\"com.mysql.jdbc.Driver\");\n\n\n2.连接数据库\nConnection connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8\",\"root\",\"1234\");\n\n\n3.PrepareStatement预编译语句\nPrepareStatement pst = connection.prepareStatement(\"select * from user where id = ?\");\npst.setObject(1,param);\n\n4.执行\nResultSet rs = pst.executeQuery();//查询\nint result = pst.executeUpdate();//增删改\n\n\n/*\nwhile(rs.next()){\nint id = rs.getInt(\"id\");\nString name = rs.getString(\"name\");\nString pwd = rs.getString(\"pwd\");\n}\n*/\n\n5.关闭数据，从下到上\nrs.close();\npst.close();\nconnection.close();\n\n6.使用事务\n* 设置手动提交：设置connection.setAutoCommit(false);\n* 在最后手动提交：connection.commit();\n* 在catch中捕获异常，使用connection.rollBack();\n\n\n\n4. 图形-布局，常用Swing组件\n图形用户界面（Swing常用组件，布局管理器，事件模型，绘图）\n\n\n1.AWT与Swing\n* AWT是重量级的组件,Swing是轻量级别组件,Swing是从awt的基础上发展过来的\n* swing依然使用awt里面的布局与事件模型\n* 组件：每一个界面元素都称为一个组件，如按钮，文本框\n* 容器的概念：可以容纳其他元素的组件，通过add()往容器里面加入组件，每一个容器都可以设置自己的布局管理器(Layout)\n\n\n2.常用组件\n* 框架：JFrame（有一个默认的内容面板）,一般来将，所有的其他组件都放在JFrame的默认面板上。通过JFrame.getContentPane()获得默认内容面板\n* 面板：JPanel\n* 标签：JLabel\n* 文本输入框：JTextField\n* 文本域(多行文本):JTextArea\n* 单选按钮:JRadioButton\n* 复选框：JCheckBox\n* 下拉列表：JComboBox\n* 按钮:JButton\n\n3。布局管理器（流布局Flowlayout,边框布局 BorderLayout,网格布局GridLayout）\n* 使用setLayout(new FlowLayout())方法设置容器的布局管理器\n* Flowlayout:当拖动界面的时候，元素的大小不会改变，仅改变元素的位置，可以指定居中对齐，左对齐，右对齐等对齐方式\n* BorderLayout：将界面分为东西南北中五部分.:元素大小会发生改变，但是相对位置不变。除中间区域（自动填充）之外，区域里面不加组件，默认大小为0.如果往区域里加入多个组件，只显示最后添加的组件。\n* GridLayout:每个网格的大小相等，位置不发生改变，大小随容器大小变化而变化\n\n\n\n\n5. 图形-事件处理，绘图\n图形用户界面\n\n\n\n四、总结\n1.结构\n常用类、集合框架、JDBC、swing\n↑\n↑\n封装、继承、多态、抽象\ninterface、static、final\n异常、数组、线程\n↑\n↑\n基本数据类型（引用数据类型）（标关常变）\n运算符\n流程控制\n\n2.面向对象\n封装：（高内聚、低耦合）封装就是保证软件内部具有优良的模块性基础，封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生的变动影响。\n继承：（重用性、扩展性）继承是子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性。\n多态：（灵活性、扩展性）不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，多态性增强了程序的灵活性和扩展性。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ========================================== 内存机制 ==========================================\n\t1)Java把内存划分成两种:一种是栈内存，一种是堆内存\n\t\t栈内存用来存放一些基本类型的变量和对象的引用变量。\n\t\t堆内存用来存放由new创建的对象和数组。     \n\n\n\t2)具体的说:\n\t\t堆的优势:可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。\n\t\t缺点:因为要在运行时动态分配内存，存取速度较慢。 \n\t\t栈的优势:数据可以共享，存取速度比堆要快，仅次于寄存器。\n\t\t缺点:存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。\n\n\t\t栈中主要存放一些基本类型的变量(byte，short，int，long，float，double，boolean，char)和对象句柄。 \n\t\t栈的数据共享: \n\t\tint a = 3;\n\t\tint b = 3;\n\t\t先创建一个变量为a的引用，再存3，再创建变量为b的引用，然后查找栈中是否有3这个值，直接将b指向3。\n\n\t3)String是一个特殊的包装类数据:\n\t\tString str = new String(\"abc\"); \n\t\tString str = \"abc\"; \n\t\t两种的形式来创建，第一种是用new()来新建对象的，它会在存放于堆中。每调用一次就会创建一个新的对象。 \n\t\t而第二种是先在栈中创建一个对String类的对象引用变量str，然后查找栈中常量池有没有存放\"abc\"，如果没有，则将\"abc\"存放进栈，并令str指向”abc”，如果已经有”abc” 则直接令str指向“abc”。 \n\n\t\tequals()和==:\n\t\tequals():比较对象里面的数值是否相等\n\t\t==:比较两个引用指向的地址是否相同(堆内存的首地址)\n\n\t\tString str = new String(\"asd\");\n\t\t创建了1个或2个String Object\n\t\t如果常量池(constant pool)没有\"asd\"，则创建了2个\n\t\t如果常量池(constant pool)有\"asd\"，则只创建了1个\n\t\t当然这里的str本身只是一个引用，放在栈里，用来指向堆中创建出来的对象\n\t\tString str=\"aaa\"; 创建了0个或1个String Object\n\t\tString str=\"aaa\"+\"bbb\"+\"ccc\";\n\t\t创建了0个或1个String Object\n\n\n\t4)内存分配策略:\n\t\t按照编译原理的观点，程序运行时的内存分配有三种策略，分别是静态的，栈式的，和堆式的:\n\n\t\t静态存储分配是指在编译时就能确定每个数据目标在运行时刻的存储空间需求，因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在，也不允许有嵌套或者递归的结构出现，因为它们都会导致编译程序无法计算准确的存储空间需求。\n\t\t堆式存储分配也可称为动态存储分配，和静态存储分配相反，在堆式存储方案中，程序对数据区的需求在编译时是完全未知的，只有到运行的时候才能够知道，但是规定在运行中进入一个程序模块时，必须知道该程序模块所需的数据区大小才能够为其分配内存。和我们在数据结构所熟知的栈一样，堆式存储分配按照先进后出的原则进行分配。 \n\t\t栈式存储分配要求在编译时能知道所有变量的存储要求，栈式存储分配要求在过程的入口处必须知道所有的存储要求。\n\n\n// ========================================== String、StringBuffer和StringBuilder的区别 ==========================================\n\t(1)三者在执行速度方面的比较：\n\t\tStringBuilder>StringBuffer>String\n\n　　(2)区别：\n\t\tString：字符串常量(不可改变)(线程安全)\n\t　　 StringBuffer：字符串变量(可改变)(线程非安全)\n\t　　 StringBuilder：字符串变量(可改变)(线程非安全)\n\n　　(3)对于三者使用的总结：\n\t\t1.如果要操作少量的数据用 = String\n\t\t2.多线程操作字符串缓冲区下操作大量数据 = StringBuffer\n\t\t3.单线程操作字符串缓冲区下操作大量数据 = StringBuilder\n\n\n// ========================================== String类的常用方法 ==========================================\n\t// 常用\n\tlength();  返回字符串的长度\n\tvalueOf();  将参数以字符串类型返回\n\tequals();  比较内容是否相同\n\n\t// 截字符串\n\tsubstring();  截取从a开始到b之前的字符串\n\tindexOf();  返回字符或字符串第一次出现的位置(第一个字母为准)\n\n\t// 替换字符串\n\tcontains();  是否包含某字符串\n\treplace();  替换字符串中字符或字符串\n\n\t// 不常用\n\ttoCharArray();\n\t将字符串转换为数组\n\ttrim();  去掉字符串的前端和后端空格\n\n\n// ========================================== List类常用方法 ==========================================\nsize();  得到List的数量\nget();  得到某个下标的对象\ncontains();  是否包含某一项\n\nadd();  增加一项\naddAll();  增加一个集合\nremove();  移除一条数据\nclear();  清除所有数据\n\t\nCollections.sort();\t\tlist排序\nCollections.reverse();\tlist倒置\n\n\n// ========================================== 反射 ==========================================\n\t1)jdk提供反射机制的类：\n\t\tjava.lang.Class;                \n\t\tjava.lang.reflect.Constructor;\n\t\tjava.lang.reflect.Field;        \n\t\tjava.lang.reflect.Method;\n\t\tjava.lang.reflect.Modifier;\n\n\t2)反射获取类的三种方法：\n\t\t//第一种  \n\t\tClass cla = Employee.class;\n\t\t//第二种  \n\t\tEmployeee = new Employee();\n\t\tClass cla = e.getClass();\n\t\t//第三种  \n\t\tClass cla = Class.forName(\"Employee\");\n\t\n\t3)常用方法：\n\t\tField[] fields = cla.getDeclaredFields();\n\t\t//获取所有的属性\n\t\tMethod[] methods = cla.getDeclaredMethods();\n\t\t//获取所有的方法\n\t\tConstructor[] constructors = cla.getDeclaredConstructors();\n\t\t//获取所有的构造方法\n\t\n\t\tModifier.toString(cla.getModifiers())\n\t\t//获取访问权限\n\t\tcla.getSimpleName()\n\t\t//获取名字\n\t\n\t\tmethod.getReturnType()\n\t\t//获取返回类型\n\t\n\t\n// ========================================== 构造方法 ==========================================\n\t如果只写了有参构造方法，那么将无法调用无参构造方法\n\t\n\t\n// ========================================== 初始值 ==========================================\n\t基本数据类型未初始化有初始值\n\t引用数据类型未初始化没有初始值，且为null\n\t\n\t\n// ========================================== 算法设计 ==========================================\n\t直通\n\t判断\n\t最好用筛选算法，不用包含算法\n\t循环\n\t\n\t\n// ========================================== 接口回调(小偷安装监听器) ==========================================\n\t1)定义接口\n\t\tpublic interface MyListener {\n\t\t\tvoid callMeNoPerson();\n\t\t\tvoid callMeHasPerson();\n\t\t}\n\n\t2)注册接口并提供set方法\n\t\tpublic void goOut(){\n\t\t\tSystem.out.println(\"\\t主人出门\");\n\t\t\tif(myListener != null){\n\t\t\t\tmyListener.callMeNoPerson();\n\t\t\t}\n\t\t}\n\t\tpublic void getIn(){\n\t\t\tSystem.out.println(\"\\t主人回家\");\n\t\t\tif(myListener != null){\n\t\t\t\tmyListener.callMeHasPerson();\n\t\t\t}\n\t\t}\n\n\t\tprivate MyListener myListener;\n\t\tpublic void setMyListener(MyListener myListener){\n\t\t\tthis.myListener = myListener;\n\t\t}\n\n\t3)实现接口\n\t\tfinal House house = new House();\n\t\thouse.setMyListener(new MyListener() {\n\t\t\tpublic void callMeNoPerson() {\n\t\t\t\tSystem.out.println(\"\\t\\t提醒你，家里没人！！！\");\n\t\t\t}\n\t\t\tpublic void callMeHasPerson() {\n\t\t\t\tSystem.out.println(\"\\t\\t提醒你，家里有人！！！\");\n\t\t\t}\n\t\t});\n\t\t\n\t注：接口回调实质：底层调用顶层代码\n\n// ========================================== 文件的创建及存取 ==========================================\n\t1)创建文件夹\n\t\tFile folder = new File(folderPath);\n\t\tif (!folder.isDirectory()) {\n\t\t\tfolder.mkdirs();\n\t\t}\n\t2)创建文件\n\t\tFile file = new File(filePath);\n\t\t\tif (!file.exists()) {\n\t\t\ttry {\n\t\t\t\tfile.createNewFile();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t3)写入文件\n\t\tFileWriter fw = new FileWriter(filePath, isAppend);\n\t\t// boolean是否追加\n\t\tBufferedWriter bw = new BufferedWriter(fw);\n\n\t\tbw.write(content);\n\n\t\tbw.close();\n\t\tfw.close();\n\t4)读出文件\n\t\tFileReader fr = new FileReader(filePath);\n\t\tBufferedReader br = new BufferedReader(fr);\n\n\t\tString str;\n\n\t\twhile((str = br.readLine()) != null) {\n\t\t sb.append(str+\"\\n\");\n\t\t}\n\n\t\tbr.close();\n\t\tfr.close();\n\t5)删除文件\n\t\tfile.delete();\n\t\t\n// ========================================== 分割字符串、正则截数据 ==========================================\n\t1)分割字符串\n        String value = \"192.168.128.33\";\n        String[] names = value.split(\"\\\\.\");\n        for (int i = 0; i < names.length; i++) {\n            System.out.println(names[i]);\n        }\n\t\t\n\t2)正则截数据\n        String str = \"_input_charset=\\\"utf-8\\\"&it_b_pay=\\\"30m\\\"&show_url=\\\"m.alipay.com\\\"&sign=\\\"IaNZM3TOiUnJf%2B5%2FxBanH3PrNEONHUedwLwuICFWAE5lbEZZg%2Bp2zeo6D7O36PzhrRya%2BzyjumDNFEuaHyc79cXngkYeyo4%2FQA6ze0iKtQswVoGEl24%2BOkL%2BF%2FvOEmkapKaG%2FMGFn8cacu4XW39TD0KznUSJo1iF0kEC8dRWQVQ%3D\\\"\";\n\n        Pattern p = Pattern.compile(\"(show_url)= ?\\\"(.*?)\\\"\");\n        Matcher m = p.matcher(str);\n        if (m.find()) {\n            // m.group(2)第一个括号内容\n            System.out.println(m.group(2));\n        }\n\t\t\n\t3)正则替换\n        this.progressStr.replaceAll(\"(.{5})(\\\\d{1,3})(%)\", \"$1\" + progress + \"$3\");\n\n```","slug":"2015-9-1Java基础","published":1,"updated":"2022-06-30T16:26:56.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooes0004nkvv16che7ks","content":"<p>Java基础</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、基础语法</span><br><span class=\"line\">1. JAVA简介</span><br><span class=\"line\">1.1 java体系结构：j2se,j2ee,j2me</span><br><span class=\"line\">1.2 java特点：平台无关（虚拟机）,垃圾回收(使得java更加稳定)</span><br><span class=\"line\">1.3 JDK、JRE与JVM</span><br><span class=\"line\">JDK:java开发环境 JRE：java运行环境</span><br><span class=\"line\">JVM：java虚拟机</span><br><span class=\"line\">1.4 java程序的开发步骤：.java   编译（javac）成  .class 运行(java)  .class文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 基本数据类型（标、关、常、变、基）</span><br><span class=\"line\">2.1 标志符：自己可以取名字的地方称为标志符</span><br><span class=\"line\">* 标志符的规则：1，只能是字母，数字，下划线，$;不能以数字开头;严格区分大小写；不能使用关键字作为标志符</span><br><span class=\"line\">* 规则：（字下美人 数 骆驼）</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 关键字：关键字都是小写</span><br><span class=\"line\"> </span><br><span class=\"line\">2.3 常量：如123，&quot;hello&quot;</span><br><span class=\"line\">* 一般使用static final定义常量，如public static final int SLOW_SPEED=1;</span><br><span class=\"line\"> </span><br><span class=\"line\">2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据</span><br><span class=\"line\">* 变量申明：类型  变量名字</span><br><span class=\"line\">* 变量必须先声明，再赋值，再使用</span><br><span class=\"line\">* 注意区分基本数据类型的变量与引用数据类型的变量</span><br><span class=\"line\">* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效</span><br><span class=\"line\"> </span><br><span class=\"line\">2.5 基本数据类型：java数据类型分为两大类：基本数据类型，引用数据类型</span><br><span class=\"line\">* 基本数据类型分为4类8中：boolean,char,byte,short,int,long,float,double</span><br><span class=\"line\">* boolean类型只有true，false</span><br><span class=\"line\">* char是Unicode编码</span><br><span class=\"line\">* float,double是有精度的（不是绝对精确的）</span><br><span class=\"line\"> </span><br><span class=\"line\">2.5.1 基本数据类型之间的转换</span><br><span class=\"line\">* 123默认是int型，12.3默认是double型（其他要在后面追加l、f）</span><br><span class=\"line\">* &lt;=int的时候，默认转换为int；否则以式子中最大的类型计算</span><br><span class=\"line\">* 小容量可以隐式转换为大容量；大容量要强转为小容量</span><br><span class=\"line\">* byte,short,char——&gt;int——&gt;long——&gt;float——&gt;double</span><br><span class=\"line\">* boolean与其他类型不兼容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3. 运算符与流程控制</span><br><span class=\"line\">3.1 运算符：算术、关系、逻辑、赋值、位运算符</span><br><span class=\"line\">算数：+、 -、 *、 /、 %、 ++、 --（自加自减++,--，注意顺序）</span><br><span class=\"line\">关系：&gt;、 &lt;、 ==、 &gt;=、 &lt;=、 !=</span><br><span class=\"line\">逻辑：&amp;&amp;、||、!</span><br><span class=\"line\">赋值：=</span><br><span class=\"line\"></span><br><span class=\"line\">* 关系运算符的结果是boolean类型</span><br><span class=\"line\">* 逻辑运算符，短路逻辑的结果也是boolean类型</span><br><span class=\"line\">* 三元运算符 (逻辑表达式) ? 表达式一 :表达式二</span><br><span class=\"line\"></span><br><span class=\"line\">3.1.1 ++、--顺序</span><br><span class=\"line\">* 如果运算符在前，那么在本条语句运行之前操作</span><br><span class=\"line\">* 如果运算符在后，那么在本条语句运行之后操作</span><br><span class=\"line\"></span><br><span class=\"line\">3.1.2 &amp;与&amp;&amp;、|与||区别</span><br><span class=\"line\">* &amp;有两种解释：一是按位与，另一个就是且</span><br><span class=\"line\">* &amp;&amp;只有且，并带有短路功能（如果前面某个条件被否定了，那么将不会执行后面的条件）</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 流程控制语句：顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1 break,continue,return</span><br><span class=\"line\">* break，continue一般用在循环中，也可以用在switch中</span><br><span class=\"line\">* break：跳出最近的整个循环（结束循环）</span><br><span class=\"line\">* continue：跳过最近整个循环的本次循环，进入下一次循环</span><br><span class=\"line\">* return：结束整个方法，或带参返回方法体</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.2 switch的规则：</span><br><span class=\"line\">* switch只能探测:byte,short,char,int 类型的值（case后面也只能是这4种）</span><br><span class=\"line\">* switch中小心case的穿透(代码会一直运行，直到遇到break停止，建议每个case写一个break)</span><br><span class=\"line\">* default：如果没有找到匹配的case，则执行default</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.3 for，while，do while搞清楚代码的执行流程</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、面向对象</span><br><span class=\"line\">1. 面向对象基本语法</span><br><span class=\"line\">1.1 定义一个类</span><br><span class=\"line\">* 使用class关键字定义类，注意类名大写</span><br><span class=\"line\">* 成员属性：成员属性不赋值会有默认值</span><br><span class=\"line\">* 成员方法</span><br><span class=\"line\">* 构造方法：没有任何返回值，名字与类名一样，构造方法的本意是用来初始化对象（初始化对象的属性值）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.2 实例化对象：Student s = new Student();</span><br><span class=\"line\">* 使用new + 构造方法  实例化对象</span><br><span class=\"line\">* new 在堆中开辟了对象的空间，并且给属性赋上默认值</span><br><span class=\"line\">* 接下来调用构造方法，执行构造方法中的代码</span><br><span class=\"line\">* 最后返回对象的引用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.3  区分基本数据类型与引用数据类型</span><br><span class=\"line\">* 基本数据类型在内存中只有一块空间：里面存着值（栈）</span><br><span class=\"line\">* 引用类型的变量在内存中有两块区域，一块是引用本身，另一块是引用所指向的对象（堆栈）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.4  如何操作对象：使用.操作符</span><br><span class=\"line\">* 使用对象名.属性操作对象的属性（如:stu.age = 18;）</span><br><span class=\"line\">* 使用对象名.方法调用对象的方法(如：stu.study());</span><br><span class=\"line\">* this：每个对象都有this，this是指向本身的引用，代表本身</span><br><span class=\"line\">* super：super代表父类的引用</span><br><span class=\"line\"></span><br><span class=\"line\">1.5 类与对象的初始化过程：</span><br><span class=\"line\">* 静态属性先初始化，而且仅仅初始化一次</span><br><span class=\"line\">* 首先给静态属性进行声明，并赋默认值，然后代码从上往下执行静态代码块或静态赋值</span><br><span class=\"line\">* 每创建一个对象，就先实例化成员属性：首先给成员属性声明，赋默认值，然后.执行赋值语句</span><br><span class=\"line\">* 成员属性初始化后再调用构造方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.6 垃圾回收机制</span><br><span class=\"line\">* java虚拟使用垃圾回收机制进行垃圾回收</span><br><span class=\"line\">* 垃圾回收本身是一个线程(当内存不够用的时候，一般会进行垃圾回收)</span><br><span class=\"line\">* 垃圾回收不能通过程序来调用，仅仅能够通过System.gc()建议虚拟机进行垃圾回收</span><br><span class=\"line\">* 当进行垃圾回收时，会调用对象的finalize方法</span><br><span class=\"line\"></span><br><span class=\"line\">1.7 单例模式：一个类仅仅能有一个实例(23个设计模式的一种)</span><br><span class=\"line\">* 构造方法必须为私有的</span><br><span class=\"line\">* 提供静态的方法来获得对象</span><br><span class=\"line\">* 提供静态的属性，该属性是该类的一个对象</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 访问控制，方法定义与调用，重载，方法重写</span><br><span class=\"line\">2.1 package包的使用</span><br><span class=\"line\">* 使用 package 定义包：package只能放在代码的第一行</span><br><span class=\"line\">* import：导包，可以到入包下所有 import java.io.*;可以导入具体的一个类 import java.io.Reader;</span><br><span class=\"line\">* 包的作用:1,分类；2，隐藏（封装的作用），3,便于管理</span><br><span class=\"line\">* java本身提供了一些包：java.lang(核心类，此包如需要引入),java.util(集合框架以及其他常用类)，java.io(输入输出),java.awt,javax.swing(图形)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.2 四个访问级别，从大到小：public ，protected，friendly，private</span><br><span class=\"line\">public  protected  friendly  private</span><br><span class=\"line\">其他包 Y</span><br><span class=\"line\">N N  N</span><br><span class=\"line\">子孙类 Y</span><br><span class=\"line\">Y N  N</span><br><span class=\"line\">本包 Y</span><br><span class=\"line\">Y Y  N</span><br><span class=\"line\">本类 Y</span><br><span class=\"line\">Y Y  Y</span><br><span class=\"line\"></span><br><span class=\"line\">* 注意访问级别是针对类来讲的，不是针对对象！！！！！！！</span><br><span class=\"line\">* 注意类的访问修饰符只能使用public 或 默认</span><br><span class=\"line\">* 学了访问控制后：类的属性都写private，通过set/get方法对属性进行赋值，取值</span><br><span class=\"line\"></span><br><span class=\"line\">3. 面向对象的特性</span><br><span class=\"line\">3.1 封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的接口</span><br><span class=\"line\">* 封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生变动的影响</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 继承：子类自动共享父类的数据和方法</span><br><span class=\"line\">* 使用extends关键字表示继承</span><br><span class=\"line\">* 子类继承父类的所有属性</span><br><span class=\"line\">* 子类继承父类除private（非同包的时候也除默认的方法）外的所有方法</span><br><span class=\"line\">* 子类对象拥有super引用，表示父类的引用,可以使用super明确的调用父类的方法或属性</span><br><span class=\"line\"></span><br><span class=\"line\">* 子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1 重载与重写</span><br><span class=\"line\">3.2.1.1 重载：一个类当中，有方法名相同，参数不同的方法，称为重载</span><br><span class=\"line\">* 不能只改返回值：不能根据方法的返回进行重载</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1.2 重写：在继承当中，子类将父类的方法重新写了一遍：重写的方法与被重写的方法拥有相同的方法签名（返回值类型，方法名，参数列数）</span><br><span class=\"line\">* .重写的方法能够改变被重写的方法的访问级别,注意只能是相等或者扩大</span><br><span class=\"line\">* .重写的方法不能抛出比被重写方法更多的异常，注意只能缩小异常的范围</span><br><span class=\"line\">* .如果被重写的方法是具体的，重写之后不能改为abstract</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.2 构造方法的继承（基类即父类）</span><br><span class=\"line\">* 子类的构造过程必须调用其基类的构造方法</span><br><span class=\"line\">* 子类可以在自己的构造过程中使用super(arg[] list）来调用基类的构造方法</span><br><span class=\"line\">* 如果调用super，必须写在子类构造方法的第一行</span><br><span class=\"line\">* 可以使用this(arg[] list)调用本类的另外的构造方法</span><br><span class=\"line\">* 如果子类的构造方法中没有显示的调用基类的构造方法，系统默认调用基类无参数的构造方法</span><br><span class=\"line\">* 如果子类构造方法中既没有显式的调用基类构造方法，基类中又没有无参数的构造方法，编译出错</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.3 对象的转型</span><br><span class=\"line\">* 一个基类的引用类型变量可以指向其子类的对象</span><br><span class=\"line\">* 一个基类的引用不可以访问其子类对象新增的成员</span><br><span class=\"line\">* 可以使用  instanceof 关键字来判断一个引用类型变量所指向的对象是否是制定的类型</span><br><span class=\"line\">* 子类的对象可以当作基类来使用称作向上转型，反之称为向下转型</span><br><span class=\"line\">* 子类可以当成父类来使用，无需显示转换</span><br><span class=\"line\">* 父类引用转换为子类引用要进行强制转换</span><br><span class=\"line\">* 注意：不兼容的类型之间不能进行相互转换（只有具有直接或间接父子关系的类才是兼容的类型），否则编译时会报错</span><br><span class=\"line\">* 注意：兼容类型之间的转换要看对象的实际类型，因此向下转化时最好先用instanceof来判断是否是某个类型，再转换，以免报报错</span><br><span class=\"line\"></span><br><span class=\"line\">3.3 多态：同一消息可以根据发送对象的不同而采用多种不同的行为方式</span><br><span class=\"line\">* 实现多态的技术称为：动态绑定，是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用子类相应的方法</span><br><span class=\"line\">* 多态成立的条件：1.要有继承。2.要有重写。3.父类的引用指向子类的对象。</span><br><span class=\"line\">* 多态的作用：消除类型之间的耦合关系</span><br><span class=\"line\"></span><br><span class=\"line\">3.4 抽象类：用abstract修饰的类称为抽象类（抽象就是自己不实现，让具体的子类去实现）</span><br><span class=\"line\">* 抽象方法不能有方法体</span><br><span class=\"line\">* 如果是具体子类，必须重写父类抽象方法</span><br><span class=\"line\">如果不是具体子类（抽象类），则可以不重写</span><br><span class=\"line\">* 抽象类中可以没有抽象方法，但是有抽象方法的一定是抽象类</span><br><span class=\"line\"></span><br><span class=\"line\">* 完全抽象类一般用接口代替</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.5 接口：interface（继承一个类，实现多个接口）</span><br><span class=\"line\">* 接口中属性只能为public static final类型（可省略）</span><br><span class=\"line\">* 接口中方法只能为public abstract类型（可省略）</span><br><span class=\"line\">* 接口也可以继承接口（不是实现），可以重写父接口的方法，等具体子类去实现</span><br><span class=\"line\"></span><br><span class=\"line\">* 接口取代完全抽象类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.6 static</span><br><span class=\"line\">* 因为是属于类，不属于对象，又叫做类变量或类方法</span><br><span class=\"line\">* 在类开始被初始化的时候就执行</span><br><span class=\"line\">* 对于该类的所有对象来说，static成员变量和方法只有一份</span><br><span class=\"line\"></span><br><span class=\"line\">* 静态可以通过类直接被访问</span><br><span class=\"line\">* 在类中，静态方法中不能直接访问非静态成员</span><br><span class=\"line\">* 在类中，静态成员方法没有this引用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.7 final关键字:final表示最终的意思</span><br><span class=\"line\">* final的变量的值不能够被改变</span><br><span class=\"line\">* final的成员变量</span><br><span class=\"line\">* final的局部变量(形参)</span><br><span class=\"line\">* final的方法不能够被重写</span><br><span class=\"line\">* final的类不能够被继承</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4. 异常处理</span><br><span class=\"line\">java的异常处理机制</span><br><span class=\"line\">异常的关键字Exception</span><br><span class=\"line\">try,catch,finally,throw,throws关键字</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.1 什么是异常，为什么要引入异常</span><br><span class=\"line\">* java程序运行时出错，java就抛出异常,程序立即终止（也可以说程序崩溃）</span><br><span class=\"line\">* java将错误信息封装在异常对象里抛出</span><br><span class=\"line\">* 学会查看异常的信息：异常的名字，异常的信息，程序抛异常的位置</span><br><span class=\"line\">* java引入异常处理机制，是防止程序出错崩溃</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.2 java的异常的分类</span><br><span class=\"line\">* java的抛出的错误用异常类来表示,java拥有一个异常体系（有许多异常类，并且相互之间具有关系）</span><br><span class=\"line\">* java里面的所有异常都是Throwable的子类</span><br><span class=\"line\">* java虚拟机的异常是Error的子类，一般不需进行处理(因为没法进行处理)</span><br><span class=\"line\">* 除Error之外还有Exception，Exception分为两类：RuntimeException(运行时异常)，被检查异常（除了RuntimeException都是被检查异常）</span><br><span class=\"line\">* RuntimeException(运行时异常，可以不捕获或声明抛出，编译不会报错,一般是控制不当造成的)，可检查异常（必须捕获或声明抛出，这类异常通常需要检测并处理，一般使用资源时造成的）</span><br><span class=\"line\">* 几个常见的异常：NullPointerException(空指针),IndexOutOfBoundsException(索引越界),SQLException(数据库异常),IOException(文件异常)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.3 异常的处理方式</span><br><span class=\"line\">* 使用try,catch,finally进行处理</span><br><span class=\"line\">* throws在方法后抛出异常，交给调用此方法的处理（可以连续抛）</span><br><span class=\"line\">* throw在方法体中抛出异常</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.4 try,catch,finally中程序的运行过程</span><br><span class=\"line\">* 尝试执行try里面的语句</span><br><span class=\"line\">* 一次运行当中最多执行一个catch块，如果没有抛出异常，catch块不执行</span><br><span class=\"line\">* finally总会执行，不管有没有抛出异常</span><br><span class=\"line\">* 如果try块里面有return语句，会先运行finally内容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.5 区分RuntimeException与被检查异常</span><br><span class=\"line\">* RuntimeException不需要捕获或声明抛出（但是如果你捕获或声明抛出也不会有错）</span><br><span class=\"line\">* 被检查异常必须要捕获或者声明抛出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5. 数组</span><br><span class=\"line\">数组是引用类型，有长度length的属性</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">声明，创建，赋值</span><br><span class=\"line\">* 数组声明时要指定数组元素的类型，数组的维度，不需要指定数组的长度，如：int[] a;(a是引用)</span><br><span class=\"line\">* 数组的创建必须new关键字，并且必须给出数组的长度;new int[5]</span><br><span class=\"line\">* 如果数组的类型是引用类型的数组，数组里面保存的是引用，而不是对象本身</span><br><span class=\"line\">new int[] &#123; 1,3,4,5&#125;</span><br><span class=\"line\">&#123;1,4,5,6&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">数组的常用操作类</span><br><span class=\"line\">Arrays提供了数组的常用操作的方法（这些方法都是静态的）</span><br><span class=\"line\">* 排序：sort</span><br><span class=\"line\">* 返回数组的字符串表示：ToString</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二维数组</span><br><span class=\"line\">* 二维数组的内存分析</span><br><span class=\"line\">* 数组的拷贝使用System.arrayCopy方法</span><br><span class=\"line\"></span><br><span class=\"line\">6. 多线程</span><br><span class=\"line\">1.线程的概念</span><br><span class=\"line\">* 程序里面不同的执行路径，每一个执行路径称为一个线程</span><br><span class=\"line\">* 对于单cpu来讲，某一具体的时刻，只会有一个线程在运行，但是CPU的速度非常快，表面上看起来是许多个线程并行执行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.java中线程的创建与启动</span><br><span class=\"line\">* 两种实现线程的方式:继承Thread，实现Runnable接口</span><br><span class=\"line\">* 线程的启动：start.启动线程，运行线程的run方法，run方法运行完线程就结束(注意，start只在Thread里面有，start不同于run)</span><br><span class=\"line\">* 注意一个Thread对象，只能一次调用start方法</span><br><span class=\"line\">* Thread与Runnable的区别：1：Runnable是接口，比Thread灵活（因为java只能单继承，可以同时实现许多接口）;2.一个Runnable对象可以启动许多个线程，线程之间共享对象（Thread不能共享对象）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.线程的状态：new ,可运行，运行中，阻塞，死亡</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.线程的调度</span><br><span class=\"line\">* Thread.sleep,使该线程睡眠</span><br><span class=\"line\">* join：线程合并(结果类似与方法调用)</span><br><span class=\"line\">* yield:线程让出当前CPU，留给其他线程运行</span><br><span class=\"line\">* 线程优先级:setPriority设置线程优先级</span><br><span class=\"line\">* 后台线程:setDaemon,必须在线程运行前设置为后台线程.当所有的前台线程都结束了，后台线程自动结束</span><br><span class=\"line\">* 线程可以指定名字，取得当前线程的方法Thread.currentThread();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5.线程同步</span><br><span class=\"line\">* synchronized:同一时刻，只会有一个线程执行synchronized代码块</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6.线程间通讯</span><br><span class=\"line\">* wait(),notify(),notifyAll是Object类中定义的方法</span><br><span class=\"line\">* wait()：使得运行该代码的线程进入对象的等待池进行等待，线程进入阻塞状态，wait的线程一直阻塞，指导其他线程调用该对象的notify方法唤醒它。</span><br><span class=\"line\">* notify()：唤醒对象等待池中的一个线程，使得被唤醒的线程进入可运行状态，如果等待池中没有线程，notify什么也不做。</span><br><span class=\"line\">* notifyAll()：唤醒对象等待池中的所有线程</span><br><span class=\"line\">* wait(),notify,notifyAll都必须放在同步代码块里面(Synchronized代码块).</span><br><span class=\"line\">* wait()的线程会释放对象的锁，而Thread.sleep的线程不会释放对象的锁</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.线程安全的类：多线程的环境下使用类或者调用类的方法不会造成同步问题的类称为线程安全的类</span><br><span class=\"line\">* JDK1.1以前，java的集合框架中有一些线程安全的类：如Vector(被ArrayList代替),HashTable(被HashMap代替)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.内部类</span><br><span class=\"line\">1.内部类:在一个类的里面再定义一个类称为内部类</span><br><span class=\"line\">* 内部类可以访问外部类的所有的成员变量与成员方法</span><br><span class=\"line\">* 如果想在外部实例化内部类，必须使用全名:外部类.内部类</span><br><span class=\"line\"></span><br><span class=\"line\">2.事件模型：</span><br><span class=\"line\">* java事件采用委托模型(授权模型),即事件源本身不处理事件，交给事件监听器来处理,因此需要把事件监听器绑定到事件源里面</span><br><span class=\"line\">* 事件源，事件，事件监听器。事件有许多种，不同的事件使用不同监听器来处理</span><br><span class=\"line\">* 事件触发后，系统自动调用事件处理方法（不需要手动调用事件处理方法），并传递事件信息作为方法参数</span><br><span class=\"line\">* 事件编写步骤：1.实现监听器接口(完成事件处理方法)；2.实例化实现监并绑定到事件源</span><br><span class=\"line\"></span><br><span class=\"line\">3.事件实现方式</span><br><span class=\"line\">* 外部类</span><br><span class=\"line\">* 内部类</span><br><span class=\"line\">三、高级特性</span><br><span class=\"line\">1. 常用类</span><br><span class=\"line\">常用类:lang包不需要导入，其他的包都需要</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.Object:所有类的根类</span><br><span class=\"line\">* 对象的标识：hashCode()</span><br><span class=\"line\">* 对象的信息:toString()，默认情况下返回  对象类型@地址信息</span><br><span class=\"line\">* 对象是否一样：equals,默认情况下根据地址比较相等。==比较的是对象的地址，而equals在语义上提供相等的含义</span><br><span class=\"line\">* 重写equals与toString方法，参照Money类</span><br><span class=\"line\"></span><br><span class=\"line\">2.String:不可变字符串，类，继承Object</span><br><span class=\"line\">* String重写toString，返回字符串的类容。重写了equals根据字符串的内容进行比较</span><br><span class=\"line\">* 字符串常量&quot;1234&quot;与new String(&quot;1234&quot;)。常量只有一个，new String（）每new一次就一个新的对像\\</span><br><span class=\"line\">* 字符串的不变性,字符串一旦创建，内容不能改变</span><br><span class=\"line\">* 字符串的常用操作</span><br><span class=\"line\">* 字符串的长度：length</span><br><span class=\"line\">* 搜索一个字符串:indexOf()</span><br><span class=\"line\">* 字符串的字串:substring(3，8)</span><br><span class=\"line\">* 取得指定位置的字符:charAt(8);</span><br><span class=\"line\">* 判断字符串以什么开头(结尾):startsWith(),endWith()</span><br><span class=\"line\">* 改变字符串的大小写,toUpperCase(),toLowerCase()</span><br><span class=\"line\">* 去掉字符串两边的空格：trim()</span><br><span class=\"line\">* 替换字符串里面的某些内容:replace(&quot;&quot;)</span><br><span class=\"line\">* 分割字符串：</span><br><span class=\"line\">StringBuffer:字符串缓冲，可变字符串，提供对字符串进行更改的方法(其他的方法基本与String类似)</span><br><span class=\"line\">* 从StringBuffer得到String</span><br><span class=\"line\">* 追加 append（&quot;abc&quot;）;</span><br><span class=\"line\">* 在字符串中间插入insert(3,&quot;插入的字符串&#x27;)</span><br><span class=\"line\">* 删除字符串 delete(3,6);//不包括6</span><br><span class=\"line\"></span><br><span class=\"line\">包装类：提供与字符串之间的转换。Integer是int类型的包装类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Math类：提供数学上的常用操作，注意：里面的方法都是静态的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Random：随即类，产生随机数，另外Math.random()也能产生0～1之间的随机数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">日期：Date,SimpleDateFormat(日期格式化) ,日历Calendar </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">获得控制台输入：</span><br><span class=\"line\">* Scanner sc = new Scanner(System.in);</span><br><span class=\"line\">* String str = sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 集合框架</span><br><span class=\"line\">集合框架:概念上分为：Set(数学集合)，List（列表），Map（字典）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.Collection接口，Iterator接口</span><br><span class=\"line\">* Set,List继承Collection，采用Iterator进行迭代(参考testCollection)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.Set:元素不能重复，没有顺序</span><br><span class=\"line\">* HashSet:根据hashCode判断对象是否重复(重写equals和hashCode)</span><br><span class=\"line\">* TreeSet:里面的元素按顺序排列（元素必须实现Comparable接口）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.List：元素能够重复，有顺序即索引位置，在Collection的基础上提供了按照索引位置进行操作的方法</span><br><span class=\"line\">* ArrayList:内部使用数组实现list</span><br><span class=\"line\">* LinkedList：在List的基础上提供了对首，尾元素进行操作的方法:入getLast（），addFirst(Object o)</span><br><span class=\"line\">* 数组，AarryList，LinkeList有区别</span><br><span class=\"line\">3.map：键值对的集合，key不能重复，value可以重复</span><br><span class=\"line\">* 两次put同一键，后面一个会覆盖前面一个</span><br><span class=\"line\">* 遍历map的方式：先取得keySet，或者entrySet，再用Set的方式(Iterator)进行遍历</span><br><span class=\"line\"></span><br><span class=\"line\">4.泛型：List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;</span><br><span class=\"line\">* 存入的元素只能是指定类型,如：&lt;Integer&gt;</span><br><span class=\"line\">* 取出来不需要强制转换,自动是指定类型，如：&lt;Integer&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5.List的常用操作类Collections，不同于Collection，提供对List的排序，随机排列，倒序的方法</span><br><span class=\"line\">* Arrays使用在数组里面，提供对数组的常用操作，跟Collections有相似之处，</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6.Comparable接口</span><br><span class=\"line\">* compareTo()</span><br><span class=\"line\">* 如果需要进行排序(Collections.sort())，或者放到排序的集合里面(TreeSet,TreeMap),必须实现Comparable接口</span><br><span class=\"line\"></span><br><span class=\"line\">注：Set：（集合：不重复，无序）</span><br><span class=\"line\">HashSet：</span><br><span class=\"line\">TreeSet：（由大到小）</span><br><span class=\"line\">List：（列表：重复，有序）</span><br><span class=\"line\">ArrayList：（有下标，查比较快）</span><br><span class=\"line\">LinkedList：（无下标，增删改较快）</span><br><span class=\"line\">Map：（字典）</span><br><span class=\"line\">HashMap：（存放键值对）</span><br><span class=\"line\">TreeMap：（由大到小）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3. JDBC</span><br><span class=\"line\">JDBC:java操作数据库的一组API(注意模仿)</span><br><span class=\"line\"></span><br><span class=\"line\">1.加载驱动</span><br><span class=\"line\">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.连接数据库</span><br><span class=\"line\">Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;,&quot;root&quot;,&quot;1234&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.PrepareStatement预编译语句</span><br><span class=\"line\">PrepareStatement pst = connection.prepareStatement(&quot;select * from user where id = ?&quot;);</span><br><span class=\"line\">pst.setObject(1,param);</span><br><span class=\"line\"></span><br><span class=\"line\">4.执行</span><br><span class=\"line\">ResultSet rs = pst.executeQuery();//查询</span><br><span class=\"line\">int result = pst.executeUpdate();//增删改</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">while(rs.next())&#123;</span><br><span class=\"line\">int id = rs.getInt(&quot;id&quot;);</span><br><span class=\"line\">String name = rs.getString(&quot;name&quot;);</span><br><span class=\"line\">String pwd = rs.getString(&quot;pwd&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">5.关闭数据，从下到上</span><br><span class=\"line\">rs.close();</span><br><span class=\"line\">pst.close();</span><br><span class=\"line\">connection.close();</span><br><span class=\"line\"></span><br><span class=\"line\">6.使用事务</span><br><span class=\"line\">* 设置手动提交：设置connection.setAutoCommit(false);</span><br><span class=\"line\">* 在最后手动提交：connection.commit();</span><br><span class=\"line\">* 在catch中捕获异常，使用connection.rollBack();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4. 图形-布局，常用Swing组件</span><br><span class=\"line\">图形用户界面（Swing常用组件，布局管理器，事件模型，绘图）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.AWT与Swing</span><br><span class=\"line\">* AWT是重量级的组件,Swing是轻量级别组件,Swing是从awt的基础上发展过来的</span><br><span class=\"line\">* swing依然使用awt里面的布局与事件模型</span><br><span class=\"line\">* 组件：每一个界面元素都称为一个组件，如按钮，文本框</span><br><span class=\"line\">* 容器的概念：可以容纳其他元素的组件，通过add()往容器里面加入组件，每一个容器都可以设置自己的布局管理器(Layout)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.常用组件</span><br><span class=\"line\">* 框架：JFrame（有一个默认的内容面板）,一般来将，所有的其他组件都放在JFrame的默认面板上。通过JFrame.getContentPane()获得默认内容面板</span><br><span class=\"line\">* 面板：JPanel</span><br><span class=\"line\">* 标签：JLabel</span><br><span class=\"line\">* 文本输入框：JTextField</span><br><span class=\"line\">* 文本域(多行文本):JTextArea</span><br><span class=\"line\">* 单选按钮:JRadioButton</span><br><span class=\"line\">* 复选框：JCheckBox</span><br><span class=\"line\">* 下拉列表：JComboBox</span><br><span class=\"line\">* 按钮:JButton</span><br><span class=\"line\"></span><br><span class=\"line\">3。布局管理器（流布局Flowlayout,边框布局 BorderLayout,网格布局GridLayout）</span><br><span class=\"line\">* 使用setLayout(new FlowLayout())方法设置容器的布局管理器</span><br><span class=\"line\">* Flowlayout:当拖动界面的时候，元素的大小不会改变，仅改变元素的位置，可以指定居中对齐，左对齐，右对齐等对齐方式</span><br><span class=\"line\">* BorderLayout：将界面分为东西南北中五部分.:元素大小会发生改变，但是相对位置不变。除中间区域（自动填充）之外，区域里面不加组件，默认大小为0.如果往区域里加入多个组件，只显示最后添加的组件。</span><br><span class=\"line\">* GridLayout:每个网格的大小相等，位置不发生改变，大小随容器大小变化而变化</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5. 图形-事件处理，绘图</span><br><span class=\"line\">图形用户界面</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">四、总结</span><br><span class=\"line\">1.结构</span><br><span class=\"line\">常用类、集合框架、JDBC、swing</span><br><span class=\"line\">↑</span><br><span class=\"line\">↑</span><br><span class=\"line\">封装、继承、多态、抽象</span><br><span class=\"line\">interface、static、final</span><br><span class=\"line\">异常、数组、线程</span><br><span class=\"line\">↑</span><br><span class=\"line\">↑</span><br><span class=\"line\">基本数据类型（引用数据类型）（标关常变）</span><br><span class=\"line\">运算符</span><br><span class=\"line\">流程控制</span><br><span class=\"line\"></span><br><span class=\"line\">2.面向对象</span><br><span class=\"line\">封装：（高内聚、低耦合）封装就是保证软件内部具有优良的模块性基础，封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生的变动影响。</span><br><span class=\"line\">继承：（重用性、扩展性）继承是子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性。</span><br><span class=\"line\">多态：（灵活性、扩展性）不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，多态性增强了程序的灵活性和扩展性。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 内存机制 ==========================================</span><br><span class=\"line\">\t1)Java把内存划分成两种:一种是栈内存，一种是堆内存</span><br><span class=\"line\">\t\t栈内存用来存放一些基本类型的变量和对象的引用变量。</span><br><span class=\"line\">\t\t堆内存用来存放由new创建的对象和数组。     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t2)具体的说:</span><br><span class=\"line\">\t\t堆的优势:可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。</span><br><span class=\"line\">\t\t缺点:因为要在运行时动态分配内存，存取速度较慢。 </span><br><span class=\"line\">\t\t栈的优势:数据可以共享，存取速度比堆要快，仅次于寄存器。</span><br><span class=\"line\">\t\t缺点:存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t栈中主要存放一些基本类型的变量(byte，short，int，long，float，double，boolean，char)和对象句柄。 </span><br><span class=\"line\">\t\t栈的数据共享: </span><br><span class=\"line\">\t\tint a = 3;</span><br><span class=\"line\">\t\tint b = 3;</span><br><span class=\"line\">\t\t先创建一个变量为a的引用，再存3，再创建变量为b的引用，然后查找栈中是否有3这个值，直接将b指向3。</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)String是一个特殊的包装类数据:</span><br><span class=\"line\">\t\tString str = new String(&quot;abc&quot;); </span><br><span class=\"line\">\t\tString str = &quot;abc&quot;; </span><br><span class=\"line\">\t\t两种的形式来创建，第一种是用new()来新建对象的，它会在存放于堆中。每调用一次就会创建一个新的对象。 </span><br><span class=\"line\">\t\t而第二种是先在栈中创建一个对String类的对象引用变量str，然后查找栈中常量池有没有存放&quot;abc&quot;，如果没有，则将&quot;abc&quot;存放进栈，并令str指向”abc”，如果已经有”abc” 则直接令str指向“abc”。 </span><br><span class=\"line\"></span><br><span class=\"line\">\t\tequals()和==:</span><br><span class=\"line\">\t\tequals():比较对象里面的数值是否相等</span><br><span class=\"line\">\t\t==:比较两个引用指向的地址是否相同(堆内存的首地址)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString str = new String(&quot;asd&quot;);</span><br><span class=\"line\">\t\t创建了1个或2个String Object</span><br><span class=\"line\">\t\t如果常量池(constant pool)没有&quot;asd&quot;，则创建了2个</span><br><span class=\"line\">\t\t如果常量池(constant pool)有&quot;asd&quot;，则只创建了1个</span><br><span class=\"line\">\t\t当然这里的str本身只是一个引用，放在栈里，用来指向堆中创建出来的对象</span><br><span class=\"line\">\t\tString str=&quot;aaa&quot;; 创建了0个或1个String Object</span><br><span class=\"line\">\t\tString str=&quot;aaa&quot;+&quot;bbb&quot;+&quot;ccc&quot;;</span><br><span class=\"line\">\t\t创建了0个或1个String Object</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t4)内存分配策略:</span><br><span class=\"line\">\t\t按照编译原理的观点，程序运行时的内存分配有三种策略，分别是静态的，栈式的，和堆式的:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t静态存储分配是指在编译时就能确定每个数据目标在运行时刻的存储空间需求，因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在，也不允许有嵌套或者递归的结构出现，因为它们都会导致编译程序无法计算准确的存储空间需求。</span><br><span class=\"line\">\t\t堆式存储分配也可称为动态存储分配，和静态存储分配相反，在堆式存储方案中，程序对数据区的需求在编译时是完全未知的，只有到运行的时候才能够知道，但是规定在运行中进入一个程序模块时，必须知道该程序模块所需的数据区大小才能够为其分配内存。和我们在数据结构所熟知的栈一样，堆式存储分配按照先进后出的原则进行分配。 </span><br><span class=\"line\">\t\t栈式存储分配要求在编译时能知道所有变量的存储要求，栈式存储分配要求在过程的入口处必须知道所有的存储要求。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== String、StringBuffer和StringBuilder的区别 ==========================================</span><br><span class=\"line\">\t(1)三者在执行速度方面的比较：</span><br><span class=\"line\">\t\tStringBuilder&gt;StringBuffer&gt;String</span><br><span class=\"line\"></span><br><span class=\"line\">　　(2)区别：</span><br><span class=\"line\">\t\tString：字符串常量(不可改变)(线程安全)</span><br><span class=\"line\">\t　　 StringBuffer：字符串变量(可改变)(线程非安全)</span><br><span class=\"line\">\t　　 StringBuilder：字符串变量(可改变)(线程非安全)</span><br><span class=\"line\"></span><br><span class=\"line\">　　(3)对于三者使用的总结：</span><br><span class=\"line\">\t\t1.如果要操作少量的数据用 = String</span><br><span class=\"line\">\t\t2.多线程操作字符串缓冲区下操作大量数据 = StringBuffer</span><br><span class=\"line\">\t\t3.单线程操作字符串缓冲区下操作大量数据 = StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== String类的常用方法 ==========================================</span><br><span class=\"line\">\t// 常用</span><br><span class=\"line\">\tlength();  返回字符串的长度</span><br><span class=\"line\">\tvalueOf();  将参数以字符串类型返回</span><br><span class=\"line\">\tequals();  比较内容是否相同</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 截字符串</span><br><span class=\"line\">\tsubstring();  截取从a开始到b之前的字符串</span><br><span class=\"line\">\tindexOf();  返回字符或字符串第一次出现的位置(第一个字母为准)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 替换字符串</span><br><span class=\"line\">\tcontains();  是否包含某字符串</span><br><span class=\"line\">\treplace();  替换字符串中字符或字符串</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 不常用</span><br><span class=\"line\">\ttoCharArray();</span><br><span class=\"line\">\t将字符串转换为数组</span><br><span class=\"line\">\ttrim();  去掉字符串的前端和后端空格</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== List类常用方法 ==========================================</span><br><span class=\"line\">size();  得到List的数量</span><br><span class=\"line\">get();  得到某个下标的对象</span><br><span class=\"line\">contains();  是否包含某一项</span><br><span class=\"line\"></span><br><span class=\"line\">add();  增加一项</span><br><span class=\"line\">addAll();  增加一个集合</span><br><span class=\"line\">remove();  移除一条数据</span><br><span class=\"line\">clear();  清除所有数据</span><br><span class=\"line\">\t</span><br><span class=\"line\">Collections.sort();\t\tlist排序</span><br><span class=\"line\">Collections.reverse();\tlist倒置</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 反射 ==========================================</span><br><span class=\"line\">\t1)jdk提供反射机制的类：</span><br><span class=\"line\">\t\tjava.lang.Class;                </span><br><span class=\"line\">\t\tjava.lang.reflect.Constructor;</span><br><span class=\"line\">\t\tjava.lang.reflect.Field;        </span><br><span class=\"line\">\t\tjava.lang.reflect.Method;</span><br><span class=\"line\">\t\tjava.lang.reflect.Modifier;</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)反射获取类的三种方法：</span><br><span class=\"line\">\t\t//第一种  </span><br><span class=\"line\">\t\tClass cla = Employee.class;</span><br><span class=\"line\">\t\t//第二种  </span><br><span class=\"line\">\t\tEmployeee = new Employee();</span><br><span class=\"line\">\t\tClass cla = e.getClass();</span><br><span class=\"line\">\t\t//第三种  </span><br><span class=\"line\">\t\tClass cla = Class.forName(&quot;Employee&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3)常用方法：</span><br><span class=\"line\">\t\tField[] fields = cla.getDeclaredFields();</span><br><span class=\"line\">\t\t//获取所有的属性</span><br><span class=\"line\">\t\tMethod[] methods = cla.getDeclaredMethods();</span><br><span class=\"line\">\t\t//获取所有的方法</span><br><span class=\"line\">\t\tConstructor[] constructors = cla.getDeclaredConstructors();</span><br><span class=\"line\">\t\t//获取所有的构造方法</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tModifier.toString(cla.getModifiers())</span><br><span class=\"line\">\t\t//获取访问权限</span><br><span class=\"line\">\t\tcla.getSimpleName()</span><br><span class=\"line\">\t\t//获取名字</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tmethod.getReturnType()</span><br><span class=\"line\">\t\t//获取返回类型</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 构造方法 ==========================================</span><br><span class=\"line\">\t如果只写了有参构造方法，那么将无法调用无参构造方法</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 初始值 ==========================================</span><br><span class=\"line\">\t基本数据类型未初始化有初始值</span><br><span class=\"line\">\t引用数据类型未初始化没有初始值，且为null</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 算法设计 ==========================================</span><br><span class=\"line\">\t直通</span><br><span class=\"line\">\t判断</span><br><span class=\"line\">\t最好用筛选算法，不用包含算法</span><br><span class=\"line\">\t循环</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 接口回调(小偷安装监听器) ==========================================</span><br><span class=\"line\">\t1)定义接口</span><br><span class=\"line\">\t\tpublic interface MyListener &#123;</span><br><span class=\"line\">\t\t\tvoid callMeNoPerson();</span><br><span class=\"line\">\t\t\tvoid callMeHasPerson();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)注册接口并提供set方法</span><br><span class=\"line\">\t\tpublic void goOut()&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t主人出门&quot;);</span><br><span class=\"line\">\t\t\tif(myListener != null)&#123;</span><br><span class=\"line\">\t\t\t\tmyListener.callMeNoPerson();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpublic void getIn()&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t主人回家&quot;);</span><br><span class=\"line\">\t\t\tif(myListener != null)&#123;</span><br><span class=\"line\">\t\t\t\tmyListener.callMeHasPerson();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprivate MyListener myListener;</span><br><span class=\"line\">\t\tpublic void setMyListener(MyListener myListener)&#123;</span><br><span class=\"line\">\t\t\tthis.myListener = myListener;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)实现接口</span><br><span class=\"line\">\t\tfinal House house = new House();</span><br><span class=\"line\">\t\thouse.setMyListener(new MyListener() &#123;</span><br><span class=\"line\">\t\t\tpublic void callMeNoPerson() &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;\\t\\t提醒你，家里没人！！！&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tpublic void callMeHasPerson() &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;\\t\\t提醒你，家里有人！！！&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t注：接口回调实质：底层调用顶层代码</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 文件的创建及存取 ==========================================</span><br><span class=\"line\">\t1)创建文件夹</span><br><span class=\"line\">\t\tFile folder = new File(folderPath);</span><br><span class=\"line\">\t\tif (!folder.isDirectory()) &#123;</span><br><span class=\"line\">\t\t\tfolder.mkdirs();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t2)创建文件</span><br><span class=\"line\">\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tif (!file.exists()) &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tfile.createNewFile();</span><br><span class=\"line\">\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t3)写入文件</span><br><span class=\"line\">\t\tFileWriter fw = new FileWriter(filePath, isAppend);</span><br><span class=\"line\">\t\t// boolean是否追加</span><br><span class=\"line\">\t\tBufferedWriter bw = new BufferedWriter(fw);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbw.write(content);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbw.close();</span><br><span class=\"line\">\t\tfw.close();</span><br><span class=\"line\">\t4)读出文件</span><br><span class=\"line\">\t\tFileReader fr = new FileReader(filePath);</span><br><span class=\"line\">\t\tBufferedReader br = new BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString str;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile((str = br.readLine()) != null) &#123;</span><br><span class=\"line\">\t\t sb.append(str+&quot;\\n&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbr.close();</span><br><span class=\"line\">\t\tfr.close();</span><br><span class=\"line\">\t5)删除文件</span><br><span class=\"line\">\t\tfile.delete();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">// ========================================== 分割字符串、正则截数据 ==========================================</span><br><span class=\"line\">\t1)分割字符串</span><br><span class=\"line\">        String value = &quot;192.168.128.33&quot;;</span><br><span class=\"line\">        String[] names = value.split(&quot;\\\\.&quot;);</span><br><span class=\"line\">        for (int i = 0; i &lt; names.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(names[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t2)正则截数据</span><br><span class=\"line\">        String str = &quot;_input_charset=\\&quot;utf-8\\&quot;&amp;it_b_pay=\\&quot;30m\\&quot;&amp;show_url=\\&quot;m.alipay.com\\&quot;&amp;sign=\\&quot;IaNZM3TOiUnJf%2B5%2FxBanH3PrNEONHUedwLwuICFWAE5lbEZZg%2Bp2zeo6D7O36PzhrRya%2BzyjumDNFEuaHyc79cXngkYeyo4%2FQA6ze0iKtQswVoGEl24%2BOkL%2BF%2FvOEmkapKaG%2FMGFn8cacu4XW39TD0KznUSJo1iF0kEC8dRWQVQ%3D\\&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">        Pattern p = Pattern.compile(&quot;(show_url)= ?\\&quot;(.*?)\\&quot;&quot;);</span><br><span class=\"line\">        Matcher m = p.matcher(str);</span><br><span class=\"line\">        if (m.find()) &#123;</span><br><span class=\"line\">            // m.group(2)第一个括号内容</span><br><span class=\"line\">            System.out.println(m.group(2));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t3)正则替换</span><br><span class=\"line\">        this.progressStr.replaceAll(&quot;(.&#123;5&#125;)(\\\\d&#123;1,3&#125;)(%)&quot;, &quot;$1&quot; + progress + &quot;$3&quot;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Java基础</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、基础语法</span><br><span class=\"line\">1. JAVA简介</span><br><span class=\"line\">1.1 java体系结构：j2se,j2ee,j2me</span><br><span class=\"line\">1.2 java特点：平台无关（虚拟机）,垃圾回收(使得java更加稳定)</span><br><span class=\"line\">1.3 JDK、JRE与JVM</span><br><span class=\"line\">JDK:java开发环境 JRE：java运行环境</span><br><span class=\"line\">JVM：java虚拟机</span><br><span class=\"line\">1.4 java程序的开发步骤：.java   编译（javac）成  .class 运行(java)  .class文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 基本数据类型（标、关、常、变、基）</span><br><span class=\"line\">2.1 标志符：自己可以取名字的地方称为标志符</span><br><span class=\"line\">* 标志符的规则：1，只能是字母，数字，下划线，$;不能以数字开头;严格区分大小写；不能使用关键字作为标志符</span><br><span class=\"line\">* 规则：（字下美人 数 骆驼）</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 关键字：关键字都是小写</span><br><span class=\"line\"> </span><br><span class=\"line\">2.3 常量：如123，&quot;hello&quot;</span><br><span class=\"line\">* 一般使用static final定义常量，如public static final int SLOW_SPEED=1;</span><br><span class=\"line\"> </span><br><span class=\"line\">2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据</span><br><span class=\"line\">* 变量申明：类型  变量名字</span><br><span class=\"line\">* 变量必须先声明，再赋值，再使用</span><br><span class=\"line\">* 注意区分基本数据类型的变量与引用数据类型的变量</span><br><span class=\"line\">* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效</span><br><span class=\"line\"> </span><br><span class=\"line\">2.5 基本数据类型：java数据类型分为两大类：基本数据类型，引用数据类型</span><br><span class=\"line\">* 基本数据类型分为4类8中：boolean,char,byte,short,int,long,float,double</span><br><span class=\"line\">* boolean类型只有true，false</span><br><span class=\"line\">* char是Unicode编码</span><br><span class=\"line\">* float,double是有精度的（不是绝对精确的）</span><br><span class=\"line\"> </span><br><span class=\"line\">2.5.1 基本数据类型之间的转换</span><br><span class=\"line\">* 123默认是int型，12.3默认是double型（其他要在后面追加l、f）</span><br><span class=\"line\">* &lt;=int的时候，默认转换为int；否则以式子中最大的类型计算</span><br><span class=\"line\">* 小容量可以隐式转换为大容量；大容量要强转为小容量</span><br><span class=\"line\">* byte,short,char——&gt;int——&gt;long——&gt;float——&gt;double</span><br><span class=\"line\">* boolean与其他类型不兼容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3. 运算符与流程控制</span><br><span class=\"line\">3.1 运算符：算术、关系、逻辑、赋值、位运算符</span><br><span class=\"line\">算数：+、 -、 *、 /、 %、 ++、 --（自加自减++,--，注意顺序）</span><br><span class=\"line\">关系：&gt;、 &lt;、 ==、 &gt;=、 &lt;=、 !=</span><br><span class=\"line\">逻辑：&amp;&amp;、||、!</span><br><span class=\"line\">赋值：=</span><br><span class=\"line\"></span><br><span class=\"line\">* 关系运算符的结果是boolean类型</span><br><span class=\"line\">* 逻辑运算符，短路逻辑的结果也是boolean类型</span><br><span class=\"line\">* 三元运算符 (逻辑表达式) ? 表达式一 :表达式二</span><br><span class=\"line\"></span><br><span class=\"line\">3.1.1 ++、--顺序</span><br><span class=\"line\">* 如果运算符在前，那么在本条语句运行之前操作</span><br><span class=\"line\">* 如果运算符在后，那么在本条语句运行之后操作</span><br><span class=\"line\"></span><br><span class=\"line\">3.1.2 &amp;与&amp;&amp;、|与||区别</span><br><span class=\"line\">* &amp;有两种解释：一是按位与，另一个就是且</span><br><span class=\"line\">* &amp;&amp;只有且，并带有短路功能（如果前面某个条件被否定了，那么将不会执行后面的条件）</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 流程控制语句：顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1 break,continue,return</span><br><span class=\"line\">* break，continue一般用在循环中，也可以用在switch中</span><br><span class=\"line\">* break：跳出最近的整个循环（结束循环）</span><br><span class=\"line\">* continue：跳过最近整个循环的本次循环，进入下一次循环</span><br><span class=\"line\">* return：结束整个方法，或带参返回方法体</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.2 switch的规则：</span><br><span class=\"line\">* switch只能探测:byte,short,char,int 类型的值（case后面也只能是这4种）</span><br><span class=\"line\">* switch中小心case的穿透(代码会一直运行，直到遇到break停止，建议每个case写一个break)</span><br><span class=\"line\">* default：如果没有找到匹配的case，则执行default</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.3 for，while，do while搞清楚代码的执行流程</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、面向对象</span><br><span class=\"line\">1. 面向对象基本语法</span><br><span class=\"line\">1.1 定义一个类</span><br><span class=\"line\">* 使用class关键字定义类，注意类名大写</span><br><span class=\"line\">* 成员属性：成员属性不赋值会有默认值</span><br><span class=\"line\">* 成员方法</span><br><span class=\"line\">* 构造方法：没有任何返回值，名字与类名一样，构造方法的本意是用来初始化对象（初始化对象的属性值）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.2 实例化对象：Student s = new Student();</span><br><span class=\"line\">* 使用new + 构造方法  实例化对象</span><br><span class=\"line\">* new 在堆中开辟了对象的空间，并且给属性赋上默认值</span><br><span class=\"line\">* 接下来调用构造方法，执行构造方法中的代码</span><br><span class=\"line\">* 最后返回对象的引用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.3  区分基本数据类型与引用数据类型</span><br><span class=\"line\">* 基本数据类型在内存中只有一块空间：里面存着值（栈）</span><br><span class=\"line\">* 引用类型的变量在内存中有两块区域，一块是引用本身，另一块是引用所指向的对象（堆栈）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.4  如何操作对象：使用.操作符</span><br><span class=\"line\">* 使用对象名.属性操作对象的属性（如:stu.age = 18;）</span><br><span class=\"line\">* 使用对象名.方法调用对象的方法(如：stu.study());</span><br><span class=\"line\">* this：每个对象都有this，this是指向本身的引用，代表本身</span><br><span class=\"line\">* super：super代表父类的引用</span><br><span class=\"line\"></span><br><span class=\"line\">1.5 类与对象的初始化过程：</span><br><span class=\"line\">* 静态属性先初始化，而且仅仅初始化一次</span><br><span class=\"line\">* 首先给静态属性进行声明，并赋默认值，然后代码从上往下执行静态代码块或静态赋值</span><br><span class=\"line\">* 每创建一个对象，就先实例化成员属性：首先给成员属性声明，赋默认值，然后.执行赋值语句</span><br><span class=\"line\">* 成员属性初始化后再调用构造方法</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.6 垃圾回收机制</span><br><span class=\"line\">* java虚拟使用垃圾回收机制进行垃圾回收</span><br><span class=\"line\">* 垃圾回收本身是一个线程(当内存不够用的时候，一般会进行垃圾回收)</span><br><span class=\"line\">* 垃圾回收不能通过程序来调用，仅仅能够通过System.gc()建议虚拟机进行垃圾回收</span><br><span class=\"line\">* 当进行垃圾回收时，会调用对象的finalize方法</span><br><span class=\"line\"></span><br><span class=\"line\">1.7 单例模式：一个类仅仅能有一个实例(23个设计模式的一种)</span><br><span class=\"line\">* 构造方法必须为私有的</span><br><span class=\"line\">* 提供静态的方法来获得对象</span><br><span class=\"line\">* 提供静态的属性，该属性是该类的一个对象</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 访问控制，方法定义与调用，重载，方法重写</span><br><span class=\"line\">2.1 package包的使用</span><br><span class=\"line\">* 使用 package 定义包：package只能放在代码的第一行</span><br><span class=\"line\">* import：导包，可以到入包下所有 import java.io.*;可以导入具体的一个类 import java.io.Reader;</span><br><span class=\"line\">* 包的作用:1,分类；2，隐藏（封装的作用），3,便于管理</span><br><span class=\"line\">* java本身提供了一些包：java.lang(核心类，此包如需要引入),java.util(集合框架以及其他常用类)，java.io(输入输出),java.awt,javax.swing(图形)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.2 四个访问级别，从大到小：public ，protected，friendly，private</span><br><span class=\"line\">public  protected  friendly  private</span><br><span class=\"line\">其他包 Y</span><br><span class=\"line\">N N  N</span><br><span class=\"line\">子孙类 Y</span><br><span class=\"line\">Y N  N</span><br><span class=\"line\">本包 Y</span><br><span class=\"line\">Y Y  N</span><br><span class=\"line\">本类 Y</span><br><span class=\"line\">Y Y  Y</span><br><span class=\"line\"></span><br><span class=\"line\">* 注意访问级别是针对类来讲的，不是针对对象！！！！！！！</span><br><span class=\"line\">* 注意类的访问修饰符只能使用public 或 默认</span><br><span class=\"line\">* 学了访问控制后：类的属性都写private，通过set/get方法对属性进行赋值，取值</span><br><span class=\"line\"></span><br><span class=\"line\">3. 面向对象的特性</span><br><span class=\"line\">3.1 封装：封装是把过程和数据包围起来，对数据的访问只能通过已定义的接口</span><br><span class=\"line\">* 封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生变动的影响</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 继承：子类自动共享父类的数据和方法</span><br><span class=\"line\">* 使用extends关键字表示继承</span><br><span class=\"line\">* 子类继承父类的所有属性</span><br><span class=\"line\">* 子类继承父类除private（非同包的时候也除默认的方法）外的所有方法</span><br><span class=\"line\">* 子类对象拥有super引用，表示父类的引用,可以使用super明确的调用父类的方法或属性</span><br><span class=\"line\"></span><br><span class=\"line\">* 子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1 重载与重写</span><br><span class=\"line\">3.2.1.1 重载：一个类当中，有方法名相同，参数不同的方法，称为重载</span><br><span class=\"line\">* 不能只改返回值：不能根据方法的返回进行重载</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.2.1.2 重写：在继承当中，子类将父类的方法重新写了一遍：重写的方法与被重写的方法拥有相同的方法签名（返回值类型，方法名，参数列数）</span><br><span class=\"line\">* .重写的方法能够改变被重写的方法的访问级别,注意只能是相等或者扩大</span><br><span class=\"line\">* .重写的方法不能抛出比被重写方法更多的异常，注意只能缩小异常的范围</span><br><span class=\"line\">* .如果被重写的方法是具体的，重写之后不能改为abstract</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.2 构造方法的继承（基类即父类）</span><br><span class=\"line\">* 子类的构造过程必须调用其基类的构造方法</span><br><span class=\"line\">* 子类可以在自己的构造过程中使用super(arg[] list）来调用基类的构造方法</span><br><span class=\"line\">* 如果调用super，必须写在子类构造方法的第一行</span><br><span class=\"line\">* 可以使用this(arg[] list)调用本类的另外的构造方法</span><br><span class=\"line\">* 如果子类的构造方法中没有显示的调用基类的构造方法，系统默认调用基类无参数的构造方法</span><br><span class=\"line\">* 如果子类构造方法中既没有显式的调用基类构造方法，基类中又没有无参数的构造方法，编译出错</span><br><span class=\"line\"></span><br><span class=\"line\">3.2.3 对象的转型</span><br><span class=\"line\">* 一个基类的引用类型变量可以指向其子类的对象</span><br><span class=\"line\">* 一个基类的引用不可以访问其子类对象新增的成员</span><br><span class=\"line\">* 可以使用  instanceof 关键字来判断一个引用类型变量所指向的对象是否是制定的类型</span><br><span class=\"line\">* 子类的对象可以当作基类来使用称作向上转型，反之称为向下转型</span><br><span class=\"line\">* 子类可以当成父类来使用，无需显示转换</span><br><span class=\"line\">* 父类引用转换为子类引用要进行强制转换</span><br><span class=\"line\">* 注意：不兼容的类型之间不能进行相互转换（只有具有直接或间接父子关系的类才是兼容的类型），否则编译时会报错</span><br><span class=\"line\">* 注意：兼容类型之间的转换要看对象的实际类型，因此向下转化时最好先用instanceof来判断是否是某个类型，再转换，以免报报错</span><br><span class=\"line\"></span><br><span class=\"line\">3.3 多态：同一消息可以根据发送对象的不同而采用多种不同的行为方式</span><br><span class=\"line\">* 实现多态的技术称为：动态绑定，是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用子类相应的方法</span><br><span class=\"line\">* 多态成立的条件：1.要有继承。2.要有重写。3.父类的引用指向子类的对象。</span><br><span class=\"line\">* 多态的作用：消除类型之间的耦合关系</span><br><span class=\"line\"></span><br><span class=\"line\">3.4 抽象类：用abstract修饰的类称为抽象类（抽象就是自己不实现，让具体的子类去实现）</span><br><span class=\"line\">* 抽象方法不能有方法体</span><br><span class=\"line\">* 如果是具体子类，必须重写父类抽象方法</span><br><span class=\"line\">如果不是具体子类（抽象类），则可以不重写</span><br><span class=\"line\">* 抽象类中可以没有抽象方法，但是有抽象方法的一定是抽象类</span><br><span class=\"line\"></span><br><span class=\"line\">* 完全抽象类一般用接口代替</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.5 接口：interface（继承一个类，实现多个接口）</span><br><span class=\"line\">* 接口中属性只能为public static final类型（可省略）</span><br><span class=\"line\">* 接口中方法只能为public abstract类型（可省略）</span><br><span class=\"line\">* 接口也可以继承接口（不是实现），可以重写父接口的方法，等具体子类去实现</span><br><span class=\"line\"></span><br><span class=\"line\">* 接口取代完全抽象类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.6 static</span><br><span class=\"line\">* 因为是属于类，不属于对象，又叫做类变量或类方法</span><br><span class=\"line\">* 在类开始被初始化的时候就执行</span><br><span class=\"line\">* 对于该类的所有对象来说，static成员变量和方法只有一份</span><br><span class=\"line\"></span><br><span class=\"line\">* 静态可以通过类直接被访问</span><br><span class=\"line\">* 在类中，静态方法中不能直接访问非静态成员</span><br><span class=\"line\">* 在类中，静态成员方法没有this引用</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.7 final关键字:final表示最终的意思</span><br><span class=\"line\">* final的变量的值不能够被改变</span><br><span class=\"line\">* final的成员变量</span><br><span class=\"line\">* final的局部变量(形参)</span><br><span class=\"line\">* final的方法不能够被重写</span><br><span class=\"line\">* final的类不能够被继承</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4. 异常处理</span><br><span class=\"line\">java的异常处理机制</span><br><span class=\"line\">异常的关键字Exception</span><br><span class=\"line\">try,catch,finally,throw,throws关键字</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.1 什么是异常，为什么要引入异常</span><br><span class=\"line\">* java程序运行时出错，java就抛出异常,程序立即终止（也可以说程序崩溃）</span><br><span class=\"line\">* java将错误信息封装在异常对象里抛出</span><br><span class=\"line\">* 学会查看异常的信息：异常的名字，异常的信息，程序抛异常的位置</span><br><span class=\"line\">* java引入异常处理机制，是防止程序出错崩溃</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.2 java的异常的分类</span><br><span class=\"line\">* java的抛出的错误用异常类来表示,java拥有一个异常体系（有许多异常类，并且相互之间具有关系）</span><br><span class=\"line\">* java里面的所有异常都是Throwable的子类</span><br><span class=\"line\">* java虚拟机的异常是Error的子类，一般不需进行处理(因为没法进行处理)</span><br><span class=\"line\">* 除Error之外还有Exception，Exception分为两类：RuntimeException(运行时异常)，被检查异常（除了RuntimeException都是被检查异常）</span><br><span class=\"line\">* RuntimeException(运行时异常，可以不捕获或声明抛出，编译不会报错,一般是控制不当造成的)，可检查异常（必须捕获或声明抛出，这类异常通常需要检测并处理，一般使用资源时造成的）</span><br><span class=\"line\">* 几个常见的异常：NullPointerException(空指针),IndexOutOfBoundsException(索引越界),SQLException(数据库异常),IOException(文件异常)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.3 异常的处理方式</span><br><span class=\"line\">* 使用try,catch,finally进行处理</span><br><span class=\"line\">* throws在方法后抛出异常，交给调用此方法的处理（可以连续抛）</span><br><span class=\"line\">* throw在方法体中抛出异常</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.4 try,catch,finally中程序的运行过程</span><br><span class=\"line\">* 尝试执行try里面的语句</span><br><span class=\"line\">* 一次运行当中最多执行一个catch块，如果没有抛出异常，catch块不执行</span><br><span class=\"line\">* finally总会执行，不管有没有抛出异常</span><br><span class=\"line\">* 如果try块里面有return语句，会先运行finally内容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.5 区分RuntimeException与被检查异常</span><br><span class=\"line\">* RuntimeException不需要捕获或声明抛出（但是如果你捕获或声明抛出也不会有错）</span><br><span class=\"line\">* 被检查异常必须要捕获或者声明抛出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5. 数组</span><br><span class=\"line\">数组是引用类型，有长度length的属性</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">声明，创建，赋值</span><br><span class=\"line\">* 数组声明时要指定数组元素的类型，数组的维度，不需要指定数组的长度，如：int[] a;(a是引用)</span><br><span class=\"line\">* 数组的创建必须new关键字，并且必须给出数组的长度;new int[5]</span><br><span class=\"line\">* 如果数组的类型是引用类型的数组，数组里面保存的是引用，而不是对象本身</span><br><span class=\"line\">new int[] &#123; 1,3,4,5&#125;</span><br><span class=\"line\">&#123;1,4,5,6&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">数组的常用操作类</span><br><span class=\"line\">Arrays提供了数组的常用操作的方法（这些方法都是静态的）</span><br><span class=\"line\">* 排序：sort</span><br><span class=\"line\">* 返回数组的字符串表示：ToString</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二维数组</span><br><span class=\"line\">* 二维数组的内存分析</span><br><span class=\"line\">* 数组的拷贝使用System.arrayCopy方法</span><br><span class=\"line\"></span><br><span class=\"line\">6. 多线程</span><br><span class=\"line\">1.线程的概念</span><br><span class=\"line\">* 程序里面不同的执行路径，每一个执行路径称为一个线程</span><br><span class=\"line\">* 对于单cpu来讲，某一具体的时刻，只会有一个线程在运行，但是CPU的速度非常快，表面上看起来是许多个线程并行执行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.java中线程的创建与启动</span><br><span class=\"line\">* 两种实现线程的方式:继承Thread，实现Runnable接口</span><br><span class=\"line\">* 线程的启动：start.启动线程，运行线程的run方法，run方法运行完线程就结束(注意，start只在Thread里面有，start不同于run)</span><br><span class=\"line\">* 注意一个Thread对象，只能一次调用start方法</span><br><span class=\"line\">* Thread与Runnable的区别：1：Runnable是接口，比Thread灵活（因为java只能单继承，可以同时实现许多接口）;2.一个Runnable对象可以启动许多个线程，线程之间共享对象（Thread不能共享对象）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.线程的状态：new ,可运行，运行中，阻塞，死亡</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.线程的调度</span><br><span class=\"line\">* Thread.sleep,使该线程睡眠</span><br><span class=\"line\">* join：线程合并(结果类似与方法调用)</span><br><span class=\"line\">* yield:线程让出当前CPU，留给其他线程运行</span><br><span class=\"line\">* 线程优先级:setPriority设置线程优先级</span><br><span class=\"line\">* 后台线程:setDaemon,必须在线程运行前设置为后台线程.当所有的前台线程都结束了，后台线程自动结束</span><br><span class=\"line\">* 线程可以指定名字，取得当前线程的方法Thread.currentThread();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5.线程同步</span><br><span class=\"line\">* synchronized:同一时刻，只会有一个线程执行synchronized代码块</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6.线程间通讯</span><br><span class=\"line\">* wait(),notify(),notifyAll是Object类中定义的方法</span><br><span class=\"line\">* wait()：使得运行该代码的线程进入对象的等待池进行等待，线程进入阻塞状态，wait的线程一直阻塞，指导其他线程调用该对象的notify方法唤醒它。</span><br><span class=\"line\">* notify()：唤醒对象等待池中的一个线程，使得被唤醒的线程进入可运行状态，如果等待池中没有线程，notify什么也不做。</span><br><span class=\"line\">* notifyAll()：唤醒对象等待池中的所有线程</span><br><span class=\"line\">* wait(),notify,notifyAll都必须放在同步代码块里面(Synchronized代码块).</span><br><span class=\"line\">* wait()的线程会释放对象的锁，而Thread.sleep的线程不会释放对象的锁</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.线程安全的类：多线程的环境下使用类或者调用类的方法不会造成同步问题的类称为线程安全的类</span><br><span class=\"line\">* JDK1.1以前，java的集合框架中有一些线程安全的类：如Vector(被ArrayList代替),HashTable(被HashMap代替)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.内部类</span><br><span class=\"line\">1.内部类:在一个类的里面再定义一个类称为内部类</span><br><span class=\"line\">* 内部类可以访问外部类的所有的成员变量与成员方法</span><br><span class=\"line\">* 如果想在外部实例化内部类，必须使用全名:外部类.内部类</span><br><span class=\"line\"></span><br><span class=\"line\">2.事件模型：</span><br><span class=\"line\">* java事件采用委托模型(授权模型),即事件源本身不处理事件，交给事件监听器来处理,因此需要把事件监听器绑定到事件源里面</span><br><span class=\"line\">* 事件源，事件，事件监听器。事件有许多种，不同的事件使用不同监听器来处理</span><br><span class=\"line\">* 事件触发后，系统自动调用事件处理方法（不需要手动调用事件处理方法），并传递事件信息作为方法参数</span><br><span class=\"line\">* 事件编写步骤：1.实现监听器接口(完成事件处理方法)；2.实例化实现监并绑定到事件源</span><br><span class=\"line\"></span><br><span class=\"line\">3.事件实现方式</span><br><span class=\"line\">* 外部类</span><br><span class=\"line\">* 内部类</span><br><span class=\"line\">三、高级特性</span><br><span class=\"line\">1. 常用类</span><br><span class=\"line\">常用类:lang包不需要导入，其他的包都需要</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.Object:所有类的根类</span><br><span class=\"line\">* 对象的标识：hashCode()</span><br><span class=\"line\">* 对象的信息:toString()，默认情况下返回  对象类型@地址信息</span><br><span class=\"line\">* 对象是否一样：equals,默认情况下根据地址比较相等。==比较的是对象的地址，而equals在语义上提供相等的含义</span><br><span class=\"line\">* 重写equals与toString方法，参照Money类</span><br><span class=\"line\"></span><br><span class=\"line\">2.String:不可变字符串，类，继承Object</span><br><span class=\"line\">* String重写toString，返回字符串的类容。重写了equals根据字符串的内容进行比较</span><br><span class=\"line\">* 字符串常量&quot;1234&quot;与new String(&quot;1234&quot;)。常量只有一个，new String（）每new一次就一个新的对像\\</span><br><span class=\"line\">* 字符串的不变性,字符串一旦创建，内容不能改变</span><br><span class=\"line\">* 字符串的常用操作</span><br><span class=\"line\">* 字符串的长度：length</span><br><span class=\"line\">* 搜索一个字符串:indexOf()</span><br><span class=\"line\">* 字符串的字串:substring(3，8)</span><br><span class=\"line\">* 取得指定位置的字符:charAt(8);</span><br><span class=\"line\">* 判断字符串以什么开头(结尾):startsWith(),endWith()</span><br><span class=\"line\">* 改变字符串的大小写,toUpperCase(),toLowerCase()</span><br><span class=\"line\">* 去掉字符串两边的空格：trim()</span><br><span class=\"line\">* 替换字符串里面的某些内容:replace(&quot;&quot;)</span><br><span class=\"line\">* 分割字符串：</span><br><span class=\"line\">StringBuffer:字符串缓冲，可变字符串，提供对字符串进行更改的方法(其他的方法基本与String类似)</span><br><span class=\"line\">* 从StringBuffer得到String</span><br><span class=\"line\">* 追加 append（&quot;abc&quot;）;</span><br><span class=\"line\">* 在字符串中间插入insert(3,&quot;插入的字符串&#x27;)</span><br><span class=\"line\">* 删除字符串 delete(3,6);//不包括6</span><br><span class=\"line\"></span><br><span class=\"line\">包装类：提供与字符串之间的转换。Integer是int类型的包装类</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Math类：提供数学上的常用操作，注意：里面的方法都是静态的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Random：随即类，产生随机数，另外Math.random()也能产生0～1之间的随机数</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">日期：Date,SimpleDateFormat(日期格式化) ,日历Calendar </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">获得控制台输入：</span><br><span class=\"line\">* Scanner sc = new Scanner(System.in);</span><br><span class=\"line\">* String str = sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2. 集合框架</span><br><span class=\"line\">集合框架:概念上分为：Set(数学集合)，List（列表），Map（字典）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.Collection接口，Iterator接口</span><br><span class=\"line\">* Set,List继承Collection，采用Iterator进行迭代(参考testCollection)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.Set:元素不能重复，没有顺序</span><br><span class=\"line\">* HashSet:根据hashCode判断对象是否重复(重写equals和hashCode)</span><br><span class=\"line\">* TreeSet:里面的元素按顺序排列（元素必须实现Comparable接口）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.List：元素能够重复，有顺序即索引位置，在Collection的基础上提供了按照索引位置进行操作的方法</span><br><span class=\"line\">* ArrayList:内部使用数组实现list</span><br><span class=\"line\">* LinkedList：在List的基础上提供了对首，尾元素进行操作的方法:入getLast（），addFirst(Object o)</span><br><span class=\"line\">* 数组，AarryList，LinkeList有区别</span><br><span class=\"line\">3.map：键值对的集合，key不能重复，value可以重复</span><br><span class=\"line\">* 两次put同一键，后面一个会覆盖前面一个</span><br><span class=\"line\">* 遍历map的方式：先取得keySet，或者entrySet，再用Set的方式(Iterator)进行遍历</span><br><span class=\"line\"></span><br><span class=\"line\">4.泛型：List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;</span><br><span class=\"line\">* 存入的元素只能是指定类型,如：&lt;Integer&gt;</span><br><span class=\"line\">* 取出来不需要强制转换,自动是指定类型，如：&lt;Integer&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5.List的常用操作类Collections，不同于Collection，提供对List的排序，随机排列，倒序的方法</span><br><span class=\"line\">* Arrays使用在数组里面，提供对数组的常用操作，跟Collections有相似之处，</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6.Comparable接口</span><br><span class=\"line\">* compareTo()</span><br><span class=\"line\">* 如果需要进行排序(Collections.sort())，或者放到排序的集合里面(TreeSet,TreeMap),必须实现Comparable接口</span><br><span class=\"line\"></span><br><span class=\"line\">注：Set：（集合：不重复，无序）</span><br><span class=\"line\">HashSet：</span><br><span class=\"line\">TreeSet：（由大到小）</span><br><span class=\"line\">List：（列表：重复，有序）</span><br><span class=\"line\">ArrayList：（有下标，查比较快）</span><br><span class=\"line\">LinkedList：（无下标，增删改较快）</span><br><span class=\"line\">Map：（字典）</span><br><span class=\"line\">HashMap：（存放键值对）</span><br><span class=\"line\">TreeMap：（由大到小）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3. JDBC</span><br><span class=\"line\">JDBC:java操作数据库的一组API(注意模仿)</span><br><span class=\"line\"></span><br><span class=\"line\">1.加载驱动</span><br><span class=\"line\">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.连接数据库</span><br><span class=\"line\">Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;,&quot;root&quot;,&quot;1234&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.PrepareStatement预编译语句</span><br><span class=\"line\">PrepareStatement pst = connection.prepareStatement(&quot;select * from user where id = ?&quot;);</span><br><span class=\"line\">pst.setObject(1,param);</span><br><span class=\"line\"></span><br><span class=\"line\">4.执行</span><br><span class=\"line\">ResultSet rs = pst.executeQuery();//查询</span><br><span class=\"line\">int result = pst.executeUpdate();//增删改</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">while(rs.next())&#123;</span><br><span class=\"line\">int id = rs.getInt(&quot;id&quot;);</span><br><span class=\"line\">String name = rs.getString(&quot;name&quot;);</span><br><span class=\"line\">String pwd = rs.getString(&quot;pwd&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">5.关闭数据，从下到上</span><br><span class=\"line\">rs.close();</span><br><span class=\"line\">pst.close();</span><br><span class=\"line\">connection.close();</span><br><span class=\"line\"></span><br><span class=\"line\">6.使用事务</span><br><span class=\"line\">* 设置手动提交：设置connection.setAutoCommit(false);</span><br><span class=\"line\">* 在最后手动提交：connection.commit();</span><br><span class=\"line\">* 在catch中捕获异常，使用connection.rollBack();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4. 图形-布局，常用Swing组件</span><br><span class=\"line\">图形用户界面（Swing常用组件，布局管理器，事件模型，绘图）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.AWT与Swing</span><br><span class=\"line\">* AWT是重量级的组件,Swing是轻量级别组件,Swing是从awt的基础上发展过来的</span><br><span class=\"line\">* swing依然使用awt里面的布局与事件模型</span><br><span class=\"line\">* 组件：每一个界面元素都称为一个组件，如按钮，文本框</span><br><span class=\"line\">* 容器的概念：可以容纳其他元素的组件，通过add()往容器里面加入组件，每一个容器都可以设置自己的布局管理器(Layout)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.常用组件</span><br><span class=\"line\">* 框架：JFrame（有一个默认的内容面板）,一般来将，所有的其他组件都放在JFrame的默认面板上。通过JFrame.getContentPane()获得默认内容面板</span><br><span class=\"line\">* 面板：JPanel</span><br><span class=\"line\">* 标签：JLabel</span><br><span class=\"line\">* 文本输入框：JTextField</span><br><span class=\"line\">* 文本域(多行文本):JTextArea</span><br><span class=\"line\">* 单选按钮:JRadioButton</span><br><span class=\"line\">* 复选框：JCheckBox</span><br><span class=\"line\">* 下拉列表：JComboBox</span><br><span class=\"line\">* 按钮:JButton</span><br><span class=\"line\"></span><br><span class=\"line\">3。布局管理器（流布局Flowlayout,边框布局 BorderLayout,网格布局GridLayout）</span><br><span class=\"line\">* 使用setLayout(new FlowLayout())方法设置容器的布局管理器</span><br><span class=\"line\">* Flowlayout:当拖动界面的时候，元素的大小不会改变，仅改变元素的位置，可以指定居中对齐，左对齐，右对齐等对齐方式</span><br><span class=\"line\">* BorderLayout：将界面分为东西南北中五部分.:元素大小会发生改变，但是相对位置不变。除中间区域（自动填充）之外，区域里面不加组件，默认大小为0.如果往区域里加入多个组件，只显示最后添加的组件。</span><br><span class=\"line\">* GridLayout:每个网格的大小相等，位置不发生改变，大小随容器大小变化而变化</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5. 图形-事件处理，绘图</span><br><span class=\"line\">图形用户界面</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">四、总结</span><br><span class=\"line\">1.结构</span><br><span class=\"line\">常用类、集合框架、JDBC、swing</span><br><span class=\"line\">↑</span><br><span class=\"line\">↑</span><br><span class=\"line\">封装、继承、多态、抽象</span><br><span class=\"line\">interface、static、final</span><br><span class=\"line\">异常、数组、线程</span><br><span class=\"line\">↑</span><br><span class=\"line\">↑</span><br><span class=\"line\">基本数据类型（引用数据类型）（标关常变）</span><br><span class=\"line\">运算符</span><br><span class=\"line\">流程控制</span><br><span class=\"line\"></span><br><span class=\"line\">2.面向对象</span><br><span class=\"line\">封装：（高内聚、低耦合）封装就是保证软件内部具有优良的模块性基础，封装的目的就是要实现软件内部的“高内聚、低耦合”，防止程序相互依赖而产生的变动影响。</span><br><span class=\"line\">继承：（重用性、扩展性）继承是子类自动共享父类的数据和方法的机制，提高了代码的可重用性和可扩展性。</span><br><span class=\"line\">多态：（灵活性、扩展性）不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，多态性增强了程序的灵活性和扩展性。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 内存机制 ==========================================</span><br><span class=\"line\">\t1)Java把内存划分成两种:一种是栈内存，一种是堆内存</span><br><span class=\"line\">\t\t栈内存用来存放一些基本类型的变量和对象的引用变量。</span><br><span class=\"line\">\t\t堆内存用来存放由new创建的对象和数组。     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t2)具体的说:</span><br><span class=\"line\">\t\t堆的优势:可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。</span><br><span class=\"line\">\t\t缺点:因为要在运行时动态分配内存，存取速度较慢。 </span><br><span class=\"line\">\t\t栈的优势:数据可以共享，存取速度比堆要快，仅次于寄存器。</span><br><span class=\"line\">\t\t缺点:存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t栈中主要存放一些基本类型的变量(byte，short，int，long，float，double，boolean，char)和对象句柄。 </span><br><span class=\"line\">\t\t栈的数据共享: </span><br><span class=\"line\">\t\tint a = 3;</span><br><span class=\"line\">\t\tint b = 3;</span><br><span class=\"line\">\t\t先创建一个变量为a的引用，再存3，再创建变量为b的引用，然后查找栈中是否有3这个值，直接将b指向3。</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)String是一个特殊的包装类数据:</span><br><span class=\"line\">\t\tString str = new String(&quot;abc&quot;); </span><br><span class=\"line\">\t\tString str = &quot;abc&quot;; </span><br><span class=\"line\">\t\t两种的形式来创建，第一种是用new()来新建对象的，它会在存放于堆中。每调用一次就会创建一个新的对象。 </span><br><span class=\"line\">\t\t而第二种是先在栈中创建一个对String类的对象引用变量str，然后查找栈中常量池有没有存放&quot;abc&quot;，如果没有，则将&quot;abc&quot;存放进栈，并令str指向”abc”，如果已经有”abc” 则直接令str指向“abc”。 </span><br><span class=\"line\"></span><br><span class=\"line\">\t\tequals()和==:</span><br><span class=\"line\">\t\tequals():比较对象里面的数值是否相等</span><br><span class=\"line\">\t\t==:比较两个引用指向的地址是否相同(堆内存的首地址)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString str = new String(&quot;asd&quot;);</span><br><span class=\"line\">\t\t创建了1个或2个String Object</span><br><span class=\"line\">\t\t如果常量池(constant pool)没有&quot;asd&quot;，则创建了2个</span><br><span class=\"line\">\t\t如果常量池(constant pool)有&quot;asd&quot;，则只创建了1个</span><br><span class=\"line\">\t\t当然这里的str本身只是一个引用，放在栈里，用来指向堆中创建出来的对象</span><br><span class=\"line\">\t\tString str=&quot;aaa&quot;; 创建了0个或1个String Object</span><br><span class=\"line\">\t\tString str=&quot;aaa&quot;+&quot;bbb&quot;+&quot;ccc&quot;;</span><br><span class=\"line\">\t\t创建了0个或1个String Object</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t4)内存分配策略:</span><br><span class=\"line\">\t\t按照编译原理的观点，程序运行时的内存分配有三种策略，分别是静态的，栈式的，和堆式的:</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t静态存储分配是指在编译时就能确定每个数据目标在运行时刻的存储空间需求，因而在编译时就可以给他们分配固定的内存空间.这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在，也不允许有嵌套或者递归的结构出现，因为它们都会导致编译程序无法计算准确的存储空间需求。</span><br><span class=\"line\">\t\t堆式存储分配也可称为动态存储分配，和静态存储分配相反，在堆式存储方案中，程序对数据区的需求在编译时是完全未知的，只有到运行的时候才能够知道，但是规定在运行中进入一个程序模块时，必须知道该程序模块所需的数据区大小才能够为其分配内存。和我们在数据结构所熟知的栈一样，堆式存储分配按照先进后出的原则进行分配。 </span><br><span class=\"line\">\t\t栈式存储分配要求在编译时能知道所有变量的存储要求，栈式存储分配要求在过程的入口处必须知道所有的存储要求。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== String、StringBuffer和StringBuilder的区别 ==========================================</span><br><span class=\"line\">\t(1)三者在执行速度方面的比较：</span><br><span class=\"line\">\t\tStringBuilder&gt;StringBuffer&gt;String</span><br><span class=\"line\"></span><br><span class=\"line\">　　(2)区别：</span><br><span class=\"line\">\t\tString：字符串常量(不可改变)(线程安全)</span><br><span class=\"line\">\t　　 StringBuffer：字符串变量(可改变)(线程非安全)</span><br><span class=\"line\">\t　　 StringBuilder：字符串变量(可改变)(线程非安全)</span><br><span class=\"line\"></span><br><span class=\"line\">　　(3)对于三者使用的总结：</span><br><span class=\"line\">\t\t1.如果要操作少量的数据用 = String</span><br><span class=\"line\">\t\t2.多线程操作字符串缓冲区下操作大量数据 = StringBuffer</span><br><span class=\"line\">\t\t3.单线程操作字符串缓冲区下操作大量数据 = StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== String类的常用方法 ==========================================</span><br><span class=\"line\">\t// 常用</span><br><span class=\"line\">\tlength();  返回字符串的长度</span><br><span class=\"line\">\tvalueOf();  将参数以字符串类型返回</span><br><span class=\"line\">\tequals();  比较内容是否相同</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 截字符串</span><br><span class=\"line\">\tsubstring();  截取从a开始到b之前的字符串</span><br><span class=\"line\">\tindexOf();  返回字符或字符串第一次出现的位置(第一个字母为准)</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 替换字符串</span><br><span class=\"line\">\tcontains();  是否包含某字符串</span><br><span class=\"line\">\treplace();  替换字符串中字符或字符串</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 不常用</span><br><span class=\"line\">\ttoCharArray();</span><br><span class=\"line\">\t将字符串转换为数组</span><br><span class=\"line\">\ttrim();  去掉字符串的前端和后端空格</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== List类常用方法 ==========================================</span><br><span class=\"line\">size();  得到List的数量</span><br><span class=\"line\">get();  得到某个下标的对象</span><br><span class=\"line\">contains();  是否包含某一项</span><br><span class=\"line\"></span><br><span class=\"line\">add();  增加一项</span><br><span class=\"line\">addAll();  增加一个集合</span><br><span class=\"line\">remove();  移除一条数据</span><br><span class=\"line\">clear();  清除所有数据</span><br><span class=\"line\">\t</span><br><span class=\"line\">Collections.sort();\t\tlist排序</span><br><span class=\"line\">Collections.reverse();\tlist倒置</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 反射 ==========================================</span><br><span class=\"line\">\t1)jdk提供反射机制的类：</span><br><span class=\"line\">\t\tjava.lang.Class;                </span><br><span class=\"line\">\t\tjava.lang.reflect.Constructor;</span><br><span class=\"line\">\t\tjava.lang.reflect.Field;        </span><br><span class=\"line\">\t\tjava.lang.reflect.Method;</span><br><span class=\"line\">\t\tjava.lang.reflect.Modifier;</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)反射获取类的三种方法：</span><br><span class=\"line\">\t\t//第一种  </span><br><span class=\"line\">\t\tClass cla = Employee.class;</span><br><span class=\"line\">\t\t//第二种  </span><br><span class=\"line\">\t\tEmployeee = new Employee();</span><br><span class=\"line\">\t\tClass cla = e.getClass();</span><br><span class=\"line\">\t\t//第三种  </span><br><span class=\"line\">\t\tClass cla = Class.forName(&quot;Employee&quot;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3)常用方法：</span><br><span class=\"line\">\t\tField[] fields = cla.getDeclaredFields();</span><br><span class=\"line\">\t\t//获取所有的属性</span><br><span class=\"line\">\t\tMethod[] methods = cla.getDeclaredMethods();</span><br><span class=\"line\">\t\t//获取所有的方法</span><br><span class=\"line\">\t\tConstructor[] constructors = cla.getDeclaredConstructors();</span><br><span class=\"line\">\t\t//获取所有的构造方法</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tModifier.toString(cla.getModifiers())</span><br><span class=\"line\">\t\t//获取访问权限</span><br><span class=\"line\">\t\tcla.getSimpleName()</span><br><span class=\"line\">\t\t//获取名字</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tmethod.getReturnType()</span><br><span class=\"line\">\t\t//获取返回类型</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 构造方法 ==========================================</span><br><span class=\"line\">\t如果只写了有参构造方法，那么将无法调用无参构造方法</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 初始值 ==========================================</span><br><span class=\"line\">\t基本数据类型未初始化有初始值</span><br><span class=\"line\">\t引用数据类型未初始化没有初始值，且为null</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 算法设计 ==========================================</span><br><span class=\"line\">\t直通</span><br><span class=\"line\">\t判断</span><br><span class=\"line\">\t最好用筛选算法，不用包含算法</span><br><span class=\"line\">\t循环</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== 接口回调(小偷安装监听器) ==========================================</span><br><span class=\"line\">\t1)定义接口</span><br><span class=\"line\">\t\tpublic interface MyListener &#123;</span><br><span class=\"line\">\t\t\tvoid callMeNoPerson();</span><br><span class=\"line\">\t\t\tvoid callMeHasPerson();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)注册接口并提供set方法</span><br><span class=\"line\">\t\tpublic void goOut()&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t主人出门&quot;);</span><br><span class=\"line\">\t\t\tif(myListener != null)&#123;</span><br><span class=\"line\">\t\t\t\tmyListener.callMeNoPerson();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpublic void getIn()&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(&quot;\\t主人回家&quot;);</span><br><span class=\"line\">\t\t\tif(myListener != null)&#123;</span><br><span class=\"line\">\t\t\t\tmyListener.callMeHasPerson();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprivate MyListener myListener;</span><br><span class=\"line\">\t\tpublic void setMyListener(MyListener myListener)&#123;</span><br><span class=\"line\">\t\t\tthis.myListener = myListener;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)实现接口</span><br><span class=\"line\">\t\tfinal House house = new House();</span><br><span class=\"line\">\t\thouse.setMyListener(new MyListener() &#123;</span><br><span class=\"line\">\t\t\tpublic void callMeNoPerson() &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;\\t\\t提醒你，家里没人！！！&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tpublic void callMeHasPerson() &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(&quot;\\t\\t提醒你，家里有人！！！&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t注：接口回调实质：底层调用顶层代码</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 文件的创建及存取 ==========================================</span><br><span class=\"line\">\t1)创建文件夹</span><br><span class=\"line\">\t\tFile folder = new File(folderPath);</span><br><span class=\"line\">\t\tif (!folder.isDirectory()) &#123;</span><br><span class=\"line\">\t\t\tfolder.mkdirs();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t2)创建文件</span><br><span class=\"line\">\t\tFile file = new File(filePath);</span><br><span class=\"line\">\t\t\tif (!file.exists()) &#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tfile.createNewFile();</span><br><span class=\"line\">\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t3)写入文件</span><br><span class=\"line\">\t\tFileWriter fw = new FileWriter(filePath, isAppend);</span><br><span class=\"line\">\t\t// boolean是否追加</span><br><span class=\"line\">\t\tBufferedWriter bw = new BufferedWriter(fw);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbw.write(content);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbw.close();</span><br><span class=\"line\">\t\tfw.close();</span><br><span class=\"line\">\t4)读出文件</span><br><span class=\"line\">\t\tFileReader fr = new FileReader(filePath);</span><br><span class=\"line\">\t\tBufferedReader br = new BufferedReader(fr);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString str;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\twhile((str = br.readLine()) != null) &#123;</span><br><span class=\"line\">\t\t sb.append(str+&quot;\\n&quot;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbr.close();</span><br><span class=\"line\">\t\tfr.close();</span><br><span class=\"line\">\t5)删除文件</span><br><span class=\"line\">\t\tfile.delete();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">// ========================================== 分割字符串、正则截数据 ==========================================</span><br><span class=\"line\">\t1)分割字符串</span><br><span class=\"line\">        String value = &quot;192.168.128.33&quot;;</span><br><span class=\"line\">        String[] names = value.split(&quot;\\\\.&quot;);</span><br><span class=\"line\">        for (int i = 0; i &lt; names.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(names[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t2)正则截数据</span><br><span class=\"line\">        String str = &quot;_input_charset=\\&quot;utf-8\\&quot;&amp;it_b_pay=\\&quot;30m\\&quot;&amp;show_url=\\&quot;m.alipay.com\\&quot;&amp;sign=\\&quot;IaNZM3TOiUnJf%2B5%2FxBanH3PrNEONHUedwLwuICFWAE5lbEZZg%2Bp2zeo6D7O36PzhrRya%2BzyjumDNFEuaHyc79cXngkYeyo4%2FQA6ze0iKtQswVoGEl24%2BOkL%2BF%2FvOEmkapKaG%2FMGFn8cacu4XW39TD0KznUSJo1iF0kEC8dRWQVQ%3D\\&quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">        Pattern p = Pattern.compile(&quot;(show_url)= ?\\&quot;(.*?)\\&quot;&quot;);</span><br><span class=\"line\">        Matcher m = p.matcher(str);</span><br><span class=\"line\">        if (m.find()) &#123;</span><br><span class=\"line\">            // m.group(2)第一个括号内容</span><br><span class=\"line\">            System.out.println(m.group(2));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t3)正则替换</span><br><span class=\"line\">        this.progressStr.replaceAll(&quot;(.&#123;5&#125;)(\\\\d&#123;1,3&#125;)(%)&quot;, &quot;$1&quot; + progress + &quot;$3&quot;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"C基础","date":"2016-10-15T16:00:00.000Z","_content":"\nC基础\n\n<!--more-->\n\n```\n/* --------------------------------------c基础--------------------------------------- */\n1 简介\n1.1 创始时间：1972\n1.2 标准：K&R、C90、C99、C11（1978年、1990年、1999年、2011年）\n\n2 基础\n2.2 数据类型（标 关 常 变 基）\n2.2.1 标志符：自己可以取名字的地方称为标志符\n标志符的规则（驼峰命名）\n* 只能是字母，数字，下划线；\n* 不能以数字开头;严格区分大小写；\n* 不能使用关键字作为标志符；\n\n2.2.2 关键字：关键字都是小写\nconst：\nconst修饰指针变量时：\n　　(1)位于*左侧，表示指针所指数据是常量，不能修改该数据\n　　(2)位于*右侧，表示指针本身是常量，不能指向其他内存地址\n\nconst修饰函数时：\n不能修改成员数据\n不能调用非const成员函数\nregister：请求将变量放入cpu寄存器中，速度最快\n\nextern：标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。\n\nexplicit：避免构造函数的参数自动转换为类对象(强制显示转换)\n\n2.2.3 常量：如123，\"hello\"\n \n2.2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据\n* 变量必须先声明，再赋值，再使用\n* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效\n\n2.2.5 基本数据类型\nchar\nbool\nvoid\nshort int、int、long int、long long int\nfloat、double、long double\n注：\n* char、bool占一个字节\n* 0xff、'\\xff'都可以赋值给char，因为存到内存里都是二进制\n* 0xff、'\\xff'都表示16进制\n\n2.2 运算符\n\n2.3 流程控制\n2.3.1 流程控制语句：\n* 顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)\n\n2.3.2 break,continue,return\n* break，continue一般用在循环中，也可以用在switch中\n* break：跳出最近的整个循环（结束循环）\n* continue：跳过最近整个循环的本次循环，进入下一次循环\n* return：结束整个方法，或带参返回方法体\n3 字符串\nstrlen()\nstrncat()\nstrncmp()\nstrncpy()\n\n\n/* --------------------------------------备忘录--------------------------------------- */\nSDL检查（安全开发生命周期）：\n增加了更严格的编译时检查，对于废弃和不安全的函数会报error而不是warning\n不让你用scanf之类的函数，必须用scanf_s\n\n/* --------------------------------------大小端对其--------------------------------------- */\n小端：较高的有效字节存放在较高的的存储器地址，较低的有效字节存放在较低的存储器地址。\n大端：较高的有效字节存放在较低的存储器地址，较低的有效字节存放在较高的存储器地址。\n注意 最小存储单元是byte 大小端一般针对32位数据而言的；比如int 型 0x2c3b4a6f \n从地址0x00000001开始存储 一个字节对应一个地址\n地址\t\t\t小段\t\t大端\n0xff000001\t6f\t\t2c\n0xff000002\t4a\t\t3b\n0xff000003\t3b\t\t4a\n0xff000004\t2c\t\t6f\n\n\n/* --------------------------------------数据加密--------------------------------------- */\n加密的原理： 用密钥对原文做  异或，置换，代换，移位\n1.可逆加密\nBase64\n2.单向加密\nMD5、sha-1、RIPEMD、Haval\n3.对称加密\nAES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK\n4.非对称加密（只有持有私钥方的才是收到不可解密的密文）\nRSA、Elgamal、背包算法、Rabin、D-H、ECC（椭圆曲线加密算法）等\n\n\n/* --------------------------------------静态库和动态库--------------------------------------- */\n1)静态库\n需要头文件和lib文件\n1.头文件作用是编译调用\n2.lib文件中包含了头文件接口以及函数的具体实现\n\n2)动态库\n* 隐式调用\n编译程序时需要头文件、lib文件，运行时需要DLL文件，并且运行过程中DLL文件一直被占用。适用于动态库比较少的情况。\n1.头文件作用是编译调用\n2.lib文件中包含了头文件在dll中的说明\n注：使用文件中一般这么写\n#pragma comment(lib,\"../lib/Project2.lib\")  注：此lib相对于链接的路径，即cpp文件\n3.dll文件中包含了函数的具体实现\n\n注：导出文件中一般这么写\n#ifdef DLL_EXPORT\n#define DECLDIR __declspec(dllexport)\n#else\n#define DECLDIR __declspec(dllimport)\n#endif\n\nDECLDIR int add(int a, int b);\nclass DECLDIR User\n{\nUser(void);\n~User(void);\nvirtual void doxxx();\n};\n\n* 显式调用\n编译时什么都不需要（如果基类在库中，也需要lib库文件），在需要使用DLL中的函数时，通过LoadLibrary()和FindProcAdress()这两个API调用。只需要一个DLL文件即可，而且在需要使用的时候DLL才被占用，使用完毕即被解除占用。适用于动态库比较多的情况。\n1.头文件作用是编译调用（一般函数导出用不到，类需要用到）\n2.lib文件中包含了头文件接口（一般函数导出用不到，类需要用到）\n3.dll文件中包含了函数的具体实现\n\n注：导出文件中一般这么写\n#ifdef DLL_EXPORT\n#define DECLDIR __declspec(dllexport)\n#else\n#define DECLDIR __declspec(dllimport)\n#endif\n\nextern \"C\"\n{\nDECLDIR User* createObject(void)\n{\nreturn new User();\n}\n}\n\n注：使用文件中一般这么写\ntypedef User* (*P_Fun)(void);\nHINSTANCE hinst = LoadLibrary(\"Project2.dll\");  注：需要windows.h\nP_Fun p_fun = (P_Fun)GetProcAddress(hinst , \"createObject\");\nUser* user = (*p_fun)();\nuser->doxxx();\ndelete user;\nFreeLibrary(h);\n\n\n/* --------------------------------------静态、常量、静态常量--------------------------------------- */\n类中静态以及常量的用法\n1.只有静态常量整型数据成员才可以在类中初始化(包括bool、char)\n2.静态变量的初始化写在类外部\n3.常量的初始化写在初始化列表\n注：静态方法不能访问this指针\n\n其他用法\n静态或常量可以写在namesapce中，方法不能为静态的\n\n\n/* --------------------------------------枚举--------------------------------------- */\n\nclass A\n{\npublic:\n\tA();\n\t~A();\n\n\tenum SEX\n\t{\n\t\tNAN,\n\t\tNV,\n\t};\n\tstatic SEX s;\nprivate:\n\n};\n\nA::SEX A::s = A::SEX::NAN;\n\nvoid swi_sex(A::SEX& temp)\n{\n\tswitch (temp)\n\t{\n\tcase A::SEX::NAN:\n\t\tcout << \"NAN\" << endl;\n\t\tbreak;\n\tcase A::SEX::NV:\n\t\tcout << \"NV\" << endl;\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n}\n\nvoid test()\n{\n\t//A::s = A::SEX::NV;\n\tswi_sex(A::s);\n}\n\n\n/* --------------------------------------命名空间--------------------------------------- */\n区别于复合域、类域、全局域的一块空间\n在类作用域和全局作用域之间\n\nnamespace \n{\n\tint i = 5;\n}\n\nnamespace kkk\n{\n\tint i = 6;\n\tvoid show()\n\t{\n\t\tcout << \"hello\" << endl;\n\t}\n}\n\nint main()\n{\n\tnamespace ns = kkk;\n\tns::show();\n}\n（1）一个命名空间可以在多个头文件或源文件中实现，成为分段定义。如果想在当前文件访问定义在另一个文件中的同名命名空间内的成员变量，需要在当前文件的命名空间内部进行申明。如标准C++库中的所有组件都是在一个被称为std的命名空间中声明和定义的。这些组件当然分散在不同的头文件和源文件中。\n（2）命名空间内部可以定义类型、函数、变量等内容，但命名空间不能定义在类和函数的内部。\n（3）在一个命名空间中可以自由地访问另一个命名空间的内容，因为命名空间并没有保护级别的限制。\n（4）虽然经常可以见到using namespace std;这样的用法，我们也可以用同样的方法将命名空间中的内容一次性“引入”到当前的命名空间中来，但这并不是一个值得推荐的用法。因为这样做的相当于取消了命名空间的定义，使发生名称冲突的机会增多。所以，用using单独引入需要的内容，这样会更有针对性。例如，要使用标准输入对象，只需用using std::cin;就可以了。\n（5）不能在命名空间的定义中声明另一个嵌套的子命名空间，只能在命名空间中定义子命名空间。\n（6）命名空间的成员，可以在命名空间的内部定义，也可以在命名空间的外部定义，但是要在命名空间进行声明。 \n命名空间成员的外部定义的格式为：命名空间名::成员名 ……\n（7）命名空间在进行分段定义时，不能定义同名的变量，否则连接出现重定义错误。因为命名空间不同于类，具有外部连接的特性。由于外部连接特性，请不要将命名空间定义在头文件，因为当被不同的源文件包含时，会出现重定义的错误。\n\n\n/* --------------------------------------模板函数--------------------------------------- */\ntemplate<typename T, typename P>\nT xxx(T arg1,P arg2)\n{\n\treturn arg1 + arg2;\n}\n\n\n/* --------------------------------------__int32--------------------------------------- */\ntypedef __int32 common_int;\t\t\t\t// 定义32位的int，防止编译器对int长度定义的不同\ntypedef unsigned __int32 common_uint;\t\t// 定义无符号32位的int\n\n\n/* --------------------------------------#define和typedef--------------------------------------- */\n#define DLL_API  __declspec(dllexport)\t\t切记：没有=，没有分号\n单纯的替换\ntypedef char* PCHAR;\n定义一种类型\n\n\n/* --------------------------------------引用--------------------------------------- */\n\n一、引用简介\n　　引用就是某一变量（目标）的一个别名，对引用的操作与对变量直接操作完全一样。\n　　引用的声明方法：类型标识符 &引用名=目标变量名；\n　　【例1】：int a; int &ra=a; //定义引用ra,它是变量a的引用，即别名\n　　说明：\n　　（1）&在此不是求地址运算，而是起标识作用。\n　　（2）类型标识符是指目标变量的类型。\n　　（3）声明引用时，必须同时对其进行初始化。\n　　（4）引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。\n　　 ra=1; 等价于 a=1;\n　　（5）声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&ra与&a相等。\n　　（6）不能建立数组的引用。因为数组是一个由若干个元素所组成的集合，所以无法建立一个数组的别名。\n　　三、引用总结\n　　（1）在引用的使用中，单纯给某个变量取个别名是毫无意义的，引用的目的主要用于在函数参数传递中，解决大块数据或对象的传递效率和空间不如意的问题。\n　　（2）用引用传递函数的参数，能保证参数传递中不产生副本，提高传递的效率，且通过const的使用，保证了引用传递的安全性。\n　　（3）引用与指针的区别是，指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。\n　　（4）使用引用的时机。流操作符<<和>>、赋值操作符=的返回值、拷贝构造函数的参数、赋值操作符=的参数、其它情况都推荐使用引用。\n\n\n/* --------------------------------------返回值--------------------------------------- */\n千言万语，汇成一句话，函数不要返回指向栈的内存地址，切记，是地址，别被吓的所有的函数内的变量都不敢返回，只要不是栈的内存地址，你尽管放心的返回。\n非指针、引用类型返回，会进行赋值或者拷贝操作。下面两种特殊情况。\n\nchar *pstr = \"This is the buffer text\";\nc类型字符串存在常量区，可以返回\nchar buffer[] = \"This is the buffer text\";\n数组存在栈区，返回会出问题，系统自动销毁那块内存\n\n\n\n/* --------------------------------------数组的定义和初始化--------------------------------------- */\n一、一维数组\n静态 int array[100]; 　　定义了数组array，并未对数组进行初始化\n静态 int array[100] = {1，2}；　　定义并初始化了数组array\n动态 int* array = new int[100];  delete []array;　　分配了长度为100的数组array \n动态 int* array = new int[100](1，2); 　delete []array;　为长度为100的数组array初始化前两个元素\n \n二、二维数组\n静态 int array[10][10];　　定义了数组，并未初始化\n静态 int array[10][10] = { {1,1} , {2,2} };　　数组初始化了array[0][0,1]及array[1][0,1]\n动态 int (*array)[n] = new int[m][n]; delete []array;\n动态 int** array = new int*[m];　for(i) array[i] = new int[n];  for(i) delete []array[i]; delete []array;    多次析构\n动态 int* array = new int[m][n];  delete []array;      数组按行存储\n \n三、多维数组\n　　int* array = new int[m][3][4];    只有第一维可以是变量，其他维数必须是常量，否则会报错\n      delete []array;       必须进行内存释放，否则内存将泄漏\n \n \n四、数组作为函数形参传递\n一维数组传递：\n　　void func(int* array);\n　　void func(int array[]);　　　　\n二维数组传递：\n　　void func(int** array);\n　　void func(int (*array)[n]);　　　　　　　　　　　　　　　　　　\n数组名作为函数形参时，在函数体内，其失去了本身的内涵，仅仅只是一个指针，而且在其失去其内涵的同时，它还失去了其常量特性，可以作自增、自减等操作，可以被修改。\n\n五、字符数组\nchar类型的数组被常委字符数组，在字符数组中最后一位为转移字符'\\0'（也被成为空字符），该字符表示字符串已结束。在C++中定义了string类，在Visual C++中定义了Cstring类。\n字符串中每一个字符占用一个字节，再加上最后一个空字符。如：\nchar array[10] = \"cnblogs\";\n虽然只有7个字节，但是字符串长度为8个字节。\n \n也可以不用定义字符串长度，如：\nchar array[] = \"cnblogs\";\n\n \n/* --------------------------------------指针数组和数组指针--------------------------------------- */\n\nint* a[4]     指针数组     \n                 表示：数组a中的元素都为int型指针    \n                 元素表示：*a[i]   *(a[i])是一样的，因为[]优先级高于*\nint (*a)[4]   数组指针     \n                 表示：指向数组a的指针\n                 元素表示：(*a)[i]  \n\n\n/* --------------------------------------stl--------------------------------------- */\n\n\n一、STL简介\nSTL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。它是由Alexander Stepanov、Meng Lee和David R Musser在惠普实验室工作时所开发出来\n的。现在虽说它主要出现在C++中，但在被引入C++之前该技术就已经存在了很长的一段时间。\n \nSTL的代码从广义上讲分为三类：algorithm（算法）、container（容器）和iterator（迭代器），几乎所有的代码都采用了模板类和模版函数的方式，这相比于传统的由函数和类\n \n组成的库来说提供了更好的代码重用机会。在C++标准中，STL被组织为下面的13个头文件：<algorithm>、<deque>、<functional>、<iterator>、<vector>、<list>、<map>、\n<memory>、<numeric>、<queue>、<set>、<stack>和<utility>。 \n二、算法\n大家都能取得的一个共识是函数库对数据类型的选择对其可重用性起着至关重要的作用。举例来说，一个求方根的函数，在使用浮点数作为其参数类型的情况下的可重用性肯定比\n使用整型作为它的参数类性要高。而C++通过模板的机制允许推迟对某些类型的选择，直到真正想使用模板或者说对模板进行特化的时候，STL就利用了这一点提供了相当多的有用\n算法。它是在一个有效的框架中完成这些算法的——你可以将所有的类型划分为少数的几类，然后就可以在模版的参数中使用一种类型替换掉同一种类中的其他类型。\nSTL提供了大约100个实现算法的模版函数，比如算法for_each将为指定序列中的每一个元素调用指定的函数，stable_sort以你所指定的规则对序列进行稳定性排序等等。这样一来\n，只要我们熟悉了STL之后，许多代码可以被大大的化简，只需要通过调用一两个算法模板，就可以完成所需要的功能并大大地提升效率。\n \n算法部分主要由头文件<algorithm>，<numeric>和<functional>组成。\n<algorithm>是所有STL头文件中最大的一个（尽管它很好理解），它是由一大堆模版函数组成的，可以认为每个函数在很大程度上都是独立的，其中常用到的功能范围涉及到比较、交换、查找、遍历操作、复制、修改、移除、反转、排序、合并等等。\n \n<numeric>体积很小，只包括几个在序列上面进行简单数学运算的模板函数，包括加法和乘法在序列上的一些操作。\n \n<functional>中则定义了一些模板类，用以声明函数对象。\n \n三、容器\n在实际的开发过程中，数据结构本身的重要性不会逊于操作于数据结构的算法的重要性，当程序中存在着对时间要求很高的部分时，数据结构的选择就显得更加重要。\n经典的数据结构数量有限，但是我们常常重复着一些为了实现向量、链表等结构而编写的代码，这些代码都十分相似，只是为了适应不同数据的变化而在细节上有所出入。STL容器\n就为我们提供了这样的方便，它允许我们重复利用已有的实现构造自己的特定类型下的数据结构，通过设置一些模版类，STL容器对最常用的数据结构提供了支持，这些模板的参数\n允许我们指定容器中元素的数据类型，可以将我们许多重复而乏味的工作简化。\n \n容器部分主要由头文件<vector>,<list>,<deque>,<set>,<map>,<stack>和<queue>组成。对于常用的一些容器和容器适配器（可以看作由其它容器实现的容器），可以通过下表总结一下它们和相应头文件的对应关系。\n \n向量(vector) 连续存储的元素<vector>\n列表(list)       由节点组成的双向链表，每个结点包含着一个元素<list>\n双队列(deque) 连续存储的指向不同元素的指针所组成的数组<deque>\n集合(set) 由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种作用于元素对的谓词排列，没有两个不同的元素能够拥有相同的次序 <set>\n多重集合(multiset) 允许存在两个次序相等的元素的集合 <set>\n栈(stack) 后进先出的值的排列 <stack>\n队列(queue) 先进先出的执的排列 <queue>\n优先队列(priority_queue) 元素的次序是由作用于所存储的值对上的某种谓词决定的的一种队列 <queue>\n映射(map) 由{键，值}对组成的集合，以某种作用于键对上的谓词排列 <map>\n多重映射(multimap) 允许键对有相等的次序的映射 <map>\n \n四、迭代器\n \n下面要说的迭代器从作用上来说是最基本的部分，可是理解起来比前两者都要费力一些（至少笔者是这样）。软件设计有一个基本原则，所有的问题都可以通过引进一个间接层来\n简化，这种简化在STL中就是用迭代器来完成的\n。\n概括来说，迭代器在STL中用来将算法和容器联系起来，起着一种黏和剂的作用。几乎STL提供的所有算法都是通过迭代器存取元素序列进行工作的，每一个容器都定义了其本身所专有的迭代器，用以存取容器中的元素。\n \n迭代器部分主要由头文件<utility>,<iterator>和<memory>组成。\n<utility>是一个很小的头文件，它包括了贯穿使用在STL中的几个模板的声明，\n<iterator>中提供了迭代器使用的许多方法，而对于<memory>的描述则十分的困难，它以不同寻常的方式为容器中的元素分配存储空间，同时也为某些算法执行期间产生的临时对象提供机制,<memory>中的主要部分是模板类allocator，它负责产生所有容器中的默认分配器。\n\n\n/* ------------------------------------------------makefile&cmake--------------------------------------------------- */\n编译过程（预编译、编译、汇编、链接）：\n    1.gcc -E filename.c -o filename.i \n        1.去掉#开头程序，保留#pragma；2.宏替换；3.去注释；4.头文件包含；5.添加行号；\n    2.gcc -S filename.i -o filename.s \n        1.语法分析；2.词法分析；3.生成相应的汇编代码\n    3.gcc -c filename.s -o filename.o \n        将汇编转成相应的机器语言\n    4.gcc filename.o -o filename.exe \n        它通过链接器ld将运行程序的目标文件和库文件链接在一起，生成最后的可执行文件\n\nmakefile\n    @：不显示命令\n    $@：目标文件\n    $^：所有依赖文件\n    $<：第一个依赖文件\n    $?：更新过的文件\n\n    wildcard：扩展通配符\n    notdir：去除路径\n    patsubst：替换通配符\n    basename：获取文件名\n\n例：\n    # 头文件、源文件目录\n    INC_PATH = ./inc\n    SRC_PATH = ./src\n    \t\t\n    # 搜索目录\n    vpath % ./inc\n    vpath % ./src\n\n    # 编译环境\n    CC = g++ -std=c++11\n    AR = ar\n    FPIC = -fPIC\n    CFLAGS := -Wall -W -O3\n    INC_PATH_COMMAND = -I $(INC_PATH)\n    \n    # OBJECTS\n    OBJECTS := $(patsubst %.cpp, %.o, $(notdir $(wildcard $(SRC_PATH)/*.cpp)))\n    TARGET = main\n    \n    $(TARGET) : $(OBJECTS)\n    $(CC) $(CFLAGS) -o $@ $^\n    \n    # 所有的.cpp都生成相应的.o\n    %.o : %.cpp\n    $(CC) $(CFLAGS) -c $< $(INC_PATH_COMMAND)\n    \n    .PHONY : clean\n    clean : \n    \n    -rm -rf *.o\n\ncmake\n    cmake_minimun_required(VERSION 3.4.1)：指定CMake的最低版本\n    project(xxx)：定义工程名称\n    set(FILE_PATH C:\\\\cpp\\\\\\main.c C:\\\\cpp\\\\bspatch.c)：定义变量\n    add_executable(<name> ${SRC_LIST})：添加可执行文件\n    add_library(bspatch SHARED bspatch.c)：编译为一个名为libbspatch.so的共享库\n    \n    include_directories(./include ${MY_INCLUDE})：可以用相对货绝对路径，也可以用自定义的变量值\n    link_directories(\"/home/server/third/lib\")：添加需要链接的库文件目录\n    link_libraries(<name> lib1 lib2 lib3)：将若干库链接到目标库文件\n    \n    target_include_directories(<name> xxx1 xxx2)\n    target_link_libraries(<name> lib1 lib2 lib3)：将若干库链接到目标库文件\n    \n    add_subdirectory(bzip2)：添加子目录\n    add_definitions(-DFOO -DDEBUG ...)：为当前路径以及子目录的源文件加入由-D引入得define flag\n    add_compile_options(-std=c++11 -Wall)\n    set(EXECUTABLE_OUTPUT_PATH [output_path])：设置可执行文件的输出路径\n    set(LIBRARY_OUTPUT_PATH [output_path])：设置库文件的输出路径\n    set(CMAKE_VERBOSE_MAKEFILE ON)：设置打印编译代码\n    set(CMAKE_BUILD_TYPE \"Release\") ：设置编译方式\n    set(CMAKE_CXX_FLAGS_DEBUG \"$ENV{CXXFLAGS} -O0 -Wall -g -ggdb\")\n    set(CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -O3 -Wall\")\n    \n    CMAKE_SOURCE_DIR：CMakeLists.txt文件路径\n    CMAKE_BINARY_DIR：编译文件路径\n    cmake -G\"Unix Makefiles\" ../：编译cmakelist\n    cmake -G\"Visual Studio 11 2012\" .. \n```","source":"_posts/2016-10-16C基础.md","raw":"---\ntitle: C基础\ndate: 2016-10-16\ntags: [C]\n---\n\nC基础\n\n<!--more-->\n\n```\n/* --------------------------------------c基础--------------------------------------- */\n1 简介\n1.1 创始时间：1972\n1.2 标准：K&R、C90、C99、C11（1978年、1990年、1999年、2011年）\n\n2 基础\n2.2 数据类型（标 关 常 变 基）\n2.2.1 标志符：自己可以取名字的地方称为标志符\n标志符的规则（驼峰命名）\n* 只能是字母，数字，下划线；\n* 不能以数字开头;严格区分大小写；\n* 不能使用关键字作为标志符；\n\n2.2.2 关键字：关键字都是小写\nconst：\nconst修饰指针变量时：\n　　(1)位于*左侧，表示指针所指数据是常量，不能修改该数据\n　　(2)位于*右侧，表示指针本身是常量，不能指向其他内存地址\n\nconst修饰函数时：\n不能修改成员数据\n不能调用非const成员函数\nregister：请求将变量放入cpu寄存器中，速度最快\n\nextern：标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。\n\nexplicit：避免构造函数的参数自动转换为类对象(强制显示转换)\n\n2.2.3 常量：如123，\"hello\"\n \n2.2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据\n* 变量必须先声明，再赋值，再使用\n* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效\n\n2.2.5 基本数据类型\nchar\nbool\nvoid\nshort int、int、long int、long long int\nfloat、double、long double\n注：\n* char、bool占一个字节\n* 0xff、'\\xff'都可以赋值给char，因为存到内存里都是二进制\n* 0xff、'\\xff'都表示16进制\n\n2.2 运算符\n\n2.3 流程控制\n2.3.1 流程控制语句：\n* 顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)\n\n2.3.2 break,continue,return\n* break，continue一般用在循环中，也可以用在switch中\n* break：跳出最近的整个循环（结束循环）\n* continue：跳过最近整个循环的本次循环，进入下一次循环\n* return：结束整个方法，或带参返回方法体\n3 字符串\nstrlen()\nstrncat()\nstrncmp()\nstrncpy()\n\n\n/* --------------------------------------备忘录--------------------------------------- */\nSDL检查（安全开发生命周期）：\n增加了更严格的编译时检查，对于废弃和不安全的函数会报error而不是warning\n不让你用scanf之类的函数，必须用scanf_s\n\n/* --------------------------------------大小端对其--------------------------------------- */\n小端：较高的有效字节存放在较高的的存储器地址，较低的有效字节存放在较低的存储器地址。\n大端：较高的有效字节存放在较低的存储器地址，较低的有效字节存放在较高的存储器地址。\n注意 最小存储单元是byte 大小端一般针对32位数据而言的；比如int 型 0x2c3b4a6f \n从地址0x00000001开始存储 一个字节对应一个地址\n地址\t\t\t小段\t\t大端\n0xff000001\t6f\t\t2c\n0xff000002\t4a\t\t3b\n0xff000003\t3b\t\t4a\n0xff000004\t2c\t\t6f\n\n\n/* --------------------------------------数据加密--------------------------------------- */\n加密的原理： 用密钥对原文做  异或，置换，代换，移位\n1.可逆加密\nBase64\n2.单向加密\nMD5、sha-1、RIPEMD、Haval\n3.对称加密\nAES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK\n4.非对称加密（只有持有私钥方的才是收到不可解密的密文）\nRSA、Elgamal、背包算法、Rabin、D-H、ECC（椭圆曲线加密算法）等\n\n\n/* --------------------------------------静态库和动态库--------------------------------------- */\n1)静态库\n需要头文件和lib文件\n1.头文件作用是编译调用\n2.lib文件中包含了头文件接口以及函数的具体实现\n\n2)动态库\n* 隐式调用\n编译程序时需要头文件、lib文件，运行时需要DLL文件，并且运行过程中DLL文件一直被占用。适用于动态库比较少的情况。\n1.头文件作用是编译调用\n2.lib文件中包含了头文件在dll中的说明\n注：使用文件中一般这么写\n#pragma comment(lib,\"../lib/Project2.lib\")  注：此lib相对于链接的路径，即cpp文件\n3.dll文件中包含了函数的具体实现\n\n注：导出文件中一般这么写\n#ifdef DLL_EXPORT\n#define DECLDIR __declspec(dllexport)\n#else\n#define DECLDIR __declspec(dllimport)\n#endif\n\nDECLDIR int add(int a, int b);\nclass DECLDIR User\n{\nUser(void);\n~User(void);\nvirtual void doxxx();\n};\n\n* 显式调用\n编译时什么都不需要（如果基类在库中，也需要lib库文件），在需要使用DLL中的函数时，通过LoadLibrary()和FindProcAdress()这两个API调用。只需要一个DLL文件即可，而且在需要使用的时候DLL才被占用，使用完毕即被解除占用。适用于动态库比较多的情况。\n1.头文件作用是编译调用（一般函数导出用不到，类需要用到）\n2.lib文件中包含了头文件接口（一般函数导出用不到，类需要用到）\n3.dll文件中包含了函数的具体实现\n\n注：导出文件中一般这么写\n#ifdef DLL_EXPORT\n#define DECLDIR __declspec(dllexport)\n#else\n#define DECLDIR __declspec(dllimport)\n#endif\n\nextern \"C\"\n{\nDECLDIR User* createObject(void)\n{\nreturn new User();\n}\n}\n\n注：使用文件中一般这么写\ntypedef User* (*P_Fun)(void);\nHINSTANCE hinst = LoadLibrary(\"Project2.dll\");  注：需要windows.h\nP_Fun p_fun = (P_Fun)GetProcAddress(hinst , \"createObject\");\nUser* user = (*p_fun)();\nuser->doxxx();\ndelete user;\nFreeLibrary(h);\n\n\n/* --------------------------------------静态、常量、静态常量--------------------------------------- */\n类中静态以及常量的用法\n1.只有静态常量整型数据成员才可以在类中初始化(包括bool、char)\n2.静态变量的初始化写在类外部\n3.常量的初始化写在初始化列表\n注：静态方法不能访问this指针\n\n其他用法\n静态或常量可以写在namesapce中，方法不能为静态的\n\n\n/* --------------------------------------枚举--------------------------------------- */\n\nclass A\n{\npublic:\n\tA();\n\t~A();\n\n\tenum SEX\n\t{\n\t\tNAN,\n\t\tNV,\n\t};\n\tstatic SEX s;\nprivate:\n\n};\n\nA::SEX A::s = A::SEX::NAN;\n\nvoid swi_sex(A::SEX& temp)\n{\n\tswitch (temp)\n\t{\n\tcase A::SEX::NAN:\n\t\tcout << \"NAN\" << endl;\n\t\tbreak;\n\tcase A::SEX::NV:\n\t\tcout << \"NV\" << endl;\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n}\n\nvoid test()\n{\n\t//A::s = A::SEX::NV;\n\tswi_sex(A::s);\n}\n\n\n/* --------------------------------------命名空间--------------------------------------- */\n区别于复合域、类域、全局域的一块空间\n在类作用域和全局作用域之间\n\nnamespace \n{\n\tint i = 5;\n}\n\nnamespace kkk\n{\n\tint i = 6;\n\tvoid show()\n\t{\n\t\tcout << \"hello\" << endl;\n\t}\n}\n\nint main()\n{\n\tnamespace ns = kkk;\n\tns::show();\n}\n（1）一个命名空间可以在多个头文件或源文件中实现，成为分段定义。如果想在当前文件访问定义在另一个文件中的同名命名空间内的成员变量，需要在当前文件的命名空间内部进行申明。如标准C++库中的所有组件都是在一个被称为std的命名空间中声明和定义的。这些组件当然分散在不同的头文件和源文件中。\n（2）命名空间内部可以定义类型、函数、变量等内容，但命名空间不能定义在类和函数的内部。\n（3）在一个命名空间中可以自由地访问另一个命名空间的内容，因为命名空间并没有保护级别的限制。\n（4）虽然经常可以见到using namespace std;这样的用法，我们也可以用同样的方法将命名空间中的内容一次性“引入”到当前的命名空间中来，但这并不是一个值得推荐的用法。因为这样做的相当于取消了命名空间的定义，使发生名称冲突的机会增多。所以，用using单独引入需要的内容，这样会更有针对性。例如，要使用标准输入对象，只需用using std::cin;就可以了。\n（5）不能在命名空间的定义中声明另一个嵌套的子命名空间，只能在命名空间中定义子命名空间。\n（6）命名空间的成员，可以在命名空间的内部定义，也可以在命名空间的外部定义，但是要在命名空间进行声明。 \n命名空间成员的外部定义的格式为：命名空间名::成员名 ……\n（7）命名空间在进行分段定义时，不能定义同名的变量，否则连接出现重定义错误。因为命名空间不同于类，具有外部连接的特性。由于外部连接特性，请不要将命名空间定义在头文件，因为当被不同的源文件包含时，会出现重定义的错误。\n\n\n/* --------------------------------------模板函数--------------------------------------- */\ntemplate<typename T, typename P>\nT xxx(T arg1,P arg2)\n{\n\treturn arg1 + arg2;\n}\n\n\n/* --------------------------------------__int32--------------------------------------- */\ntypedef __int32 common_int;\t\t\t\t// 定义32位的int，防止编译器对int长度定义的不同\ntypedef unsigned __int32 common_uint;\t\t// 定义无符号32位的int\n\n\n/* --------------------------------------#define和typedef--------------------------------------- */\n#define DLL_API  __declspec(dllexport)\t\t切记：没有=，没有分号\n单纯的替换\ntypedef char* PCHAR;\n定义一种类型\n\n\n/* --------------------------------------引用--------------------------------------- */\n\n一、引用简介\n　　引用就是某一变量（目标）的一个别名，对引用的操作与对变量直接操作完全一样。\n　　引用的声明方法：类型标识符 &引用名=目标变量名；\n　　【例1】：int a; int &ra=a; //定义引用ra,它是变量a的引用，即别名\n　　说明：\n　　（1）&在此不是求地址运算，而是起标识作用。\n　　（2）类型标识符是指目标变量的类型。\n　　（3）声明引用时，必须同时对其进行初始化。\n　　（4）引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。\n　　 ra=1; 等价于 a=1;\n　　（5）声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&ra与&a相等。\n　　（6）不能建立数组的引用。因为数组是一个由若干个元素所组成的集合，所以无法建立一个数组的别名。\n　　三、引用总结\n　　（1）在引用的使用中，单纯给某个变量取个别名是毫无意义的，引用的目的主要用于在函数参数传递中，解决大块数据或对象的传递效率和空间不如意的问题。\n　　（2）用引用传递函数的参数，能保证参数传递中不产生副本，提高传递的效率，且通过const的使用，保证了引用传递的安全性。\n　　（3）引用与指针的区别是，指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。\n　　（4）使用引用的时机。流操作符<<和>>、赋值操作符=的返回值、拷贝构造函数的参数、赋值操作符=的参数、其它情况都推荐使用引用。\n\n\n/* --------------------------------------返回值--------------------------------------- */\n千言万语，汇成一句话，函数不要返回指向栈的内存地址，切记，是地址，别被吓的所有的函数内的变量都不敢返回，只要不是栈的内存地址，你尽管放心的返回。\n非指针、引用类型返回，会进行赋值或者拷贝操作。下面两种特殊情况。\n\nchar *pstr = \"This is the buffer text\";\nc类型字符串存在常量区，可以返回\nchar buffer[] = \"This is the buffer text\";\n数组存在栈区，返回会出问题，系统自动销毁那块内存\n\n\n\n/* --------------------------------------数组的定义和初始化--------------------------------------- */\n一、一维数组\n静态 int array[100]; 　　定义了数组array，并未对数组进行初始化\n静态 int array[100] = {1，2}；　　定义并初始化了数组array\n动态 int* array = new int[100];  delete []array;　　分配了长度为100的数组array \n动态 int* array = new int[100](1，2); 　delete []array;　为长度为100的数组array初始化前两个元素\n \n二、二维数组\n静态 int array[10][10];　　定义了数组，并未初始化\n静态 int array[10][10] = { {1,1} , {2,2} };　　数组初始化了array[0][0,1]及array[1][0,1]\n动态 int (*array)[n] = new int[m][n]; delete []array;\n动态 int** array = new int*[m];　for(i) array[i] = new int[n];  for(i) delete []array[i]; delete []array;    多次析构\n动态 int* array = new int[m][n];  delete []array;      数组按行存储\n \n三、多维数组\n　　int* array = new int[m][3][4];    只有第一维可以是变量，其他维数必须是常量，否则会报错\n      delete []array;       必须进行内存释放，否则内存将泄漏\n \n \n四、数组作为函数形参传递\n一维数组传递：\n　　void func(int* array);\n　　void func(int array[]);　　　　\n二维数组传递：\n　　void func(int** array);\n　　void func(int (*array)[n]);　　　　　　　　　　　　　　　　　　\n数组名作为函数形参时，在函数体内，其失去了本身的内涵，仅仅只是一个指针，而且在其失去其内涵的同时，它还失去了其常量特性，可以作自增、自减等操作，可以被修改。\n\n五、字符数组\nchar类型的数组被常委字符数组，在字符数组中最后一位为转移字符'\\0'（也被成为空字符），该字符表示字符串已结束。在C++中定义了string类，在Visual C++中定义了Cstring类。\n字符串中每一个字符占用一个字节，再加上最后一个空字符。如：\nchar array[10] = \"cnblogs\";\n虽然只有7个字节，但是字符串长度为8个字节。\n \n也可以不用定义字符串长度，如：\nchar array[] = \"cnblogs\";\n\n \n/* --------------------------------------指针数组和数组指针--------------------------------------- */\n\nint* a[4]     指针数组     \n                 表示：数组a中的元素都为int型指针    \n                 元素表示：*a[i]   *(a[i])是一样的，因为[]优先级高于*\nint (*a)[4]   数组指针     \n                 表示：指向数组a的指针\n                 元素表示：(*a)[i]  \n\n\n/* --------------------------------------stl--------------------------------------- */\n\n\n一、STL简介\nSTL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。它是由Alexander Stepanov、Meng Lee和David R Musser在惠普实验室工作时所开发出来\n的。现在虽说它主要出现在C++中，但在被引入C++之前该技术就已经存在了很长的一段时间。\n \nSTL的代码从广义上讲分为三类：algorithm（算法）、container（容器）和iterator（迭代器），几乎所有的代码都采用了模板类和模版函数的方式，这相比于传统的由函数和类\n \n组成的库来说提供了更好的代码重用机会。在C++标准中，STL被组织为下面的13个头文件：<algorithm>、<deque>、<functional>、<iterator>、<vector>、<list>、<map>、\n<memory>、<numeric>、<queue>、<set>、<stack>和<utility>。 \n二、算法\n大家都能取得的一个共识是函数库对数据类型的选择对其可重用性起着至关重要的作用。举例来说，一个求方根的函数，在使用浮点数作为其参数类型的情况下的可重用性肯定比\n使用整型作为它的参数类性要高。而C++通过模板的机制允许推迟对某些类型的选择，直到真正想使用模板或者说对模板进行特化的时候，STL就利用了这一点提供了相当多的有用\n算法。它是在一个有效的框架中完成这些算法的——你可以将所有的类型划分为少数的几类，然后就可以在模版的参数中使用一种类型替换掉同一种类中的其他类型。\nSTL提供了大约100个实现算法的模版函数，比如算法for_each将为指定序列中的每一个元素调用指定的函数，stable_sort以你所指定的规则对序列进行稳定性排序等等。这样一来\n，只要我们熟悉了STL之后，许多代码可以被大大的化简，只需要通过调用一两个算法模板，就可以完成所需要的功能并大大地提升效率。\n \n算法部分主要由头文件<algorithm>，<numeric>和<functional>组成。\n<algorithm>是所有STL头文件中最大的一个（尽管它很好理解），它是由一大堆模版函数组成的，可以认为每个函数在很大程度上都是独立的，其中常用到的功能范围涉及到比较、交换、查找、遍历操作、复制、修改、移除、反转、排序、合并等等。\n \n<numeric>体积很小，只包括几个在序列上面进行简单数学运算的模板函数，包括加法和乘法在序列上的一些操作。\n \n<functional>中则定义了一些模板类，用以声明函数对象。\n \n三、容器\n在实际的开发过程中，数据结构本身的重要性不会逊于操作于数据结构的算法的重要性，当程序中存在着对时间要求很高的部分时，数据结构的选择就显得更加重要。\n经典的数据结构数量有限，但是我们常常重复着一些为了实现向量、链表等结构而编写的代码，这些代码都十分相似，只是为了适应不同数据的变化而在细节上有所出入。STL容器\n就为我们提供了这样的方便，它允许我们重复利用已有的实现构造自己的特定类型下的数据结构，通过设置一些模版类，STL容器对最常用的数据结构提供了支持，这些模板的参数\n允许我们指定容器中元素的数据类型，可以将我们许多重复而乏味的工作简化。\n \n容器部分主要由头文件<vector>,<list>,<deque>,<set>,<map>,<stack>和<queue>组成。对于常用的一些容器和容器适配器（可以看作由其它容器实现的容器），可以通过下表总结一下它们和相应头文件的对应关系。\n \n向量(vector) 连续存储的元素<vector>\n列表(list)       由节点组成的双向链表，每个结点包含着一个元素<list>\n双队列(deque) 连续存储的指向不同元素的指针所组成的数组<deque>\n集合(set) 由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种作用于元素对的谓词排列，没有两个不同的元素能够拥有相同的次序 <set>\n多重集合(multiset) 允许存在两个次序相等的元素的集合 <set>\n栈(stack) 后进先出的值的排列 <stack>\n队列(queue) 先进先出的执的排列 <queue>\n优先队列(priority_queue) 元素的次序是由作用于所存储的值对上的某种谓词决定的的一种队列 <queue>\n映射(map) 由{键，值}对组成的集合，以某种作用于键对上的谓词排列 <map>\n多重映射(multimap) 允许键对有相等的次序的映射 <map>\n \n四、迭代器\n \n下面要说的迭代器从作用上来说是最基本的部分，可是理解起来比前两者都要费力一些（至少笔者是这样）。软件设计有一个基本原则，所有的问题都可以通过引进一个间接层来\n简化，这种简化在STL中就是用迭代器来完成的\n。\n概括来说，迭代器在STL中用来将算法和容器联系起来，起着一种黏和剂的作用。几乎STL提供的所有算法都是通过迭代器存取元素序列进行工作的，每一个容器都定义了其本身所专有的迭代器，用以存取容器中的元素。\n \n迭代器部分主要由头文件<utility>,<iterator>和<memory>组成。\n<utility>是一个很小的头文件，它包括了贯穿使用在STL中的几个模板的声明，\n<iterator>中提供了迭代器使用的许多方法，而对于<memory>的描述则十分的困难，它以不同寻常的方式为容器中的元素分配存储空间，同时也为某些算法执行期间产生的临时对象提供机制,<memory>中的主要部分是模板类allocator，它负责产生所有容器中的默认分配器。\n\n\n/* ------------------------------------------------makefile&cmake--------------------------------------------------- */\n编译过程（预编译、编译、汇编、链接）：\n    1.gcc -E filename.c -o filename.i \n        1.去掉#开头程序，保留#pragma；2.宏替换；3.去注释；4.头文件包含；5.添加行号；\n    2.gcc -S filename.i -o filename.s \n        1.语法分析；2.词法分析；3.生成相应的汇编代码\n    3.gcc -c filename.s -o filename.o \n        将汇编转成相应的机器语言\n    4.gcc filename.o -o filename.exe \n        它通过链接器ld将运行程序的目标文件和库文件链接在一起，生成最后的可执行文件\n\nmakefile\n    @：不显示命令\n    $@：目标文件\n    $^：所有依赖文件\n    $<：第一个依赖文件\n    $?：更新过的文件\n\n    wildcard：扩展通配符\n    notdir：去除路径\n    patsubst：替换通配符\n    basename：获取文件名\n\n例：\n    # 头文件、源文件目录\n    INC_PATH = ./inc\n    SRC_PATH = ./src\n    \t\t\n    # 搜索目录\n    vpath % ./inc\n    vpath % ./src\n\n    # 编译环境\n    CC = g++ -std=c++11\n    AR = ar\n    FPIC = -fPIC\n    CFLAGS := -Wall -W -O3\n    INC_PATH_COMMAND = -I $(INC_PATH)\n    \n    # OBJECTS\n    OBJECTS := $(patsubst %.cpp, %.o, $(notdir $(wildcard $(SRC_PATH)/*.cpp)))\n    TARGET = main\n    \n    $(TARGET) : $(OBJECTS)\n    $(CC) $(CFLAGS) -o $@ $^\n    \n    # 所有的.cpp都生成相应的.o\n    %.o : %.cpp\n    $(CC) $(CFLAGS) -c $< $(INC_PATH_COMMAND)\n    \n    .PHONY : clean\n    clean : \n    \n    -rm -rf *.o\n\ncmake\n    cmake_minimun_required(VERSION 3.4.1)：指定CMake的最低版本\n    project(xxx)：定义工程名称\n    set(FILE_PATH C:\\\\cpp\\\\\\main.c C:\\\\cpp\\\\bspatch.c)：定义变量\n    add_executable(<name> ${SRC_LIST})：添加可执行文件\n    add_library(bspatch SHARED bspatch.c)：编译为一个名为libbspatch.so的共享库\n    \n    include_directories(./include ${MY_INCLUDE})：可以用相对货绝对路径，也可以用自定义的变量值\n    link_directories(\"/home/server/third/lib\")：添加需要链接的库文件目录\n    link_libraries(<name> lib1 lib2 lib3)：将若干库链接到目标库文件\n    \n    target_include_directories(<name> xxx1 xxx2)\n    target_link_libraries(<name> lib1 lib2 lib3)：将若干库链接到目标库文件\n    \n    add_subdirectory(bzip2)：添加子目录\n    add_definitions(-DFOO -DDEBUG ...)：为当前路径以及子目录的源文件加入由-D引入得define flag\n    add_compile_options(-std=c++11 -Wall)\n    set(EXECUTABLE_OUTPUT_PATH [output_path])：设置可执行文件的输出路径\n    set(LIBRARY_OUTPUT_PATH [output_path])：设置库文件的输出路径\n    set(CMAKE_VERBOSE_MAKEFILE ON)：设置打印编译代码\n    set(CMAKE_BUILD_TYPE \"Release\") ：设置编译方式\n    set(CMAKE_CXX_FLAGS_DEBUG \"$ENV{CXXFLAGS} -O0 -Wall -g -ggdb\")\n    set(CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -O3 -Wall\")\n    \n    CMAKE_SOURCE_DIR：CMakeLists.txt文件路径\n    CMAKE_BINARY_DIR：编译文件路径\n    cmake -G\"Unix Makefiles\" ../：编译cmakelist\n    cmake -G\"Visual Studio 11 2012\" .. \n```","slug":"2016-10-16C基础","published":1,"updated":"2022-06-30T16:24:10.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooet0005nkvv1w8m1cup","content":"<p>C基础</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* --------------------------------------c基础--------------------------------------- */</span><br><span class=\"line\">1 简介</span><br><span class=\"line\">1.1 创始时间：1972</span><br><span class=\"line\">1.2 标准：K&amp;R、C90、C99、C11（1978年、1990年、1999年、2011年）</span><br><span class=\"line\"></span><br><span class=\"line\">2 基础</span><br><span class=\"line\">2.2 数据类型（标 关 常 变 基）</span><br><span class=\"line\">2.2.1 标志符：自己可以取名字的地方称为标志符</span><br><span class=\"line\">标志符的规则（驼峰命名）</span><br><span class=\"line\">* 只能是字母，数字，下划线；</span><br><span class=\"line\">* 不能以数字开头;严格区分大小写；</span><br><span class=\"line\">* 不能使用关键字作为标志符；</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.2 关键字：关键字都是小写</span><br><span class=\"line\">const：</span><br><span class=\"line\">const修饰指针变量时：</span><br><span class=\"line\">　　(1)位于*左侧，表示指针所指数据是常量，不能修改该数据</span><br><span class=\"line\">　　(2)位于*右侧，表示指针本身是常量，不能指向其他内存地址</span><br><span class=\"line\"></span><br><span class=\"line\">const修饰函数时：</span><br><span class=\"line\">不能修改成员数据</span><br><span class=\"line\">不能调用非const成员函数</span><br><span class=\"line\">register：请求将变量放入cpu寄存器中，速度最快</span><br><span class=\"line\"></span><br><span class=\"line\">extern：标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。</span><br><span class=\"line\"></span><br><span class=\"line\">explicit：避免构造函数的参数自动转换为类对象(强制显示转换)</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.3 常量：如123，&quot;hello&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">2.2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据</span><br><span class=\"line\">* 变量必须先声明，再赋值，再使用</span><br><span class=\"line\">* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.5 基本数据类型</span><br><span class=\"line\">char</span><br><span class=\"line\">bool</span><br><span class=\"line\">void</span><br><span class=\"line\">short int、int、long int、long long int</span><br><span class=\"line\">float、double、long double</span><br><span class=\"line\">注：</span><br><span class=\"line\">* char、bool占一个字节</span><br><span class=\"line\">* 0xff、&#x27;\\xff&#x27;都可以赋值给char，因为存到内存里都是二进制</span><br><span class=\"line\">* 0xff、&#x27;\\xff&#x27;都表示16进制</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 运算符</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 流程控制</span><br><span class=\"line\">2.3.1 流程控制语句：</span><br><span class=\"line\">* 顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)</span><br><span class=\"line\"></span><br><span class=\"line\">2.3.2 break,continue,return</span><br><span class=\"line\">* break，continue一般用在循环中，也可以用在switch中</span><br><span class=\"line\">* break：跳出最近的整个循环（结束循环）</span><br><span class=\"line\">* continue：跳过最近整个循环的本次循环，进入下一次循环</span><br><span class=\"line\">* return：结束整个方法，或带参返回方法体</span><br><span class=\"line\">3 字符串</span><br><span class=\"line\">strlen()</span><br><span class=\"line\">strncat()</span><br><span class=\"line\">strncmp()</span><br><span class=\"line\">strncpy()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------备忘录--------------------------------------- */</span><br><span class=\"line\">SDL检查（安全开发生命周期）：</span><br><span class=\"line\">增加了更严格的编译时检查，对于废弃和不安全的函数会报error而不是warning</span><br><span class=\"line\">不让你用scanf之类的函数，必须用scanf_s</span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------大小端对其--------------------------------------- */</span><br><span class=\"line\">小端：较高的有效字节存放在较高的的存储器地址，较低的有效字节存放在较低的存储器地址。</span><br><span class=\"line\">大端：较高的有效字节存放在较低的存储器地址，较低的有效字节存放在较高的存储器地址。</span><br><span class=\"line\">注意 最小存储单元是byte 大小端一般针对32位数据而言的；比如int 型 0x2c3b4a6f </span><br><span class=\"line\">从地址0x00000001开始存储 一个字节对应一个地址</span><br><span class=\"line\">地址\t\t\t小段\t\t大端</span><br><span class=\"line\">0xff000001\t6f\t\t2c</span><br><span class=\"line\">0xff000002\t4a\t\t3b</span><br><span class=\"line\">0xff000003\t3b\t\t4a</span><br><span class=\"line\">0xff000004\t2c\t\t6f</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------数据加密--------------------------------------- */</span><br><span class=\"line\">加密的原理： 用密钥对原文做  异或，置换，代换，移位</span><br><span class=\"line\">1.可逆加密</span><br><span class=\"line\">Base64</span><br><span class=\"line\">2.单向加密</span><br><span class=\"line\">MD5、sha-1、RIPEMD、Haval</span><br><span class=\"line\">3.对称加密</span><br><span class=\"line\">AES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK</span><br><span class=\"line\">4.非对称加密（只有持有私钥方的才是收到不可解密的密文）</span><br><span class=\"line\">RSA、Elgamal、背包算法、Rabin、D-H、ECC（椭圆曲线加密算法）等</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------静态库和动态库--------------------------------------- */</span><br><span class=\"line\">1)静态库</span><br><span class=\"line\">需要头文件和lib文件</span><br><span class=\"line\">1.头文件作用是编译调用</span><br><span class=\"line\">2.lib文件中包含了头文件接口以及函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">2)动态库</span><br><span class=\"line\">* 隐式调用</span><br><span class=\"line\">编译程序时需要头文件、lib文件，运行时需要DLL文件，并且运行过程中DLL文件一直被占用。适用于动态库比较少的情况。</span><br><span class=\"line\">1.头文件作用是编译调用</span><br><span class=\"line\">2.lib文件中包含了头文件在dll中的说明</span><br><span class=\"line\">注：使用文件中一般这么写</span><br><span class=\"line\">#pragma comment(lib,&quot;../lib/Project2.lib&quot;)  注：此lib相对于链接的路径，即cpp文件</span><br><span class=\"line\">3.dll文件中包含了函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">注：导出文件中一般这么写</span><br><span class=\"line\">#ifdef DLL_EXPORT</span><br><span class=\"line\">#define DECLDIR __declspec(dllexport)</span><br><span class=\"line\">#else</span><br><span class=\"line\">#define DECLDIR __declspec(dllimport)</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">DECLDIR int add(int a, int b);</span><br><span class=\"line\">class DECLDIR User</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">User(void);</span><br><span class=\"line\">~User(void);</span><br><span class=\"line\">virtual void doxxx();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">* 显式调用</span><br><span class=\"line\">编译时什么都不需要（如果基类在库中，也需要lib库文件），在需要使用DLL中的函数时，通过LoadLibrary()和FindProcAdress()这两个API调用。只需要一个DLL文件即可，而且在需要使用的时候DLL才被占用，使用完毕即被解除占用。适用于动态库比较多的情况。</span><br><span class=\"line\">1.头文件作用是编译调用（一般函数导出用不到，类需要用到）</span><br><span class=\"line\">2.lib文件中包含了头文件接口（一般函数导出用不到，类需要用到）</span><br><span class=\"line\">3.dll文件中包含了函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">注：导出文件中一般这么写</span><br><span class=\"line\">#ifdef DLL_EXPORT</span><br><span class=\"line\">#define DECLDIR __declspec(dllexport)</span><br><span class=\"line\">#else</span><br><span class=\"line\">#define DECLDIR __declspec(dllimport)</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">DECLDIR User* createObject(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">return new User();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">注：使用文件中一般这么写</span><br><span class=\"line\">typedef User* (*P_Fun)(void);</span><br><span class=\"line\">HINSTANCE hinst = LoadLibrary(&quot;Project2.dll&quot;);  注：需要windows.h</span><br><span class=\"line\">P_Fun p_fun = (P_Fun)GetProcAddress(hinst , &quot;createObject&quot;);</span><br><span class=\"line\">User* user = (*p_fun)();</span><br><span class=\"line\">user-&gt;doxxx();</span><br><span class=\"line\">delete user;</span><br><span class=\"line\">FreeLibrary(h);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------静态、常量、静态常量--------------------------------------- */</span><br><span class=\"line\">类中静态以及常量的用法</span><br><span class=\"line\">1.只有静态常量整型数据成员才可以在类中初始化(包括bool、char)</span><br><span class=\"line\">2.静态变量的初始化写在类外部</span><br><span class=\"line\">3.常量的初始化写在初始化列表</span><br><span class=\"line\">注：静态方法不能访问this指针</span><br><span class=\"line\"></span><br><span class=\"line\">其他用法</span><br><span class=\"line\">静态或常量可以写在namesapce中，方法不能为静态的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------枚举--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">class A</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">\tA();</span><br><span class=\"line\">\t~A();</span><br><span class=\"line\"></span><br><span class=\"line\">\tenum SEX</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tNAN,</span><br><span class=\"line\">\t\tNV,</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tstatic SEX s;</span><br><span class=\"line\">private:</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">A::SEX A::s = A::SEX::NAN;</span><br><span class=\"line\"></span><br><span class=\"line\">void swi_sex(A::SEX&amp; temp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tswitch (temp)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tcase A::SEX::NAN:</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;NAN&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\tcase A::SEX::NV:</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;NV&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\tdefault:</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void test()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//A::s = A::SEX::NV;</span><br><span class=\"line\">\tswi_sex(A::s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------命名空间--------------------------------------- */</span><br><span class=\"line\">区别于复合域、类域、全局域的一块空间</span><br><span class=\"line\">在类作用域和全局作用域之间</span><br><span class=\"line\"></span><br><span class=\"line\">namespace </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint i = 5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace kkk</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint i = 6;</span><br><span class=\"line\">\tvoid show()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;hello&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tnamespace ns = kkk;</span><br><span class=\"line\">\tns::show();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">（1）一个命名空间可以在多个头文件或源文件中实现，成为分段定义。如果想在当前文件访问定义在另一个文件中的同名命名空间内的成员变量，需要在当前文件的命名空间内部进行申明。如标准C++库中的所有组件都是在一个被称为std的命名空间中声明和定义的。这些组件当然分散在不同的头文件和源文件中。</span><br><span class=\"line\">（2）命名空间内部可以定义类型、函数、变量等内容，但命名空间不能定义在类和函数的内部。</span><br><span class=\"line\">（3）在一个命名空间中可以自由地访问另一个命名空间的内容，因为命名空间并没有保护级别的限制。</span><br><span class=\"line\">（4）虽然经常可以见到using namespace std;这样的用法，我们也可以用同样的方法将命名空间中的内容一次性“引入”到当前的命名空间中来，但这并不是一个值得推荐的用法。因为这样做的相当于取消了命名空间的定义，使发生名称冲突的机会增多。所以，用using单独引入需要的内容，这样会更有针对性。例如，要使用标准输入对象，只需用using std::cin;就可以了。</span><br><span class=\"line\">（5）不能在命名空间的定义中声明另一个嵌套的子命名空间，只能在命名空间中定义子命名空间。</span><br><span class=\"line\">（6）命名空间的成员，可以在命名空间的内部定义，也可以在命名空间的外部定义，但是要在命名空间进行声明。 </span><br><span class=\"line\">命名空间成员的外部定义的格式为：命名空间名::成员名 ……</span><br><span class=\"line\">（7）命名空间在进行分段定义时，不能定义同名的变量，否则连接出现重定义错误。因为命名空间不同于类，具有外部连接的特性。由于外部连接特性，请不要将命名空间定义在头文件，因为当被不同的源文件包含时，会出现重定义的错误。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------模板函数--------------------------------------- */</span><br><span class=\"line\">template&lt;typename T, typename P&gt;</span><br><span class=\"line\">T xxx(T arg1,P arg2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\treturn arg1 + arg2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------__int32--------------------------------------- */</span><br><span class=\"line\">typedef __int32 common_int;\t\t\t\t// 定义32位的int，防止编译器对int长度定义的不同</span><br><span class=\"line\">typedef unsigned __int32 common_uint;\t\t// 定义无符号32位的int</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------#define和typedef--------------------------------------- */</span><br><span class=\"line\">#define DLL_API  __declspec(dllexport)\t\t切记：没有=，没有分号</span><br><span class=\"line\">单纯的替换</span><br><span class=\"line\">typedef char* PCHAR;</span><br><span class=\"line\">定义一种类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------引用--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">一、引用简介</span><br><span class=\"line\">　　引用就是某一变量（目标）的一个别名，对引用的操作与对变量直接操作完全一样。</span><br><span class=\"line\">　　引用的声明方法：类型标识符 &amp;引用名=目标变量名；</span><br><span class=\"line\">　　【例1】：int a; int &amp;ra=a; //定义引用ra,它是变量a的引用，即别名</span><br><span class=\"line\">　　说明：</span><br><span class=\"line\">　　（1）&amp;在此不是求地址运算，而是起标识作用。</span><br><span class=\"line\">　　（2）类型标识符是指目标变量的类型。</span><br><span class=\"line\">　　（3）声明引用时，必须同时对其进行初始化。</span><br><span class=\"line\">　　（4）引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。</span><br><span class=\"line\">　　 ra=1; 等价于 a=1;</span><br><span class=\"line\">　　（5）声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&amp;ra与&amp;a相等。</span><br><span class=\"line\">　　（6）不能建立数组的引用。因为数组是一个由若干个元素所组成的集合，所以无法建立一个数组的别名。</span><br><span class=\"line\">　　三、引用总结</span><br><span class=\"line\">　　（1）在引用的使用中，单纯给某个变量取个别名是毫无意义的，引用的目的主要用于在函数参数传递中，解决大块数据或对象的传递效率和空间不如意的问题。</span><br><span class=\"line\">　　（2）用引用传递函数的参数，能保证参数传递中不产生副本，提高传递的效率，且通过const的使用，保证了引用传递的安全性。</span><br><span class=\"line\">　　（3）引用与指针的区别是，指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。</span><br><span class=\"line\">　　（4）使用引用的时机。流操作符&lt;&lt;和&gt;&gt;、赋值操作符=的返回值、拷贝构造函数的参数、赋值操作符=的参数、其它情况都推荐使用引用。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------返回值--------------------------------------- */</span><br><span class=\"line\">千言万语，汇成一句话，函数不要返回指向栈的内存地址，切记，是地址，别被吓的所有的函数内的变量都不敢返回，只要不是栈的内存地址，你尽管放心的返回。</span><br><span class=\"line\">非指针、引用类型返回，会进行赋值或者拷贝操作。下面两种特殊情况。</span><br><span class=\"line\"></span><br><span class=\"line\">char *pstr = &quot;This is the buffer text&quot;;</span><br><span class=\"line\">c类型字符串存在常量区，可以返回</span><br><span class=\"line\">char buffer[] = &quot;This is the buffer text&quot;;</span><br><span class=\"line\">数组存在栈区，返回会出问题，系统自动销毁那块内存</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------数组的定义和初始化--------------------------------------- */</span><br><span class=\"line\">一、一维数组</span><br><span class=\"line\">静态 int array[100]; 　　定义了数组array，并未对数组进行初始化</span><br><span class=\"line\">静态 int array[100] = &#123;1，2&#125;；　　定义并初始化了数组array</span><br><span class=\"line\">动态 int* array = new int[100];  delete []array;　　分配了长度为100的数组array </span><br><span class=\"line\">动态 int* array = new int[100](1，2); 　delete []array;　为长度为100的数组array初始化前两个元素</span><br><span class=\"line\"> </span><br><span class=\"line\">二、二维数组</span><br><span class=\"line\">静态 int array[10][10];　　定义了数组，并未初始化</span><br><span class=\"line\">静态 int array[10][10] = &#123; &#123;1,1&#125; , &#123;2,2&#125; &#125;;　　数组初始化了array[0][0,1]及array[1][0,1]</span><br><span class=\"line\">动态 int (*array)[n] = new int[m][n]; delete []array;</span><br><span class=\"line\">动态 int** array = new int*[m];　for(i) array[i] = new int[n];  for(i) delete []array[i]; delete []array;    多次析构</span><br><span class=\"line\">动态 int* array = new int[m][n];  delete []array;      数组按行存储</span><br><span class=\"line\"> </span><br><span class=\"line\">三、多维数组</span><br><span class=\"line\">　　int* array = new int[m][3][4];    只有第一维可以是变量，其他维数必须是常量，否则会报错</span><br><span class=\"line\">      delete []array;       必须进行内存释放，否则内存将泄漏</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">四、数组作为函数形参传递</span><br><span class=\"line\">一维数组传递：</span><br><span class=\"line\">　　void func(int* array);</span><br><span class=\"line\">　　void func(int array[]);　　　　</span><br><span class=\"line\">二维数组传递：</span><br><span class=\"line\">　　void func(int** array);</span><br><span class=\"line\">　　void func(int (*array)[n]);　　　　　　　　　　　　　　　　　　</span><br><span class=\"line\">数组名作为函数形参时，在函数体内，其失去了本身的内涵，仅仅只是一个指针，而且在其失去其内涵的同时，它还失去了其常量特性，可以作自增、自减等操作，可以被修改。</span><br><span class=\"line\"></span><br><span class=\"line\">五、字符数组</span><br><span class=\"line\">char类型的数组被常委字符数组，在字符数组中最后一位为转移字符&#x27;\\0&#x27;（也被成为空字符），该字符表示字符串已结束。在C++中定义了string类，在Visual C++中定义了Cstring类。</span><br><span class=\"line\">字符串中每一个字符占用一个字节，再加上最后一个空字符。如：</span><br><span class=\"line\">char array[10] = &quot;cnblogs&quot;;</span><br><span class=\"line\">虽然只有7个字节，但是字符串长度为8个字节。</span><br><span class=\"line\"> </span><br><span class=\"line\">也可以不用定义字符串长度，如：</span><br><span class=\"line\">char array[] = &quot;cnblogs&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">/* --------------------------------------指针数组和数组指针--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">int* a[4]     指针数组     </span><br><span class=\"line\">                 表示：数组a中的元素都为int型指针    </span><br><span class=\"line\">                 元素表示：*a[i]   *(a[i])是一样的，因为[]优先级高于*</span><br><span class=\"line\">int (*a)[4]   数组指针     </span><br><span class=\"line\">                 表示：指向数组a的指针</span><br><span class=\"line\">                 元素表示：(*a)[i]  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------stl--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">一、STL简介</span><br><span class=\"line\">STL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。它是由Alexander Stepanov、Meng Lee和David R Musser在惠普实验室工作时所开发出来</span><br><span class=\"line\">的。现在虽说它主要出现在C++中，但在被引入C++之前该技术就已经存在了很长的一段时间。</span><br><span class=\"line\"> </span><br><span class=\"line\">STL的代码从广义上讲分为三类：algorithm（算法）、container（容器）和iterator（迭代器），几乎所有的代码都采用了模板类和模版函数的方式，这相比于传统的由函数和类</span><br><span class=\"line\"> </span><br><span class=\"line\">组成的库来说提供了更好的代码重用机会。在C++标准中，STL被组织为下面的13个头文件：&lt;algorithm&gt;、&lt;deque&gt;、&lt;functional&gt;、&lt;iterator&gt;、&lt;vector&gt;、&lt;list&gt;、&lt;map&gt;、</span><br><span class=\"line\">&lt;memory&gt;、&lt;numeric&gt;、&lt;queue&gt;、&lt;set&gt;、&lt;stack&gt;和&lt;utility&gt;。 </span><br><span class=\"line\">二、算法</span><br><span class=\"line\">大家都能取得的一个共识是函数库对数据类型的选择对其可重用性起着至关重要的作用。举例来说，一个求方根的函数，在使用浮点数作为其参数类型的情况下的可重用性肯定比</span><br><span class=\"line\">使用整型作为它的参数类性要高。而C++通过模板的机制允许推迟对某些类型的选择，直到真正想使用模板或者说对模板进行特化的时候，STL就利用了这一点提供了相当多的有用</span><br><span class=\"line\">算法。它是在一个有效的框架中完成这些算法的——你可以将所有的类型划分为少数的几类，然后就可以在模版的参数中使用一种类型替换掉同一种类中的其他类型。</span><br><span class=\"line\">STL提供了大约100个实现算法的模版函数，比如算法for_each将为指定序列中的每一个元素调用指定的函数，stable_sort以你所指定的规则对序列进行稳定性排序等等。这样一来</span><br><span class=\"line\">，只要我们熟悉了STL之后，许多代码可以被大大的化简，只需要通过调用一两个算法模板，就可以完成所需要的功能并大大地提升效率。</span><br><span class=\"line\"> </span><br><span class=\"line\">算法部分主要由头文件&lt;algorithm&gt;，&lt;numeric&gt;和&lt;functional&gt;组成。</span><br><span class=\"line\">&lt;algorithm&gt;是所有STL头文件中最大的一个（尽管它很好理解），它是由一大堆模版函数组成的，可以认为每个函数在很大程度上都是独立的，其中常用到的功能范围涉及到比较、交换、查找、遍历操作、复制、修改、移除、反转、排序、合并等等。</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;numeric&gt;体积很小，只包括几个在序列上面进行简单数学运算的模板函数，包括加法和乘法在序列上的一些操作。</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;functional&gt;中则定义了一些模板类，用以声明函数对象。</span><br><span class=\"line\"> </span><br><span class=\"line\">三、容器</span><br><span class=\"line\">在实际的开发过程中，数据结构本身的重要性不会逊于操作于数据结构的算法的重要性，当程序中存在着对时间要求很高的部分时，数据结构的选择就显得更加重要。</span><br><span class=\"line\">经典的数据结构数量有限，但是我们常常重复着一些为了实现向量、链表等结构而编写的代码，这些代码都十分相似，只是为了适应不同数据的变化而在细节上有所出入。STL容器</span><br><span class=\"line\">就为我们提供了这样的方便，它允许我们重复利用已有的实现构造自己的特定类型下的数据结构，通过设置一些模版类，STL容器对最常用的数据结构提供了支持，这些模板的参数</span><br><span class=\"line\">允许我们指定容器中元素的数据类型，可以将我们许多重复而乏味的工作简化。</span><br><span class=\"line\"> </span><br><span class=\"line\">容器部分主要由头文件&lt;vector&gt;,&lt;list&gt;,&lt;deque&gt;,&lt;set&gt;,&lt;map&gt;,&lt;stack&gt;和&lt;queue&gt;组成。对于常用的一些容器和容器适配器（可以看作由其它容器实现的容器），可以通过下表总结一下它们和相应头文件的对应关系。</span><br><span class=\"line\"> </span><br><span class=\"line\">向量(vector) 连续存储的元素&lt;vector&gt;</span><br><span class=\"line\">列表(list)       由节点组成的双向链表，每个结点包含着一个元素&lt;list&gt;</span><br><span class=\"line\">双队列(deque) 连续存储的指向不同元素的指针所组成的数组&lt;deque&gt;</span><br><span class=\"line\">集合(set) 由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种作用于元素对的谓词排列，没有两个不同的元素能够拥有相同的次序 &lt;set&gt;</span><br><span class=\"line\">多重集合(multiset) 允许存在两个次序相等的元素的集合 &lt;set&gt;</span><br><span class=\"line\">栈(stack) 后进先出的值的排列 &lt;stack&gt;</span><br><span class=\"line\">队列(queue) 先进先出的执的排列 &lt;queue&gt;</span><br><span class=\"line\">优先队列(priority_queue) 元素的次序是由作用于所存储的值对上的某种谓词决定的的一种队列 &lt;queue&gt;</span><br><span class=\"line\">映射(map) 由&#123;键，值&#125;对组成的集合，以某种作用于键对上的谓词排列 &lt;map&gt;</span><br><span class=\"line\">多重映射(multimap) 允许键对有相等的次序的映射 &lt;map&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">四、迭代器</span><br><span class=\"line\"> </span><br><span class=\"line\">下面要说的迭代器从作用上来说是最基本的部分，可是理解起来比前两者都要费力一些（至少笔者是这样）。软件设计有一个基本原则，所有的问题都可以通过引进一个间接层来</span><br><span class=\"line\">简化，这种简化在STL中就是用迭代器来完成的</span><br><span class=\"line\">。</span><br><span class=\"line\">概括来说，迭代器在STL中用来将算法和容器联系起来，起着一种黏和剂的作用。几乎STL提供的所有算法都是通过迭代器存取元素序列进行工作的，每一个容器都定义了其本身所专有的迭代器，用以存取容器中的元素。</span><br><span class=\"line\"> </span><br><span class=\"line\">迭代器部分主要由头文件&lt;utility&gt;,&lt;iterator&gt;和&lt;memory&gt;组成。</span><br><span class=\"line\">&lt;utility&gt;是一个很小的头文件，它包括了贯穿使用在STL中的几个模板的声明，</span><br><span class=\"line\">&lt;iterator&gt;中提供了迭代器使用的许多方法，而对于&lt;memory&gt;的描述则十分的困难，它以不同寻常的方式为容器中的元素分配存储空间，同时也为某些算法执行期间产生的临时对象提供机制,&lt;memory&gt;中的主要部分是模板类allocator，它负责产生所有容器中的默认分配器。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* ------------------------------------------------makefile&amp;cmake--------------------------------------------------- */</span><br><span class=\"line\">编译过程（预编译、编译、汇编、链接）：</span><br><span class=\"line\">    1.gcc -E filename.c -o filename.i </span><br><span class=\"line\">        1.去掉#开头程序，保留#pragma；2.宏替换；3.去注释；4.头文件包含；5.添加行号；</span><br><span class=\"line\">    2.gcc -S filename.i -o filename.s </span><br><span class=\"line\">        1.语法分析；2.词法分析；3.生成相应的汇编代码</span><br><span class=\"line\">    3.gcc -c filename.s -o filename.o </span><br><span class=\"line\">        将汇编转成相应的机器语言</span><br><span class=\"line\">    4.gcc filename.o -o filename.exe </span><br><span class=\"line\">        它通过链接器ld将运行程序的目标文件和库文件链接在一起，生成最后的可执行文件</span><br><span class=\"line\"></span><br><span class=\"line\">makefile</span><br><span class=\"line\">    @：不显示命令</span><br><span class=\"line\">    $@：目标文件</span><br><span class=\"line\">    $^：所有依赖文件</span><br><span class=\"line\">    $&lt;：第一个依赖文件</span><br><span class=\"line\">    $?：更新过的文件</span><br><span class=\"line\"></span><br><span class=\"line\">    wildcard：扩展通配符</span><br><span class=\"line\">    notdir：去除路径</span><br><span class=\"line\">    patsubst：替换通配符</span><br><span class=\"line\">    basename：获取文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例：</span><br><span class=\"line\">    # 头文件、源文件目录</span><br><span class=\"line\">    INC_PATH = ./inc</span><br><span class=\"line\">    SRC_PATH = ./src</span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    # 搜索目录</span><br><span class=\"line\">    vpath % ./inc</span><br><span class=\"line\">    vpath % ./src</span><br><span class=\"line\"></span><br><span class=\"line\">    # 编译环境</span><br><span class=\"line\">    CC = g++ -std=c++11</span><br><span class=\"line\">    AR = ar</span><br><span class=\"line\">    FPIC = -fPIC</span><br><span class=\"line\">    CFLAGS := -Wall -W -O3</span><br><span class=\"line\">    INC_PATH_COMMAND = -I $(INC_PATH)</span><br><span class=\"line\">    </span><br><span class=\"line\">    # OBJECTS</span><br><span class=\"line\">    OBJECTS := $(patsubst %.cpp, %.o, $(notdir $(wildcard $(SRC_PATH)/*.cpp)))</span><br><span class=\"line\">    TARGET = main</span><br><span class=\"line\">    </span><br><span class=\"line\">    $(TARGET) : $(OBJECTS)</span><br><span class=\"line\">    $(CC) $(CFLAGS) -o $@ $^</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 所有的.cpp都生成相应的.o</span><br><span class=\"line\">    %.o : %.cpp</span><br><span class=\"line\">    $(CC) $(CFLAGS) -c $&lt; $(INC_PATH_COMMAND)</span><br><span class=\"line\">    </span><br><span class=\"line\">    .PHONY : clean</span><br><span class=\"line\">    clean : </span><br><span class=\"line\">    </span><br><span class=\"line\">    -rm -rf *.o</span><br><span class=\"line\"></span><br><span class=\"line\">cmake</span><br><span class=\"line\">    cmake_minimun_required(VERSION 3.4.1)：指定CMake的最低版本</span><br><span class=\"line\">    project(xxx)：定义工程名称</span><br><span class=\"line\">    set(FILE_PATH C:\\\\cpp\\\\\\main.c C:\\\\cpp\\\\bspatch.c)：定义变量</span><br><span class=\"line\">    add_executable(&lt;name&gt; $&#123;SRC_LIST&#125;)：添加可执行文件</span><br><span class=\"line\">    add_library(bspatch SHARED bspatch.c)：编译为一个名为libbspatch.so的共享库</span><br><span class=\"line\">    </span><br><span class=\"line\">    include_directories(./include $&#123;MY_INCLUDE&#125;)：可以用相对货绝对路径，也可以用自定义的变量值</span><br><span class=\"line\">    link_directories(&quot;/home/server/third/lib&quot;)：添加需要链接的库文件目录</span><br><span class=\"line\">    link_libraries(&lt;name&gt; lib1 lib2 lib3)：将若干库链接到目标库文件</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_include_directories(&lt;name&gt; xxx1 xxx2)</span><br><span class=\"line\">    target_link_libraries(&lt;name&gt; lib1 lib2 lib3)：将若干库链接到目标库文件</span><br><span class=\"line\">    </span><br><span class=\"line\">    add_subdirectory(bzip2)：添加子目录</span><br><span class=\"line\">    add_definitions(-DFOO -DDEBUG ...)：为当前路径以及子目录的源文件加入由-D引入得define flag</span><br><span class=\"line\">    add_compile_options(-std=c++11 -Wall)</span><br><span class=\"line\">    set(EXECUTABLE_OUTPUT_PATH [output_path])：设置可执行文件的输出路径</span><br><span class=\"line\">    set(LIBRARY_OUTPUT_PATH [output_path])：设置库文件的输出路径</span><br><span class=\"line\">    set(CMAKE_VERBOSE_MAKEFILE ON)：设置打印编译代码</span><br><span class=\"line\">    set(CMAKE_BUILD_TYPE &quot;Release&quot;) ：设置编译方式</span><br><span class=\"line\">    set(CMAKE_CXX_FLAGS_DEBUG &quot;$ENV&#123;CXXFLAGS&#125; -O0 -Wall -g -ggdb&quot;)</span><br><span class=\"line\">    set(CMAKE_CXX_FLAGS_RELEASE &quot;$ENV&#123;CXXFLAGS&#125; -O3 -Wall&quot;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    CMAKE_SOURCE_DIR：CMakeLists.txt文件路径</span><br><span class=\"line\">    CMAKE_BINARY_DIR：编译文件路径</span><br><span class=\"line\">    cmake -G&quot;Unix Makefiles&quot; ../：编译cmakelist</span><br><span class=\"line\">    cmake -G&quot;Visual Studio 11 2012&quot; .. </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>C基础</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* --------------------------------------c基础--------------------------------------- */</span><br><span class=\"line\">1 简介</span><br><span class=\"line\">1.1 创始时间：1972</span><br><span class=\"line\">1.2 标准：K&amp;R、C90、C99、C11（1978年、1990年、1999年、2011年）</span><br><span class=\"line\"></span><br><span class=\"line\">2 基础</span><br><span class=\"line\">2.2 数据类型（标 关 常 变 基）</span><br><span class=\"line\">2.2.1 标志符：自己可以取名字的地方称为标志符</span><br><span class=\"line\">标志符的规则（驼峰命名）</span><br><span class=\"line\">* 只能是字母，数字，下划线；</span><br><span class=\"line\">* 不能以数字开头;严格区分大小写；</span><br><span class=\"line\">* 不能使用关键字作为标志符；</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.2 关键字：关键字都是小写</span><br><span class=\"line\">const：</span><br><span class=\"line\">const修饰指针变量时：</span><br><span class=\"line\">　　(1)位于*左侧，表示指针所指数据是常量，不能修改该数据</span><br><span class=\"line\">　　(2)位于*右侧，表示指针本身是常量，不能指向其他内存地址</span><br><span class=\"line\"></span><br><span class=\"line\">const修饰函数时：</span><br><span class=\"line\">不能修改成员数据</span><br><span class=\"line\">不能调用非const成员函数</span><br><span class=\"line\">register：请求将变量放入cpu寄存器中，速度最快</span><br><span class=\"line\"></span><br><span class=\"line\">extern：标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。</span><br><span class=\"line\"></span><br><span class=\"line\">explicit：避免构造函数的参数自动转换为类对象(强制显示转换)</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.3 常量：如123，&quot;hello&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">2.2.4 变量：变量的本质是内存中的一小块区域，用这个区域保存数据</span><br><span class=\"line\">* 变量必须先声明，再赋值，再使用</span><br><span class=\"line\">* 变量的作用域，局部变量与成员变量：变量在哪个大括号里定义，就在哪里有效，出了大括号无效</span><br><span class=\"line\"></span><br><span class=\"line\">2.2.5 基本数据类型</span><br><span class=\"line\">char</span><br><span class=\"line\">bool</span><br><span class=\"line\">void</span><br><span class=\"line\">short int、int、long int、long long int</span><br><span class=\"line\">float、double、long double</span><br><span class=\"line\">注：</span><br><span class=\"line\">* char、bool占一个字节</span><br><span class=\"line\">* 0xff、&#x27;\\xff&#x27;都可以赋值给char，因为存到内存里都是二进制</span><br><span class=\"line\">* 0xff、&#x27;\\xff&#x27;都表示16进制</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 运算符</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 流程控制</span><br><span class=\"line\">2.3.1 流程控制语句：</span><br><span class=\"line\">* 顺序（continue,break,return）、分支（if,switch）、循环(for,while,do while)</span><br><span class=\"line\"></span><br><span class=\"line\">2.3.2 break,continue,return</span><br><span class=\"line\">* break，continue一般用在循环中，也可以用在switch中</span><br><span class=\"line\">* break：跳出最近的整个循环（结束循环）</span><br><span class=\"line\">* continue：跳过最近整个循环的本次循环，进入下一次循环</span><br><span class=\"line\">* return：结束整个方法，或带参返回方法体</span><br><span class=\"line\">3 字符串</span><br><span class=\"line\">strlen()</span><br><span class=\"line\">strncat()</span><br><span class=\"line\">strncmp()</span><br><span class=\"line\">strncpy()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------备忘录--------------------------------------- */</span><br><span class=\"line\">SDL检查（安全开发生命周期）：</span><br><span class=\"line\">增加了更严格的编译时检查，对于废弃和不安全的函数会报error而不是warning</span><br><span class=\"line\">不让你用scanf之类的函数，必须用scanf_s</span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------大小端对其--------------------------------------- */</span><br><span class=\"line\">小端：较高的有效字节存放在较高的的存储器地址，较低的有效字节存放在较低的存储器地址。</span><br><span class=\"line\">大端：较高的有效字节存放在较低的存储器地址，较低的有效字节存放在较高的存储器地址。</span><br><span class=\"line\">注意 最小存储单元是byte 大小端一般针对32位数据而言的；比如int 型 0x2c3b4a6f </span><br><span class=\"line\">从地址0x00000001开始存储 一个字节对应一个地址</span><br><span class=\"line\">地址\t\t\t小段\t\t大端</span><br><span class=\"line\">0xff000001\t6f\t\t2c</span><br><span class=\"line\">0xff000002\t4a\t\t3b</span><br><span class=\"line\">0xff000003\t3b\t\t4a</span><br><span class=\"line\">0xff000004\t2c\t\t6f</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------数据加密--------------------------------------- */</span><br><span class=\"line\">加密的原理： 用密钥对原文做  异或，置换，代换，移位</span><br><span class=\"line\">1.可逆加密</span><br><span class=\"line\">Base64</span><br><span class=\"line\">2.单向加密</span><br><span class=\"line\">MD5、sha-1、RIPEMD、Haval</span><br><span class=\"line\">3.对称加密</span><br><span class=\"line\">AES、DES、3DES、TDEA、Blowfish、RC2、RC4、RC5、IDEA、SKIPJACK</span><br><span class=\"line\">4.非对称加密（只有持有私钥方的才是收到不可解密的密文）</span><br><span class=\"line\">RSA、Elgamal、背包算法、Rabin、D-H、ECC（椭圆曲线加密算法）等</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------静态库和动态库--------------------------------------- */</span><br><span class=\"line\">1)静态库</span><br><span class=\"line\">需要头文件和lib文件</span><br><span class=\"line\">1.头文件作用是编译调用</span><br><span class=\"line\">2.lib文件中包含了头文件接口以及函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">2)动态库</span><br><span class=\"line\">* 隐式调用</span><br><span class=\"line\">编译程序时需要头文件、lib文件，运行时需要DLL文件，并且运行过程中DLL文件一直被占用。适用于动态库比较少的情况。</span><br><span class=\"line\">1.头文件作用是编译调用</span><br><span class=\"line\">2.lib文件中包含了头文件在dll中的说明</span><br><span class=\"line\">注：使用文件中一般这么写</span><br><span class=\"line\">#pragma comment(lib,&quot;../lib/Project2.lib&quot;)  注：此lib相对于链接的路径，即cpp文件</span><br><span class=\"line\">3.dll文件中包含了函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">注：导出文件中一般这么写</span><br><span class=\"line\">#ifdef DLL_EXPORT</span><br><span class=\"line\">#define DECLDIR __declspec(dllexport)</span><br><span class=\"line\">#else</span><br><span class=\"line\">#define DECLDIR __declspec(dllimport)</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">DECLDIR int add(int a, int b);</span><br><span class=\"line\">class DECLDIR User</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">User(void);</span><br><span class=\"line\">~User(void);</span><br><span class=\"line\">virtual void doxxx();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">* 显式调用</span><br><span class=\"line\">编译时什么都不需要（如果基类在库中，也需要lib库文件），在需要使用DLL中的函数时，通过LoadLibrary()和FindProcAdress()这两个API调用。只需要一个DLL文件即可，而且在需要使用的时候DLL才被占用，使用完毕即被解除占用。适用于动态库比较多的情况。</span><br><span class=\"line\">1.头文件作用是编译调用（一般函数导出用不到，类需要用到）</span><br><span class=\"line\">2.lib文件中包含了头文件接口（一般函数导出用不到，类需要用到）</span><br><span class=\"line\">3.dll文件中包含了函数的具体实现</span><br><span class=\"line\"></span><br><span class=\"line\">注：导出文件中一般这么写</span><br><span class=\"line\">#ifdef DLL_EXPORT</span><br><span class=\"line\">#define DECLDIR __declspec(dllexport)</span><br><span class=\"line\">#else</span><br><span class=\"line\">#define DECLDIR __declspec(dllimport)</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">DECLDIR User* createObject(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">return new User();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">注：使用文件中一般这么写</span><br><span class=\"line\">typedef User* (*P_Fun)(void);</span><br><span class=\"line\">HINSTANCE hinst = LoadLibrary(&quot;Project2.dll&quot;);  注：需要windows.h</span><br><span class=\"line\">P_Fun p_fun = (P_Fun)GetProcAddress(hinst , &quot;createObject&quot;);</span><br><span class=\"line\">User* user = (*p_fun)();</span><br><span class=\"line\">user-&gt;doxxx();</span><br><span class=\"line\">delete user;</span><br><span class=\"line\">FreeLibrary(h);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------静态、常量、静态常量--------------------------------------- */</span><br><span class=\"line\">类中静态以及常量的用法</span><br><span class=\"line\">1.只有静态常量整型数据成员才可以在类中初始化(包括bool、char)</span><br><span class=\"line\">2.静态变量的初始化写在类外部</span><br><span class=\"line\">3.常量的初始化写在初始化列表</span><br><span class=\"line\">注：静态方法不能访问this指针</span><br><span class=\"line\"></span><br><span class=\"line\">其他用法</span><br><span class=\"line\">静态或常量可以写在namesapce中，方法不能为静态的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------枚举--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">class A</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">public:</span><br><span class=\"line\">\tA();</span><br><span class=\"line\">\t~A();</span><br><span class=\"line\"></span><br><span class=\"line\">\tenum SEX</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tNAN,</span><br><span class=\"line\">\t\tNV,</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tstatic SEX s;</span><br><span class=\"line\">private:</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">A::SEX A::s = A::SEX::NAN;</span><br><span class=\"line\"></span><br><span class=\"line\">void swi_sex(A::SEX&amp; temp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tswitch (temp)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tcase A::SEX::NAN:</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;NAN&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\tcase A::SEX::NV:</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;NV&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\tdefault:</span><br><span class=\"line\">\t\tbreak;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void test()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//A::s = A::SEX::NV;</span><br><span class=\"line\">\tswi_sex(A::s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------命名空间--------------------------------------- */</span><br><span class=\"line\">区别于复合域、类域、全局域的一块空间</span><br><span class=\"line\">在类作用域和全局作用域之间</span><br><span class=\"line\"></span><br><span class=\"line\">namespace </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint i = 5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace kkk</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint i = 6;</span><br><span class=\"line\">\tvoid show()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; &quot;hello&quot; &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tnamespace ns = kkk;</span><br><span class=\"line\">\tns::show();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">（1）一个命名空间可以在多个头文件或源文件中实现，成为分段定义。如果想在当前文件访问定义在另一个文件中的同名命名空间内的成员变量，需要在当前文件的命名空间内部进行申明。如标准C++库中的所有组件都是在一个被称为std的命名空间中声明和定义的。这些组件当然分散在不同的头文件和源文件中。</span><br><span class=\"line\">（2）命名空间内部可以定义类型、函数、变量等内容，但命名空间不能定义在类和函数的内部。</span><br><span class=\"line\">（3）在一个命名空间中可以自由地访问另一个命名空间的内容，因为命名空间并没有保护级别的限制。</span><br><span class=\"line\">（4）虽然经常可以见到using namespace std;这样的用法，我们也可以用同样的方法将命名空间中的内容一次性“引入”到当前的命名空间中来，但这并不是一个值得推荐的用法。因为这样做的相当于取消了命名空间的定义，使发生名称冲突的机会增多。所以，用using单独引入需要的内容，这样会更有针对性。例如，要使用标准输入对象，只需用using std::cin;就可以了。</span><br><span class=\"line\">（5）不能在命名空间的定义中声明另一个嵌套的子命名空间，只能在命名空间中定义子命名空间。</span><br><span class=\"line\">（6）命名空间的成员，可以在命名空间的内部定义，也可以在命名空间的外部定义，但是要在命名空间进行声明。 </span><br><span class=\"line\">命名空间成员的外部定义的格式为：命名空间名::成员名 ……</span><br><span class=\"line\">（7）命名空间在进行分段定义时，不能定义同名的变量，否则连接出现重定义错误。因为命名空间不同于类，具有外部连接的特性。由于外部连接特性，请不要将命名空间定义在头文件，因为当被不同的源文件包含时，会出现重定义的错误。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------模板函数--------------------------------------- */</span><br><span class=\"line\">template&lt;typename T, typename P&gt;</span><br><span class=\"line\">T xxx(T arg1,P arg2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\treturn arg1 + arg2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------__int32--------------------------------------- */</span><br><span class=\"line\">typedef __int32 common_int;\t\t\t\t// 定义32位的int，防止编译器对int长度定义的不同</span><br><span class=\"line\">typedef unsigned __int32 common_uint;\t\t// 定义无符号32位的int</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------#define和typedef--------------------------------------- */</span><br><span class=\"line\">#define DLL_API  __declspec(dllexport)\t\t切记：没有=，没有分号</span><br><span class=\"line\">单纯的替换</span><br><span class=\"line\">typedef char* PCHAR;</span><br><span class=\"line\">定义一种类型</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------引用--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">一、引用简介</span><br><span class=\"line\">　　引用就是某一变量（目标）的一个别名，对引用的操作与对变量直接操作完全一样。</span><br><span class=\"line\">　　引用的声明方法：类型标识符 &amp;引用名=目标变量名；</span><br><span class=\"line\">　　【例1】：int a; int &amp;ra=a; //定义引用ra,它是变量a的引用，即别名</span><br><span class=\"line\">　　说明：</span><br><span class=\"line\">　　（1）&amp;在此不是求地址运算，而是起标识作用。</span><br><span class=\"line\">　　（2）类型标识符是指目标变量的类型。</span><br><span class=\"line\">　　（3）声明引用时，必须同时对其进行初始化。</span><br><span class=\"line\">　　（4）引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。</span><br><span class=\"line\">　　 ra=1; 等价于 a=1;</span><br><span class=\"line\">　　（5）声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&amp;ra与&amp;a相等。</span><br><span class=\"line\">　　（6）不能建立数组的引用。因为数组是一个由若干个元素所组成的集合，所以无法建立一个数组的别名。</span><br><span class=\"line\">　　三、引用总结</span><br><span class=\"line\">　　（1）在引用的使用中，单纯给某个变量取个别名是毫无意义的，引用的目的主要用于在函数参数传递中，解决大块数据或对象的传递效率和空间不如意的问题。</span><br><span class=\"line\">　　（2）用引用传递函数的参数，能保证参数传递中不产生副本，提高传递的效率，且通过const的使用，保证了引用传递的安全性。</span><br><span class=\"line\">　　（3）引用与指针的区别是，指针通过某个指针变量指向一个对象后，对它所指向的变量间接操作。程序中使用指针，程序的可读性差；而引用本身就是目标变量的别名，对引用的操作就是对目标变量的操作。</span><br><span class=\"line\">　　（4）使用引用的时机。流操作符&lt;&lt;和&gt;&gt;、赋值操作符=的返回值、拷贝构造函数的参数、赋值操作符=的参数、其它情况都推荐使用引用。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------返回值--------------------------------------- */</span><br><span class=\"line\">千言万语，汇成一句话，函数不要返回指向栈的内存地址，切记，是地址，别被吓的所有的函数内的变量都不敢返回，只要不是栈的内存地址，你尽管放心的返回。</span><br><span class=\"line\">非指针、引用类型返回，会进行赋值或者拷贝操作。下面两种特殊情况。</span><br><span class=\"line\"></span><br><span class=\"line\">char *pstr = &quot;This is the buffer text&quot;;</span><br><span class=\"line\">c类型字符串存在常量区，可以返回</span><br><span class=\"line\">char buffer[] = &quot;This is the buffer text&quot;;</span><br><span class=\"line\">数组存在栈区，返回会出问题，系统自动销毁那块内存</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------数组的定义和初始化--------------------------------------- */</span><br><span class=\"line\">一、一维数组</span><br><span class=\"line\">静态 int array[100]; 　　定义了数组array，并未对数组进行初始化</span><br><span class=\"line\">静态 int array[100] = &#123;1，2&#125;；　　定义并初始化了数组array</span><br><span class=\"line\">动态 int* array = new int[100];  delete []array;　　分配了长度为100的数组array </span><br><span class=\"line\">动态 int* array = new int[100](1，2); 　delete []array;　为长度为100的数组array初始化前两个元素</span><br><span class=\"line\"> </span><br><span class=\"line\">二、二维数组</span><br><span class=\"line\">静态 int array[10][10];　　定义了数组，并未初始化</span><br><span class=\"line\">静态 int array[10][10] = &#123; &#123;1,1&#125; , &#123;2,2&#125; &#125;;　　数组初始化了array[0][0,1]及array[1][0,1]</span><br><span class=\"line\">动态 int (*array)[n] = new int[m][n]; delete []array;</span><br><span class=\"line\">动态 int** array = new int*[m];　for(i) array[i] = new int[n];  for(i) delete []array[i]; delete []array;    多次析构</span><br><span class=\"line\">动态 int* array = new int[m][n];  delete []array;      数组按行存储</span><br><span class=\"line\"> </span><br><span class=\"line\">三、多维数组</span><br><span class=\"line\">　　int* array = new int[m][3][4];    只有第一维可以是变量，其他维数必须是常量，否则会报错</span><br><span class=\"line\">      delete []array;       必须进行内存释放，否则内存将泄漏</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">四、数组作为函数形参传递</span><br><span class=\"line\">一维数组传递：</span><br><span class=\"line\">　　void func(int* array);</span><br><span class=\"line\">　　void func(int array[]);　　　　</span><br><span class=\"line\">二维数组传递：</span><br><span class=\"line\">　　void func(int** array);</span><br><span class=\"line\">　　void func(int (*array)[n]);　　　　　　　　　　　　　　　　　　</span><br><span class=\"line\">数组名作为函数形参时，在函数体内，其失去了本身的内涵，仅仅只是一个指针，而且在其失去其内涵的同时，它还失去了其常量特性，可以作自增、自减等操作，可以被修改。</span><br><span class=\"line\"></span><br><span class=\"line\">五、字符数组</span><br><span class=\"line\">char类型的数组被常委字符数组，在字符数组中最后一位为转移字符&#x27;\\0&#x27;（也被成为空字符），该字符表示字符串已结束。在C++中定义了string类，在Visual C++中定义了Cstring类。</span><br><span class=\"line\">字符串中每一个字符占用一个字节，再加上最后一个空字符。如：</span><br><span class=\"line\">char array[10] = &quot;cnblogs&quot;;</span><br><span class=\"line\">虽然只有7个字节，但是字符串长度为8个字节。</span><br><span class=\"line\"> </span><br><span class=\"line\">也可以不用定义字符串长度，如：</span><br><span class=\"line\">char array[] = &quot;cnblogs&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\">/* --------------------------------------指针数组和数组指针--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\">int* a[4]     指针数组     </span><br><span class=\"line\">                 表示：数组a中的元素都为int型指针    </span><br><span class=\"line\">                 元素表示：*a[i]   *(a[i])是一样的，因为[]优先级高于*</span><br><span class=\"line\">int (*a)[4]   数组指针     </span><br><span class=\"line\">                 表示：指向数组a的指针</span><br><span class=\"line\">                 元素表示：(*a)[i]  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* --------------------------------------stl--------------------------------------- */</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">一、STL简介</span><br><span class=\"line\">STL（Standard Template Library，标准模板库)是惠普实验室开发的一系列软件的统称。它是由Alexander Stepanov、Meng Lee和David R Musser在惠普实验室工作时所开发出来</span><br><span class=\"line\">的。现在虽说它主要出现在C++中，但在被引入C++之前该技术就已经存在了很长的一段时间。</span><br><span class=\"line\"> </span><br><span class=\"line\">STL的代码从广义上讲分为三类：algorithm（算法）、container（容器）和iterator（迭代器），几乎所有的代码都采用了模板类和模版函数的方式，这相比于传统的由函数和类</span><br><span class=\"line\"> </span><br><span class=\"line\">组成的库来说提供了更好的代码重用机会。在C++标准中，STL被组织为下面的13个头文件：&lt;algorithm&gt;、&lt;deque&gt;、&lt;functional&gt;、&lt;iterator&gt;、&lt;vector&gt;、&lt;list&gt;、&lt;map&gt;、</span><br><span class=\"line\">&lt;memory&gt;、&lt;numeric&gt;、&lt;queue&gt;、&lt;set&gt;、&lt;stack&gt;和&lt;utility&gt;。 </span><br><span class=\"line\">二、算法</span><br><span class=\"line\">大家都能取得的一个共识是函数库对数据类型的选择对其可重用性起着至关重要的作用。举例来说，一个求方根的函数，在使用浮点数作为其参数类型的情况下的可重用性肯定比</span><br><span class=\"line\">使用整型作为它的参数类性要高。而C++通过模板的机制允许推迟对某些类型的选择，直到真正想使用模板或者说对模板进行特化的时候，STL就利用了这一点提供了相当多的有用</span><br><span class=\"line\">算法。它是在一个有效的框架中完成这些算法的——你可以将所有的类型划分为少数的几类，然后就可以在模版的参数中使用一种类型替换掉同一种类中的其他类型。</span><br><span class=\"line\">STL提供了大约100个实现算法的模版函数，比如算法for_each将为指定序列中的每一个元素调用指定的函数，stable_sort以你所指定的规则对序列进行稳定性排序等等。这样一来</span><br><span class=\"line\">，只要我们熟悉了STL之后，许多代码可以被大大的化简，只需要通过调用一两个算法模板，就可以完成所需要的功能并大大地提升效率。</span><br><span class=\"line\"> </span><br><span class=\"line\">算法部分主要由头文件&lt;algorithm&gt;，&lt;numeric&gt;和&lt;functional&gt;组成。</span><br><span class=\"line\">&lt;algorithm&gt;是所有STL头文件中最大的一个（尽管它很好理解），它是由一大堆模版函数组成的，可以认为每个函数在很大程度上都是独立的，其中常用到的功能范围涉及到比较、交换、查找、遍历操作、复制、修改、移除、反转、排序、合并等等。</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;numeric&gt;体积很小，只包括几个在序列上面进行简单数学运算的模板函数，包括加法和乘法在序列上的一些操作。</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;functional&gt;中则定义了一些模板类，用以声明函数对象。</span><br><span class=\"line\"> </span><br><span class=\"line\">三、容器</span><br><span class=\"line\">在实际的开发过程中，数据结构本身的重要性不会逊于操作于数据结构的算法的重要性，当程序中存在着对时间要求很高的部分时，数据结构的选择就显得更加重要。</span><br><span class=\"line\">经典的数据结构数量有限，但是我们常常重复着一些为了实现向量、链表等结构而编写的代码，这些代码都十分相似，只是为了适应不同数据的变化而在细节上有所出入。STL容器</span><br><span class=\"line\">就为我们提供了这样的方便，它允许我们重复利用已有的实现构造自己的特定类型下的数据结构，通过设置一些模版类，STL容器对最常用的数据结构提供了支持，这些模板的参数</span><br><span class=\"line\">允许我们指定容器中元素的数据类型，可以将我们许多重复而乏味的工作简化。</span><br><span class=\"line\"> </span><br><span class=\"line\">容器部分主要由头文件&lt;vector&gt;,&lt;list&gt;,&lt;deque&gt;,&lt;set&gt;,&lt;map&gt;,&lt;stack&gt;和&lt;queue&gt;组成。对于常用的一些容器和容器适配器（可以看作由其它容器实现的容器），可以通过下表总结一下它们和相应头文件的对应关系。</span><br><span class=\"line\"> </span><br><span class=\"line\">向量(vector) 连续存储的元素&lt;vector&gt;</span><br><span class=\"line\">列表(list)       由节点组成的双向链表，每个结点包含着一个元素&lt;list&gt;</span><br><span class=\"line\">双队列(deque) 连续存储的指向不同元素的指针所组成的数组&lt;deque&gt;</span><br><span class=\"line\">集合(set) 由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种作用于元素对的谓词排列，没有两个不同的元素能够拥有相同的次序 &lt;set&gt;</span><br><span class=\"line\">多重集合(multiset) 允许存在两个次序相等的元素的集合 &lt;set&gt;</span><br><span class=\"line\">栈(stack) 后进先出的值的排列 &lt;stack&gt;</span><br><span class=\"line\">队列(queue) 先进先出的执的排列 &lt;queue&gt;</span><br><span class=\"line\">优先队列(priority_queue) 元素的次序是由作用于所存储的值对上的某种谓词决定的的一种队列 &lt;queue&gt;</span><br><span class=\"line\">映射(map) 由&#123;键，值&#125;对组成的集合，以某种作用于键对上的谓词排列 &lt;map&gt;</span><br><span class=\"line\">多重映射(multimap) 允许键对有相等的次序的映射 &lt;map&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">四、迭代器</span><br><span class=\"line\"> </span><br><span class=\"line\">下面要说的迭代器从作用上来说是最基本的部分，可是理解起来比前两者都要费力一些（至少笔者是这样）。软件设计有一个基本原则，所有的问题都可以通过引进一个间接层来</span><br><span class=\"line\">简化，这种简化在STL中就是用迭代器来完成的</span><br><span class=\"line\">。</span><br><span class=\"line\">概括来说，迭代器在STL中用来将算法和容器联系起来，起着一种黏和剂的作用。几乎STL提供的所有算法都是通过迭代器存取元素序列进行工作的，每一个容器都定义了其本身所专有的迭代器，用以存取容器中的元素。</span><br><span class=\"line\"> </span><br><span class=\"line\">迭代器部分主要由头文件&lt;utility&gt;,&lt;iterator&gt;和&lt;memory&gt;组成。</span><br><span class=\"line\">&lt;utility&gt;是一个很小的头文件，它包括了贯穿使用在STL中的几个模板的声明，</span><br><span class=\"line\">&lt;iterator&gt;中提供了迭代器使用的许多方法，而对于&lt;memory&gt;的描述则十分的困难，它以不同寻常的方式为容器中的元素分配存储空间，同时也为某些算法执行期间产生的临时对象提供机制,&lt;memory&gt;中的主要部分是模板类allocator，它负责产生所有容器中的默认分配器。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/* ------------------------------------------------makefile&amp;cmake--------------------------------------------------- */</span><br><span class=\"line\">编译过程（预编译、编译、汇编、链接）：</span><br><span class=\"line\">    1.gcc -E filename.c -o filename.i </span><br><span class=\"line\">        1.去掉#开头程序，保留#pragma；2.宏替换；3.去注释；4.头文件包含；5.添加行号；</span><br><span class=\"line\">    2.gcc -S filename.i -o filename.s </span><br><span class=\"line\">        1.语法分析；2.词法分析；3.生成相应的汇编代码</span><br><span class=\"line\">    3.gcc -c filename.s -o filename.o </span><br><span class=\"line\">        将汇编转成相应的机器语言</span><br><span class=\"line\">    4.gcc filename.o -o filename.exe </span><br><span class=\"line\">        它通过链接器ld将运行程序的目标文件和库文件链接在一起，生成最后的可执行文件</span><br><span class=\"line\"></span><br><span class=\"line\">makefile</span><br><span class=\"line\">    @：不显示命令</span><br><span class=\"line\">    $@：目标文件</span><br><span class=\"line\">    $^：所有依赖文件</span><br><span class=\"line\">    $&lt;：第一个依赖文件</span><br><span class=\"line\">    $?：更新过的文件</span><br><span class=\"line\"></span><br><span class=\"line\">    wildcard：扩展通配符</span><br><span class=\"line\">    notdir：去除路径</span><br><span class=\"line\">    patsubst：替换通配符</span><br><span class=\"line\">    basename：获取文件名</span><br><span class=\"line\"></span><br><span class=\"line\">例：</span><br><span class=\"line\">    # 头文件、源文件目录</span><br><span class=\"line\">    INC_PATH = ./inc</span><br><span class=\"line\">    SRC_PATH = ./src</span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    # 搜索目录</span><br><span class=\"line\">    vpath % ./inc</span><br><span class=\"line\">    vpath % ./src</span><br><span class=\"line\"></span><br><span class=\"line\">    # 编译环境</span><br><span class=\"line\">    CC = g++ -std=c++11</span><br><span class=\"line\">    AR = ar</span><br><span class=\"line\">    FPIC = -fPIC</span><br><span class=\"line\">    CFLAGS := -Wall -W -O3</span><br><span class=\"line\">    INC_PATH_COMMAND = -I $(INC_PATH)</span><br><span class=\"line\">    </span><br><span class=\"line\">    # OBJECTS</span><br><span class=\"line\">    OBJECTS := $(patsubst %.cpp, %.o, $(notdir $(wildcard $(SRC_PATH)/*.cpp)))</span><br><span class=\"line\">    TARGET = main</span><br><span class=\"line\">    </span><br><span class=\"line\">    $(TARGET) : $(OBJECTS)</span><br><span class=\"line\">    $(CC) $(CFLAGS) -o $@ $^</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 所有的.cpp都生成相应的.o</span><br><span class=\"line\">    %.o : %.cpp</span><br><span class=\"line\">    $(CC) $(CFLAGS) -c $&lt; $(INC_PATH_COMMAND)</span><br><span class=\"line\">    </span><br><span class=\"line\">    .PHONY : clean</span><br><span class=\"line\">    clean : </span><br><span class=\"line\">    </span><br><span class=\"line\">    -rm -rf *.o</span><br><span class=\"line\"></span><br><span class=\"line\">cmake</span><br><span class=\"line\">    cmake_minimun_required(VERSION 3.4.1)：指定CMake的最低版本</span><br><span class=\"line\">    project(xxx)：定义工程名称</span><br><span class=\"line\">    set(FILE_PATH C:\\\\cpp\\\\\\main.c C:\\\\cpp\\\\bspatch.c)：定义变量</span><br><span class=\"line\">    add_executable(&lt;name&gt; $&#123;SRC_LIST&#125;)：添加可执行文件</span><br><span class=\"line\">    add_library(bspatch SHARED bspatch.c)：编译为一个名为libbspatch.so的共享库</span><br><span class=\"line\">    </span><br><span class=\"line\">    include_directories(./include $&#123;MY_INCLUDE&#125;)：可以用相对货绝对路径，也可以用自定义的变量值</span><br><span class=\"line\">    link_directories(&quot;/home/server/third/lib&quot;)：添加需要链接的库文件目录</span><br><span class=\"line\">    link_libraries(&lt;name&gt; lib1 lib2 lib3)：将若干库链接到目标库文件</span><br><span class=\"line\">    </span><br><span class=\"line\">    target_include_directories(&lt;name&gt; xxx1 xxx2)</span><br><span class=\"line\">    target_link_libraries(&lt;name&gt; lib1 lib2 lib3)：将若干库链接到目标库文件</span><br><span class=\"line\">    </span><br><span class=\"line\">    add_subdirectory(bzip2)：添加子目录</span><br><span class=\"line\">    add_definitions(-DFOO -DDEBUG ...)：为当前路径以及子目录的源文件加入由-D引入得define flag</span><br><span class=\"line\">    add_compile_options(-std=c++11 -Wall)</span><br><span class=\"line\">    set(EXECUTABLE_OUTPUT_PATH [output_path])：设置可执行文件的输出路径</span><br><span class=\"line\">    set(LIBRARY_OUTPUT_PATH [output_path])：设置库文件的输出路径</span><br><span class=\"line\">    set(CMAKE_VERBOSE_MAKEFILE ON)：设置打印编译代码</span><br><span class=\"line\">    set(CMAKE_BUILD_TYPE &quot;Release&quot;) ：设置编译方式</span><br><span class=\"line\">    set(CMAKE_CXX_FLAGS_DEBUG &quot;$ENV&#123;CXXFLAGS&#125; -O0 -Wall -g -ggdb&quot;)</span><br><span class=\"line\">    set(CMAKE_CXX_FLAGS_RELEASE &quot;$ENV&#123;CXXFLAGS&#125; -O3 -Wall&quot;)</span><br><span class=\"line\">    </span><br><span class=\"line\">    CMAKE_SOURCE_DIR：CMakeLists.txt文件路径</span><br><span class=\"line\">    CMAKE_BINARY_DIR：编译文件路径</span><br><span class=\"line\">    cmake -G&quot;Unix Makefiles&quot; ../：编译cmakelist</span><br><span class=\"line\">    cmake -G&quot;Visual Studio 11 2012&quot; .. </span><br></pre></td></tr></table></figure>"},{"title":"服务器被攻击勒索案例","date":"2017-09-26T16:00:00.000Z","_content":"\n服务器被攻击勒索案例\n\n<!--more-->\n\n## 背景\n``2017-9-27``，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。\n\n## 勒索数据\n\n```\nHello,\n\nI am a security researcher from Sweden, \nhaving interest on web security and other focus areas.\n\nYour database \"mm_wiki\" was breached by a 3rd party and\nfiles were backed up to their cloud hosting storage.\n\nI accidently discovered this dedicated cloud storage and was able to secure the files.\n\nIt is scheduled to be sold online.\n\nThe short-term consequences of this data leak could be fees, fines and frustration.\n\nTo prevent this i will remove all files from online storage above\nand restore the database if needed.\n\n    please send exactly 0.1 bitcoin (BTC) to the following \n    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V\n\nemail me after the payment confirms(about an hour),\nand I email you back the link to download the original \ndump file mm_wiki.sql.gz created with mysql mydumper.\n\nI will shred the files and terminate their cloud hosting account in 24hrs after the payment.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\nTo buy bitcoin instantly you can use paxful.com like services.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\ndatabase summary:\n\n* total tables count: 17\n* total approx. documents count for all tables: 388\n\ntable: \"mw_log\" => 127 documents\ntable: \"mw_privilege\" => 92 documents\ntable: \"mw_log_document\" => 88 documents\ntable: \"mw_role_privilege\" => 30 documents\ntable: \"mw_document\" => 20 documents\n.......................\n\nfull database dump file: mm_wiki.sql.gz, about 0.29 MB.\n\n* system/stat/views/functions/triggers or other special tables not counted.\n    these numbers for reference only.\n    binary format, total size depends on zlib compression ratio, data sparsity.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n```\n\n## 服务器防范措施\n\n- 1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：https://suijimimashengcheng.51240.com/\n- 2)删除服务器上设置的不需要的用户\n- 3)对于不需要登录的用户，请将用户的权限设置为禁止登录\n- 4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆\nWindows远程端口修改参考文档：https://cloud.tencent.com/developer/article/1052163\nLinux远程端口修改参考文档：https://cloud.tencent.com/developer/article/1124500\n- 5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）\n- 6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： https://cloud.tencent.com/document/product/215/20398\n- 7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问\n- 8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求\n需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。\n- 9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。\n\n\n## 日常查看和维护\n\n- 定期修改密码``passwd``\n- 查看用户登录情况``who、who am i``\n- 查看用户登录信息``last``\n- 查看各个用户登录信息``lastlog``\n- 查看登录失败信息``lastb``，这个可以查看嗅探的IP，以此来禁用\n- 查看用户命令历史``history``\n- 日志和监控``ELK、Prometheus``","source":"_posts/2017-9-27服务器被攻击勒索案例.md","raw":"---\ntitle: 服务器被攻击勒索案例\ndate: 2017-9-27\ntags: [攻击]\n---\n\n服务器被攻击勒索案例\n\n<!--more-->\n\n## 背景\n``2017-9-27``，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。\n\n## 勒索数据\n\n```\nHello,\n\nI am a security researcher from Sweden, \nhaving interest on web security and other focus areas.\n\nYour database \"mm_wiki\" was breached by a 3rd party and\nfiles were backed up to their cloud hosting storage.\n\nI accidently discovered this dedicated cloud storage and was able to secure the files.\n\nIt is scheduled to be sold online.\n\nThe short-term consequences of this data leak could be fees, fines and frustration.\n\nTo prevent this i will remove all files from online storage above\nand restore the database if needed.\n\n    please send exactly 0.1 bitcoin (BTC) to the following \n    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V\n\nemail me after the payment confirms(about an hour),\nand I email you back the link to download the original \ndump file mm_wiki.sql.gz created with mysql mydumper.\n\nI will shred the files and terminate their cloud hosting account in 24hrs after the payment.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\nTo buy bitcoin instantly you can use paxful.com like services.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n\n\n\ndatabase summary:\n\n* total tables count: 17\n* total approx. documents count for all tables: 388\n\ntable: \"mw_log\" => 127 documents\ntable: \"mw_privilege\" => 92 documents\ntable: \"mw_log_document\" => 88 documents\ntable: \"mw_role_privilege\" => 30 documents\ntable: \"mw_document\" => 20 documents\n.......................\n\nfull database dump file: mm_wiki.sql.gz, about 0.29 MB.\n\n* system/stat/views/functions/triggers or other special tables not counted.\n    these numbers for reference only.\n    binary format, total size depends on zlib compression ratio, data sparsity.\n\nincidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9\nemail: 0b1f61b3e0d3@mailinator.com\n```\n\n## 服务器防范措施\n\n- 1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：https://suijimimashengcheng.51240.com/\n- 2)删除服务器上设置的不需要的用户\n- 3)对于不需要登录的用户，请将用户的权限设置为禁止登录\n- 4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆\nWindows远程端口修改参考文档：https://cloud.tencent.com/developer/article/1052163\nLinux远程端口修改参考文档：https://cloud.tencent.com/developer/article/1124500\n- 5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）\n- 6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： https://cloud.tencent.com/document/product/215/20398\n- 7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问\n- 8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求\n需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。\n- 9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。\n\n\n## 日常查看和维护\n\n- 定期修改密码``passwd``\n- 查看用户登录情况``who、who am i``\n- 查看用户登录信息``last``\n- 查看各个用户登录信息``lastlog``\n- 查看登录失败信息``lastb``，这个可以查看嗅探的IP，以此来禁用\n- 查看用户命令历史``history``\n- 日志和监控``ELK、Prometheus``","slug":"2017-9-27服务器被攻击勒索案例","published":1,"updated":"2022-06-28T14:48:22.971Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooeu0008nkvvgs0957cw","content":"<p>服务器被攻击勒索案例</p>\n<span id=\"more\"></span>\n\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><code>2017-9-27</code>，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。</p>\n<h2 id=\"勒索数据\"><a href=\"#勒索数据\" class=\"headerlink\" title=\"勒索数据\"></a>勒索数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,</span><br><span class=\"line\"></span><br><span class=\"line\">I am a security researcher from Sweden, </span><br><span class=\"line\">having interest on web security and other focus areas.</span><br><span class=\"line\"></span><br><span class=\"line\">Your database &quot;mm_wiki&quot; was breached by a 3rd party and</span><br><span class=\"line\">files were backed up to their cloud hosting storage.</span><br><span class=\"line\"></span><br><span class=\"line\">I accidently discovered this dedicated cloud storage and was able to secure the files.</span><br><span class=\"line\"></span><br><span class=\"line\">It is scheduled to be sold online.</span><br><span class=\"line\"></span><br><span class=\"line\">The short-term consequences of this data leak could be fees, fines and frustration.</span><br><span class=\"line\"></span><br><span class=\"line\">To prevent this i will remove all files from online storage above</span><br><span class=\"line\">and restore the database if needed.</span><br><span class=\"line\"></span><br><span class=\"line\">    please send exactly 0.1 bitcoin (BTC) to the following </span><br><span class=\"line\">    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V</span><br><span class=\"line\"></span><br><span class=\"line\">email me after the payment confirms(about an hour),</span><br><span class=\"line\">and I email you back the link to download the original </span><br><span class=\"line\">dump file mm_wiki.sql.gz created with mysql mydumper.</span><br><span class=\"line\"></span><br><span class=\"line\">I will shred the files and terminate their cloud hosting account in 24hrs after the payment.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">To buy bitcoin instantly you can use paxful.com like services.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">database summary:</span><br><span class=\"line\"></span><br><span class=\"line\">* total tables count: 17</span><br><span class=\"line\">* total approx. documents count for all tables: 388</span><br><span class=\"line\"></span><br><span class=\"line\">table: &quot;mw_log&quot; =&gt; 127 documents</span><br><span class=\"line\">table: &quot;mw_privilege&quot; =&gt; 92 documents</span><br><span class=\"line\">table: &quot;mw_log_document&quot; =&gt; 88 documents</span><br><span class=\"line\">table: &quot;mw_role_privilege&quot; =&gt; 30 documents</span><br><span class=\"line\">table: &quot;mw_document&quot; =&gt; 20 documents</span><br><span class=\"line\">.......................</span><br><span class=\"line\"></span><br><span class=\"line\">full database dump file: mm_wiki.sql.gz, about 0.29 MB.</span><br><span class=\"line\"></span><br><span class=\"line\">* system/stat/views/functions/triggers or other special tables not counted.</span><br><span class=\"line\">    these numbers for reference only.</span><br><span class=\"line\">    binary format, total size depends on zlib compression ratio, data sparsity.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器防范措施\"><a href=\"#服务器防范措施\" class=\"headerlink\" title=\"服务器防范措施\"></a>服务器防范措施</h2><ul>\n<li>1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：<a href=\"https://suijimimashengcheng.51240.com/\">https://suijimimashengcheng.51240.com/</a></li>\n<li>2)删除服务器上设置的不需要的用户</li>\n<li>3)对于不需要登录的用户，请将用户的权限设置为禁止登录</li>\n<li>4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆<br>Windows远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1052163\">https://cloud.tencent.com/developer/article/1052163</a><br>Linux远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1124500\">https://cloud.tencent.com/developer/article/1124500</a></li>\n<li>5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）</li>\n<li>6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： <a href=\"https://cloud.tencent.com/document/product/215/20398\">https://cloud.tencent.com/document/product/215/20398</a></li>\n<li>7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问</li>\n<li>8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求<br>需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。</li>\n<li>9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。</li>\n</ul>\n<h2 id=\"日常查看和维护\"><a href=\"#日常查看和维护\" class=\"headerlink\" title=\"日常查看和维护\"></a>日常查看和维护</h2><ul>\n<li>定期修改密码<code>passwd</code></li>\n<li>查看用户登录情况<code>who、who am i</code></li>\n<li>查看用户登录信息<code>last</code></li>\n<li>查看各个用户登录信息<code>lastlog</code></li>\n<li>查看登录失败信息<code>lastb</code>，这个可以查看嗅探的IP，以此来禁用</li>\n<li>查看用户命令历史<code>history</code></li>\n<li>日志和监控<code>ELK、Prometheus</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>服务器被攻击勒索案例</p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><code>2017-9-27</code>，服务器数据库端口3306被嗅探攻击，由于未设防火墙，且未设置安全策略。数据被转移、密码被修改。</p>\n<h2 id=\"勒索数据\"><a href=\"#勒索数据\" class=\"headerlink\" title=\"勒索数据\"></a>勒索数据</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,</span><br><span class=\"line\"></span><br><span class=\"line\">I am a security researcher from Sweden, </span><br><span class=\"line\">having interest on web security and other focus areas.</span><br><span class=\"line\"></span><br><span class=\"line\">Your database &quot;mm_wiki&quot; was breached by a 3rd party and</span><br><span class=\"line\">files were backed up to their cloud hosting storage.</span><br><span class=\"line\"></span><br><span class=\"line\">I accidently discovered this dedicated cloud storage and was able to secure the files.</span><br><span class=\"line\"></span><br><span class=\"line\">It is scheduled to be sold online.</span><br><span class=\"line\"></span><br><span class=\"line\">The short-term consequences of this data leak could be fees, fines and frustration.</span><br><span class=\"line\"></span><br><span class=\"line\">To prevent this i will remove all files from online storage above</span><br><span class=\"line\">and restore the database if needed.</span><br><span class=\"line\"></span><br><span class=\"line\">    please send exactly 0.1 bitcoin (BTC) to the following </span><br><span class=\"line\">    bitcoin address: 1JekXdQGREcfKp3dAuaLTRs9XbTVxczq2V</span><br><span class=\"line\"></span><br><span class=\"line\">email me after the payment confirms(about an hour),</span><br><span class=\"line\">and I email you back the link to download the original </span><br><span class=\"line\">dump file mm_wiki.sql.gz created with mysql mydumper.</span><br><span class=\"line\"></span><br><span class=\"line\">I will shred the files and terminate their cloud hosting account in 24hrs after the payment.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">To buy bitcoin instantly you can use paxful.com like services.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">database summary:</span><br><span class=\"line\"></span><br><span class=\"line\">* total tables count: 17</span><br><span class=\"line\">* total approx. documents count for all tables: 388</span><br><span class=\"line\"></span><br><span class=\"line\">table: &quot;mw_log&quot; =&gt; 127 documents</span><br><span class=\"line\">table: &quot;mw_privilege&quot; =&gt; 92 documents</span><br><span class=\"line\">table: &quot;mw_log_document&quot; =&gt; 88 documents</span><br><span class=\"line\">table: &quot;mw_role_privilege&quot; =&gt; 30 documents</span><br><span class=\"line\">table: &quot;mw_document&quot; =&gt; 20 documents</span><br><span class=\"line\">.......................</span><br><span class=\"line\"></span><br><span class=\"line\">full database dump file: mm_wiki.sql.gz, about 0.29 MB.</span><br><span class=\"line\"></span><br><span class=\"line\">* system/stat/views/functions/triggers or other special tables not counted.</span><br><span class=\"line\">    these numbers for reference only.</span><br><span class=\"line\">    binary format, total size depends on zlib compression ratio, data sparsity.</span><br><span class=\"line\"></span><br><span class=\"line\">incidentId: 1eaa480d-bd6d-44f7-a2b1-2204b32049d9</span><br><span class=\"line\">email: 0b1f61b3e0d3@mailinator.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"服务器防范措施\"><a href=\"#服务器防范措施\" class=\"headerlink\" title=\"服务器防范措施\"></a>服务器防范措施</h2><ul>\n<li>1)服务器设置大写、小写、特殊字符、数字组成的12-16位的复杂密码 ，也可使用密码生成器自动生成复杂密码，这里给您一个链接参考：<a href=\"https://suijimimashengcheng.51240.com/\">https://suijimimashengcheng.51240.com/</a></li>\n<li>2)删除服务器上设置的不需要的用户</li>\n<li>3)对于不需要登录的用户，请将用户的权限设置为禁止登录</li>\n<li>4)修改远程登录服务的默认端口号以及禁止超级管理员用户登陆<br>Windows远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1052163\">https://cloud.tencent.com/developer/article/1052163</a><br>Linux远程端口修改参考文档：<a href=\"https://cloud.tencent.com/developer/article/1124500\">https://cloud.tencent.com/developer/article/1124500</a></li>\n<li>5)较为安全的方法：只使用密钥登录禁止密码登陆 （针对Linux系统）</li>\n<li>6)腾讯云平台有安全组功能，里面您只需要放行业务协议和端口，不建议放行所有协议所有端口，参考文档： <a href=\"https://cloud.tencent.com/document/product/215/20398\">https://cloud.tencent.com/document/product/215/20398</a></li>\n<li>7)不建议向公网开放核心应用服务端口访问，例如mysql、redis等，您可修改为本地访问或禁止外网访问</li>\n<li>8)如果您的本地外网IP固定，建议使用安全组或者系统防火墙禁止除了本地外网IP之外所有IP的登录请求<br>需注意：做好云服务器系统的安全防护可以有效加强云服务器系统安全， 但也无法保证绝对安全， 建议定期做好云服务器系统的安全巡检及数据备份，以防突发情况导致数据丢失、或业务不可用。</li>\n<li>9)企业级服务器，应购买企业级防火墙，动态日志、监控、预警、防护措施，针对来访地址和数据，调整防火墙规则。</li>\n</ul>\n<h2 id=\"日常查看和维护\"><a href=\"#日常查看和维护\" class=\"headerlink\" title=\"日常查看和维护\"></a>日常查看和维护</h2><ul>\n<li>定期修改密码<code>passwd</code></li>\n<li>查看用户登录情况<code>who、who am i</code></li>\n<li>查看用户登录信息<code>last</code></li>\n<li>查看各个用户登录信息<code>lastlog</code></li>\n<li>查看登录失败信息<code>lastb</code>，这个可以查看嗅探的IP，以此来禁用</li>\n<li>查看用户命令历史<code>history</code></li>\n<li>日志和监控<code>ELK、Prometheus</code></li>\n</ul>"},{"title":"Android基础","date":"2016-06-04T16:00:00.000Z","_content":"\nAndroid基础\n\n<!--more-->\n\n```\n一、Activity *******************************\n1.Activity生命周期(↖↑↗ ← → ↙↓↘)\n--↓--onCreate();\n--↓--onStart(); ←←←←←←↑\n--↓--onResume();←←←↑  ↑\n--↓-- 运行中    ↑  onRestart();\n--↓--onPause(); →→→↑  ↑\n--↓--onStop();\n→→→→→→↑\n--↓--onDestroy();\n\n* 当第一次运行时会看到主Activity，主Activity可以通过Intent到其他的Activity进行相关操作。\n* 当启动其他的Activity时当前的Activity将会停止，之前的Activity失去焦点，新的Activity会获取焦点\n* 根据栈的先进后出原则，当按Back键时，当前这个Activity销毁，前一个Activity重新恢复，调用onResume\n* 当按Home键退回到主界面时，会调用onStop，界面消失，重新进来会调用onRestart\n\n2.设置页面\n1)设置xml布局文件\nsetContentView(R.layout.xxx_xxx);\n2)写View（LayoutParams一定要和父布局的一致）\nTextView textView = new TextView(this);\nLinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);\nparams.leftMargin = 10;\nparams.rightMargin = 10;\ntextView.setLayoutParams(params);\ntextView.setTextSize(20);\ntextView.setPadding(100,20,0,20);\n// 左上右下\ntextView.setBackgroundColor(Color.parseColor(\"#D4D4D4\"));\n\n// setFrame(x - 60, y - 120, x + 60, y);\n// ImageView设置在父布局中位置\n\n3.关闭Activity\nfinish();\n\n4.页面跳转及传值\n1)单向传值：\n* 放值\nIntent intent = new Intent(TabSpec3Acty.this, TabSpec3GoActy.class);\nintent.putExtra(\"intentFlag\", 0);\nintent.putExtra(\"title\", \"修改姓名\");\nstartActivity(intent);\n* 取值\nIntent intent = getIntent();\nint intentFlag = intent.getIntExtra(\"intentFlag\",-1);\nString title = intent.getStringExtra(\"title\");\n\n2)数值回调：\n* 等值\nstartActivityForResult(intent, 0);\n// 0是requestCode\n* 放值\nIntent intent = new Intent();\nintent.putExtra(\"resultIntentFlag\",intentFlag);\nsetResult(101,intent);\n// 101是resultCode\nfinish();\n* 取值\nprotected void onActivityResult(int requestCode, int resultCode, Intent intent) {}\n\n5.Fragment\n1)Fragment\n--↓--onAttach();\n--↓--onCreate();\n--↓--onCreateView();\n--↓--onActivityCreate();\n\n--↓--onStart();\n--↓--onResume();←←←↑\n--↓-- 运行中    ↑\n--↓--onPause(); →→→↑\n--↓--onStop();\n\n--↓--onDestroyView();\n--↓--onDestroy();\n--↓--onDetache();\n\n2)主Activity继承FragmentActivity\n3)获取事务处理，进行增加、替换、或者隐藏，最后提交\nFragmentTransaction fts = getSupportFragmentManager().beginTransaction();\nfts.add(R.id.content, tab1);\n// 资源可以用FrameLayout，或者ViewPager\n// fts.replace(R.id.content, tab1);\n// 替换\nfts.commit();\n4)继承Fragment，重写onCreateView方法\npublic View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState) {\nif(view == null){\nview = inflater.inflate(R.layout.acty_test,container,false);\n}\nreturn view;\n}\n5)得到上下文\nContext context = this.getActivity();\n6)操作Activity里面的东西\n((FrameActy)getActivity()).refreshPage();\n7)当Fragment相互切换的时候，会调用onHiddenChanged\n会先调用activity的onResume\n\n\n二、Intent *******************************\n1.定义\n作为一种意图，Activity，Service和Broadcast Receiver这三种核心组件都需要使用Intent来激活\nIntent包含组件名称、动作、数据、种类、额外和标记等内容\n2.动作（setAction()和getAction()）\n1)Activity：通常使用context.startActivity();启动\n2)Broadcast：通常使用context.registerReceiver();启动\n3.数据（setData()和getData()）\n4.种类（addCategory()和removeCategory()）\n5.额外（putExtra()和getExxxxtra()）\n\n6.返回桌面\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_MAIN);\n        intent.addCategory(Intent.CATEGORY_HOME);\n        startActivity(intent);\n\n7.拨打电话\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_CALL);\n        intent.setData(Uri.parse(\"tel:\"+\"15951723371\"));\n        startActivity(intent);\n\n8.打开网页\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_VIEW);\n        intent.setData(Uri.parse(\"http://www.baidu.com\"));\n        startActivity(intent); \n\n三、事件处理 *******************************\n1.按钮点击事件（setOnClickListener或者setOnLongClickListener）\n        kaishi.setOnLongClickListener(new View.OnLongClickListener() {}); \nkaishi.setOnClickListener(new View.OnClickListener() {});\n\n2.物理按键按下（重写onKeyDown()，返回值就是是否执行完毕）\n1)屏蔽返回键\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\nif(keyCode == KeyEvent.KEYCODE_BACK){\nreturn true;\n}\nreturn super.onKeyDown(keyCode, event);\n}\n3.触摸事件（重写onTouch()，返回值就是是否执行完毕）\n1)触摸事件\npublic boolean onTouchEvent(MotionEvent event) {\nswitch (event.getAction()){\ncase MotionEvent.ACTION_DOWN:\ndownX = event.getRawX();\ndownY = event.getRawY();\nbreak;\ncase MotionEvent.ACTION_MOVE:\n// 监听拖动\nmoveX = event.getRawX();\nmoveY = event.getRawY();\nbreak;\ncase MotionEvent.ACTION_UP:\n// 监听滑动\nupX = event.getRawX();\nupY = event.getRawY();\nx = upX - downX;\ny = upY - downY;\n\n\nif(y < 0 && Math.abs(y) >= Math.abs(x)){\nToast.makeText(this, \"向上滑动\", Toast.LENGTH_SHORT).show();\n}else if(y > 0 && y >= Math.abs(x)){\nToast.makeText(this, \"向下滑动\", Toast.LENGTH_SHORT).show();\n}else if(x > 0 && x > Math.abs(y)){\nToast.makeText(this, \"向右滑动\", Toast.LENGTH_SHORT).show();\n}else if(x < 0 && Math.abs(x) > Math.abs(y)){\nToast.makeText(this, \"向左滑动\", Toast.LENGTH_SHORT).show();\n}\nbreak;\n}\nreturn true;\n}\n\n注：getX getRawX的区别\ngetX：是以widget左上角为坐标原点，计算的Ｘ轴坐标值\ngetRawX：是以屏幕左上角为坐标原点，计算的Ｘ轴坐标值\n\n\n四、资源访问(不能大写，字 下数 命名) *******************************\n1.字符串(string)\ntextView.setTextColor(getResources().getString(R.string.app_name));\nandroid:text=\"@string/app_name\"\n\n2.颜色(color)：颜色值通过RGB和透明度Alpha表示，可以用#RGB、#ARGB、#RRGGBB、#AARRGGBB表示\ntextView.setTextColor(getResources().getColor(R.color.red));\nandroid:textColor=\"@color/red\"\n        \n3.尺寸(dimen)\ntextView.setTextSize(getResources().getDimension(R.dimen.margin));\nandroid:textSize=\"@dimen/margin\"\n\n4.布局(layout)\n* 布局中包含其他布局：\n<include layout=\"@layout/acty_top\"/>\n\n5.数组(array)\n1)类型：\n<array>：普通类型数组\n<integer-array>：整形数组\n<string-array>：字符串数组\n2)定义：\n<integer-array name=\"asdf\">\n<item>111</item>\n<item>222</item>\n</integer-array>\n3)使用：\nint[] asdf =  getResources().getIntArray(R.array.asdf);\nString[] qwer = getResources().getStringArray(R.array.qwer);\n\n6.图片(drawable)\n1).9图片的使用\n2)虚拟图片\n(1)两张图片切换\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item android:state_pressed=\"true\" android:drawable=\"@drawable/sdf\"/>\n<item android:state_pressed=\"true\" android:drawable=\"@drawable/sdf\"/>\n</selector>\n(2)单一背景\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item>\n<shape>\n<solid android:color=\"#ffffff\" />\n<stroke android:width=\"1px\" android:color=\"#C0BFB6\" />\n<corners android:radius=\"5px\"/>\n</shape>\n</item>\n</selector>\n(3)去边\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item android:top=\"-2px\">\n<shape>\nxxx\n</shape>\n</item>\n</layer-list>\n\n7.样式(style)\n1)样式支持继承：优先使用子样式\n2)定义：\n<style name=\"title\" parent=\"basic\">\n<item name=\"android:padding\">10px</item>\n<item name=\"android:gradientRadius\">center</item>\n</style>\n3)使用：\nstyle=\"@style/title\"\n\n8.主题(theme)\n1)定义资源color，attr，style\n<color name=\"color_gray\">#3b3b3b</color>\n<attr name=\"main_color_normal\" format=\"reference|color\"/>\n\n\n<style name=\"ThemeBlue\" parent=\"AppTheme\">\n<item name=\"main_color_normal\">@color/color_blue</item>\n</style>\n2)自定义MyApplication类，继承Application，存放curThemeId值，并生成getter，setter方法\n3)AndroidManifest文件，name实现MyApplication类，修改默认android:theme=\"@style/ThemeBlue\"\n4)修改主题\n1.设置主题，要在setContentView方法之前\nsetTheme(((MyApplication) getApplication()).getCurThemeId());\n2.向MyApplication里面放值\n((MyApplication) getApplication()).setCurThemeId(curTheme);\n3.页面重新创建\nrecreate();\n5)其他\n1.设置属性默认背景\nandroid:background=\"?main_color_normal\"\n2.拿到资源颜色转\nint color = context.getResources().getColor(colorArr[i]);\n3.拿到属性默认颜色\nint mainColor = Utils.getThemeColor(this,R.attr.main_color_normal,R.color.color_blue);\n6)工具类\n// dip转px\npublic static float dipToPx(Context context, float dipValue) {\nfloat scale = context.getResources().getDisplayMetrics().density;\nreturn dipValue * scale + 0.5f;\n}\n// px转dip\npublic static float pxToDip(Context context, float pxValue) {\nfloat scale = context.getResources().getDisplayMetrics().density;\nreturn pxValue / scale + 0.5f;\n}\n// 得到当前主题颜色\npublic static int getThemeColor(Context mContext, int attr, int defaultColor){\nTypedArray array = mContext.obtainStyledAttributes(new int[]{attr});\nreturn array.getColor(0, defaultColor);\n} \n9.原始xml(xml)\n建文件夹xml\n\n=======================================================================================================================\n==================================================分割线-高级==========================================================\n=======================================================================================================================\n\n\n五、图形图像处理 *******************************\n1.常用绘图类\n1)Paint（画笔）\npaint = new Paint();\npaint.setAntiAlias(true);\n// 去锯齿\npaint.setColor(Color.BLUE);\n// 设置画笔颜色\npaint.setStyle(Paint.Style.STROKE);\n// 描边，填充的属性为 Paint.Style.FILL\npaint.setStrokeWidth(3);\n// 路径宽度\npaint.setTextSize(18);\n// 设置字体大小\n2)Canvas（画图面板）\ncanvas.drawColor(Color.GRAY);\n// 设置画布颜色\n3)Bitmap（Bitmap类代表位图）\n4)BitmapFactory（从不同数据源来解析、创建Bitmap对象）\nBitmap bitmap = BitmapFactory.decodeFile(\"/sdcard/picture/bccd/img01.jpg\");\n// 从路径解析Bitmap\nBitmap bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher);\n// 从资源解析Bitmap\nBitmap bitmap = BitmapFactory.decodeStream(inputStream);\n// 输入流解析Bitmap\n\n\n2.绘制2D图像\n1)绘制几何图形\ncanvas.drawPoint(100, 100, paint);\n// 绘制点(坐标)\ncanvas.drawLine(10,10,40,40,paint);\n// 绘制线(开始坐标，结束坐标)\ncanvas.drawCircle(10, 10, 12, paint);\n// 绘制圆(圆心坐标，半径)\ncanvas.drawRect(10,10,50,50,paint);\n// 绘制方(左上角坐标，右下角坐标)\ncanvas.drawOval(new RectF(0,0,100,60),paint);\n// 绘制椭圆(左上角坐标，右下角坐标)\n\n2)绘制文本\ncanvas.drawText(\"张三\",10,460,paint);\n// 绘制文本(左下角起始坐标)\n\n3)绘制路径\nPath path = new Path();\n// 绘制路径\npath.moveTo(30,0);\n// 起始点\npath.lineTo(0,44);\n// 路径\npath.lineTo(60,44);\n\npath.close();  // 闭合路径，如果写了，就会闭合\ncanvas.drawPath(path,paint);\n\ncanvas.drawTextOnPath(\"xxx\",path,0,0,paint);\n// 沿着路径绘制文字\n\n4)绘制图片\ncanvas.drawBitmap(bitmap, 100, 100, paint);\n// 从指定点绘制位图(左上角坐标)\n\nRect src = new Rect(0, 0, 300, 500);\nRect dst = new Rect(50, 50, 350, 350);\ncanvas.drawBitmap(bitmap, src, dst, paint);\n// 从源位图上挖取(0,0)到(300,500)的一块图像，然后绘制到(50,50)到(350,550)区域\n\n\n3.逐帧动画\n1)写配置文件anim_frame_panda，oneshot表示循环，默认为true，\n<animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:oneshot=\"false\">\n\n<item  android:drawable=\"@mipmap/fat_po_f01\" android:duration=\"60\" />\n</animation-list>\n2)ImageView的Background属性设置为配置文件，或者在Java里面设\nandroid:background=\"@anim/anim_frame_panda\"\nimageView.setBackgroundResource(R.anim.anim_frame_boom);\n3)拿到ImageView的background，并强转为AnimationDrawable，并启动\nAnimationDrawable animationDrawable = (AnimationDrawable) imageView.getBackground();\nanimationDrawable.start();\nanimationDrawable.stop();\n\n\n4.补间动画\n1)代码显示\n(1)位移动画\nTranslateAnimation translateAnimation = new TranslateAnimation(0, 400, 0, 200);\n// x开始，x位移，y开始，y位移\ntranslateAnimation.setDuration(1000);\n// 执行动画时间\ntranslateAnimation.setFillAfter(false);\n// 是否停留在最后状态\ntranslateAnimation.setRepeatCount(1);\n// 设置重复次数，连同本身一共两次\ntranslateAnimation.setRepeatMode(Animation.REVERSE);\n// 反向执行\nimageView.startAnimation(translateAnimation);\n// 开始动画\n(2)缩放动画\nScaleAnimation scaleAnimation = new ScaleAnimation(1.0f, 2.0f, 1.0f, 2.0f);\n// x开始，x缩放，y开始，y缩放\nscaleAnimation.setDuration(800);\n// 执行动画时间\nscaleAnimation.setRepeatCount(2);\n// 设置重复次数，连同本身一共三次\nscaleAnimation.setRepeatMode(Animation.REVERSE);\n// 反向执行\nimageView.startAnimation(scaleAnimation);\n// 开始动画\n(3)旋转动画\nRotateAnimation rotateAnimation = new RotateAnimation(0, 360, 100, 100);\n// 开始度数，旋转度数，圆心\nrotateAnimation.setDuration(800);\n// 执行动画时间\n// rotateAnimation.setInterpolator(new LinearInterpolator());\n//均匀速度改变\n// rotateAnimation.setInterpolator(new AccelerateInterpolator());\n//先慢后快\n// rotateAnimation.setInterpolator(new DecelerateInterpolator());\n//先快后慢\nrotateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());\n//先慢后快\nrotateAnimation.setStartTime(100);\n//等待100ms执行\nrotateIV.startAnimation(rotateAnimation);\n// 开始动画 \n(4)透明、渐变动画\nAlphaAnimation alphaAnimation = new AlphaAnimation(0.1f, 1f);\n// 开始透明度，结束透明度\nalphaAnimation.setDuration(2000);\n// 执行动画时间\nalphaAnimation.setFillAfter(true);\n// 是否停留在最后状态\nalphaIV.startAnimation(alphaAnimation);\n\n\nalphaAnimation.setAnimationListener(new Animation.AnimationListener() {});\n// 设置监听\n2)xml显示(新建directory -> anim)\n(1)位移动画\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXDelta=\"0\"\nandroid:fromYDelta=\"0\"\nandroid:toXDelta=\"400\"\nandroid:toYDelta=\"100\"\nandroid:duration=\"1000\">\n</translate>\nTranslateAnimation translateAnimation = (TranslateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_translate);\n(2)缩放动画\n<scale xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXScale=\"1.0\"\nandroid:fromYScale=\"1.0\"\nandroid:toXScale=\"2.0\"\nandroid:toYScale=\"2.0\"\nandroid:pivotX=\"50%\"\n// 缩放圆心\nandroid:pivotY=\"50%\"\n\nandroid:duration=\"1000\">\n</scale>\nScaleAnimation scaleAnimation = (ScaleAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_scale);\n(3)旋转动画\n<rotate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"2000\"\nandroid:fillAfter=\"true\"\nandroid:fromDegrees=\"0\"\nandroid:pivotX=\"50%\"\nandroid:pivotY=\"50%\"\nandroid:toDegrees=\"720\">\n</rotate>\nRotateAnimation rotateAnimation = (RotateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_rotate);\n(4)透明、渐变动画\n<alpha xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"3500\"\nandroid:fromAlpha=\"0.1\"\nandroid:toAlpha=\"1\"\nandroid:fillAfter=\"true\">\n</alpha>\nAlphaAnimation alphaAnimation = (AlphaAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_alpha);\n3)页面平滑动画\n(1)写四个动画(anim_left_out)\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXDelta=\"0\"\nandroid:toXDelta=\"-100%\"\nandroid:duration=\"400\">\n</translate>\n(2)onCreate方法里面写\noverridePendingTransition(R.anim.anim_right_in, R.anim.anim_left_out);\n// 动画进来的效果，动画出去的效果\n(3)finish方法里面写\noverridePendingTransition(R.anim.anim_left_in, R.anim.anim_right_out);\n\n\n六、多媒体应用 *******************************\n1.MediaPlayer播放音频 ↖↑↗ ← → ↙↓↘\n1)MediaPlayer周期\nnew()或reset() →  → setDataSource() →  → prepare() →  → start()\n如果调用create()，会直接进入准备状态\n\n2)主要方法\nmediaPlayer.reset();\n// 重置资源\nmediaPlayer.setDataSource();\n// 设置播放资源\nmediaPlayer.prepare();\n// 准备\nmediaPlayer.start();\n// 开始\nmediaPlayer.pause();\n// 暂停\nmediaPlayer.stop();\n// 停止\nmediaPlayer.release();\n// 释放资源\n\nmediaPlayer.getDuration();\n// 得到播放时间\nmediaPlayer.seekTo();\n// 从哪边开始播放\nmediaPlayer.getCurrentPosition();\n// 得到当前位置\n\n2.SoundPool播放音频\n3.VideoView播放视频\n4.用MediaPlayer和SurfaceView播放视频\n\n\n七、线程 *******************************\n1.多线程\n1)线程创建\nThread thread = new Thread(new Runnable() {});\n\n2)线程开启\nthread.start();\n\n3)线程休眠\nthread.sleep(200);\n\n2.Handle消息传递\n1)Handle作用\n(1)在子线程与主线程进行通信\n(2)在主线程中操作UI控件\n\n2)Handle创建，并实现handleMessage接受消息\nHandler handler = new Handler(){\npublic void handleMessage(Message msg) {\n}\n};\n\n3)发送消息给handle\nhandler.sendMessage(message);\n// 发送带有Message的消息\nhandler.sendEmptyMessage(0x12);\n// 发送一个空的信息\n\n4)Message\nMessage message = Message.obtain();\nmessage.arg1 = 1;\nmessage.arg2 = 1;\nmessage.obj = obj;\nmessage.what = 0x12;\n\n\n八、数据存储\n　　1.SharedPreference（xml文件）：用于存储较简单的数据\n1)定义并设权限\nSharedPreferences spf = getSharedPreferences(\"user\",Activity.MODE_PRIVATE);\n\n2)放值\nspf.edit()\nspf.putString(\"name\",\"张三\")\nspf.commit();\n\n3)取值\nString name = spf.getString(\"name\",\"\");\n\n4)清空\nspf.edit()\nspf.clear()\nspf.commit();\n\n　　2.File（文件）：用于存储大数量的数据，缺点是更新数据困难\n1)文件读取\n            FileInputStream fis = this.openFileInput(FILE_NAME);\n            byte[] buff = new byte[1024];\n            int hasRead = 0;\n            StringBuilder sb = new StringBuilder(\"\");\n            while ((hasRead = fis.read(buff)) > 0) {\n                sb.append(new String(buff, 0, hasRead, \"utf-8\"));\n            }\n\n2)文件写入\n            FileInputStream fis = this.openFileInput(FILE_NAME);\n            byte[] buff = new byte[1024];\n            int hasRead = 0;\n            StringBuilder sb = new StringBuilder(\"\");\n            while ((hasRead = fis.read(buff)) > 0) {\n                sb.append(new String(buff, 0, hasRead, \"utf-8\"));\n            }\n　\n3.SQLite（轻量级数据库）：支持基本SQL语法，是常被采用的一种数据存储方式\n1)创建连接以及创表类，继承SQLiteOpenHelper\nprivate static String dbName = \"data.db\";\nprivate static int version = 1;\npublic final static String T_USER = \"t_user\";\n\n\npublic DataDBHelper(Context context){\nsuper(context,dbName,null,version);\n}\n// 创建数据表，只在第一次运行的时候执行\n@Override\npublic void onCreate(SQLiteDatabase db) {\nStringBuffer createTableSql = new StringBuffer(\"\");\ncreateTableSql.append(\" create table if not exists \" + T_NOTE + \" \");\ncreateTableSql.append(\" ( \");\ncreateTableSql.append(\" _id integer primary key autoincrement,\");\ncreateTableSql.append(\" name varchar, \");\ncreateTableSql.append(\" ) \");\n\n\ndb.execSQL(createTableSql.toString());\n}\n// 更新数据库，新版本号比老版本号高的时候更新数据表\n@Override\npublic void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\nsqLiteDatabase.execSQL(\"drop table \" + T_NOTE);\nonCreate(sqLiteDatabase);\n}\n\n2)写增删改查类\n// 类型定义\nprivate SQLiteHelper sqliteHelper;\npublic SQLiteDBManager(Context context) {\nif (sqliteHelper == null) {\nsqliteHelper = new SQLiteHelper(context);\n}\n}\n\n// 增删改\nSQLiteDatabase db = sqliteHelper.getWritableDatabase();\ndb.execSQL(sql, new Object[]{});\ndb.close();\n\n// 查\nSQLiteDatabase db = sqliteHelper.getReadableDatabase();\nCursor cursor = db.rawQuery(sql, null);\nwhile (cursor.moveToNext()) {\ncursor.getInt(cursor.getColumnIndex(\"_id\"));\n}\ncursor.close();\ndb.close();\n\n// 包装类增、删、改\nContentValues cv = new ContentValues();\ncv.put(\"_id\", this.queryMaxId());\ndb.insert(\"table_name\", null, cv);\n\ndb.delete(\"table_name\", \" _id = ? \", new String[]{String.valueOf(item.getId())});\n\n\nContentValues cv = new ContentValues();\ncv.put(\"_id\", item.getId());\ndb.update(\"table_name\", cv, \" _id = ? \", new String[]{String.valueOf(item.getId())});\n\n\n\n\n\n\n\n九、Service *******************************\n1)生命周期\n(1)启动 (2)绑定\n-↓-onCreate();\n-↓-onCreate();\n-↓-onStartCommand();\n-↓-onBind();\n-↓-onDestroy();\n-↓-onUnBind();\n-↓-onDestroy();\n\n\n2)注册Service\n        <service android:name=\".MyService\">\n            <!-- 优先级[-1000,1000] -->\n            <intent-filter android:priority=\"900\">\n                <action android:name=\"com.suwei.someaction\" />\n            </intent-filter>\n        </service>\n\n\n3)启动Service\nIntent intent = new Intent(\"com.suwei.someaction\");\n\nstartService(intent);\nstopService(intent);\n\n4)绑定Service\n        Intent intent = new Intent(mContext, MyService.class);\n// 绑定或解绑\n        bindService(intent, conn, Service.BIND_AUTO_CREATE);\nunbindService(conn);\n\n// ServiceConnection匿名链接对象\nprivate MyService myService;\nprivate ServiceConnection conn = new ServiceConnection() {\n@Override\npublic void onServiceConnected(ComponentName componentName, IBinder iBinder) {\nMyService.MyBind bind = (MyService.MyBind) iBinder;\nmyService = bind.getMyService();\n}\n@Override\npublic void onServiceDisconnected(ComponentName componentName) {\n}\n};\n\n// Service的onBind方法每次return新的MyBind对象\n@Override\npublic IBinder onBind(Intent intent) {\nreturn new MyBind();\n}\n\npublic class MyBind extends Binder {\npublic MyService getMyService() {\nreturn MyService.this;\n}\n}\n\n\n十、Broadcast *******************************\n1.注册方法\n1)静态注册(继承BroadcastReceiver)\n<receiver android:name=\".FirstReceive\">\n<!-- 优先级[-1000,1000] -->\n<intent-filter android:priority=\"998\">\n<action android:name=\"qqq\"/>\n<category android:name=\"android.intent.category.DEFAULT\"/>\n</intent-filter>\n</receiver>\n2)动态注册(可以使用匿名对象或者类继承BroadcastReceiver)\nprivate BroadcastReceiver receiver = new BroadcastReceiver() {\n@Override\npublic void onReceive(Context context, Intent intent) {\nString action = intent.getAction();\nif (\"name\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改名字为========= \" + intent.getStringExtra(\"name\"));\n} else if (\"age\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改年龄为========= \" + intent.getStringExtra(\"age\"));\n} else if (\"sex\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改性别为========= \" + intent.getStringExtra(\"sex\"));\n}\n}\n};\nIntentFilter intentFilter = new IntentFilter();\nintentFilter.addAction(\"name\");\nintentFilter.addAction(\"age\");\nintentFilter.addAction(\"sex\");\n\n// 注册receive\nregisterReceiver(receiver, intentFilter);\n// 解注册receive\nunregisterReceiver(receiver);\n\n2.分类\n1)普通广播\nIntent intent = new Intent();\nintent.setAction(\"receive_action1\");\nintent.putExtra(\"name\",\"张三\");\nsendBroadcast(intent);\n2)有序广播(等前一个接受者处理完后才会发送给后一个接受者)\nintent = new Intent();\nintent.setAction(\"receive_action2\");\nintent.putExtra(\"kkk\", \"111\");\nsendOrderedBroadcast(intent, null);\n\n// 截断广播\nabortBroadcast();\n\n// 前一个receive放其他的值\nBundle bundle = new Bundle();\nbundle.putString(\"msg\",\"第一个页面的信息\");\nsetResultExtras(bundle);\n\n// 后一个receive取值\nString msg = getResultExtras(true).getString(\"msg\");\n3.系统广播\n// 时间改变广播(只能动态注册)\nSystemChangeReceive systemChangeReceive = new SystemChangeReceive();\nIntentFilter filter = new IntentFilter();\nfilter.addAction(Intent.ACTION_TIME_TICK);\nregisterReceiver(systemChangeReceive, filter);\n\n// 网络状态广播(动态静态都可以)\nNetChangeReceive netChangeReceive = new NetChangeReceive();\nIntentFilter filter = new IntentFilter();\nfilter.addAction(\"android.net.conn.CONNECTIVITY_CHANGE\");\nregisterReceiver(netChangeReceive, filter);\n\n十一、ContentProvider *******************************\n1.ContentResolver\nCursor cursor = context.getContentResolver().query(\nuri,     // uri\nnull,   // 需要查询的字段String[]{}\nnull,   // 查询条件，可设?\nnull,   // 查询条件的参数，String[]{}\nnull      // 排序\n);\n\n\n\n\n\n// ========================================== Android体系结构（从上到下分为4层） ==========================================\n\tAndroid应用层\n\tAndroid应用框架层\n\tAndroid系统运行层\n\tLinux内核层\n\t\n\t\n// ========================================== android四大组件 ==========================================\n\tActivity\n\tService\n\tBroadcast Receiver\n\tContent Provider\n\n\t\n// ========================================== ANR（Application No Response） ==========================================\n\t程序无响应的错误信息。（5秒）\n\n\n// ========================================== OOM（out of memory） ==========================================\n\t内存溢出\n\n\n// ========================================== 像素关系 ==========================================\n\tpx: 像素\n\tdpi: 对角线像素/尺寸\n\tdp:(px*160)/dpi\n\tppi: 针对显示器 ppi=dpi\n\t\n\n// ========================================== 沉浸式状态栏 ==========================================\n\tandroid:fitsSystemWindows=\"true\"\n\tandroid:clipToPadding=\"true\"\n\n\tif(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n\t//透明状态栏\n\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);\n\t//透明导航栏\n\t}\n\tthis.requestWindowFeature(Window.FEATURE_NO_TITLE);\n\n\n\n// ========================================== 设置drawable-top图片 ==========================================\n\ttextView.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.mipmap.tdi_yi), null, null);\n\n\n\n// ========================================== 适配器 ==========================================\n\t1)ArrayAdapter（数组适配器）：只能绑定单一类型的数据\n\t\tArrayAdapter<String> adapter = new ArrayAdapter<String>(\n\t\t\tTestActy.this,\n\t\t\t// 1.上下文\n\t\t\tandroid.R.layout.simple_list_item_1,\n\t\t\t// 2.布局文件\n\t\t\tnew String[]{\"name\",\"sex\"}\n\t\t\t// 3.数据源（可以是String数组，或者是List包含String）\n\t\t);\n\t\tspinner.setAdapter(adapter);\n\n\t2)SimpleAdapter（简单适配器）：可以显示比较复杂的数据\n\t\tSimpleAdapter simpleAdapter = new SimpleAdapter(\n\t\t\tTabSpec1Acty.this,\n\t\t\t// 1.上下文\n\t\t\tsimpleList,  // 2.数据源（可以是List包含Map，或者是List包含其他）\n\t\t\tandroid.R.layout.simple_list_item_2,\n\t\t\t// 3.布局文件\n\t\t\tnew String[]{\"name\",\"sex\"},\n\t\t\t// 4.Map的键\n\t\t\tnew int[]{android.R.id.text1,android.R.id.text2}\n\t\t\t// 5.布局控件的id\n\t\t\t);\n\t\tlistView.setAdapter(simpleAdapter);\n\n\t3)BaseAdapter（自定义适配器）：\n\t\tpublic View getView(int i, View view, ViewGroup viewGroup) {\n\t\t\tViewHolder holder;\n\t\t\t\tif(view != null && view.getTag() != null){\n\t\t\t\t\tholder = (ViewHolder) view.getTag();\n\t\t\t\t}else {\n\t\t\t\t\tholder = new ViewHolder();\n\t\t\t\t\tview = LayoutInflater.from(context).inflate(R.layout.item_resource,null);\n\t\t\t\t\tholder.textView1 = (TextView) view.findViewById(R.id.item_text1);\n\t\t\t\t\tview.setTag(holder);\n\t\t\t\t}\n\n\t\t\tMap<String,Object> singleMap = list.get(i);\n\t\t\tholder.textView1.setText(singleMap.get(\"name\").toString());\n\n\t\t\treturn view;\n\t\t}\n\t\t\n\t\tprivate static class ViewHolder{\n\t\t\tTextView textView1;\n\t\t\tTextView textView2;\n\t\t} \n\n\n// ========================================== 自定义View ==========================================\n\t1)继承View\n\t2)设置画布宽高（重写onMeasure方法，默认是全屏）\n\t\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n\t\t\tsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\t\t\t// 决定画布宽高\n\t\t\tsetMeasuredDimension(700,800);\n\t\t}\n\n\t3)绘图（重写onDraw方法）\n\t4)重绘\n\t\tinvalidate();  // 主线程中\n\t\tpostInvalidate(); // 子线程中\n\n\t\t\n// ========================================== Notification通知 ==========================================\n\t1)显示系统通知\n\t\tbuilder = new Notification.Builder(context);\n\t\tbuilder.setTicker(\"提示内容\");\n\t\tbuilder.setSmallIcon(R.mipmap.ic_launcher);\n\t\t// 显示的图标\n\t\tbuilder.setContentTitle(\"标题\");\n\t\tbuilder.setContentText(\"内容\");\n\n\n\t\tnotification = builder.build();\n\t\tnotification.flags = Notification.FLAG_AUTO_CANCEL;\n\t\t// 设置为可以取消\n\t\tnotificationManager.notify(1, notification);\n\t\t// 第一个参数是notification的id，如果id一样，则覆盖\n\t2)带有页面跳转\n\t\t/**\n\t\t* 上下文，requestCode,页面跳转intent\n\t\t* PendingIntent.FLAG_CANCEL_CURRENT：新发和旧发不论requestCode是否一样，各自的值不变\n\t\t* PendingIntent.FLAG_UPDATE_CURRENT：新发和旧发的requestCode一样，则新的会覆盖旧的\n\t\t*/\n\t\tintent = new Intent(context, BActy.class);\n\t\tintent.putExtra(\"name\",\"张三\");\n\t\tpendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);\n\t\tbuilder.setContentIntent(pendingIntent);\n\n\t\tpendingIntent.getBroadcast(context,0,intent,0);\n\t\t// pendingIntent去发送广播\n\t3)自定义布局\n\t\tRemoteViews remoteViews = new RemoteViews(context.getPackageName(),R.layout.notification_item);\n\t\tremoteViews.setOnClickPendingIntent(R.id.notification_title,pendingIntent);\n\t\t// 设置内部点击\n\t\tremoteViews.setImageViewResource(R.id.notification_head,R.mipmap.ic_launcher);\n\t\tremoteViews.setTextViewText(R.id.notification_title,\"标题\");\n\t\tremoteViews.setProgressBar(R.id.notification_progressbar,100,12,false);\n\n\t\tbuilder.setContent(remoteViews);\n\t\t4)移除通知\n\t\tnotificationManager.cancel(0);\n\t\t// 移除单个\n\t\tnotificationManager.cancelAll();\n\t\t// 移除所有\n\t\t\n\n// ========================================== 通过Terminal获取SHA1 ==========================================\n\tkeytool -v -list -keystore  C:\\Users\\jmm\\Desktop\\key.keystore\n\n\n// ========================================== android:windowSoftInputMode属性 ==========================================\n【A】stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置\n【B】stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示\n【C】stateHidden：用户选择activity时，软键盘总是被隐藏\n【D】stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的\n【E】stateVisible：软键盘通常是可见的\n【F】stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态\n【G】adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示\n【H】adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间\n【I】adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分\n\n注：其中state和adjust是可以组合的，用 | 连接\n\t\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n一、通用属性\nandroid:layout_weight=\"0|1\"\n* 权重，在线性布局中，如果设置为1，则最后摆放，且占领剩余空间\n* 首先按照控件声明的尺寸进行分配，然后再将剩下的尺寸按weight分配\n* 可在父容器中设置 android:weightSum=\"2\" 来规定子控件总共的weight数量\n* 宽度 = 本身宽度 + 剩余宽度根据权重平分\n\n\n二、位置属性\n1)子控件在本控件的位置，没有layout\nandroid:padding=\"\" \n内边距\nandroid:gravity=\"\"\n子控件在本控件的位置\n\n2)本控件在父控件的位置，有layout\nandroid:layout_margin=\"\" \n外边距\n\nLinearLayout布局：\nandroid:layout_gravity=\"\"\n\nRelativeLayout布局：\n* 位置关系\nandroid:layout_below=\"@id/xx\"\n在某元素的下边\nandroid:layout_above=\"@id/xx\"\n在某元素的上边\nandroid:layout_toLeftOf=\"@id/xx\"\n在某元素的左边\nandroid:layout_toRightOf=\"@id/xx\"\n在某元素的右边\n\nandroid:layout_centerHrizontal=\"t|f\"\n水平居中（父控件中）\nandroid:layout_centerVertical=\"t|f\"\n垂直居中（父控件中）\nandroid:layout_centerInparent=\"t|f\"\n完全居中（父控件中）\n\n\n* 对齐关系\nandroid:layout_alignTop=\"@id/xx\"\n本元素的上边缘和某元素的上边缘对齐\nandroid:layout_alignLeft=\"@id/xx\"\n本元素的左边缘和某元素的左边缘对齐\nandroid:layout_alignBottom=\"@id/xx\"\n本元素的下边缘和某元素的下边缘对齐\nandroid:layout_alignRight=\"@id/xx\"\n本元素的右边缘和某元素的右边缘对齐\n\nandroid:layout_alignParentBottom=\"t|f\"\n贴紧父元素的下边缘\nandroid:layout_alignParentLeft=\"t|f\"\n贴紧父元素的左边缘\nandroid:layout_alignParentRight=\"t|f\"\n贴紧父元素的右边缘\nandroid:layout_alignParentTop=\"t|f\"\n贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing=\"t|f\"\n如果对应的兄弟元素找不到的话就以父元素做参照物\n\n三、文本框，编辑框（TextView，EditText）\n1)监听事件\neditText.addTextChangedListener(new TextWatcher(){});\n//文本改变事件\neditText.setOnFocusChangeListener(new View.OnFocusChangeListener() {});\n//焦点改变事件\n\n2)属性\nandroid:text=\"\"\n设置显示文字\nandroid:autoLink=\"\" \n设置超链接格式（一般用于TextView底部超链接）\n\nandroid:editable=\"true\"\n是否可以编辑\nandroid:password=\"true\"\n是否密码显示\nandroid:lines=\"3\"\n文本编辑框行数（显示行数）\nandroid:maxLines=\"3\"\n最大行数（数字行数）\nandroid:maxLength=\"3\"\n限制输入字数\nandroid:hint=\"asdf\"\n默认提示字\nandroid:numeric=\"integer\"\ninteger（正整数）、signed（整数）、decimal（浮点）\nandroid:phoneNumber=\"true\"\n是否数字显示，弹数字键盘\n\n\nandroid:digits=\"asdf\"\n过滤字符串\nandroid:selectAllOnFocus=\"true\"\n获取焦点时是否选中自我\nandroid:capitalize=\"cwj1987\"\n这样仅允许接受输入cwj1987，一般用于密码验证\n\nandroid:imeOptions=\"actionNext\"\n输入法选项，移动到下一个输入框\nandroid:imeOptions=\"actionDone\"\n输入法选项，关闭键盘\nandroid:singleLine=\"true\"\n是否单行显示\n\n3)密码明文密文显示\neditText.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\neditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\n\n四、按钮，图片按钮，图片（Button、ImageButton、ImageView）\n1)监听事件\nbutton.setOnClickListener(new View.OnClickListener() {});\n//点击事件\nbutton.setOnTouchListener(new View.OnTouchListener() {\n//按钮等触摸事件\npublic boolean onTouch(View view, MotionEvent motionEvent) {\nswitch (motionEvent.getAction()){\ncase MotionEvent.ACTION_DOWN:\nbreak;\n}\nreturn true;\n}\n});\n\n2)Button属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:drawableTop=\"@drawable/cal_edittext_bg\"\nandroid:drawablePadding=\"10dp\"\nandroid:onClick=\"onClick\"\n\n3)ImageButton属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:src=\"@drawable/cal_edittext_bg\"\nandroid:scaleType=\"fitXY\"\n\n4)ImageView属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:src=\"@drawable/cal_edittext_bg\"\nandroid:scaleType=\"fitXY\"\n\n* 默认：不缩放，左上角开始绘制图\n* center：不缩放，图像放在ImageView中间（用于小图片按钮）\n* centerCrop：等比缩放，图片完全覆盖ImageView\n* centerInside：等比缩放，使图片完全显示\n* fitXY：独立缩放，贴合ImageView\n\n5)差异\n* ImageButton不支持setText，而Button支持，ImageButton支持setImageURI，而Button不支持\n* ImageButton有Button的状态，但是ImageView没有\n* ImageButton拥有默认背景android:background=\"@android:drawable/btn_default\"\n* ImageButton支持9.png图片，ImageView不支持\n* 点9图片需要放在drawable-hdpi里面\n\n5.单选按钮，复选按钮，开关按钮（RadioGroup,RadioButton,CheckBox,ToggleButton）\n1)监听事件\nradioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {});\ncheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {});\ntoggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {});\n\n2)属性\nRadioGroup中的选中android:checkedButton=\"@+id/at_rb_rb1\"\nCheckBox中的选中android:checked=\"true\"\nToggleButton就相当于CheckBox\n\n6.日期控件，时间控件（DatePicker,TimePicker）\n1)监听事件\ndatePicker.init(year, month, day, new DatePicker.OnDateChangedListener() {\n@Override\npublic void onDateChanged(DatePicker datePicker, int year, int month, int day) {}\n});\ntimePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() {});\n\n2)属性\nandroid:startYear=\"2005\"\nandroid:endYear=\"2016\"\n\n3)日历类\nCalendar calendar = Calendar.getInstance();\nint year = calendar.get(Calendar.YEAR);\nint month = calendar.get(Calendar.MONTH);\nint day = calendar.get(Calendar.DAY_OF_MONTH);\n\n\n7.滚动页面（ScrollView,HorizontalScrollView）\n1)属性\nandroid:scrollbars=\"none\"\n// 设置滚动条\n\nandroid:orientation=\"vertical\"\nandroid:fillViewport=\"true\"\n注：ScrollView里面只能存在一个组件，而且是垂直摆放的\n\n\n8.进度条，拖动条，评分条（ProgressBar,SeekBar,RatingBar）\n1)监听事件\nseekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {});\nratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() {});\n\n2)ProgressBar属性\nstyle=\"@android:style/Widget.ProgressBar.Inverse\"\n转圈圈\nstyle=\"@android:style/Widget.ProgressBar.Horizontal\"\n水平样式\nandroid:max=\"100\"\n最大值\nandroid:progress=\"30\"\n进度\n\n3)SeekBar属性\nandroid:max=\"100\"\n最大值\nandroid:progress=\"30\"\n进度\nandroid:thumb=\"@mipmap/ic_launcher\"\n控制图片\n\n4)RatingBar属性\nandroid:numStars=\"5\"\n星星总数量\nandroid:rating=\"3.5\"\n默认数量\nandroid:stepSize=\"0.5\"\n最小步伐\nstyle=\"?android:attr/ratingBarStyleSmall\"\n星星的样式\n\n5)线程是滚动条滚动\n// 关注点：线程里面不能直接处理控件\nnew Thread(new Runnable() {\npublic void run() {\nfor(int i = 0;i<=100;i++){\nprogressInt = i;\ntry {\nThread.sleep(100);\n} catch (InterruptedException e) {\ne.printStackTrace();\n}\nhandler.sendEmptyMessage(0);\n}\n}\n}).start();\n\n// 用Handler处理接受的值\nprivate Handler handler = new Handler(){\npublic void handleMessage(Message msg) {\nswitch (msg.what){\ncase 0:\nprogressBar.setProgress(progressInt);\nbreak;\n}\nsuper.handleMessage(msg);\n}\n};\n\n9.网页控件（WebView）\n1)WebView设置\nWebView webView = (WebView) findViewById(R.id.tabspec1_wv_wv1);\nWebSettings webSettings = webView.getSettings();    // 获取设置\nwebSettings.setJavaScriptEnabled(true);             // 设置能执行js脚本\nwebSettings.setAllowFileAccess(true);               // 设置可以访问文件\nwebSettings.setBuiltInZoomControls(true);           // 设置支持缩放\nwebView.loadUrl(\"file:///android_asset/welcome.html\");// 加载页面（建asset文件夹，与res同级）\n\n//网页可在webView里面覆盖加载\nwebView.setWebViewClient(new WebViewClient(){\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\nview.loadUrl(url);\nreturn true;\n}\n});\n2)返回键设置\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\nif ((keyCode == KeyEvent.KEYCODE_BACK) && webView .canGoBack()) { \nwebView.goBack();\nreturn true;\n}\nreturn false;\n}\n\n3)网络权限\n<uses-permission android:name=\"android.permission.INTERNET\" />\n\n\n/**\n * ==============================以下应用适配器======================================\n */\n10.画廊、图片选择（Gallery和ImageSwitcher）\n1)监听事件\ngallery.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {});\n// gallery选择事件，一般用于画布设图片\ngallery.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n// gallery点击事件\n\n2)Gallery属性\nandroid:layout_width=\"match_parent\"\nandroid:unselectedAlpha=\"0.6\"\nandroid:spacing=\"4dp\"\n\n\n3)ImageSwitcher配置\nimageSwitcher.setFactory(new ViewSwitcher.ViewFactory() {\npublic View makeView() {\nImageView imageView = new ImageView(TestActy.this);\nimageView.setLayoutParams(new ImageSwitcher.LayoutParams(\nViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT\n));\nimageView.setScaleType(ImageView.ScaleType.FIT_XY);\nimageView.setBackgroundColor(0xff0000);\nreturn imageView;\n}\n});\n// 设置图片\nimageSwitcher.setImageResource(imgInt[i]);\n\n11.自动提示框，下拉框（AutoCompleteTextView和Spinner）\n1)监听事件\nspinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {});\nautoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n2)AutoCompleteTextView属性\nandroid:completionHint=\"123\"\n提示标题\nandroid:completionThreshold=\"2\"\n至少几个字符才会提示\nandroid:dropDownWidth=\"match_parent\"\n下拉框宽度\nandroid:dropDownHeight=\"wrap_content\"\n下拉框高度\n\n3)Spinner获值和设值\nspinner.getSelectedItemPosition();\nspinner.setSelection(i);\n\n\n12.网格（GridView）\n1)监听事件\ngridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n\n2)属性\nandroid:numColumns=\"4\"\n列数\nandroid:verticalSpacing=\"10dp\"\n垂直间隔\nandroid:horizontalSpacing=\"10dp\"\n水平间隔\n\n13.列表（ListView）\n1)监听事件\nlistView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n2)属性\n宽高需要 match_parent\nandroid:listSelector=\"@android:color/transparent\"\n选中的背景色\nandroid:divider=\"@null\"\n无分割线\nandroid:scrollbars=\"none\"\n无滚动条\nandroid:fadingEdge=\"none\"\n渐变区域的宽度\nandroid:scrollingCache=\"false\"\n滚动缓存\n\n3)ListView消息更新\n1.更新适配器里的数据源\n2.刷新适配器\nmyAdapter.notifyDataSetChanged();\n3.ListView设置动态效果\nlistView.smoothScrollToPosition(0);\n\n\n14.可展开的列表（ExpandableListView）\n1)监听事件\nexpandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {});\n\n2)适配器配置\n1.继承BaseExpandableListAdapter\n2.用二维数组或者Item嵌套Item传递数据源\n\n3)设置ExpandableListView默认显示图标为null\nexpandableListView.setGroupIndicator(null);\n\n15.页面轮换器（ViewPager）\n1)监听事件\nviewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {});\n\n2)适配器配置\n1.继承PagerAdapter\n2.重写方法\npublic void destroyItem(ViewGroup container, int position, Object object) {\ncontainer.removeView(imageViewList.get(position));\n}\npublic Object instantiateItem(ViewGroup container, int position) {\ncontainer.addView(imageViewList.get(position),0);\nreturn imageViewList.get(position);\n}\npublic int getCount() {\nreturn imageViewList.size();\n}\npublic boolean isViewFromObject(View view, Object object) {\nreturn view == object;\n}\n\n3)自定义选项卡设置页面\n设置第几个选项：viewPager.setCurrentItem(0);\n\n16.AlertDialog\n1)普通AlertDialog\ncustomDialog.setCanceledOnTouchOutside(false);\n// dialog\n(1)AlertDialog的创建\nif(alertDialog == null){\nAlertDialog.Builder builder = new AlertDialog.Builder(context);\n// 建造者模式，用Builder内部类去建造\nbuilder.setTitle(\"提示框\");\nbuilder.setIcon(R.mipmap.ic_launcher);\nbuilder.setMessage(\"确定退出吗\");\nbuilder.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {});\nbuilder.setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {});\nalertDialog = builder.create();\n\n}\nalertDialog.show();\n\n(2)AlertDialog设置返回按钮，保证页面安全\n@Override  \npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n//重写父类onKeyDown方法\nswitch (keyCode){\ncase KeyEvent.KEYCODE_BACK:\nif(alertDialog != null && alertDialog.isShowing()){\nalertDialog.dismiss();\nreturn true;\n}\nshowAlertDialog();\nbreak;\n}\nreturn true;\n}\n\n2)单选（SingleChoice）\nsetSingleChoiceItems(new String[]{\"篮球\",\"足球\",\"排球\"}, 0, new DialogInterface.OnClickListener() {})\n\n3)复选（MultiChoice）\nsetMultiChoiceItems(new String[]{\"篮球\",\"足球\",\"排球\"}, new boolean[]{false,false,false}, new DialogInterface.OnMultiChoiceClickListener() {})\n\n4)类单选（Items）\nbuilder.setItems(arr, new DialogInterface.OnClickListener() {});\n// 和单选AlertDialog的区别是没有右边的单选按钮，且会有dismiss()效果\n\n5)时间日期对话框\nnew DatePickerDialog(Context.this, new DatePickerDialog.OnDateSetListener() {},year,month,day_of_month).show();\nnew TimePickerDialog(Context.this, new TimePickerDialog.OnTimeSetListener() {},hour_of_day,minute,true).show();\n\n\n6)进度条对话框\nprogressDialog1 = new ProgressDialog(mContext);\nprogressDialog1.setTitle(\"大片\");\nprogressDialog1.setMessage(\"下载中。。。\");\nprogressDialog1.setCancelable(false);\n// 响应系统返回键的语句\nprogressDialog1.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL); // 圈圈格式ProgressDialog.STYLE_SPINNER\nprogressDialog1.setMax(100);\nprogressDialog1.show();\n\n7)绑定自定义布局或控件\nbuilder.setView(view);\n\n8)自定义Dialog\n1)自定义Dialog，继承Dialog\npublic MyCustomDialog(Context context) {\nsuper(context,R.style.MyDialog);\nsetContentView(R.layout.dialog_listviewdialog);\ntitleTV = (TextView) findViewById(R.id.listviewdialog_tv_title);\nlistViewLV = (ListView) findViewById(R.id.listviewdialog_lv_main);\nqueDingBN = (Button) findViewById(R.id.listviewdialog_bn_queding);\n}\n2)实现style样式\nstyle样式\n<style name=\"MyDialog\" parent=\"@android:style/Theme.Dialog\">\n<item name=\"android:windowFrame\">@null</item>\n<item name=\"android:windowContentOverlay\">@null</item>\n<item name=\"android:windowBackground\">@android:color/transparent</item>\n<item name=\"android:windowAnimationStyle\">@android:style/Animation.Dialog</item>\n</style>\n\n\n9)自定义PopupWindow\npopupWindow = new PopupWindow(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\npopupWindow.setFocusable(true);\n// 可获取焦点\npopupWindow.setBackgroundDrawable(new BitmapDrawable());\n// 响应系统返回键的语句\n//方法一：\npopupWindow.showAsDropDown(findViewById(R.id.main_bn_anxia));\n//方法一：\npopupWindow.showAtLocation(findViewById(R.id.main_bn_anxia), Gravity.BOTTOM,0,0);\n\n\n17.TabHost选项卡（弃用）：\n1)布局\n<TabHost xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:id=\"@android:id/tabhost\"\n>\n<LinearLayout\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:orientation=\"vertical\"\n>\n<FrameLayout\nandroid:id=\"@android:id/tabcontent\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:layout_weight=\"1\"\n></FrameLayout>\n<TabWidget\nandroid:id=\"@android:id/tabs\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:visibility=\"gone\"\n></TabWidget>\n<LinearLayout\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"60dp\"\nandroid:orientation=\"horizontal\"\nandroid:gravity=\"center_vertical\"\n>\n<ImageView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_weight=\"1\"\nandroid:src=\"@mipmap/tabhost_1\"\n/>\n</LinearLayout>\n</LinearLayout>\n</TabHost>\n2)代码\ntabHost = getTabHost();\n//需要继承TabActivity\n//添加进tabHost\ntabHost.addTab(tabHost.newTabSpec(\"11\").setIndicator(\"选项卡1\").setContent(new Intent(TabHostActy.this, MyQQActivity.class)));\ntabHost.addTab(tabHost.newTabSpec(\"22\").setIndicator(\"选项卡2\").setContent(new Intent(TabHostActy.this, TabSpec2Acty.class)));\n//设置ImageView监听事件\npublic void onClick(View view) {\nimageView1.setImageResource(R.mipmap.tabhost_1);\n\n\nswitch (view.getId()) {\ncase R.id.tabhost_tv_tv1:\nimageView1.setImageResource(R.mipmap.tabhost_1_);\ntabHost.setCurrentTab(0);\nbreak;\ncase R.id.tabhost_tv_tv2:\nimageView2.setImageResource(R.mipmap.tabhost_2_);\ntabHost.setCurrentTab(1);\nbreak;\n}\n\n\n}\n\n18.SlidingDrawer拖动框：（弃用）\n<SlidingDrawer\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"400dp\"\nandroid:layout_alignParentBottom=\"true\"\nandroid:handle=\"@+id/acty_test_iv_ic\"\nandroid:content=\"@+id/acty_test_ll_ll\"\n>\n<ImageView\nandroid:id=\"@+id/acty_test_iv_ic\"\nandroid:layout_width=\"25dp\"\nandroid:layout_height=\"17dp\"\nandroid:src=\"@mipmap/a4z\"\nandroid:scaleType=\"fitXY\"\n/>\n<LinearLayout\nandroid:id=\"@+id/acty_test_ll_ll\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\"\nandroid:background=\"#44000000\">\n</LinearLayout>\n</SlidingDrawer>\n```","source":"_posts/2016-6-5Android基础.md","raw":"---\ntitle: Android基础\ndate: 2016-6-5\ntags: [Android]\n---\n\nAndroid基础\n\n<!--more-->\n\n```\n一、Activity *******************************\n1.Activity生命周期(↖↑↗ ← → ↙↓↘)\n--↓--onCreate();\n--↓--onStart(); ←←←←←←↑\n--↓--onResume();←←←↑  ↑\n--↓-- 运行中    ↑  onRestart();\n--↓--onPause(); →→→↑  ↑\n--↓--onStop();\n→→→→→→↑\n--↓--onDestroy();\n\n* 当第一次运行时会看到主Activity，主Activity可以通过Intent到其他的Activity进行相关操作。\n* 当启动其他的Activity时当前的Activity将会停止，之前的Activity失去焦点，新的Activity会获取焦点\n* 根据栈的先进后出原则，当按Back键时，当前这个Activity销毁，前一个Activity重新恢复，调用onResume\n* 当按Home键退回到主界面时，会调用onStop，界面消失，重新进来会调用onRestart\n\n2.设置页面\n1)设置xml布局文件\nsetContentView(R.layout.xxx_xxx);\n2)写View（LayoutParams一定要和父布局的一致）\nTextView textView = new TextView(this);\nLinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);\nparams.leftMargin = 10;\nparams.rightMargin = 10;\ntextView.setLayoutParams(params);\ntextView.setTextSize(20);\ntextView.setPadding(100,20,0,20);\n// 左上右下\ntextView.setBackgroundColor(Color.parseColor(\"#D4D4D4\"));\n\n// setFrame(x - 60, y - 120, x + 60, y);\n// ImageView设置在父布局中位置\n\n3.关闭Activity\nfinish();\n\n4.页面跳转及传值\n1)单向传值：\n* 放值\nIntent intent = new Intent(TabSpec3Acty.this, TabSpec3GoActy.class);\nintent.putExtra(\"intentFlag\", 0);\nintent.putExtra(\"title\", \"修改姓名\");\nstartActivity(intent);\n* 取值\nIntent intent = getIntent();\nint intentFlag = intent.getIntExtra(\"intentFlag\",-1);\nString title = intent.getStringExtra(\"title\");\n\n2)数值回调：\n* 等值\nstartActivityForResult(intent, 0);\n// 0是requestCode\n* 放值\nIntent intent = new Intent();\nintent.putExtra(\"resultIntentFlag\",intentFlag);\nsetResult(101,intent);\n// 101是resultCode\nfinish();\n* 取值\nprotected void onActivityResult(int requestCode, int resultCode, Intent intent) {}\n\n5.Fragment\n1)Fragment\n--↓--onAttach();\n--↓--onCreate();\n--↓--onCreateView();\n--↓--onActivityCreate();\n\n--↓--onStart();\n--↓--onResume();←←←↑\n--↓-- 运行中    ↑\n--↓--onPause(); →→→↑\n--↓--onStop();\n\n--↓--onDestroyView();\n--↓--onDestroy();\n--↓--onDetache();\n\n2)主Activity继承FragmentActivity\n3)获取事务处理，进行增加、替换、或者隐藏，最后提交\nFragmentTransaction fts = getSupportFragmentManager().beginTransaction();\nfts.add(R.id.content, tab1);\n// 资源可以用FrameLayout，或者ViewPager\n// fts.replace(R.id.content, tab1);\n// 替换\nfts.commit();\n4)继承Fragment，重写onCreateView方法\npublic View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState) {\nif(view == null){\nview = inflater.inflate(R.layout.acty_test,container,false);\n}\nreturn view;\n}\n5)得到上下文\nContext context = this.getActivity();\n6)操作Activity里面的东西\n((FrameActy)getActivity()).refreshPage();\n7)当Fragment相互切换的时候，会调用onHiddenChanged\n会先调用activity的onResume\n\n\n二、Intent *******************************\n1.定义\n作为一种意图，Activity，Service和Broadcast Receiver这三种核心组件都需要使用Intent来激活\nIntent包含组件名称、动作、数据、种类、额外和标记等内容\n2.动作（setAction()和getAction()）\n1)Activity：通常使用context.startActivity();启动\n2)Broadcast：通常使用context.registerReceiver();启动\n3.数据（setData()和getData()）\n4.种类（addCategory()和removeCategory()）\n5.额外（putExtra()和getExxxxtra()）\n\n6.返回桌面\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_MAIN);\n        intent.addCategory(Intent.CATEGORY_HOME);\n        startActivity(intent);\n\n7.拨打电话\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_CALL);\n        intent.setData(Uri.parse(\"tel:\"+\"15951723371\"));\n        startActivity(intent);\n\n8.打开网页\n        Intent intent = new Intent();\n        intent.setAction(Intent.ACTION_VIEW);\n        intent.setData(Uri.parse(\"http://www.baidu.com\"));\n        startActivity(intent); \n\n三、事件处理 *******************************\n1.按钮点击事件（setOnClickListener或者setOnLongClickListener）\n        kaishi.setOnLongClickListener(new View.OnLongClickListener() {}); \nkaishi.setOnClickListener(new View.OnClickListener() {});\n\n2.物理按键按下（重写onKeyDown()，返回值就是是否执行完毕）\n1)屏蔽返回键\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\nif(keyCode == KeyEvent.KEYCODE_BACK){\nreturn true;\n}\nreturn super.onKeyDown(keyCode, event);\n}\n3.触摸事件（重写onTouch()，返回值就是是否执行完毕）\n1)触摸事件\npublic boolean onTouchEvent(MotionEvent event) {\nswitch (event.getAction()){\ncase MotionEvent.ACTION_DOWN:\ndownX = event.getRawX();\ndownY = event.getRawY();\nbreak;\ncase MotionEvent.ACTION_MOVE:\n// 监听拖动\nmoveX = event.getRawX();\nmoveY = event.getRawY();\nbreak;\ncase MotionEvent.ACTION_UP:\n// 监听滑动\nupX = event.getRawX();\nupY = event.getRawY();\nx = upX - downX;\ny = upY - downY;\n\n\nif(y < 0 && Math.abs(y) >= Math.abs(x)){\nToast.makeText(this, \"向上滑动\", Toast.LENGTH_SHORT).show();\n}else if(y > 0 && y >= Math.abs(x)){\nToast.makeText(this, \"向下滑动\", Toast.LENGTH_SHORT).show();\n}else if(x > 0 && x > Math.abs(y)){\nToast.makeText(this, \"向右滑动\", Toast.LENGTH_SHORT).show();\n}else if(x < 0 && Math.abs(x) > Math.abs(y)){\nToast.makeText(this, \"向左滑动\", Toast.LENGTH_SHORT).show();\n}\nbreak;\n}\nreturn true;\n}\n\n注：getX getRawX的区别\ngetX：是以widget左上角为坐标原点，计算的Ｘ轴坐标值\ngetRawX：是以屏幕左上角为坐标原点，计算的Ｘ轴坐标值\n\n\n四、资源访问(不能大写，字 下数 命名) *******************************\n1.字符串(string)\ntextView.setTextColor(getResources().getString(R.string.app_name));\nandroid:text=\"@string/app_name\"\n\n2.颜色(color)：颜色值通过RGB和透明度Alpha表示，可以用#RGB、#ARGB、#RRGGBB、#AARRGGBB表示\ntextView.setTextColor(getResources().getColor(R.color.red));\nandroid:textColor=\"@color/red\"\n        \n3.尺寸(dimen)\ntextView.setTextSize(getResources().getDimension(R.dimen.margin));\nandroid:textSize=\"@dimen/margin\"\n\n4.布局(layout)\n* 布局中包含其他布局：\n<include layout=\"@layout/acty_top\"/>\n\n5.数组(array)\n1)类型：\n<array>：普通类型数组\n<integer-array>：整形数组\n<string-array>：字符串数组\n2)定义：\n<integer-array name=\"asdf\">\n<item>111</item>\n<item>222</item>\n</integer-array>\n3)使用：\nint[] asdf =  getResources().getIntArray(R.array.asdf);\nString[] qwer = getResources().getStringArray(R.array.qwer);\n\n6.图片(drawable)\n1).9图片的使用\n2)虚拟图片\n(1)两张图片切换\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item android:state_pressed=\"true\" android:drawable=\"@drawable/sdf\"/>\n<item android:state_pressed=\"true\" android:drawable=\"@drawable/sdf\"/>\n</selector>\n(2)单一背景\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item>\n<shape>\n<solid android:color=\"#ffffff\" />\n<stroke android:width=\"1px\" android:color=\"#C0BFB6\" />\n<corners android:radius=\"5px\"/>\n</shape>\n</item>\n</selector>\n(3)去边\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<item android:top=\"-2px\">\n<shape>\nxxx\n</shape>\n</item>\n</layer-list>\n\n7.样式(style)\n1)样式支持继承：优先使用子样式\n2)定义：\n<style name=\"title\" parent=\"basic\">\n<item name=\"android:padding\">10px</item>\n<item name=\"android:gradientRadius\">center</item>\n</style>\n3)使用：\nstyle=\"@style/title\"\n\n8.主题(theme)\n1)定义资源color，attr，style\n<color name=\"color_gray\">#3b3b3b</color>\n<attr name=\"main_color_normal\" format=\"reference|color\"/>\n\n\n<style name=\"ThemeBlue\" parent=\"AppTheme\">\n<item name=\"main_color_normal\">@color/color_blue</item>\n</style>\n2)自定义MyApplication类，继承Application，存放curThemeId值，并生成getter，setter方法\n3)AndroidManifest文件，name实现MyApplication类，修改默认android:theme=\"@style/ThemeBlue\"\n4)修改主题\n1.设置主题，要在setContentView方法之前\nsetTheme(((MyApplication) getApplication()).getCurThemeId());\n2.向MyApplication里面放值\n((MyApplication) getApplication()).setCurThemeId(curTheme);\n3.页面重新创建\nrecreate();\n5)其他\n1.设置属性默认背景\nandroid:background=\"?main_color_normal\"\n2.拿到资源颜色转\nint color = context.getResources().getColor(colorArr[i]);\n3.拿到属性默认颜色\nint mainColor = Utils.getThemeColor(this,R.attr.main_color_normal,R.color.color_blue);\n6)工具类\n// dip转px\npublic static float dipToPx(Context context, float dipValue) {\nfloat scale = context.getResources().getDisplayMetrics().density;\nreturn dipValue * scale + 0.5f;\n}\n// px转dip\npublic static float pxToDip(Context context, float pxValue) {\nfloat scale = context.getResources().getDisplayMetrics().density;\nreturn pxValue / scale + 0.5f;\n}\n// 得到当前主题颜色\npublic static int getThemeColor(Context mContext, int attr, int defaultColor){\nTypedArray array = mContext.obtainStyledAttributes(new int[]{attr});\nreturn array.getColor(0, defaultColor);\n} \n9.原始xml(xml)\n建文件夹xml\n\n=======================================================================================================================\n==================================================分割线-高级==========================================================\n=======================================================================================================================\n\n\n五、图形图像处理 *******************************\n1.常用绘图类\n1)Paint（画笔）\npaint = new Paint();\npaint.setAntiAlias(true);\n// 去锯齿\npaint.setColor(Color.BLUE);\n// 设置画笔颜色\npaint.setStyle(Paint.Style.STROKE);\n// 描边，填充的属性为 Paint.Style.FILL\npaint.setStrokeWidth(3);\n// 路径宽度\npaint.setTextSize(18);\n// 设置字体大小\n2)Canvas（画图面板）\ncanvas.drawColor(Color.GRAY);\n// 设置画布颜色\n3)Bitmap（Bitmap类代表位图）\n4)BitmapFactory（从不同数据源来解析、创建Bitmap对象）\nBitmap bitmap = BitmapFactory.decodeFile(\"/sdcard/picture/bccd/img01.jpg\");\n// 从路径解析Bitmap\nBitmap bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher);\n// 从资源解析Bitmap\nBitmap bitmap = BitmapFactory.decodeStream(inputStream);\n// 输入流解析Bitmap\n\n\n2.绘制2D图像\n1)绘制几何图形\ncanvas.drawPoint(100, 100, paint);\n// 绘制点(坐标)\ncanvas.drawLine(10,10,40,40,paint);\n// 绘制线(开始坐标，结束坐标)\ncanvas.drawCircle(10, 10, 12, paint);\n// 绘制圆(圆心坐标，半径)\ncanvas.drawRect(10,10,50,50,paint);\n// 绘制方(左上角坐标，右下角坐标)\ncanvas.drawOval(new RectF(0,0,100,60),paint);\n// 绘制椭圆(左上角坐标，右下角坐标)\n\n2)绘制文本\ncanvas.drawText(\"张三\",10,460,paint);\n// 绘制文本(左下角起始坐标)\n\n3)绘制路径\nPath path = new Path();\n// 绘制路径\npath.moveTo(30,0);\n// 起始点\npath.lineTo(0,44);\n// 路径\npath.lineTo(60,44);\n\npath.close();  // 闭合路径，如果写了，就会闭合\ncanvas.drawPath(path,paint);\n\ncanvas.drawTextOnPath(\"xxx\",path,0,0,paint);\n// 沿着路径绘制文字\n\n4)绘制图片\ncanvas.drawBitmap(bitmap, 100, 100, paint);\n// 从指定点绘制位图(左上角坐标)\n\nRect src = new Rect(0, 0, 300, 500);\nRect dst = new Rect(50, 50, 350, 350);\ncanvas.drawBitmap(bitmap, src, dst, paint);\n// 从源位图上挖取(0,0)到(300,500)的一块图像，然后绘制到(50,50)到(350,550)区域\n\n\n3.逐帧动画\n1)写配置文件anim_frame_panda，oneshot表示循环，默认为true，\n<animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:oneshot=\"false\">\n\n<item  android:drawable=\"@mipmap/fat_po_f01\" android:duration=\"60\" />\n</animation-list>\n2)ImageView的Background属性设置为配置文件，或者在Java里面设\nandroid:background=\"@anim/anim_frame_panda\"\nimageView.setBackgroundResource(R.anim.anim_frame_boom);\n3)拿到ImageView的background，并强转为AnimationDrawable，并启动\nAnimationDrawable animationDrawable = (AnimationDrawable) imageView.getBackground();\nanimationDrawable.start();\nanimationDrawable.stop();\n\n\n4.补间动画\n1)代码显示\n(1)位移动画\nTranslateAnimation translateAnimation = new TranslateAnimation(0, 400, 0, 200);\n// x开始，x位移，y开始，y位移\ntranslateAnimation.setDuration(1000);\n// 执行动画时间\ntranslateAnimation.setFillAfter(false);\n// 是否停留在最后状态\ntranslateAnimation.setRepeatCount(1);\n// 设置重复次数，连同本身一共两次\ntranslateAnimation.setRepeatMode(Animation.REVERSE);\n// 反向执行\nimageView.startAnimation(translateAnimation);\n// 开始动画\n(2)缩放动画\nScaleAnimation scaleAnimation = new ScaleAnimation(1.0f, 2.0f, 1.0f, 2.0f);\n// x开始，x缩放，y开始，y缩放\nscaleAnimation.setDuration(800);\n// 执行动画时间\nscaleAnimation.setRepeatCount(2);\n// 设置重复次数，连同本身一共三次\nscaleAnimation.setRepeatMode(Animation.REVERSE);\n// 反向执行\nimageView.startAnimation(scaleAnimation);\n// 开始动画\n(3)旋转动画\nRotateAnimation rotateAnimation = new RotateAnimation(0, 360, 100, 100);\n// 开始度数，旋转度数，圆心\nrotateAnimation.setDuration(800);\n// 执行动画时间\n// rotateAnimation.setInterpolator(new LinearInterpolator());\n//均匀速度改变\n// rotateAnimation.setInterpolator(new AccelerateInterpolator());\n//先慢后快\n// rotateAnimation.setInterpolator(new DecelerateInterpolator());\n//先快后慢\nrotateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());\n//先慢后快\nrotateAnimation.setStartTime(100);\n//等待100ms执行\nrotateIV.startAnimation(rotateAnimation);\n// 开始动画 \n(4)透明、渐变动画\nAlphaAnimation alphaAnimation = new AlphaAnimation(0.1f, 1f);\n// 开始透明度，结束透明度\nalphaAnimation.setDuration(2000);\n// 执行动画时间\nalphaAnimation.setFillAfter(true);\n// 是否停留在最后状态\nalphaIV.startAnimation(alphaAnimation);\n\n\nalphaAnimation.setAnimationListener(new Animation.AnimationListener() {});\n// 设置监听\n2)xml显示(新建directory -> anim)\n(1)位移动画\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXDelta=\"0\"\nandroid:fromYDelta=\"0\"\nandroid:toXDelta=\"400\"\nandroid:toYDelta=\"100\"\nandroid:duration=\"1000\">\n</translate>\nTranslateAnimation translateAnimation = (TranslateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_translate);\n(2)缩放动画\n<scale xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXScale=\"1.0\"\nandroid:fromYScale=\"1.0\"\nandroid:toXScale=\"2.0\"\nandroid:toYScale=\"2.0\"\nandroid:pivotX=\"50%\"\n// 缩放圆心\nandroid:pivotY=\"50%\"\n\nandroid:duration=\"1000\">\n</scale>\nScaleAnimation scaleAnimation = (ScaleAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_scale);\n(3)旋转动画\n<rotate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"2000\"\nandroid:fillAfter=\"true\"\nandroid:fromDegrees=\"0\"\nandroid:pivotX=\"50%\"\nandroid:pivotY=\"50%\"\nandroid:toDegrees=\"720\">\n</rotate>\nRotateAnimation rotateAnimation = (RotateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_rotate);\n(4)透明、渐变动画\n<alpha xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"3500\"\nandroid:fromAlpha=\"0.1\"\nandroid:toAlpha=\"1\"\nandroid:fillAfter=\"true\">\n</alpha>\nAlphaAnimation alphaAnimation = (AlphaAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_alpha);\n3)页面平滑动画\n(1)写四个动画(anim_left_out)\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromXDelta=\"0\"\nandroid:toXDelta=\"-100%\"\nandroid:duration=\"400\">\n</translate>\n(2)onCreate方法里面写\noverridePendingTransition(R.anim.anim_right_in, R.anim.anim_left_out);\n// 动画进来的效果，动画出去的效果\n(3)finish方法里面写\noverridePendingTransition(R.anim.anim_left_in, R.anim.anim_right_out);\n\n\n六、多媒体应用 *******************************\n1.MediaPlayer播放音频 ↖↑↗ ← → ↙↓↘\n1)MediaPlayer周期\nnew()或reset() →  → setDataSource() →  → prepare() →  → start()\n如果调用create()，会直接进入准备状态\n\n2)主要方法\nmediaPlayer.reset();\n// 重置资源\nmediaPlayer.setDataSource();\n// 设置播放资源\nmediaPlayer.prepare();\n// 准备\nmediaPlayer.start();\n// 开始\nmediaPlayer.pause();\n// 暂停\nmediaPlayer.stop();\n// 停止\nmediaPlayer.release();\n// 释放资源\n\nmediaPlayer.getDuration();\n// 得到播放时间\nmediaPlayer.seekTo();\n// 从哪边开始播放\nmediaPlayer.getCurrentPosition();\n// 得到当前位置\n\n2.SoundPool播放音频\n3.VideoView播放视频\n4.用MediaPlayer和SurfaceView播放视频\n\n\n七、线程 *******************************\n1.多线程\n1)线程创建\nThread thread = new Thread(new Runnable() {});\n\n2)线程开启\nthread.start();\n\n3)线程休眠\nthread.sleep(200);\n\n2.Handle消息传递\n1)Handle作用\n(1)在子线程与主线程进行通信\n(2)在主线程中操作UI控件\n\n2)Handle创建，并实现handleMessage接受消息\nHandler handler = new Handler(){\npublic void handleMessage(Message msg) {\n}\n};\n\n3)发送消息给handle\nhandler.sendMessage(message);\n// 发送带有Message的消息\nhandler.sendEmptyMessage(0x12);\n// 发送一个空的信息\n\n4)Message\nMessage message = Message.obtain();\nmessage.arg1 = 1;\nmessage.arg2 = 1;\nmessage.obj = obj;\nmessage.what = 0x12;\n\n\n八、数据存储\n　　1.SharedPreference（xml文件）：用于存储较简单的数据\n1)定义并设权限\nSharedPreferences spf = getSharedPreferences(\"user\",Activity.MODE_PRIVATE);\n\n2)放值\nspf.edit()\nspf.putString(\"name\",\"张三\")\nspf.commit();\n\n3)取值\nString name = spf.getString(\"name\",\"\");\n\n4)清空\nspf.edit()\nspf.clear()\nspf.commit();\n\n　　2.File（文件）：用于存储大数量的数据，缺点是更新数据困难\n1)文件读取\n            FileInputStream fis = this.openFileInput(FILE_NAME);\n            byte[] buff = new byte[1024];\n            int hasRead = 0;\n            StringBuilder sb = new StringBuilder(\"\");\n            while ((hasRead = fis.read(buff)) > 0) {\n                sb.append(new String(buff, 0, hasRead, \"utf-8\"));\n            }\n\n2)文件写入\n            FileInputStream fis = this.openFileInput(FILE_NAME);\n            byte[] buff = new byte[1024];\n            int hasRead = 0;\n            StringBuilder sb = new StringBuilder(\"\");\n            while ((hasRead = fis.read(buff)) > 0) {\n                sb.append(new String(buff, 0, hasRead, \"utf-8\"));\n            }\n　\n3.SQLite（轻量级数据库）：支持基本SQL语法，是常被采用的一种数据存储方式\n1)创建连接以及创表类，继承SQLiteOpenHelper\nprivate static String dbName = \"data.db\";\nprivate static int version = 1;\npublic final static String T_USER = \"t_user\";\n\n\npublic DataDBHelper(Context context){\nsuper(context,dbName,null,version);\n}\n// 创建数据表，只在第一次运行的时候执行\n@Override\npublic void onCreate(SQLiteDatabase db) {\nStringBuffer createTableSql = new StringBuffer(\"\");\ncreateTableSql.append(\" create table if not exists \" + T_NOTE + \" \");\ncreateTableSql.append(\" ( \");\ncreateTableSql.append(\" _id integer primary key autoincrement,\");\ncreateTableSql.append(\" name varchar, \");\ncreateTableSql.append(\" ) \");\n\n\ndb.execSQL(createTableSql.toString());\n}\n// 更新数据库，新版本号比老版本号高的时候更新数据表\n@Override\npublic void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\nsqLiteDatabase.execSQL(\"drop table \" + T_NOTE);\nonCreate(sqLiteDatabase);\n}\n\n2)写增删改查类\n// 类型定义\nprivate SQLiteHelper sqliteHelper;\npublic SQLiteDBManager(Context context) {\nif (sqliteHelper == null) {\nsqliteHelper = new SQLiteHelper(context);\n}\n}\n\n// 增删改\nSQLiteDatabase db = sqliteHelper.getWritableDatabase();\ndb.execSQL(sql, new Object[]{});\ndb.close();\n\n// 查\nSQLiteDatabase db = sqliteHelper.getReadableDatabase();\nCursor cursor = db.rawQuery(sql, null);\nwhile (cursor.moveToNext()) {\ncursor.getInt(cursor.getColumnIndex(\"_id\"));\n}\ncursor.close();\ndb.close();\n\n// 包装类增、删、改\nContentValues cv = new ContentValues();\ncv.put(\"_id\", this.queryMaxId());\ndb.insert(\"table_name\", null, cv);\n\ndb.delete(\"table_name\", \" _id = ? \", new String[]{String.valueOf(item.getId())});\n\n\nContentValues cv = new ContentValues();\ncv.put(\"_id\", item.getId());\ndb.update(\"table_name\", cv, \" _id = ? \", new String[]{String.valueOf(item.getId())});\n\n\n\n\n\n\n\n九、Service *******************************\n1)生命周期\n(1)启动 (2)绑定\n-↓-onCreate();\n-↓-onCreate();\n-↓-onStartCommand();\n-↓-onBind();\n-↓-onDestroy();\n-↓-onUnBind();\n-↓-onDestroy();\n\n\n2)注册Service\n        <service android:name=\".MyService\">\n            <!-- 优先级[-1000,1000] -->\n            <intent-filter android:priority=\"900\">\n                <action android:name=\"com.suwei.someaction\" />\n            </intent-filter>\n        </service>\n\n\n3)启动Service\nIntent intent = new Intent(\"com.suwei.someaction\");\n\nstartService(intent);\nstopService(intent);\n\n4)绑定Service\n        Intent intent = new Intent(mContext, MyService.class);\n// 绑定或解绑\n        bindService(intent, conn, Service.BIND_AUTO_CREATE);\nunbindService(conn);\n\n// ServiceConnection匿名链接对象\nprivate MyService myService;\nprivate ServiceConnection conn = new ServiceConnection() {\n@Override\npublic void onServiceConnected(ComponentName componentName, IBinder iBinder) {\nMyService.MyBind bind = (MyService.MyBind) iBinder;\nmyService = bind.getMyService();\n}\n@Override\npublic void onServiceDisconnected(ComponentName componentName) {\n}\n};\n\n// Service的onBind方法每次return新的MyBind对象\n@Override\npublic IBinder onBind(Intent intent) {\nreturn new MyBind();\n}\n\npublic class MyBind extends Binder {\npublic MyService getMyService() {\nreturn MyService.this;\n}\n}\n\n\n十、Broadcast *******************************\n1.注册方法\n1)静态注册(继承BroadcastReceiver)\n<receiver android:name=\".FirstReceive\">\n<!-- 优先级[-1000,1000] -->\n<intent-filter android:priority=\"998\">\n<action android:name=\"qqq\"/>\n<category android:name=\"android.intent.category.DEFAULT\"/>\n</intent-filter>\n</receiver>\n2)动态注册(可以使用匿名对象或者类继承BroadcastReceiver)\nprivate BroadcastReceiver receiver = new BroadcastReceiver() {\n@Override\npublic void onReceive(Context context, Intent intent) {\nString action = intent.getAction();\nif (\"name\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改名字为========= \" + intent.getStringExtra(\"name\"));\n} else if (\"age\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改年龄为========= \" + intent.getStringExtra(\"age\"));\n} else if (\"sex\".equals(action)) {\nLog.e(\"收到广播\", \"=========修改性别为========= \" + intent.getStringExtra(\"sex\"));\n}\n}\n};\nIntentFilter intentFilter = new IntentFilter();\nintentFilter.addAction(\"name\");\nintentFilter.addAction(\"age\");\nintentFilter.addAction(\"sex\");\n\n// 注册receive\nregisterReceiver(receiver, intentFilter);\n// 解注册receive\nunregisterReceiver(receiver);\n\n2.分类\n1)普通广播\nIntent intent = new Intent();\nintent.setAction(\"receive_action1\");\nintent.putExtra(\"name\",\"张三\");\nsendBroadcast(intent);\n2)有序广播(等前一个接受者处理完后才会发送给后一个接受者)\nintent = new Intent();\nintent.setAction(\"receive_action2\");\nintent.putExtra(\"kkk\", \"111\");\nsendOrderedBroadcast(intent, null);\n\n// 截断广播\nabortBroadcast();\n\n// 前一个receive放其他的值\nBundle bundle = new Bundle();\nbundle.putString(\"msg\",\"第一个页面的信息\");\nsetResultExtras(bundle);\n\n// 后一个receive取值\nString msg = getResultExtras(true).getString(\"msg\");\n3.系统广播\n// 时间改变广播(只能动态注册)\nSystemChangeReceive systemChangeReceive = new SystemChangeReceive();\nIntentFilter filter = new IntentFilter();\nfilter.addAction(Intent.ACTION_TIME_TICK);\nregisterReceiver(systemChangeReceive, filter);\n\n// 网络状态广播(动态静态都可以)\nNetChangeReceive netChangeReceive = new NetChangeReceive();\nIntentFilter filter = new IntentFilter();\nfilter.addAction(\"android.net.conn.CONNECTIVITY_CHANGE\");\nregisterReceiver(netChangeReceive, filter);\n\n十一、ContentProvider *******************************\n1.ContentResolver\nCursor cursor = context.getContentResolver().query(\nuri,     // uri\nnull,   // 需要查询的字段String[]{}\nnull,   // 查询条件，可设?\nnull,   // 查询条件的参数，String[]{}\nnull      // 排序\n);\n\n\n\n\n\n// ========================================== Android体系结构（从上到下分为4层） ==========================================\n\tAndroid应用层\n\tAndroid应用框架层\n\tAndroid系统运行层\n\tLinux内核层\n\t\n\t\n// ========================================== android四大组件 ==========================================\n\tActivity\n\tService\n\tBroadcast Receiver\n\tContent Provider\n\n\t\n// ========================================== ANR（Application No Response） ==========================================\n\t程序无响应的错误信息。（5秒）\n\n\n// ========================================== OOM（out of memory） ==========================================\n\t内存溢出\n\n\n// ========================================== 像素关系 ==========================================\n\tpx: 像素\n\tdpi: 对角线像素/尺寸\n\tdp:(px*160)/dpi\n\tppi: 针对显示器 ppi=dpi\n\t\n\n// ========================================== 沉浸式状态栏 ==========================================\n\tandroid:fitsSystemWindows=\"true\"\n\tandroid:clipToPadding=\"true\"\n\n\tif(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n\t//透明状态栏\n\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);\n\t//透明导航栏\n\t}\n\tthis.requestWindowFeature(Window.FEATURE_NO_TITLE);\n\n\n\n// ========================================== 设置drawable-top图片 ==========================================\n\ttextView.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.mipmap.tdi_yi), null, null);\n\n\n\n// ========================================== 适配器 ==========================================\n\t1)ArrayAdapter（数组适配器）：只能绑定单一类型的数据\n\t\tArrayAdapter<String> adapter = new ArrayAdapter<String>(\n\t\t\tTestActy.this,\n\t\t\t// 1.上下文\n\t\t\tandroid.R.layout.simple_list_item_1,\n\t\t\t// 2.布局文件\n\t\t\tnew String[]{\"name\",\"sex\"}\n\t\t\t// 3.数据源（可以是String数组，或者是List包含String）\n\t\t);\n\t\tspinner.setAdapter(adapter);\n\n\t2)SimpleAdapter（简单适配器）：可以显示比较复杂的数据\n\t\tSimpleAdapter simpleAdapter = new SimpleAdapter(\n\t\t\tTabSpec1Acty.this,\n\t\t\t// 1.上下文\n\t\t\tsimpleList,  // 2.数据源（可以是List包含Map，或者是List包含其他）\n\t\t\tandroid.R.layout.simple_list_item_2,\n\t\t\t// 3.布局文件\n\t\t\tnew String[]{\"name\",\"sex\"},\n\t\t\t// 4.Map的键\n\t\t\tnew int[]{android.R.id.text1,android.R.id.text2}\n\t\t\t// 5.布局控件的id\n\t\t\t);\n\t\tlistView.setAdapter(simpleAdapter);\n\n\t3)BaseAdapter（自定义适配器）：\n\t\tpublic View getView(int i, View view, ViewGroup viewGroup) {\n\t\t\tViewHolder holder;\n\t\t\t\tif(view != null && view.getTag() != null){\n\t\t\t\t\tholder = (ViewHolder) view.getTag();\n\t\t\t\t}else {\n\t\t\t\t\tholder = new ViewHolder();\n\t\t\t\t\tview = LayoutInflater.from(context).inflate(R.layout.item_resource,null);\n\t\t\t\t\tholder.textView1 = (TextView) view.findViewById(R.id.item_text1);\n\t\t\t\t\tview.setTag(holder);\n\t\t\t\t}\n\n\t\t\tMap<String,Object> singleMap = list.get(i);\n\t\t\tholder.textView1.setText(singleMap.get(\"name\").toString());\n\n\t\t\treturn view;\n\t\t}\n\t\t\n\t\tprivate static class ViewHolder{\n\t\t\tTextView textView1;\n\t\t\tTextView textView2;\n\t\t} \n\n\n// ========================================== 自定义View ==========================================\n\t1)继承View\n\t2)设置画布宽高（重写onMeasure方法，默认是全屏）\n\t\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n\t\t\tsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\t\t\t// 决定画布宽高\n\t\t\tsetMeasuredDimension(700,800);\n\t\t}\n\n\t3)绘图（重写onDraw方法）\n\t4)重绘\n\t\tinvalidate();  // 主线程中\n\t\tpostInvalidate(); // 子线程中\n\n\t\t\n// ========================================== Notification通知 ==========================================\n\t1)显示系统通知\n\t\tbuilder = new Notification.Builder(context);\n\t\tbuilder.setTicker(\"提示内容\");\n\t\tbuilder.setSmallIcon(R.mipmap.ic_launcher);\n\t\t// 显示的图标\n\t\tbuilder.setContentTitle(\"标题\");\n\t\tbuilder.setContentText(\"内容\");\n\n\n\t\tnotification = builder.build();\n\t\tnotification.flags = Notification.FLAG_AUTO_CANCEL;\n\t\t// 设置为可以取消\n\t\tnotificationManager.notify(1, notification);\n\t\t// 第一个参数是notification的id，如果id一样，则覆盖\n\t2)带有页面跳转\n\t\t/**\n\t\t* 上下文，requestCode,页面跳转intent\n\t\t* PendingIntent.FLAG_CANCEL_CURRENT：新发和旧发不论requestCode是否一样，各自的值不变\n\t\t* PendingIntent.FLAG_UPDATE_CURRENT：新发和旧发的requestCode一样，则新的会覆盖旧的\n\t\t*/\n\t\tintent = new Intent(context, BActy.class);\n\t\tintent.putExtra(\"name\",\"张三\");\n\t\tpendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);\n\t\tbuilder.setContentIntent(pendingIntent);\n\n\t\tpendingIntent.getBroadcast(context,0,intent,0);\n\t\t// pendingIntent去发送广播\n\t3)自定义布局\n\t\tRemoteViews remoteViews = new RemoteViews(context.getPackageName(),R.layout.notification_item);\n\t\tremoteViews.setOnClickPendingIntent(R.id.notification_title,pendingIntent);\n\t\t// 设置内部点击\n\t\tremoteViews.setImageViewResource(R.id.notification_head,R.mipmap.ic_launcher);\n\t\tremoteViews.setTextViewText(R.id.notification_title,\"标题\");\n\t\tremoteViews.setProgressBar(R.id.notification_progressbar,100,12,false);\n\n\t\tbuilder.setContent(remoteViews);\n\t\t4)移除通知\n\t\tnotificationManager.cancel(0);\n\t\t// 移除单个\n\t\tnotificationManager.cancelAll();\n\t\t// 移除所有\n\t\t\n\n// ========================================== 通过Terminal获取SHA1 ==========================================\n\tkeytool -v -list -keystore  C:\\Users\\jmm\\Desktop\\key.keystore\n\n\n// ========================================== android:windowSoftInputMode属性 ==========================================\n【A】stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置\n【B】stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示\n【C】stateHidden：用户选择activity时，软键盘总是被隐藏\n【D】stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的\n【E】stateVisible：软键盘通常是可见的\n【F】stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态\n【G】adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示\n【H】adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间\n【I】adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分\n\n注：其中state和adjust是可以组合的，用 | 连接\n\t\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n一、通用属性\nandroid:layout_weight=\"0|1\"\n* 权重，在线性布局中，如果设置为1，则最后摆放，且占领剩余空间\n* 首先按照控件声明的尺寸进行分配，然后再将剩下的尺寸按weight分配\n* 可在父容器中设置 android:weightSum=\"2\" 来规定子控件总共的weight数量\n* 宽度 = 本身宽度 + 剩余宽度根据权重平分\n\n\n二、位置属性\n1)子控件在本控件的位置，没有layout\nandroid:padding=\"\" \n内边距\nandroid:gravity=\"\"\n子控件在本控件的位置\n\n2)本控件在父控件的位置，有layout\nandroid:layout_margin=\"\" \n外边距\n\nLinearLayout布局：\nandroid:layout_gravity=\"\"\n\nRelativeLayout布局：\n* 位置关系\nandroid:layout_below=\"@id/xx\"\n在某元素的下边\nandroid:layout_above=\"@id/xx\"\n在某元素的上边\nandroid:layout_toLeftOf=\"@id/xx\"\n在某元素的左边\nandroid:layout_toRightOf=\"@id/xx\"\n在某元素的右边\n\nandroid:layout_centerHrizontal=\"t|f\"\n水平居中（父控件中）\nandroid:layout_centerVertical=\"t|f\"\n垂直居中（父控件中）\nandroid:layout_centerInparent=\"t|f\"\n完全居中（父控件中）\n\n\n* 对齐关系\nandroid:layout_alignTop=\"@id/xx\"\n本元素的上边缘和某元素的上边缘对齐\nandroid:layout_alignLeft=\"@id/xx\"\n本元素的左边缘和某元素的左边缘对齐\nandroid:layout_alignBottom=\"@id/xx\"\n本元素的下边缘和某元素的下边缘对齐\nandroid:layout_alignRight=\"@id/xx\"\n本元素的右边缘和某元素的右边缘对齐\n\nandroid:layout_alignParentBottom=\"t|f\"\n贴紧父元素的下边缘\nandroid:layout_alignParentLeft=\"t|f\"\n贴紧父元素的左边缘\nandroid:layout_alignParentRight=\"t|f\"\n贴紧父元素的右边缘\nandroid:layout_alignParentTop=\"t|f\"\n贴紧父元素的上边缘\nandroid:layout_alignWithParentIfMissing=\"t|f\"\n如果对应的兄弟元素找不到的话就以父元素做参照物\n\n三、文本框，编辑框（TextView，EditText）\n1)监听事件\neditText.addTextChangedListener(new TextWatcher(){});\n//文本改变事件\neditText.setOnFocusChangeListener(new View.OnFocusChangeListener() {});\n//焦点改变事件\n\n2)属性\nandroid:text=\"\"\n设置显示文字\nandroid:autoLink=\"\" \n设置超链接格式（一般用于TextView底部超链接）\n\nandroid:editable=\"true\"\n是否可以编辑\nandroid:password=\"true\"\n是否密码显示\nandroid:lines=\"3\"\n文本编辑框行数（显示行数）\nandroid:maxLines=\"3\"\n最大行数（数字行数）\nandroid:maxLength=\"3\"\n限制输入字数\nandroid:hint=\"asdf\"\n默认提示字\nandroid:numeric=\"integer\"\ninteger（正整数）、signed（整数）、decimal（浮点）\nandroid:phoneNumber=\"true\"\n是否数字显示，弹数字键盘\n\n\nandroid:digits=\"asdf\"\n过滤字符串\nandroid:selectAllOnFocus=\"true\"\n获取焦点时是否选中自我\nandroid:capitalize=\"cwj1987\"\n这样仅允许接受输入cwj1987，一般用于密码验证\n\nandroid:imeOptions=\"actionNext\"\n输入法选项，移动到下一个输入框\nandroid:imeOptions=\"actionDone\"\n输入法选项，关闭键盘\nandroid:singleLine=\"true\"\n是否单行显示\n\n3)密码明文密文显示\neditText.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\neditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\n\n四、按钮，图片按钮，图片（Button、ImageButton、ImageView）\n1)监听事件\nbutton.setOnClickListener(new View.OnClickListener() {});\n//点击事件\nbutton.setOnTouchListener(new View.OnTouchListener() {\n//按钮等触摸事件\npublic boolean onTouch(View view, MotionEvent motionEvent) {\nswitch (motionEvent.getAction()){\ncase MotionEvent.ACTION_DOWN:\nbreak;\n}\nreturn true;\n}\n});\n\n2)Button属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:drawableTop=\"@drawable/cal_edittext_bg\"\nandroid:drawablePadding=\"10dp\"\nandroid:onClick=\"onClick\"\n\n3)ImageButton属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:src=\"@drawable/cal_edittext_bg\"\nandroid:scaleType=\"fitXY\"\n\n4)ImageView属性\nandroid:background=\"@drawable/cal_edittext_bg\"\nandroid:src=\"@drawable/cal_edittext_bg\"\nandroid:scaleType=\"fitXY\"\n\n* 默认：不缩放，左上角开始绘制图\n* center：不缩放，图像放在ImageView中间（用于小图片按钮）\n* centerCrop：等比缩放，图片完全覆盖ImageView\n* centerInside：等比缩放，使图片完全显示\n* fitXY：独立缩放，贴合ImageView\n\n5)差异\n* ImageButton不支持setText，而Button支持，ImageButton支持setImageURI，而Button不支持\n* ImageButton有Button的状态，但是ImageView没有\n* ImageButton拥有默认背景android:background=\"@android:drawable/btn_default\"\n* ImageButton支持9.png图片，ImageView不支持\n* 点9图片需要放在drawable-hdpi里面\n\n5.单选按钮，复选按钮，开关按钮（RadioGroup,RadioButton,CheckBox,ToggleButton）\n1)监听事件\nradioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {});\ncheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {});\ntoggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {});\n\n2)属性\nRadioGroup中的选中android:checkedButton=\"@+id/at_rb_rb1\"\nCheckBox中的选中android:checked=\"true\"\nToggleButton就相当于CheckBox\n\n6.日期控件，时间控件（DatePicker,TimePicker）\n1)监听事件\ndatePicker.init(year, month, day, new DatePicker.OnDateChangedListener() {\n@Override\npublic void onDateChanged(DatePicker datePicker, int year, int month, int day) {}\n});\ntimePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() {});\n\n2)属性\nandroid:startYear=\"2005\"\nandroid:endYear=\"2016\"\n\n3)日历类\nCalendar calendar = Calendar.getInstance();\nint year = calendar.get(Calendar.YEAR);\nint month = calendar.get(Calendar.MONTH);\nint day = calendar.get(Calendar.DAY_OF_MONTH);\n\n\n7.滚动页面（ScrollView,HorizontalScrollView）\n1)属性\nandroid:scrollbars=\"none\"\n// 设置滚动条\n\nandroid:orientation=\"vertical\"\nandroid:fillViewport=\"true\"\n注：ScrollView里面只能存在一个组件，而且是垂直摆放的\n\n\n8.进度条，拖动条，评分条（ProgressBar,SeekBar,RatingBar）\n1)监听事件\nseekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {});\nratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() {});\n\n2)ProgressBar属性\nstyle=\"@android:style/Widget.ProgressBar.Inverse\"\n转圈圈\nstyle=\"@android:style/Widget.ProgressBar.Horizontal\"\n水平样式\nandroid:max=\"100\"\n最大值\nandroid:progress=\"30\"\n进度\n\n3)SeekBar属性\nandroid:max=\"100\"\n最大值\nandroid:progress=\"30\"\n进度\nandroid:thumb=\"@mipmap/ic_launcher\"\n控制图片\n\n4)RatingBar属性\nandroid:numStars=\"5\"\n星星总数量\nandroid:rating=\"3.5\"\n默认数量\nandroid:stepSize=\"0.5\"\n最小步伐\nstyle=\"?android:attr/ratingBarStyleSmall\"\n星星的样式\n\n5)线程是滚动条滚动\n// 关注点：线程里面不能直接处理控件\nnew Thread(new Runnable() {\npublic void run() {\nfor(int i = 0;i<=100;i++){\nprogressInt = i;\ntry {\nThread.sleep(100);\n} catch (InterruptedException e) {\ne.printStackTrace();\n}\nhandler.sendEmptyMessage(0);\n}\n}\n}).start();\n\n// 用Handler处理接受的值\nprivate Handler handler = new Handler(){\npublic void handleMessage(Message msg) {\nswitch (msg.what){\ncase 0:\nprogressBar.setProgress(progressInt);\nbreak;\n}\nsuper.handleMessage(msg);\n}\n};\n\n9.网页控件（WebView）\n1)WebView设置\nWebView webView = (WebView) findViewById(R.id.tabspec1_wv_wv1);\nWebSettings webSettings = webView.getSettings();    // 获取设置\nwebSettings.setJavaScriptEnabled(true);             // 设置能执行js脚本\nwebSettings.setAllowFileAccess(true);               // 设置可以访问文件\nwebSettings.setBuiltInZoomControls(true);           // 设置支持缩放\nwebView.loadUrl(\"file:///android_asset/welcome.html\");// 加载页面（建asset文件夹，与res同级）\n\n//网页可在webView里面覆盖加载\nwebView.setWebViewClient(new WebViewClient(){\npublic boolean shouldOverrideUrlLoading(WebView view, String url) {\nview.loadUrl(url);\nreturn true;\n}\n});\n2)返回键设置\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\nif ((keyCode == KeyEvent.KEYCODE_BACK) && webView .canGoBack()) { \nwebView.goBack();\nreturn true;\n}\nreturn false;\n}\n\n3)网络权限\n<uses-permission android:name=\"android.permission.INTERNET\" />\n\n\n/**\n * ==============================以下应用适配器======================================\n */\n10.画廊、图片选择（Gallery和ImageSwitcher）\n1)监听事件\ngallery.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {});\n// gallery选择事件，一般用于画布设图片\ngallery.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n// gallery点击事件\n\n2)Gallery属性\nandroid:layout_width=\"match_parent\"\nandroid:unselectedAlpha=\"0.6\"\nandroid:spacing=\"4dp\"\n\n\n3)ImageSwitcher配置\nimageSwitcher.setFactory(new ViewSwitcher.ViewFactory() {\npublic View makeView() {\nImageView imageView = new ImageView(TestActy.this);\nimageView.setLayoutParams(new ImageSwitcher.LayoutParams(\nViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT\n));\nimageView.setScaleType(ImageView.ScaleType.FIT_XY);\nimageView.setBackgroundColor(0xff0000);\nreturn imageView;\n}\n});\n// 设置图片\nimageSwitcher.setImageResource(imgInt[i]);\n\n11.自动提示框，下拉框（AutoCompleteTextView和Spinner）\n1)监听事件\nspinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {});\nautoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n2)AutoCompleteTextView属性\nandroid:completionHint=\"123\"\n提示标题\nandroid:completionThreshold=\"2\"\n至少几个字符才会提示\nandroid:dropDownWidth=\"match_parent\"\n下拉框宽度\nandroid:dropDownHeight=\"wrap_content\"\n下拉框高度\n\n3)Spinner获值和设值\nspinner.getSelectedItemPosition();\nspinner.setSelection(i);\n\n\n12.网格（GridView）\n1)监听事件\ngridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n\n2)属性\nandroid:numColumns=\"4\"\n列数\nandroid:verticalSpacing=\"10dp\"\n垂直间隔\nandroid:horizontalSpacing=\"10dp\"\n水平间隔\n\n13.列表（ListView）\n1)监听事件\nlistView.setOnItemClickListener(new AdapterView.OnItemClickListener() {});\n\n2)属性\n宽高需要 match_parent\nandroid:listSelector=\"@android:color/transparent\"\n选中的背景色\nandroid:divider=\"@null\"\n无分割线\nandroid:scrollbars=\"none\"\n无滚动条\nandroid:fadingEdge=\"none\"\n渐变区域的宽度\nandroid:scrollingCache=\"false\"\n滚动缓存\n\n3)ListView消息更新\n1.更新适配器里的数据源\n2.刷新适配器\nmyAdapter.notifyDataSetChanged();\n3.ListView设置动态效果\nlistView.smoothScrollToPosition(0);\n\n\n14.可展开的列表（ExpandableListView）\n1)监听事件\nexpandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {});\n\n2)适配器配置\n1.继承BaseExpandableListAdapter\n2.用二维数组或者Item嵌套Item传递数据源\n\n3)设置ExpandableListView默认显示图标为null\nexpandableListView.setGroupIndicator(null);\n\n15.页面轮换器（ViewPager）\n1)监听事件\nviewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {});\n\n2)适配器配置\n1.继承PagerAdapter\n2.重写方法\npublic void destroyItem(ViewGroup container, int position, Object object) {\ncontainer.removeView(imageViewList.get(position));\n}\npublic Object instantiateItem(ViewGroup container, int position) {\ncontainer.addView(imageViewList.get(position),0);\nreturn imageViewList.get(position);\n}\npublic int getCount() {\nreturn imageViewList.size();\n}\npublic boolean isViewFromObject(View view, Object object) {\nreturn view == object;\n}\n\n3)自定义选项卡设置页面\n设置第几个选项：viewPager.setCurrentItem(0);\n\n16.AlertDialog\n1)普通AlertDialog\ncustomDialog.setCanceledOnTouchOutside(false);\n// dialog\n(1)AlertDialog的创建\nif(alertDialog == null){\nAlertDialog.Builder builder = new AlertDialog.Builder(context);\n// 建造者模式，用Builder内部类去建造\nbuilder.setTitle(\"提示框\");\nbuilder.setIcon(R.mipmap.ic_launcher);\nbuilder.setMessage(\"确定退出吗\");\nbuilder.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {});\nbuilder.setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {});\nalertDialog = builder.create();\n\n}\nalertDialog.show();\n\n(2)AlertDialog设置返回按钮，保证页面安全\n@Override  \npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n//重写父类onKeyDown方法\nswitch (keyCode){\ncase KeyEvent.KEYCODE_BACK:\nif(alertDialog != null && alertDialog.isShowing()){\nalertDialog.dismiss();\nreturn true;\n}\nshowAlertDialog();\nbreak;\n}\nreturn true;\n}\n\n2)单选（SingleChoice）\nsetSingleChoiceItems(new String[]{\"篮球\",\"足球\",\"排球\"}, 0, new DialogInterface.OnClickListener() {})\n\n3)复选（MultiChoice）\nsetMultiChoiceItems(new String[]{\"篮球\",\"足球\",\"排球\"}, new boolean[]{false,false,false}, new DialogInterface.OnMultiChoiceClickListener() {})\n\n4)类单选（Items）\nbuilder.setItems(arr, new DialogInterface.OnClickListener() {});\n// 和单选AlertDialog的区别是没有右边的单选按钮，且会有dismiss()效果\n\n5)时间日期对话框\nnew DatePickerDialog(Context.this, new DatePickerDialog.OnDateSetListener() {},year,month,day_of_month).show();\nnew TimePickerDialog(Context.this, new TimePickerDialog.OnTimeSetListener() {},hour_of_day,minute,true).show();\n\n\n6)进度条对话框\nprogressDialog1 = new ProgressDialog(mContext);\nprogressDialog1.setTitle(\"大片\");\nprogressDialog1.setMessage(\"下载中。。。\");\nprogressDialog1.setCancelable(false);\n// 响应系统返回键的语句\nprogressDialog1.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL); // 圈圈格式ProgressDialog.STYLE_SPINNER\nprogressDialog1.setMax(100);\nprogressDialog1.show();\n\n7)绑定自定义布局或控件\nbuilder.setView(view);\n\n8)自定义Dialog\n1)自定义Dialog，继承Dialog\npublic MyCustomDialog(Context context) {\nsuper(context,R.style.MyDialog);\nsetContentView(R.layout.dialog_listviewdialog);\ntitleTV = (TextView) findViewById(R.id.listviewdialog_tv_title);\nlistViewLV = (ListView) findViewById(R.id.listviewdialog_lv_main);\nqueDingBN = (Button) findViewById(R.id.listviewdialog_bn_queding);\n}\n2)实现style样式\nstyle样式\n<style name=\"MyDialog\" parent=\"@android:style/Theme.Dialog\">\n<item name=\"android:windowFrame\">@null</item>\n<item name=\"android:windowContentOverlay\">@null</item>\n<item name=\"android:windowBackground\">@android:color/transparent</item>\n<item name=\"android:windowAnimationStyle\">@android:style/Animation.Dialog</item>\n</style>\n\n\n9)自定义PopupWindow\npopupWindow = new PopupWindow(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\npopupWindow.setFocusable(true);\n// 可获取焦点\npopupWindow.setBackgroundDrawable(new BitmapDrawable());\n// 响应系统返回键的语句\n//方法一：\npopupWindow.showAsDropDown(findViewById(R.id.main_bn_anxia));\n//方法一：\npopupWindow.showAtLocation(findViewById(R.id.main_bn_anxia), Gravity.BOTTOM,0,0);\n\n\n17.TabHost选项卡（弃用）：\n1)布局\n<TabHost xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:id=\"@android:id/tabhost\"\n>\n<LinearLayout\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:orientation=\"vertical\"\n>\n<FrameLayout\nandroid:id=\"@android:id/tabcontent\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"fill_parent\"\nandroid:layout_weight=\"1\"\n></FrameLayout>\n<TabWidget\nandroid:id=\"@android:id/tabs\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:visibility=\"gone\"\n></TabWidget>\n<LinearLayout\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"60dp\"\nandroid:orientation=\"horizontal\"\nandroid:gravity=\"center_vertical\"\n>\n<ImageView\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_weight=\"1\"\nandroid:src=\"@mipmap/tabhost_1\"\n/>\n</LinearLayout>\n</LinearLayout>\n</TabHost>\n2)代码\ntabHost = getTabHost();\n//需要继承TabActivity\n//添加进tabHost\ntabHost.addTab(tabHost.newTabSpec(\"11\").setIndicator(\"选项卡1\").setContent(new Intent(TabHostActy.this, MyQQActivity.class)));\ntabHost.addTab(tabHost.newTabSpec(\"22\").setIndicator(\"选项卡2\").setContent(new Intent(TabHostActy.this, TabSpec2Acty.class)));\n//设置ImageView监听事件\npublic void onClick(View view) {\nimageView1.setImageResource(R.mipmap.tabhost_1);\n\n\nswitch (view.getId()) {\ncase R.id.tabhost_tv_tv1:\nimageView1.setImageResource(R.mipmap.tabhost_1_);\ntabHost.setCurrentTab(0);\nbreak;\ncase R.id.tabhost_tv_tv2:\nimageView2.setImageResource(R.mipmap.tabhost_2_);\ntabHost.setCurrentTab(1);\nbreak;\n}\n\n\n}\n\n18.SlidingDrawer拖动框：（弃用）\n<SlidingDrawer\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"400dp\"\nandroid:layout_alignParentBottom=\"true\"\nandroid:handle=\"@+id/acty_test_iv_ic\"\nandroid:content=\"@+id/acty_test_ll_ll\"\n>\n<ImageView\nandroid:id=\"@+id/acty_test_iv_ic\"\nandroid:layout_width=\"25dp\"\nandroid:layout_height=\"17dp\"\nandroid:src=\"@mipmap/a4z\"\nandroid:scaleType=\"fitXY\"\n/>\n<LinearLayout\nandroid:id=\"@+id/acty_test_ll_ll\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\"\nandroid:background=\"#44000000\">\n</LinearLayout>\n</SlidingDrawer>\n```","slug":"2016-6-5Android基础","published":1,"updated":"2022-06-30T16:22:26.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooeu0009nkvv23p5em4r","content":"<p>Android基础</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br><span class=\"line\">1027</span><br><span class=\"line\">1028</span><br><span class=\"line\">1029</span><br><span class=\"line\">1030</span><br><span class=\"line\">1031</span><br><span class=\"line\">1032</span><br><span class=\"line\">1033</span><br><span class=\"line\">1034</span><br><span class=\"line\">1035</span><br><span class=\"line\">1036</span><br><span class=\"line\">1037</span><br><span class=\"line\">1038</span><br><span class=\"line\">1039</span><br><span class=\"line\">1040</span><br><span class=\"line\">1041</span><br><span class=\"line\">1042</span><br><span class=\"line\">1043</span><br><span class=\"line\">1044</span><br><span class=\"line\">1045</span><br><span class=\"line\">1046</span><br><span class=\"line\">1047</span><br><span class=\"line\">1048</span><br><span class=\"line\">1049</span><br><span class=\"line\">1050</span><br><span class=\"line\">1051</span><br><span class=\"line\">1052</span><br><span class=\"line\">1053</span><br><span class=\"line\">1054</span><br><span class=\"line\">1055</span><br><span class=\"line\">1056</span><br><span class=\"line\">1057</span><br><span class=\"line\">1058</span><br><span class=\"line\">1059</span><br><span class=\"line\">1060</span><br><span class=\"line\">1061</span><br><span class=\"line\">1062</span><br><span class=\"line\">1063</span><br><span class=\"line\">1064</span><br><span class=\"line\">1065</span><br><span class=\"line\">1066</span><br><span class=\"line\">1067</span><br><span class=\"line\">1068</span><br><span class=\"line\">1069</span><br><span class=\"line\">1070</span><br><span class=\"line\">1071</span><br><span class=\"line\">1072</span><br><span class=\"line\">1073</span><br><span class=\"line\">1074</span><br><span class=\"line\">1075</span><br><span class=\"line\">1076</span><br><span class=\"line\">1077</span><br><span class=\"line\">1078</span><br><span class=\"line\">1079</span><br><span class=\"line\">1080</span><br><span class=\"line\">1081</span><br><span class=\"line\">1082</span><br><span class=\"line\">1083</span><br><span class=\"line\">1084</span><br><span class=\"line\">1085</span><br><span class=\"line\">1086</span><br><span class=\"line\">1087</span><br><span class=\"line\">1088</span><br><span class=\"line\">1089</span><br><span class=\"line\">1090</span><br><span class=\"line\">1091</span><br><span class=\"line\">1092</span><br><span class=\"line\">1093</span><br><span class=\"line\">1094</span><br><span class=\"line\">1095</span><br><span class=\"line\">1096</span><br><span class=\"line\">1097</span><br><span class=\"line\">1098</span><br><span class=\"line\">1099</span><br><span class=\"line\">1100</span><br><span class=\"line\">1101</span><br><span class=\"line\">1102</span><br><span class=\"line\">1103</span><br><span class=\"line\">1104</span><br><span class=\"line\">1105</span><br><span class=\"line\">1106</span><br><span class=\"line\">1107</span><br><span class=\"line\">1108</span><br><span class=\"line\">1109</span><br><span class=\"line\">1110</span><br><span class=\"line\">1111</span><br><span class=\"line\">1112</span><br><span class=\"line\">1113</span><br><span class=\"line\">1114</span><br><span class=\"line\">1115</span><br><span class=\"line\">1116</span><br><span class=\"line\">1117</span><br><span class=\"line\">1118</span><br><span class=\"line\">1119</span><br><span class=\"line\">1120</span><br><span class=\"line\">1121</span><br><span class=\"line\">1122</span><br><span class=\"line\">1123</span><br><span class=\"line\">1124</span><br><span class=\"line\">1125</span><br><span class=\"line\">1126</span><br><span class=\"line\">1127</span><br><span class=\"line\">1128</span><br><span class=\"line\">1129</span><br><span class=\"line\">1130</span><br><span class=\"line\">1131</span><br><span class=\"line\">1132</span><br><span class=\"line\">1133</span><br><span class=\"line\">1134</span><br><span class=\"line\">1135</span><br><span class=\"line\">1136</span><br><span class=\"line\">1137</span><br><span class=\"line\">1138</span><br><span class=\"line\">1139</span><br><span class=\"line\">1140</span><br><span class=\"line\">1141</span><br><span class=\"line\">1142</span><br><span class=\"line\">1143</span><br><span class=\"line\">1144</span><br><span class=\"line\">1145</span><br><span class=\"line\">1146</span><br><span class=\"line\">1147</span><br><span class=\"line\">1148</span><br><span class=\"line\">1149</span><br><span class=\"line\">1150</span><br><span class=\"line\">1151</span><br><span class=\"line\">1152</span><br><span class=\"line\">1153</span><br><span class=\"line\">1154</span><br><span class=\"line\">1155</span><br><span class=\"line\">1156</span><br><span class=\"line\">1157</span><br><span class=\"line\">1158</span><br><span class=\"line\">1159</span><br><span class=\"line\">1160</span><br><span class=\"line\">1161</span><br><span class=\"line\">1162</span><br><span class=\"line\">1163</span><br><span class=\"line\">1164</span><br><span class=\"line\">1165</span><br><span class=\"line\">1166</span><br><span class=\"line\">1167</span><br><span class=\"line\">1168</span><br><span class=\"line\">1169</span><br><span class=\"line\">1170</span><br><span class=\"line\">1171</span><br><span class=\"line\">1172</span><br><span class=\"line\">1173</span><br><span class=\"line\">1174</span><br><span class=\"line\">1175</span><br><span class=\"line\">1176</span><br><span class=\"line\">1177</span><br><span class=\"line\">1178</span><br><span class=\"line\">1179</span><br><span class=\"line\">1180</span><br><span class=\"line\">1181</span><br><span class=\"line\">1182</span><br><span class=\"line\">1183</span><br><span class=\"line\">1184</span><br><span class=\"line\">1185</span><br><span class=\"line\">1186</span><br><span class=\"line\">1187</span><br><span class=\"line\">1188</span><br><span class=\"line\">1189</span><br><span class=\"line\">1190</span><br><span class=\"line\">1191</span><br><span class=\"line\">1192</span><br><span class=\"line\">1193</span><br><span class=\"line\">1194</span><br><span class=\"line\">1195</span><br><span class=\"line\">1196</span><br><span class=\"line\">1197</span><br><span class=\"line\">1198</span><br><span class=\"line\">1199</span><br><span class=\"line\">1200</span><br><span class=\"line\">1201</span><br><span class=\"line\">1202</span><br><span class=\"line\">1203</span><br><span class=\"line\">1204</span><br><span class=\"line\">1205</span><br><span class=\"line\">1206</span><br><span class=\"line\">1207</span><br><span class=\"line\">1208</span><br><span class=\"line\">1209</span><br><span class=\"line\">1210</span><br><span class=\"line\">1211</span><br><span class=\"line\">1212</span><br><span class=\"line\">1213</span><br><span class=\"line\">1214</span><br><span class=\"line\">1215</span><br><span class=\"line\">1216</span><br><span class=\"line\">1217</span><br><span class=\"line\">1218</span><br><span class=\"line\">1219</span><br><span class=\"line\">1220</span><br><span class=\"line\">1221</span><br><span class=\"line\">1222</span><br><span class=\"line\">1223</span><br><span class=\"line\">1224</span><br><span class=\"line\">1225</span><br><span class=\"line\">1226</span><br><span class=\"line\">1227</span><br><span class=\"line\">1228</span><br><span class=\"line\">1229</span><br><span class=\"line\">1230</span><br><span class=\"line\">1231</span><br><span class=\"line\">1232</span><br><span class=\"line\">1233</span><br><span class=\"line\">1234</span><br><span class=\"line\">1235</span><br><span class=\"line\">1236</span><br><span class=\"line\">1237</span><br><span class=\"line\">1238</span><br><span class=\"line\">1239</span><br><span class=\"line\">1240</span><br><span class=\"line\">1241</span><br><span class=\"line\">1242</span><br><span class=\"line\">1243</span><br><span class=\"line\">1244</span><br><span class=\"line\">1245</span><br><span class=\"line\">1246</span><br><span class=\"line\">1247</span><br><span class=\"line\">1248</span><br><span class=\"line\">1249</span><br><span class=\"line\">1250</span><br><span class=\"line\">1251</span><br><span class=\"line\">1252</span><br><span class=\"line\">1253</span><br><span class=\"line\">1254</span><br><span class=\"line\">1255</span><br><span class=\"line\">1256</span><br><span class=\"line\">1257</span><br><span class=\"line\">1258</span><br><span class=\"line\">1259</span><br><span class=\"line\">1260</span><br><span class=\"line\">1261</span><br><span class=\"line\">1262</span><br><span class=\"line\">1263</span><br><span class=\"line\">1264</span><br><span class=\"line\">1265</span><br><span class=\"line\">1266</span><br><span class=\"line\">1267</span><br><span class=\"line\">1268</span><br><span class=\"line\">1269</span><br><span class=\"line\">1270</span><br><span class=\"line\">1271</span><br><span class=\"line\">1272</span><br><span class=\"line\">1273</span><br><span class=\"line\">1274</span><br><span class=\"line\">1275</span><br><span class=\"line\">1276</span><br><span class=\"line\">1277</span><br><span class=\"line\">1278</span><br><span class=\"line\">1279</span><br><span class=\"line\">1280</span><br><span class=\"line\">1281</span><br><span class=\"line\">1282</span><br><span class=\"line\">1283</span><br><span class=\"line\">1284</span><br><span class=\"line\">1285</span><br><span class=\"line\">1286</span><br><span class=\"line\">1287</span><br><span class=\"line\">1288</span><br><span class=\"line\">1289</span><br><span class=\"line\">1290</span><br><span class=\"line\">1291</span><br><span class=\"line\">1292</span><br><span class=\"line\">1293</span><br><span class=\"line\">1294</span><br><span class=\"line\">1295</span><br><span class=\"line\">1296</span><br><span class=\"line\">1297</span><br><span class=\"line\">1298</span><br><span class=\"line\">1299</span><br><span class=\"line\">1300</span><br><span class=\"line\">1301</span><br><span class=\"line\">1302</span><br><span class=\"line\">1303</span><br><span class=\"line\">1304</span><br><span class=\"line\">1305</span><br><span class=\"line\">1306</span><br><span class=\"line\">1307</span><br><span class=\"line\">1308</span><br><span class=\"line\">1309</span><br><span class=\"line\">1310</span><br><span class=\"line\">1311</span><br><span class=\"line\">1312</span><br><span class=\"line\">1313</span><br><span class=\"line\">1314</span><br><span class=\"line\">1315</span><br><span class=\"line\">1316</span><br><span class=\"line\">1317</span><br><span class=\"line\">1318</span><br><span class=\"line\">1319</span><br><span class=\"line\">1320</span><br><span class=\"line\">1321</span><br><span class=\"line\">1322</span><br><span class=\"line\">1323</span><br><span class=\"line\">1324</span><br><span class=\"line\">1325</span><br><span class=\"line\">1326</span><br><span class=\"line\">1327</span><br><span class=\"line\">1328</span><br><span class=\"line\">1329</span><br><span class=\"line\">1330</span><br><span class=\"line\">1331</span><br><span class=\"line\">1332</span><br><span class=\"line\">1333</span><br><span class=\"line\">1334</span><br><span class=\"line\">1335</span><br><span class=\"line\">1336</span><br><span class=\"line\">1337</span><br><span class=\"line\">1338</span><br><span class=\"line\">1339</span><br><span class=\"line\">1340</span><br><span class=\"line\">1341</span><br><span class=\"line\">1342</span><br><span class=\"line\">1343</span><br><span class=\"line\">1344</span><br><span class=\"line\">1345</span><br><span class=\"line\">1346</span><br><span class=\"line\">1347</span><br><span class=\"line\">1348</span><br><span class=\"line\">1349</span><br><span class=\"line\">1350</span><br><span class=\"line\">1351</span><br><span class=\"line\">1352</span><br><span class=\"line\">1353</span><br><span class=\"line\">1354</span><br><span class=\"line\">1355</span><br><span class=\"line\">1356</span><br><span class=\"line\">1357</span><br><span class=\"line\">1358</span><br><span class=\"line\">1359</span><br><span class=\"line\">1360</span><br><span class=\"line\">1361</span><br><span class=\"line\">1362</span><br><span class=\"line\">1363</span><br><span class=\"line\">1364</span><br><span class=\"line\">1365</span><br><span class=\"line\">1366</span><br><span class=\"line\">1367</span><br><span class=\"line\">1368</span><br><span class=\"line\">1369</span><br><span class=\"line\">1370</span><br><span class=\"line\">1371</span><br><span class=\"line\">1372</span><br><span class=\"line\">1373</span><br><span class=\"line\">1374</span><br><span class=\"line\">1375</span><br><span class=\"line\">1376</span><br><span class=\"line\">1377</span><br><span class=\"line\">1378</span><br><span class=\"line\">1379</span><br><span class=\"line\">1380</span><br><span class=\"line\">1381</span><br><span class=\"line\">1382</span><br><span class=\"line\">1383</span><br><span class=\"line\">1384</span><br><span class=\"line\">1385</span><br><span class=\"line\">1386</span><br><span class=\"line\">1387</span><br><span class=\"line\">1388</span><br><span class=\"line\">1389</span><br><span class=\"line\">1390</span><br><span class=\"line\">1391</span><br><span class=\"line\">1392</span><br><span class=\"line\">1393</span><br><span class=\"line\">1394</span><br><span class=\"line\">1395</span><br><span class=\"line\">1396</span><br><span class=\"line\">1397</span><br><span class=\"line\">1398</span><br><span class=\"line\">1399</span><br><span class=\"line\">1400</span><br><span class=\"line\">1401</span><br><span class=\"line\">1402</span><br><span class=\"line\">1403</span><br><span class=\"line\">1404</span><br><span class=\"line\">1405</span><br><span class=\"line\">1406</span><br><span class=\"line\">1407</span><br><span class=\"line\">1408</span><br><span class=\"line\">1409</span><br><span class=\"line\">1410</span><br><span class=\"line\">1411</span><br><span class=\"line\">1412</span><br><span class=\"line\">1413</span><br><span class=\"line\">1414</span><br><span class=\"line\">1415</span><br><span class=\"line\">1416</span><br><span class=\"line\">1417</span><br><span class=\"line\">1418</span><br><span class=\"line\">1419</span><br><span class=\"line\">1420</span><br><span class=\"line\">1421</span><br><span class=\"line\">1422</span><br><span class=\"line\">1423</span><br><span class=\"line\">1424</span><br><span class=\"line\">1425</span><br><span class=\"line\">1426</span><br><span class=\"line\">1427</span><br><span class=\"line\">1428</span><br><span class=\"line\">1429</span><br><span class=\"line\">1430</span><br><span class=\"line\">1431</span><br><span class=\"line\">1432</span><br><span class=\"line\">1433</span><br><span class=\"line\">1434</span><br><span class=\"line\">1435</span><br><span class=\"line\">1436</span><br><span class=\"line\">1437</span><br><span class=\"line\">1438</span><br><span class=\"line\">1439</span><br><span class=\"line\">1440</span><br><span class=\"line\">1441</span><br><span class=\"line\">1442</span><br><span class=\"line\">1443</span><br><span class=\"line\">1444</span><br><span class=\"line\">1445</span><br><span class=\"line\">1446</span><br><span class=\"line\">1447</span><br><span class=\"line\">1448</span><br><span class=\"line\">1449</span><br><span class=\"line\">1450</span><br><span class=\"line\">1451</span><br><span class=\"line\">1452</span><br><span class=\"line\">1453</span><br><span class=\"line\">1454</span><br><span class=\"line\">1455</span><br><span class=\"line\">1456</span><br><span class=\"line\">1457</span><br><span class=\"line\">1458</span><br><span class=\"line\">1459</span><br><span class=\"line\">1460</span><br><span class=\"line\">1461</span><br><span class=\"line\">1462</span><br><span class=\"line\">1463</span><br><span class=\"line\">1464</span><br><span class=\"line\">1465</span><br><span class=\"line\">1466</span><br><span class=\"line\">1467</span><br><span class=\"line\">1468</span><br><span class=\"line\">1469</span><br><span class=\"line\">1470</span><br><span class=\"line\">1471</span><br><span class=\"line\">1472</span><br><span class=\"line\">1473</span><br><span class=\"line\">1474</span><br><span class=\"line\">1475</span><br><span class=\"line\">1476</span><br><span class=\"line\">1477</span><br><span class=\"line\">1478</span><br><span class=\"line\">1479</span><br><span class=\"line\">1480</span><br><span class=\"line\">1481</span><br><span class=\"line\">1482</span><br><span class=\"line\">1483</span><br><span class=\"line\">1484</span><br><span class=\"line\">1485</span><br><span class=\"line\">1486</span><br><span class=\"line\">1487</span><br><span class=\"line\">1488</span><br><span class=\"line\">1489</span><br><span class=\"line\">1490</span><br><span class=\"line\">1491</span><br><span class=\"line\">1492</span><br><span class=\"line\">1493</span><br><span class=\"line\">1494</span><br><span class=\"line\">1495</span><br><span class=\"line\">1496</span><br><span class=\"line\">1497</span><br><span class=\"line\">1498</span><br><span class=\"line\">1499</span><br><span class=\"line\">1500</span><br><span class=\"line\">1501</span><br><span class=\"line\">1502</span><br><span class=\"line\">1503</span><br><span class=\"line\">1504</span><br><span class=\"line\">1505</span><br><span class=\"line\">1506</span><br><span class=\"line\">1507</span><br><span class=\"line\">1508</span><br><span class=\"line\">1509</span><br><span class=\"line\">1510</span><br><span class=\"line\">1511</span><br><span class=\"line\">1512</span><br><span class=\"line\">1513</span><br><span class=\"line\">1514</span><br><span class=\"line\">1515</span><br><span class=\"line\">1516</span><br><span class=\"line\">1517</span><br><span class=\"line\">1518</span><br><span class=\"line\">1519</span><br><span class=\"line\">1520</span><br><span class=\"line\">1521</span><br><span class=\"line\">1522</span><br><span class=\"line\">1523</span><br><span class=\"line\">1524</span><br><span class=\"line\">1525</span><br><span class=\"line\">1526</span><br><span class=\"line\">1527</span><br><span class=\"line\">1528</span><br><span class=\"line\">1529</span><br><span class=\"line\">1530</span><br><span class=\"line\">1531</span><br><span class=\"line\">1532</span><br><span class=\"line\">1533</span><br><span class=\"line\">1534</span><br><span class=\"line\">1535</span><br><span class=\"line\">1536</span><br><span class=\"line\">1537</span><br><span class=\"line\">1538</span><br><span class=\"line\">1539</span><br><span class=\"line\">1540</span><br><span class=\"line\">1541</span><br><span class=\"line\">1542</span><br><span class=\"line\">1543</span><br><span class=\"line\">1544</span><br><span class=\"line\">1545</span><br><span class=\"line\">1546</span><br><span class=\"line\">1547</span><br><span class=\"line\">1548</span><br><span class=\"line\">1549</span><br><span class=\"line\">1550</span><br><span class=\"line\">1551</span><br><span class=\"line\">1552</span><br><span class=\"line\">1553</span><br><span class=\"line\">1554</span><br><span class=\"line\">1555</span><br><span class=\"line\">1556</span><br><span class=\"line\">1557</span><br><span class=\"line\">1558</span><br><span class=\"line\">1559</span><br><span class=\"line\">1560</span><br><span class=\"line\">1561</span><br><span class=\"line\">1562</span><br><span class=\"line\">1563</span><br><span class=\"line\">1564</span><br><span class=\"line\">1565</span><br><span class=\"line\">1566</span><br><span class=\"line\">1567</span><br><span class=\"line\">1568</span><br><span class=\"line\">1569</span><br><span class=\"line\">1570</span><br><span class=\"line\">1571</span><br><span class=\"line\">1572</span><br><span class=\"line\">1573</span><br><span class=\"line\">1574</span><br><span class=\"line\">1575</span><br><span class=\"line\">1576</span><br><span class=\"line\">1577</span><br><span class=\"line\">1578</span><br><span class=\"line\">1579</span><br><span class=\"line\">1580</span><br><span class=\"line\">1581</span><br><span class=\"line\">1582</span><br><span class=\"line\">1583</span><br><span class=\"line\">1584</span><br><span class=\"line\">1585</span><br><span class=\"line\">1586</span><br><span class=\"line\">1587</span><br><span class=\"line\">1588</span><br><span class=\"line\">1589</span><br><span class=\"line\">1590</span><br><span class=\"line\">1591</span><br><span class=\"line\">1592</span><br><span class=\"line\">1593</span><br><span class=\"line\">1594</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、Activity *******************************</span><br><span class=\"line\">1.Activity生命周期(↖↑↗ ← → ↙↓↘)</span><br><span class=\"line\">--↓--onCreate();</span><br><span class=\"line\">--↓--onStart(); ←←←←←←↑</span><br><span class=\"line\">--↓--onResume();←←←↑  ↑</span><br><span class=\"line\">--↓-- 运行中    ↑  onRestart();</span><br><span class=\"line\">--↓--onPause(); →→→↑  ↑</span><br><span class=\"line\">--↓--onStop();</span><br><span class=\"line\">→→→→→→↑</span><br><span class=\"line\">--↓--onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\">* 当第一次运行时会看到主Activity，主Activity可以通过Intent到其他的Activity进行相关操作。</span><br><span class=\"line\">* 当启动其他的Activity时当前的Activity将会停止，之前的Activity失去焦点，新的Activity会获取焦点</span><br><span class=\"line\">* 根据栈的先进后出原则，当按Back键时，当前这个Activity销毁，前一个Activity重新恢复，调用onResume</span><br><span class=\"line\">* 当按Home键退回到主界面时，会调用onStop，界面消失，重新进来会调用onRestart</span><br><span class=\"line\"></span><br><span class=\"line\">2.设置页面</span><br><span class=\"line\">1)设置xml布局文件</span><br><span class=\"line\">setContentView(R.layout.xxx_xxx);</span><br><span class=\"line\">2)写View（LayoutParams一定要和父布局的一致）</span><br><span class=\"line\">TextView textView = new TextView(this);</span><br><span class=\"line\">LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">params.leftMargin = 10;</span><br><span class=\"line\">params.rightMargin = 10;</span><br><span class=\"line\">textView.setLayoutParams(params);</span><br><span class=\"line\">textView.setTextSize(20);</span><br><span class=\"line\">textView.setPadding(100,20,0,20);</span><br><span class=\"line\">// 左上右下</span><br><span class=\"line\">textView.setBackgroundColor(Color.parseColor(&quot;#D4D4D4&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">// setFrame(x - 60, y - 120, x + 60, y);</span><br><span class=\"line\">// ImageView设置在父布局中位置</span><br><span class=\"line\"></span><br><span class=\"line\">3.关闭Activity</span><br><span class=\"line\">finish();</span><br><span class=\"line\"></span><br><span class=\"line\">4.页面跳转及传值</span><br><span class=\"line\">1)单向传值：</span><br><span class=\"line\">* 放值</span><br><span class=\"line\">Intent intent = new Intent(TabSpec3Acty.this, TabSpec3GoActy.class);</span><br><span class=\"line\">intent.putExtra(&quot;intentFlag&quot;, 0);</span><br><span class=\"line\">intent.putExtra(&quot;title&quot;, &quot;修改姓名&quot;);</span><br><span class=\"line\">startActivity(intent);</span><br><span class=\"line\">* 取值</span><br><span class=\"line\">Intent intent = getIntent();</span><br><span class=\"line\">int intentFlag = intent.getIntExtra(&quot;intentFlag&quot;,-1);</span><br><span class=\"line\">String title = intent.getStringExtra(&quot;title&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)数值回调：</span><br><span class=\"line\">* 等值</span><br><span class=\"line\">startActivityForResult(intent, 0);</span><br><span class=\"line\">// 0是requestCode</span><br><span class=\"line\">* 放值</span><br><span class=\"line\">Intent intent = new Intent();</span><br><span class=\"line\">intent.putExtra(&quot;resultIntentFlag&quot;,intentFlag);</span><br><span class=\"line\">setResult(101,intent);</span><br><span class=\"line\">// 101是resultCode</span><br><span class=\"line\">finish();</span><br><span class=\"line\">* 取值</span><br><span class=\"line\">protected void onActivityResult(int requestCode, int resultCode, Intent intent) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">5.Fragment</span><br><span class=\"line\">1)Fragment</span><br><span class=\"line\">--↓--onAttach();</span><br><span class=\"line\">--↓--onCreate();</span><br><span class=\"line\">--↓--onCreateView();</span><br><span class=\"line\">--↓--onActivityCreate();</span><br><span class=\"line\"></span><br><span class=\"line\">--↓--onStart();</span><br><span class=\"line\">--↓--onResume();←←←↑</span><br><span class=\"line\">--↓-- 运行中    ↑</span><br><span class=\"line\">--↓--onPause(); →→→↑</span><br><span class=\"line\">--↓--onStop();</span><br><span class=\"line\"></span><br><span class=\"line\">--↓--onDestroyView();</span><br><span class=\"line\">--↓--onDestroy();</span><br><span class=\"line\">--↓--onDetache();</span><br><span class=\"line\"></span><br><span class=\"line\">2)主Activity继承FragmentActivity</span><br><span class=\"line\">3)获取事务处理，进行增加、替换、或者隐藏，最后提交</span><br><span class=\"line\">FragmentTransaction fts = getSupportFragmentManager().beginTransaction();</span><br><span class=\"line\">fts.add(R.id.content, tab1);</span><br><span class=\"line\">// 资源可以用FrameLayout，或者ViewPager</span><br><span class=\"line\">// fts.replace(R.id.content, tab1);</span><br><span class=\"line\">// 替换</span><br><span class=\"line\">fts.commit();</span><br><span class=\"line\">4)继承Fragment，重写onCreateView方法</span><br><span class=\"line\">public View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState) &#123;</span><br><span class=\"line\">if(view == null)&#123;</span><br><span class=\"line\">view = inflater.inflate(R.layout.acty_test,container,false);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return view;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">5)得到上下文</span><br><span class=\"line\">Context context = this.getActivity();</span><br><span class=\"line\">6)操作Activity里面的东西</span><br><span class=\"line\">((FrameActy)getActivity()).refreshPage();</span><br><span class=\"line\">7)当Fragment相互切换的时候，会调用onHiddenChanged</span><br><span class=\"line\">会先调用activity的onResume</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、Intent *******************************</span><br><span class=\"line\">1.定义</span><br><span class=\"line\">作为一种意图，Activity，Service和Broadcast Receiver这三种核心组件都需要使用Intent来激活</span><br><span class=\"line\">Intent包含组件名称、动作、数据、种类、额外和标记等内容</span><br><span class=\"line\">2.动作（setAction()和getAction()）</span><br><span class=\"line\">1)Activity：通常使用context.startActivity();启动</span><br><span class=\"line\">2)Broadcast：通常使用context.registerReceiver();启动</span><br><span class=\"line\">3.数据（setData()和getData()）</span><br><span class=\"line\">4.种类（addCategory()和removeCategory()）</span><br><span class=\"line\">5.额外（putExtra()和getExxxxtra()）</span><br><span class=\"line\"></span><br><span class=\"line\">6.返回桌面</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_MAIN);</span><br><span class=\"line\">        intent.addCategory(Intent.CATEGORY_HOME);</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">7.拨打电话</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_CALL);</span><br><span class=\"line\">        intent.setData(Uri.parse(&quot;tel:&quot;+&quot;15951723371&quot;));</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">8.打开网页</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class=\"line\">        intent.setData(Uri.parse(&quot;http://www.baidu.com&quot;));</span><br><span class=\"line\">        startActivity(intent); </span><br><span class=\"line\"></span><br><span class=\"line\">三、事件处理 *******************************</span><br><span class=\"line\">1.按钮点击事件（setOnClickListener或者setOnLongClickListener）</span><br><span class=\"line\">        kaishi.setOnLongClickListener(new View.OnLongClickListener() &#123;&#125;); </span><br><span class=\"line\">kaishi.setOnClickListener(new View.OnClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2.物理按键按下（重写onKeyDown()，返回值就是是否执行完毕）</span><br><span class=\"line\">1)屏蔽返回键</span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">if(keyCode == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return super.onKeyDown(keyCode, event);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.触摸事件（重写onTouch()，返回值就是是否执行完毕）</span><br><span class=\"line\">1)触摸事件</span><br><span class=\"line\">public boolean onTouchEvent(MotionEvent event) &#123;</span><br><span class=\"line\">switch (event.getAction())&#123;</span><br><span class=\"line\">case MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">downX = event.getRawX();</span><br><span class=\"line\">downY = event.getRawY();</span><br><span class=\"line\">break;</span><br><span class=\"line\">case MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">// 监听拖动</span><br><span class=\"line\">moveX = event.getRawX();</span><br><span class=\"line\">moveY = event.getRawY();</span><br><span class=\"line\">break;</span><br><span class=\"line\">case MotionEvent.ACTION_UP:</span><br><span class=\"line\">// 监听滑动</span><br><span class=\"line\">upX = event.getRawX();</span><br><span class=\"line\">upY = event.getRawY();</span><br><span class=\"line\">x = upX - downX;</span><br><span class=\"line\">y = upY - downY;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if(y &lt; 0 &amp;&amp; Math.abs(y) &gt;= Math.abs(x))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向上滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(y &gt; 0 &amp;&amp; y &gt;= Math.abs(x))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向下滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(x &gt; 0 &amp;&amp; x &gt; Math.abs(y))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向右滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(x &lt; 0 &amp;&amp; Math.abs(x) &gt; Math.abs(y))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向左滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">注：getX getRawX的区别</span><br><span class=\"line\">getX：是以widget左上角为坐标原点，计算的Ｘ轴坐标值</span><br><span class=\"line\">getRawX：是以屏幕左上角为坐标原点，计算的Ｘ轴坐标值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">四、资源访问(不能大写，字 下数 命名) *******************************</span><br><span class=\"line\">1.字符串(string)</span><br><span class=\"line\">textView.setTextColor(getResources().getString(R.string.app_name));</span><br><span class=\"line\">android:text=&quot;@string/app_name&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">2.颜色(color)：颜色值通过RGB和透明度Alpha表示，可以用#RGB、#ARGB、#RRGGBB、#AARRGGBB表示</span><br><span class=\"line\">textView.setTextColor(getResources().getColor(R.color.red));</span><br><span class=\"line\">android:textColor=&quot;@color/red&quot;</span><br><span class=\"line\">        </span><br><span class=\"line\">3.尺寸(dimen)</span><br><span class=\"line\">textView.setTextSize(getResources().getDimension(R.dimen.margin));</span><br><span class=\"line\">android:textSize=&quot;@dimen/margin&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4.布局(layout)</span><br><span class=\"line\">* 布局中包含其他布局：</span><br><span class=\"line\">&lt;include layout=&quot;@layout/acty_top&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">5.数组(array)</span><br><span class=\"line\">1)类型：</span><br><span class=\"line\">&lt;array&gt;：普通类型数组</span><br><span class=\"line\">&lt;integer-array&gt;：整形数组</span><br><span class=\"line\">&lt;string-array&gt;：字符串数组</span><br><span class=\"line\">2)定义：</span><br><span class=\"line\">&lt;integer-array name=&quot;asdf&quot;&gt;</span><br><span class=\"line\">&lt;item&gt;111&lt;/item&gt;</span><br><span class=\"line\">&lt;item&gt;222&lt;/item&gt;</span><br><span class=\"line\">&lt;/integer-array&gt;</span><br><span class=\"line\">3)使用：</span><br><span class=\"line\">int[] asdf =  getResources().getIntArray(R.array.asdf);</span><br><span class=\"line\">String[] qwer = getResources().getStringArray(R.array.qwer);</span><br><span class=\"line\"></span><br><span class=\"line\">6.图片(drawable)</span><br><span class=\"line\">1).9图片的使用</span><br><span class=\"line\">2)虚拟图片</span><br><span class=\"line\">(1)两张图片切换</span><br><span class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item android:state_pressed=&quot;true&quot; android:drawable=&quot;@drawable/sdf&quot;/&gt;</span><br><span class=\"line\">&lt;item android:state_pressed=&quot;true&quot; android:drawable=&quot;@drawable/sdf&quot;/&gt;</span><br><span class=\"line\">&lt;/selector&gt;</span><br><span class=\"line\">(2)单一背景</span><br><span class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item&gt;</span><br><span class=\"line\">&lt;shape&gt;</span><br><span class=\"line\">&lt;solid android:color=&quot;#ffffff&quot; /&gt;</span><br><span class=\"line\">&lt;stroke android:width=&quot;1px&quot; android:color=&quot;#C0BFB6&quot; /&gt;</span><br><span class=\"line\">&lt;corners android:radius=&quot;5px&quot;/&gt;</span><br><span class=\"line\">&lt;/shape&gt;</span><br><span class=\"line\">&lt;/item&gt;</span><br><span class=\"line\">&lt;/selector&gt;</span><br><span class=\"line\">(3)去边</span><br><span class=\"line\">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item android:top=&quot;-2px&quot;&gt;</span><br><span class=\"line\">&lt;shape&gt;</span><br><span class=\"line\">xxx</span><br><span class=\"line\">&lt;/shape&gt;</span><br><span class=\"line\">&lt;/item&gt;</span><br><span class=\"line\">&lt;/layer-list&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">7.样式(style)</span><br><span class=\"line\">1)样式支持继承：优先使用子样式</span><br><span class=\"line\">2)定义：</span><br><span class=\"line\">&lt;style name=&quot;title&quot; parent=&quot;basic&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:padding&quot;&gt;10px&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:gradientRadius&quot;&gt;center&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">3)使用：</span><br><span class=\"line\">style=&quot;@style/title&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">8.主题(theme)</span><br><span class=\"line\">1)定义资源color，attr，style</span><br><span class=\"line\">&lt;color name=&quot;color_gray&quot;&gt;#3b3b3b&lt;/color&gt;</span><br><span class=\"line\">&lt;attr name=&quot;main_color_normal&quot; format=&quot;reference|color&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;ThemeBlue&quot; parent=&quot;AppTheme&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;main_color_normal&quot;&gt;@color/color_blue&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">2)自定义MyApplication类，继承Application，存放curThemeId值，并生成getter，setter方法</span><br><span class=\"line\">3)AndroidManifest文件，name实现MyApplication类，修改默认android:theme=&quot;@style/ThemeBlue&quot;</span><br><span class=\"line\">4)修改主题</span><br><span class=\"line\">1.设置主题，要在setContentView方法之前</span><br><span class=\"line\">setTheme(((MyApplication) getApplication()).getCurThemeId());</span><br><span class=\"line\">2.向MyApplication里面放值</span><br><span class=\"line\">((MyApplication) getApplication()).setCurThemeId(curTheme);</span><br><span class=\"line\">3.页面重新创建</span><br><span class=\"line\">recreate();</span><br><span class=\"line\">5)其他</span><br><span class=\"line\">1.设置属性默认背景</span><br><span class=\"line\">android:background=&quot;?main_color_normal&quot;</span><br><span class=\"line\">2.拿到资源颜色转</span><br><span class=\"line\">int color = context.getResources().getColor(colorArr[i]);</span><br><span class=\"line\">3.拿到属性默认颜色</span><br><span class=\"line\">int mainColor = Utils.getThemeColor(this,R.attr.main_color_normal,R.color.color_blue);</span><br><span class=\"line\">6)工具类</span><br><span class=\"line\">// dip转px</span><br><span class=\"line\">public static float dipToPx(Context context, float dipValue) &#123;</span><br><span class=\"line\">float scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">return dipValue * scale + 0.5f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// px转dip</span><br><span class=\"line\">public static float pxToDip(Context context, float pxValue) &#123;</span><br><span class=\"line\">float scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">return pxValue / scale + 0.5f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 得到当前主题颜色</span><br><span class=\"line\">public static int getThemeColor(Context mContext, int attr, int defaultColor)&#123;</span><br><span class=\"line\">TypedArray array = mContext.obtainStyledAttributes(new int[]&#123;attr&#125;);</span><br><span class=\"line\">return array.getColor(0, defaultColor);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">9.原始xml(xml)</span><br><span class=\"line\">建文件夹xml</span><br><span class=\"line\"></span><br><span class=\"line\">=======================================================================================================================</span><br><span class=\"line\">==================================================分割线-高级==========================================================</span><br><span class=\"line\">=======================================================================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">五、图形图像处理 *******************************</span><br><span class=\"line\">1.常用绘图类</span><br><span class=\"line\">1)Paint（画笔）</span><br><span class=\"line\">paint = new Paint();</span><br><span class=\"line\">paint.setAntiAlias(true);</span><br><span class=\"line\">// 去锯齿</span><br><span class=\"line\">paint.setColor(Color.BLUE);</span><br><span class=\"line\">// 设置画笔颜色</span><br><span class=\"line\">paint.setStyle(Paint.Style.STROKE);</span><br><span class=\"line\">// 描边，填充的属性为 Paint.Style.FILL</span><br><span class=\"line\">paint.setStrokeWidth(3);</span><br><span class=\"line\">// 路径宽度</span><br><span class=\"line\">paint.setTextSize(18);</span><br><span class=\"line\">// 设置字体大小</span><br><span class=\"line\">2)Canvas（画图面板）</span><br><span class=\"line\">canvas.drawColor(Color.GRAY);</span><br><span class=\"line\">// 设置画布颜色</span><br><span class=\"line\">3)Bitmap（Bitmap类代表位图）</span><br><span class=\"line\">4)BitmapFactory（从不同数据源来解析、创建Bitmap对象）</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeFile(&quot;/sdcard/picture/bccd/img01.jpg&quot;);</span><br><span class=\"line\">// 从路径解析Bitmap</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher);</span><br><span class=\"line\">// 从资源解析Bitmap</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeStream(inputStream);</span><br><span class=\"line\">// 输入流解析Bitmap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.绘制2D图像</span><br><span class=\"line\">1)绘制几何图形</span><br><span class=\"line\">canvas.drawPoint(100, 100, paint);</span><br><span class=\"line\">// 绘制点(坐标)</span><br><span class=\"line\">canvas.drawLine(10,10,40,40,paint);</span><br><span class=\"line\">// 绘制线(开始坐标，结束坐标)</span><br><span class=\"line\">canvas.drawCircle(10, 10, 12, paint);</span><br><span class=\"line\">// 绘制圆(圆心坐标，半径)</span><br><span class=\"line\">canvas.drawRect(10,10,50,50,paint);</span><br><span class=\"line\">// 绘制方(左上角坐标，右下角坐标)</span><br><span class=\"line\">canvas.drawOval(new RectF(0,0,100,60),paint);</span><br><span class=\"line\">// 绘制椭圆(左上角坐标，右下角坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">2)绘制文本</span><br><span class=\"line\">canvas.drawText(&quot;张三&quot;,10,460,paint);</span><br><span class=\"line\">// 绘制文本(左下角起始坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">3)绘制路径</span><br><span class=\"line\">Path path = new Path();</span><br><span class=\"line\">// 绘制路径</span><br><span class=\"line\">path.moveTo(30,0);</span><br><span class=\"line\">// 起始点</span><br><span class=\"line\">path.lineTo(0,44);</span><br><span class=\"line\">// 路径</span><br><span class=\"line\">path.lineTo(60,44);</span><br><span class=\"line\"></span><br><span class=\"line\">path.close();  // 闭合路径，如果写了，就会闭合</span><br><span class=\"line\">canvas.drawPath(path,paint);</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.drawTextOnPath(&quot;xxx&quot;,path,0,0,paint);</span><br><span class=\"line\">// 沿着路径绘制文字</span><br><span class=\"line\"></span><br><span class=\"line\">4)绘制图片</span><br><span class=\"line\">canvas.drawBitmap(bitmap, 100, 100, paint);</span><br><span class=\"line\">// 从指定点绘制位图(左上角坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">Rect src = new Rect(0, 0, 300, 500);</span><br><span class=\"line\">Rect dst = new Rect(50, 50, 350, 350);</span><br><span class=\"line\">canvas.drawBitmap(bitmap, src, dst, paint);</span><br><span class=\"line\">// 从源位图上挖取(0,0)到(300,500)的一块图像，然后绘制到(50,50)到(350,550)区域</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.逐帧动画</span><br><span class=\"line\">1)写配置文件anim_frame_panda，oneshot表示循环，默认为true，</span><br><span class=\"line\">&lt;animation-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:oneshot=&quot;false&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;item  android:drawable=&quot;@mipmap/fat_po_f01&quot; android:duration=&quot;60&quot; /&gt;</span><br><span class=\"line\">&lt;/animation-list&gt;</span><br><span class=\"line\">2)ImageView的Background属性设置为配置文件，或者在Java里面设</span><br><span class=\"line\">android:background=&quot;@anim/anim_frame_panda&quot;</span><br><span class=\"line\">imageView.setBackgroundResource(R.anim.anim_frame_boom);</span><br><span class=\"line\">3)拿到ImageView的background，并强转为AnimationDrawable，并启动</span><br><span class=\"line\">AnimationDrawable animationDrawable = (AnimationDrawable) imageView.getBackground();</span><br><span class=\"line\">animationDrawable.start();</span><br><span class=\"line\">animationDrawable.stop();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.补间动画</span><br><span class=\"line\">1)代码显示</span><br><span class=\"line\">(1)位移动画</span><br><span class=\"line\">TranslateAnimation translateAnimation = new TranslateAnimation(0, 400, 0, 200);</span><br><span class=\"line\">// x开始，x位移，y开始，y位移</span><br><span class=\"line\">translateAnimation.setDuration(1000);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">translateAnimation.setFillAfter(false);</span><br><span class=\"line\">// 是否停留在最后状态</span><br><span class=\"line\">translateAnimation.setRepeatCount(1);</span><br><span class=\"line\">// 设置重复次数，连同本身一共两次</span><br><span class=\"line\">translateAnimation.setRepeatMode(Animation.REVERSE);</span><br><span class=\"line\">// 反向执行</span><br><span class=\"line\">imageView.startAnimation(translateAnimation);</span><br><span class=\"line\">// 开始动画</span><br><span class=\"line\">(2)缩放动画</span><br><span class=\"line\">ScaleAnimation scaleAnimation = new ScaleAnimation(1.0f, 2.0f, 1.0f, 2.0f);</span><br><span class=\"line\">// x开始，x缩放，y开始，y缩放</span><br><span class=\"line\">scaleAnimation.setDuration(800);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">scaleAnimation.setRepeatCount(2);</span><br><span class=\"line\">// 设置重复次数，连同本身一共三次</span><br><span class=\"line\">scaleAnimation.setRepeatMode(Animation.REVERSE);</span><br><span class=\"line\">// 反向执行</span><br><span class=\"line\">imageView.startAnimation(scaleAnimation);</span><br><span class=\"line\">// 开始动画</span><br><span class=\"line\">(3)旋转动画</span><br><span class=\"line\">RotateAnimation rotateAnimation = new RotateAnimation(0, 360, 100, 100);</span><br><span class=\"line\">// 开始度数，旋转度数，圆心</span><br><span class=\"line\">rotateAnimation.setDuration(800);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new LinearInterpolator());</span><br><span class=\"line\">//均匀速度改变</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new AccelerateInterpolator());</span><br><span class=\"line\">//先慢后快</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new DecelerateInterpolator());</span><br><span class=\"line\">//先快后慢</span><br><span class=\"line\">rotateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());</span><br><span class=\"line\">//先慢后快</span><br><span class=\"line\">rotateAnimation.setStartTime(100);</span><br><span class=\"line\">//等待100ms执行</span><br><span class=\"line\">rotateIV.startAnimation(rotateAnimation);</span><br><span class=\"line\">// 开始动画 </span><br><span class=\"line\">(4)透明、渐变动画</span><br><span class=\"line\">AlphaAnimation alphaAnimation = new AlphaAnimation(0.1f, 1f);</span><br><span class=\"line\">// 开始透明度，结束透明度</span><br><span class=\"line\">alphaAnimation.setDuration(2000);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">alphaAnimation.setFillAfter(true);</span><br><span class=\"line\">// 是否停留在最后状态</span><br><span class=\"line\">alphaIV.startAnimation(alphaAnimation);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">alphaAnimation.setAnimationListener(new Animation.AnimationListener() &#123;&#125;);</span><br><span class=\"line\">// 设置监听</span><br><span class=\"line\">2)xml显示(新建directory -&gt; anim)</span><br><span class=\"line\">(1)位移动画</span><br><span class=\"line\">&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXDelta=&quot;0&quot;</span><br><span class=\"line\">android:fromYDelta=&quot;0&quot;</span><br><span class=\"line\">android:toXDelta=&quot;400&quot;</span><br><span class=\"line\">android:toYDelta=&quot;100&quot;</span><br><span class=\"line\">android:duration=&quot;1000&quot;&gt;</span><br><span class=\"line\">&lt;/translate&gt;</span><br><span class=\"line\">TranslateAnimation translateAnimation = (TranslateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_translate);</span><br><span class=\"line\">(2)缩放动画</span><br><span class=\"line\">&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXScale=&quot;1.0&quot;</span><br><span class=\"line\">android:fromYScale=&quot;1.0&quot;</span><br><span class=\"line\">android:toXScale=&quot;2.0&quot;</span><br><span class=\"line\">android:toYScale=&quot;2.0&quot;</span><br><span class=\"line\">android:pivotX=&quot;50%&quot;</span><br><span class=\"line\">// 缩放圆心</span><br><span class=\"line\">android:pivotY=&quot;50%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">android:duration=&quot;1000&quot;&gt;</span><br><span class=\"line\">&lt;/scale&gt;</span><br><span class=\"line\">ScaleAnimation scaleAnimation = (ScaleAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_scale);</span><br><span class=\"line\">(3)旋转动画</span><br><span class=\"line\">&lt;rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:duration=&quot;2000&quot;</span><br><span class=\"line\">android:fillAfter=&quot;true&quot;</span><br><span class=\"line\">android:fromDegrees=&quot;0&quot;</span><br><span class=\"line\">android:pivotX=&quot;50%&quot;</span><br><span class=\"line\">android:pivotY=&quot;50%&quot;</span><br><span class=\"line\">android:toDegrees=&quot;720&quot;&gt;</span><br><span class=\"line\">&lt;/rotate&gt;</span><br><span class=\"line\">RotateAnimation rotateAnimation = (RotateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_rotate);</span><br><span class=\"line\">(4)透明、渐变动画</span><br><span class=\"line\">&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:duration=&quot;3500&quot;</span><br><span class=\"line\">android:fromAlpha=&quot;0.1&quot;</span><br><span class=\"line\">android:toAlpha=&quot;1&quot;</span><br><span class=\"line\">android:fillAfter=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;/alpha&gt;</span><br><span class=\"line\">AlphaAnimation alphaAnimation = (AlphaAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_alpha);</span><br><span class=\"line\">3)页面平滑动画</span><br><span class=\"line\">(1)写四个动画(anim_left_out)</span><br><span class=\"line\">&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXDelta=&quot;0&quot;</span><br><span class=\"line\">android:toXDelta=&quot;-100%&quot;</span><br><span class=\"line\">android:duration=&quot;400&quot;&gt;</span><br><span class=\"line\">&lt;/translate&gt;</span><br><span class=\"line\">(2)onCreate方法里面写</span><br><span class=\"line\">overridePendingTransition(R.anim.anim_right_in, R.anim.anim_left_out);</span><br><span class=\"line\">// 动画进来的效果，动画出去的效果</span><br><span class=\"line\">(3)finish方法里面写</span><br><span class=\"line\">overridePendingTransition(R.anim.anim_left_in, R.anim.anim_right_out);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">六、多媒体应用 *******************************</span><br><span class=\"line\">1.MediaPlayer播放音频 ↖↑↗ ← → ↙↓↘</span><br><span class=\"line\">1)MediaPlayer周期</span><br><span class=\"line\">new()或reset() →  → setDataSource() →  → prepare() →  → start()</span><br><span class=\"line\">如果调用create()，会直接进入准备状态</span><br><span class=\"line\"></span><br><span class=\"line\">2)主要方法</span><br><span class=\"line\">mediaPlayer.reset();</span><br><span class=\"line\">// 重置资源</span><br><span class=\"line\">mediaPlayer.setDataSource();</span><br><span class=\"line\">// 设置播放资源</span><br><span class=\"line\">mediaPlayer.prepare();</span><br><span class=\"line\">// 准备</span><br><span class=\"line\">mediaPlayer.start();</span><br><span class=\"line\">// 开始</span><br><span class=\"line\">mediaPlayer.pause();</span><br><span class=\"line\">// 暂停</span><br><span class=\"line\">mediaPlayer.stop();</span><br><span class=\"line\">// 停止</span><br><span class=\"line\">mediaPlayer.release();</span><br><span class=\"line\">// 释放资源</span><br><span class=\"line\"></span><br><span class=\"line\">mediaPlayer.getDuration();</span><br><span class=\"line\">// 得到播放时间</span><br><span class=\"line\">mediaPlayer.seekTo();</span><br><span class=\"line\">// 从哪边开始播放</span><br><span class=\"line\">mediaPlayer.getCurrentPosition();</span><br><span class=\"line\">// 得到当前位置</span><br><span class=\"line\"></span><br><span class=\"line\">2.SoundPool播放音频</span><br><span class=\"line\">3.VideoView播放视频</span><br><span class=\"line\">4.用MediaPlayer和SurfaceView播放视频</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">七、线程 *******************************</span><br><span class=\"line\">1.多线程</span><br><span class=\"line\">1)线程创建</span><br><span class=\"line\">Thread thread = new Thread(new Runnable() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)线程开启</span><br><span class=\"line\">thread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">3)线程休眠</span><br><span class=\"line\">thread.sleep(200);</span><br><span class=\"line\"></span><br><span class=\"line\">2.Handle消息传递</span><br><span class=\"line\">1)Handle作用</span><br><span class=\"line\">(1)在子线程与主线程进行通信</span><br><span class=\"line\">(2)在主线程中操作UI控件</span><br><span class=\"line\"></span><br><span class=\"line\">2)Handle创建，并实现handleMessage接受消息</span><br><span class=\"line\">Handler handler = new Handler()&#123;</span><br><span class=\"line\">public void handleMessage(Message msg) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">3)发送消息给handle</span><br><span class=\"line\">handler.sendMessage(message);</span><br><span class=\"line\">// 发送带有Message的消息</span><br><span class=\"line\">handler.sendEmptyMessage(0x12);</span><br><span class=\"line\">// 发送一个空的信息</span><br><span class=\"line\"></span><br><span class=\"line\">4)Message</span><br><span class=\"line\">Message message = Message.obtain();</span><br><span class=\"line\">message.arg1 = 1;</span><br><span class=\"line\">message.arg2 = 1;</span><br><span class=\"line\">message.obj = obj;</span><br><span class=\"line\">message.what = 0x12;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">八、数据存储</span><br><span class=\"line\">　　1.SharedPreference（xml文件）：用于存储较简单的数据</span><br><span class=\"line\">1)定义并设权限</span><br><span class=\"line\">SharedPreferences spf = getSharedPreferences(&quot;user&quot;,Activity.MODE_PRIVATE);</span><br><span class=\"line\"></span><br><span class=\"line\">2)放值</span><br><span class=\"line\">spf.edit()</span><br><span class=\"line\">spf.putString(&quot;name&quot;,&quot;张三&quot;)</span><br><span class=\"line\">spf.commit();</span><br><span class=\"line\"></span><br><span class=\"line\">3)取值</span><br><span class=\"line\">String name = spf.getString(&quot;name&quot;,&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">4)清空</span><br><span class=\"line\">spf.edit()</span><br><span class=\"line\">spf.clear()</span><br><span class=\"line\">spf.commit();</span><br><span class=\"line\"></span><br><span class=\"line\">　　2.File（文件）：用于存储大数量的数据，缺点是更新数据困难</span><br><span class=\"line\">1)文件读取</span><br><span class=\"line\">            FileInputStream fis = this.openFileInput(FILE_NAME);</span><br><span class=\"line\">            byte[] buff = new byte[1024];</span><br><span class=\"line\">            int hasRead = 0;</span><br><span class=\"line\">            StringBuilder sb = new StringBuilder(&quot;&quot;);</span><br><span class=\"line\">            while ((hasRead = fis.read(buff)) &gt; 0) &#123;</span><br><span class=\"line\">                sb.append(new String(buff, 0, hasRead, &quot;utf-8&quot;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)文件写入</span><br><span class=\"line\">            FileInputStream fis = this.openFileInput(FILE_NAME);</span><br><span class=\"line\">            byte[] buff = new byte[1024];</span><br><span class=\"line\">            int hasRead = 0;</span><br><span class=\"line\">            StringBuilder sb = new StringBuilder(&quot;&quot;);</span><br><span class=\"line\">            while ((hasRead = fis.read(buff)) &gt; 0) &#123;</span><br><span class=\"line\">                sb.append(new String(buff, 0, hasRead, &quot;utf-8&quot;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">　</span><br><span class=\"line\">3.SQLite（轻量级数据库）：支持基本SQL语法，是常被采用的一种数据存储方式</span><br><span class=\"line\">1)创建连接以及创表类，继承SQLiteOpenHelper</span><br><span class=\"line\">private static String dbName = &quot;data.db&quot;;</span><br><span class=\"line\">private static int version = 1;</span><br><span class=\"line\">public final static String T_USER = &quot;t_user&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public DataDBHelper(Context context)&#123;</span><br><span class=\"line\">super(context,dbName,null,version);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 创建数据表，只在第一次运行的时候执行</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onCreate(SQLiteDatabase db) &#123;</span><br><span class=\"line\">StringBuffer createTableSql = new StringBuffer(&quot;&quot;);</span><br><span class=\"line\">createTableSql.append(&quot; create table if not exists &quot; + T_NOTE + &quot; &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; ( &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; _id integer primary key autoincrement,&quot;);</span><br><span class=\"line\">createTableSql.append(&quot; name varchar, &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; ) &quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.execSQL(createTableSql.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 更新数据库，新版本号比老版本号高的时候更新数据表</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) &#123;</span><br><span class=\"line\">sqLiteDatabase.execSQL(&quot;drop table &quot; + T_NOTE);</span><br><span class=\"line\">onCreate(sqLiteDatabase);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)写增删改查类</span><br><span class=\"line\">// 类型定义</span><br><span class=\"line\">private SQLiteHelper sqliteHelper;</span><br><span class=\"line\">public SQLiteDBManager(Context context) &#123;</span><br><span class=\"line\">if (sqliteHelper == null) &#123;</span><br><span class=\"line\">sqliteHelper = new SQLiteHelper(context);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 增删改</span><br><span class=\"line\">SQLiteDatabase db = sqliteHelper.getWritableDatabase();</span><br><span class=\"line\">db.execSQL(sql, new Object[]&#123;&#125;);</span><br><span class=\"line\">db.close();</span><br><span class=\"line\"></span><br><span class=\"line\">// 查</span><br><span class=\"line\">SQLiteDatabase db = sqliteHelper.getReadableDatabase();</span><br><span class=\"line\">Cursor cursor = db.rawQuery(sql, null);</span><br><span class=\"line\">while (cursor.moveToNext()) &#123;</span><br><span class=\"line\">cursor.getInt(cursor.getColumnIndex(&quot;_id&quot;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cursor.close();</span><br><span class=\"line\">db.close();</span><br><span class=\"line\"></span><br><span class=\"line\">// 包装类增、删、改</span><br><span class=\"line\">ContentValues cv = new ContentValues();</span><br><span class=\"line\">cv.put(&quot;_id&quot;, this.queryMaxId());</span><br><span class=\"line\">db.insert(&quot;table_name&quot;, null, cv);</span><br><span class=\"line\"></span><br><span class=\"line\">db.delete(&quot;table_name&quot;, &quot; _id = ? &quot;, new String[]&#123;String.valueOf(item.getId())&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ContentValues cv = new ContentValues();</span><br><span class=\"line\">cv.put(&quot;_id&quot;, item.getId());</span><br><span class=\"line\">db.update(&quot;table_name&quot;, cv, &quot; _id = ? &quot;, new String[]&#123;String.valueOf(item.getId())&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">九、Service *******************************</span><br><span class=\"line\">1)生命周期</span><br><span class=\"line\">(1)启动 (2)绑定</span><br><span class=\"line\">-↓-onCreate();</span><br><span class=\"line\">-↓-onCreate();</span><br><span class=\"line\">-↓-onStartCommand();</span><br><span class=\"line\">-↓-onBind();</span><br><span class=\"line\">-↓-onDestroy();</span><br><span class=\"line\">-↓-onUnBind();</span><br><span class=\"line\">-↓-onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2)注册Service</span><br><span class=\"line\">        &lt;service android:name=&quot;.MyService&quot;&gt;</span><br><span class=\"line\">            &lt;!-- 优先级[-1000,1000] --&gt;</span><br><span class=\"line\">            &lt;intent-filter android:priority=&quot;900&quot;&gt;</span><br><span class=\"line\">                &lt;action android:name=&quot;com.suwei.someaction&quot; /&gt;</span><br><span class=\"line\">            &lt;/intent-filter&gt;</span><br><span class=\"line\">        &lt;/service&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3)启动Service</span><br><span class=\"line\">Intent intent = new Intent(&quot;com.suwei.someaction&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">startService(intent);</span><br><span class=\"line\">stopService(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">4)绑定Service</span><br><span class=\"line\">        Intent intent = new Intent(mContext, MyService.class);</span><br><span class=\"line\">// 绑定或解绑</span><br><span class=\"line\">        bindService(intent, conn, Service.BIND_AUTO_CREATE);</span><br><span class=\"line\">unbindService(conn);</span><br><span class=\"line\"></span><br><span class=\"line\">// ServiceConnection匿名链接对象</span><br><span class=\"line\">private MyService myService;</span><br><span class=\"line\">private ServiceConnection conn = new ServiceConnection() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onServiceConnected(ComponentName componentName, IBinder iBinder) &#123;</span><br><span class=\"line\">MyService.MyBind bind = (MyService.MyBind) iBinder;</span><br><span class=\"line\">myService = bind.getMyService();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onServiceDisconnected(ComponentName componentName) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// Service的onBind方法每次return新的MyBind对象</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public IBinder onBind(Intent intent) &#123;</span><br><span class=\"line\">return new MyBind();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public class MyBind extends Binder &#123;</span><br><span class=\"line\">public MyService getMyService() &#123;</span><br><span class=\"line\">return MyService.this;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">十、Broadcast *******************************</span><br><span class=\"line\">1.注册方法</span><br><span class=\"line\">1)静态注册(继承BroadcastReceiver)</span><br><span class=\"line\">&lt;receiver android:name=&quot;.FirstReceive&quot;&gt;</span><br><span class=\"line\">&lt;!-- 优先级[-1000,1000] --&gt;</span><br><span class=\"line\">&lt;intent-filter android:priority=&quot;998&quot;&gt;</span><br><span class=\"line\">&lt;action android:name=&quot;qqq&quot;/&gt;</span><br><span class=\"line\">&lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</span><br><span class=\"line\">&lt;/intent-filter&gt;</span><br><span class=\"line\">&lt;/receiver&gt;</span><br><span class=\"line\">2)动态注册(可以使用匿名对象或者类继承BroadcastReceiver)</span><br><span class=\"line\">private BroadcastReceiver receiver = new BroadcastReceiver() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onReceive(Context context, Intent intent) &#123;</span><br><span class=\"line\">String action = intent.getAction();</span><br><span class=\"line\">if (&quot;name&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改名字为========= &quot; + intent.getStringExtra(&quot;name&quot;));</span><br><span class=\"line\">&#125; else if (&quot;age&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改年龄为========= &quot; + intent.getStringExtra(&quot;age&quot;));</span><br><span class=\"line\">&#125; else if (&quot;sex&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改性别为========= &quot; + intent.getStringExtra(&quot;sex&quot;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">IntentFilter intentFilter = new IntentFilter();</span><br><span class=\"line\">intentFilter.addAction(&quot;name&quot;);</span><br><span class=\"line\">intentFilter.addAction(&quot;age&quot;);</span><br><span class=\"line\">intentFilter.addAction(&quot;sex&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 注册receive</span><br><span class=\"line\">registerReceiver(receiver, intentFilter);</span><br><span class=\"line\">// 解注册receive</span><br><span class=\"line\">unregisterReceiver(receiver);</span><br><span class=\"line\"></span><br><span class=\"line\">2.分类</span><br><span class=\"line\">1)普通广播</span><br><span class=\"line\">Intent intent = new Intent();</span><br><span class=\"line\">intent.setAction(&quot;receive_action1&quot;);</span><br><span class=\"line\">intent.putExtra(&quot;name&quot;,&quot;张三&quot;);</span><br><span class=\"line\">sendBroadcast(intent);</span><br><span class=\"line\">2)有序广播(等前一个接受者处理完后才会发送给后一个接受者)</span><br><span class=\"line\">intent = new Intent();</span><br><span class=\"line\">intent.setAction(&quot;receive_action2&quot;);</span><br><span class=\"line\">intent.putExtra(&quot;kkk&quot;, &quot;111&quot;);</span><br><span class=\"line\">sendOrderedBroadcast(intent, null);</span><br><span class=\"line\"></span><br><span class=\"line\">// 截断广播</span><br><span class=\"line\">abortBroadcast();</span><br><span class=\"line\"></span><br><span class=\"line\">// 前一个receive放其他的值</span><br><span class=\"line\">Bundle bundle = new Bundle();</span><br><span class=\"line\">bundle.putString(&quot;msg&quot;,&quot;第一个页面的信息&quot;);</span><br><span class=\"line\">setResultExtras(bundle);</span><br><span class=\"line\"></span><br><span class=\"line\">// 后一个receive取值</span><br><span class=\"line\">String msg = getResultExtras(true).getString(&quot;msg&quot;);</span><br><span class=\"line\">3.系统广播</span><br><span class=\"line\">// 时间改变广播(只能动态注册)</span><br><span class=\"line\">SystemChangeReceive systemChangeReceive = new SystemChangeReceive();</span><br><span class=\"line\">IntentFilter filter = new IntentFilter();</span><br><span class=\"line\">filter.addAction(Intent.ACTION_TIME_TICK);</span><br><span class=\"line\">registerReceiver(systemChangeReceive, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">// 网络状态广播(动态静态都可以)</span><br><span class=\"line\">NetChangeReceive netChangeReceive = new NetChangeReceive();</span><br><span class=\"line\">IntentFilter filter = new IntentFilter();</span><br><span class=\"line\">filter.addAction(&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;);</span><br><span class=\"line\">registerReceiver(netChangeReceive, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">十一、ContentProvider *******************************</span><br><span class=\"line\">1.ContentResolver</span><br><span class=\"line\">Cursor cursor = context.getContentResolver().query(</span><br><span class=\"line\">uri,     // uri</span><br><span class=\"line\">null,   // 需要查询的字段String[]&#123;&#125;</span><br><span class=\"line\">null,   // 查询条件，可设?</span><br><span class=\"line\">null,   // 查询条件的参数，String[]&#123;&#125;</span><br><span class=\"line\">null      // 排序</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== Android体系结构（从上到下分为4层） ==========================================</span><br><span class=\"line\">\tAndroid应用层</span><br><span class=\"line\">\tAndroid应用框架层</span><br><span class=\"line\">\tAndroid系统运行层</span><br><span class=\"line\">\tLinux内核层</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== android四大组件 ==========================================</span><br><span class=\"line\">\tActivity</span><br><span class=\"line\">\tService</span><br><span class=\"line\">\tBroadcast Receiver</span><br><span class=\"line\">\tContent Provider</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== ANR（Application No Response） ==========================================</span><br><span class=\"line\">\t程序无响应的错误信息。（5秒）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== OOM（out of memory） ==========================================</span><br><span class=\"line\">\t内存溢出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 像素关系 ==========================================</span><br><span class=\"line\">\tpx: 像素</span><br><span class=\"line\">\tdpi: 对角线像素/尺寸</span><br><span class=\"line\">\tdp:(px*160)/dpi</span><br><span class=\"line\">\tppi: 针对显示器 ppi=dpi</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 沉浸式状态栏 ==========================================</span><br><span class=\"line\">\tandroid:fitsSystemWindows=&quot;true&quot;</span><br><span class=\"line\">\tandroid:clipToPadding=&quot;true&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class=\"line\">\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</span><br><span class=\"line\">\t//透明状态栏</span><br><span class=\"line\">\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);</span><br><span class=\"line\">\t//透明导航栏</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tthis.requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 设置drawable-top图片 ==========================================</span><br><span class=\"line\">\ttextView.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.mipmap.tdi_yi), null, null);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 适配器 ==========================================</span><br><span class=\"line\">\t1)ArrayAdapter（数组适配器）：只能绑定单一类型的数据</span><br><span class=\"line\">\t\tArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(</span><br><span class=\"line\">\t\t\tTestActy.this,</span><br><span class=\"line\">\t\t\t// 1.上下文</span><br><span class=\"line\">\t\t\tandroid.R.layout.simple_list_item_1,</span><br><span class=\"line\">\t\t\t// 2.布局文件</span><br><span class=\"line\">\t\t\tnew String[]&#123;&quot;name&quot;,&quot;sex&quot;&#125;</span><br><span class=\"line\">\t\t\t// 3.数据源（可以是String数组，或者是List包含String）</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t\tspinner.setAdapter(adapter);</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)SimpleAdapter（简单适配器）：可以显示比较复杂的数据</span><br><span class=\"line\">\t\tSimpleAdapter simpleAdapter = new SimpleAdapter(</span><br><span class=\"line\">\t\t\tTabSpec1Acty.this,</span><br><span class=\"line\">\t\t\t// 1.上下文</span><br><span class=\"line\">\t\t\tsimpleList,  // 2.数据源（可以是List包含Map，或者是List包含其他）</span><br><span class=\"line\">\t\t\tandroid.R.layout.simple_list_item_2,</span><br><span class=\"line\">\t\t\t// 3.布局文件</span><br><span class=\"line\">\t\t\tnew String[]&#123;&quot;name&quot;,&quot;sex&quot;&#125;,</span><br><span class=\"line\">\t\t\t// 4.Map的键</span><br><span class=\"line\">\t\t\tnew int[]&#123;android.R.id.text1,android.R.id.text2&#125;</span><br><span class=\"line\">\t\t\t// 5.布局控件的id</span><br><span class=\"line\">\t\t\t);</span><br><span class=\"line\">\t\tlistView.setAdapter(simpleAdapter);</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)BaseAdapter（自定义适配器）：</span><br><span class=\"line\">\t\tpublic View getView(int i, View view, ViewGroup viewGroup) &#123;</span><br><span class=\"line\">\t\t\tViewHolder holder;</span><br><span class=\"line\">\t\t\t\tif(view != null &amp;&amp; view.getTag() != null)&#123;</span><br><span class=\"line\">\t\t\t\t\tholder = (ViewHolder) view.getTag();</span><br><span class=\"line\">\t\t\t\t&#125;else &#123;</span><br><span class=\"line\">\t\t\t\t\tholder = new ViewHolder();</span><br><span class=\"line\">\t\t\t\t\tview = LayoutInflater.from(context).inflate(R.layout.item_resource,null);</span><br><span class=\"line\">\t\t\t\t\tholder.textView1 = (TextView) view.findViewById(R.id.item_text1);</span><br><span class=\"line\">\t\t\t\t\tview.setTag(holder);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tMap&lt;String,Object&gt; singleMap = list.get(i);</span><br><span class=\"line\">\t\t\tholder.textView1.setText(singleMap.get(&quot;name&quot;).toString());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn view;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprivate static class ViewHolder&#123;</span><br><span class=\"line\">\t\t\tTextView textView1;</span><br><span class=\"line\">\t\t\tTextView textView2;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 自定义View ==========================================</span><br><span class=\"line\">\t1)继承View</span><br><span class=\"line\">\t2)设置画布宽高（重写onMeasure方法，默认是全屏）</span><br><span class=\"line\">\t\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</span><br><span class=\"line\">\t\t\tsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class=\"line\">\t\t\t// 决定画布宽高</span><br><span class=\"line\">\t\t\tsetMeasuredDimension(700,800);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)绘图（重写onDraw方法）</span><br><span class=\"line\">\t4)重绘</span><br><span class=\"line\">\t\tinvalidate();  // 主线程中</span><br><span class=\"line\">\t\tpostInvalidate(); // 子线程中</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">// ========================================== Notification通知 ==========================================</span><br><span class=\"line\">\t1)显示系统通知</span><br><span class=\"line\">\t\tbuilder = new Notification.Builder(context);</span><br><span class=\"line\">\t\tbuilder.setTicker(&quot;提示内容&quot;);</span><br><span class=\"line\">\t\tbuilder.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">\t\t// 显示的图标</span><br><span class=\"line\">\t\tbuilder.setContentTitle(&quot;标题&quot;);</span><br><span class=\"line\">\t\tbuilder.setContentText(&quot;内容&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tnotification = builder.build();</span><br><span class=\"line\">\t\tnotification.flags = Notification.FLAG_AUTO_CANCEL;</span><br><span class=\"line\">\t\t// 设置为可以取消</span><br><span class=\"line\">\t\tnotificationManager.notify(1, notification);</span><br><span class=\"line\">\t\t// 第一个参数是notification的id，如果id一样，则覆盖</span><br><span class=\"line\">\t2)带有页面跳转</span><br><span class=\"line\">\t\t/**</span><br><span class=\"line\">\t\t* 上下文，requestCode,页面跳转intent</span><br><span class=\"line\">\t\t* PendingIntent.FLAG_CANCEL_CURRENT：新发和旧发不论requestCode是否一样，各自的值不变</span><br><span class=\"line\">\t\t* PendingIntent.FLAG_UPDATE_CURRENT：新发和旧发的requestCode一样，则新的会覆盖旧的</span><br><span class=\"line\">\t\t*/</span><br><span class=\"line\">\t\tintent = new Intent(context, BActy.class);</span><br><span class=\"line\">\t\tintent.putExtra(&quot;name&quot;,&quot;张三&quot;);</span><br><span class=\"line\">\t\tpendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);</span><br><span class=\"line\">\t\tbuilder.setContentIntent(pendingIntent);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tpendingIntent.getBroadcast(context,0,intent,0);</span><br><span class=\"line\">\t\t// pendingIntent去发送广播</span><br><span class=\"line\">\t3)自定义布局</span><br><span class=\"line\">\t\tRemoteViews remoteViews = new RemoteViews(context.getPackageName(),R.layout.notification_item);</span><br><span class=\"line\">\t\tremoteViews.setOnClickPendingIntent(R.id.notification_title,pendingIntent);</span><br><span class=\"line\">\t\t// 设置内部点击</span><br><span class=\"line\">\t\tremoteViews.setImageViewResource(R.id.notification_head,R.mipmap.ic_launcher);</span><br><span class=\"line\">\t\tremoteViews.setTextViewText(R.id.notification_title,&quot;标题&quot;);</span><br><span class=\"line\">\t\tremoteViews.setProgressBar(R.id.notification_progressbar,100,12,false);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbuilder.setContent(remoteViews);</span><br><span class=\"line\">\t\t4)移除通知</span><br><span class=\"line\">\t\tnotificationManager.cancel(0);</span><br><span class=\"line\">\t\t// 移除单个</span><br><span class=\"line\">\t\tnotificationManager.cancelAll();</span><br><span class=\"line\">\t\t// 移除所有</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 通过Terminal获取SHA1 ==========================================</span><br><span class=\"line\">\tkeytool -v -list -keystore  C:\\Users\\jmm\\Desktop\\key.keystore</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== android:windowSoftInputMode属性 ==========================================</span><br><span class=\"line\">【A】stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置</span><br><span class=\"line\">【B】stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示</span><br><span class=\"line\">【C】stateHidden：用户选择activity时，软键盘总是被隐藏</span><br><span class=\"line\">【D】stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的</span><br><span class=\"line\">【E】stateVisible：软键盘通常是可见的</span><br><span class=\"line\">【F】stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态</span><br><span class=\"line\">【G】adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示</span><br><span class=\"line\">【H】adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间</span><br><span class=\"line\">【I】adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分</span><br><span class=\"line\"></span><br><span class=\"line\">注：其中state和adjust是可以组合的，用 | 连接</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">一、通用属性</span><br><span class=\"line\">android:layout_weight=&quot;0|1&quot;</span><br><span class=\"line\">* 权重，在线性布局中，如果设置为1，则最后摆放，且占领剩余空间</span><br><span class=\"line\">* 首先按照控件声明的尺寸进行分配，然后再将剩下的尺寸按weight分配</span><br><span class=\"line\">* 可在父容器中设置 android:weightSum=&quot;2&quot; 来规定子控件总共的weight数量</span><br><span class=\"line\">* 宽度 = 本身宽度 + 剩余宽度根据权重平分</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、位置属性</span><br><span class=\"line\">1)子控件在本控件的位置，没有layout</span><br><span class=\"line\">android:padding=&quot;&quot; </span><br><span class=\"line\">内边距</span><br><span class=\"line\">android:gravity=&quot;&quot;</span><br><span class=\"line\">子控件在本控件的位置</span><br><span class=\"line\"></span><br><span class=\"line\">2)本控件在父控件的位置，有layout</span><br><span class=\"line\">android:layout_margin=&quot;&quot; </span><br><span class=\"line\">外边距</span><br><span class=\"line\"></span><br><span class=\"line\">LinearLayout布局：</span><br><span class=\"line\">android:layout_gravity=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">RelativeLayout布局：</span><br><span class=\"line\">* 位置关系</span><br><span class=\"line\">android:layout_below=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的下边</span><br><span class=\"line\">android:layout_above=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的上边</span><br><span class=\"line\">android:layout_toLeftOf=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的左边</span><br><span class=\"line\">android:layout_toRightOf=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的右边</span><br><span class=\"line\"></span><br><span class=\"line\">android:layout_centerHrizontal=&quot;t|f&quot;</span><br><span class=\"line\">水平居中（父控件中）</span><br><span class=\"line\">android:layout_centerVertical=&quot;t|f&quot;</span><br><span class=\"line\">垂直居中（父控件中）</span><br><span class=\"line\">android:layout_centerInparent=&quot;t|f&quot;</span><br><span class=\"line\">完全居中（父控件中）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 对齐关系</span><br><span class=\"line\">android:layout_alignTop=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的上边缘和某元素的上边缘对齐</span><br><span class=\"line\">android:layout_alignLeft=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的左边缘和某元素的左边缘对齐</span><br><span class=\"line\">android:layout_alignBottom=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的下边缘和某元素的下边缘对齐</span><br><span class=\"line\">android:layout_alignRight=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的右边缘和某元素的右边缘对齐</span><br><span class=\"line\"></span><br><span class=\"line\">android:layout_alignParentBottom=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的下边缘</span><br><span class=\"line\">android:layout_alignParentLeft=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的左边缘</span><br><span class=\"line\">android:layout_alignParentRight=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的右边缘</span><br><span class=\"line\">android:layout_alignParentTop=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的上边缘</span><br><span class=\"line\">android:layout_alignWithParentIfMissing=&quot;t|f&quot;</span><br><span class=\"line\">如果对应的兄弟元素找不到的话就以父元素做参照物</span><br><span class=\"line\"></span><br><span class=\"line\">三、文本框，编辑框（TextView，EditText）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">editText.addTextChangedListener(new TextWatcher()&#123;&#125;);</span><br><span class=\"line\">//文本改变事件</span><br><span class=\"line\">editText.setOnFocusChangeListener(new View.OnFocusChangeListener() &#123;&#125;);</span><br><span class=\"line\">//焦点改变事件</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:text=&quot;&quot;</span><br><span class=\"line\">设置显示文字</span><br><span class=\"line\">android:autoLink=&quot;&quot; </span><br><span class=\"line\">设置超链接格式（一般用于TextView底部超链接）</span><br><span class=\"line\"></span><br><span class=\"line\">android:editable=&quot;true&quot;</span><br><span class=\"line\">是否可以编辑</span><br><span class=\"line\">android:password=&quot;true&quot;</span><br><span class=\"line\">是否密码显示</span><br><span class=\"line\">android:lines=&quot;3&quot;</span><br><span class=\"line\">文本编辑框行数（显示行数）</span><br><span class=\"line\">android:maxLines=&quot;3&quot;</span><br><span class=\"line\">最大行数（数字行数）</span><br><span class=\"line\">android:maxLength=&quot;3&quot;</span><br><span class=\"line\">限制输入字数</span><br><span class=\"line\">android:hint=&quot;asdf&quot;</span><br><span class=\"line\">默认提示字</span><br><span class=\"line\">android:numeric=&quot;integer&quot;</span><br><span class=\"line\">integer（正整数）、signed（整数）、decimal（浮点）</span><br><span class=\"line\">android:phoneNumber=&quot;true&quot;</span><br><span class=\"line\">是否数字显示，弹数字键盘</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">android:digits=&quot;asdf&quot;</span><br><span class=\"line\">过滤字符串</span><br><span class=\"line\">android:selectAllOnFocus=&quot;true&quot;</span><br><span class=\"line\">获取焦点时是否选中自我</span><br><span class=\"line\">android:capitalize=&quot;cwj1987&quot;</span><br><span class=\"line\">这样仅允许接受输入cwj1987，一般用于密码验证</span><br><span class=\"line\"></span><br><span class=\"line\">android:imeOptions=&quot;actionNext&quot;</span><br><span class=\"line\">输入法选项，移动到下一个输入框</span><br><span class=\"line\">android:imeOptions=&quot;actionDone&quot;</span><br><span class=\"line\">输入法选项，关闭键盘</span><br><span class=\"line\">android:singleLine=&quot;true&quot;</span><br><span class=\"line\">是否单行显示</span><br><span class=\"line\"></span><br><span class=\"line\">3)密码明文密文显示</span><br><span class=\"line\">editText.setTransformationMethod(HideReturnsTransformationMethod.getInstance());</span><br><span class=\"line\">editText.setTransformationMethod(PasswordTransformationMethod.getInstance());</span><br><span class=\"line\"></span><br><span class=\"line\">四、按钮，图片按钮，图片（Button、ImageButton、ImageView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">button.setOnClickListener(new View.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">//点击事件</span><br><span class=\"line\">button.setOnTouchListener(new View.OnTouchListener() &#123;</span><br><span class=\"line\">//按钮等触摸事件</span><br><span class=\"line\">public boolean onTouch(View view, MotionEvent motionEvent) &#123;</span><br><span class=\"line\">switch (motionEvent.getAction())&#123;</span><br><span class=\"line\">case MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)Button属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:drawableTop=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:drawablePadding=&quot;10dp&quot;</span><br><span class=\"line\">android:onClick=&quot;onClick&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3)ImageButton属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:src=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4)ImageView属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:src=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">* 默认：不缩放，左上角开始绘制图</span><br><span class=\"line\">* center：不缩放，图像放在ImageView中间（用于小图片按钮）</span><br><span class=\"line\">* centerCrop：等比缩放，图片完全覆盖ImageView</span><br><span class=\"line\">* centerInside：等比缩放，使图片完全显示</span><br><span class=\"line\">* fitXY：独立缩放，贴合ImageView</span><br><span class=\"line\"></span><br><span class=\"line\">5)差异</span><br><span class=\"line\">* ImageButton不支持setText，而Button支持，ImageButton支持setImageURI，而Button不支持</span><br><span class=\"line\">* ImageButton有Button的状态，但是ImageView没有</span><br><span class=\"line\">* ImageButton拥有默认背景android:background=&quot;@android:drawable/btn_default&quot;</span><br><span class=\"line\">* ImageButton支持9.png图片，ImageView不支持</span><br><span class=\"line\">* 点9图片需要放在drawable-hdpi里面</span><br><span class=\"line\"></span><br><span class=\"line\">5.单选按钮，复选按钮，开关按钮（RadioGroup,RadioButton,CheckBox,ToggleButton）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\">checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\">toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">RadioGroup中的选中android:checkedButton=&quot;@+id/at_rb_rb1&quot;</span><br><span class=\"line\">CheckBox中的选中android:checked=&quot;true&quot;</span><br><span class=\"line\">ToggleButton就相当于CheckBox</span><br><span class=\"line\"></span><br><span class=\"line\">6.日期控件，时间控件（DatePicker,TimePicker）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">datePicker.init(year, month, day, new DatePicker.OnDateChangedListener() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onDateChanged(DatePicker datePicker, int year, int month, int day) &#123;&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">timePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:startYear=&quot;2005&quot;</span><br><span class=\"line\">android:endYear=&quot;2016&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3)日历类</span><br><span class=\"line\">Calendar calendar = Calendar.getInstance();</span><br><span class=\"line\">int year = calendar.get(Calendar.YEAR);</span><br><span class=\"line\">int month = calendar.get(Calendar.MONTH);</span><br><span class=\"line\">int day = calendar.get(Calendar.DAY_OF_MONTH);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.滚动页面（ScrollView,HorizontalScrollView）</span><br><span class=\"line\">1)属性</span><br><span class=\"line\">android:scrollbars=&quot;none&quot;</span><br><span class=\"line\">// 设置滚动条</span><br><span class=\"line\"></span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">android:fillViewport=&quot;true&quot;</span><br><span class=\"line\">注：ScrollView里面只能存在一个组件，而且是垂直摆放的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">8.进度条，拖动条，评分条（ProgressBar,SeekBar,RatingBar）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() &#123;&#125;);</span><br><span class=\"line\">ratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)ProgressBar属性</span><br><span class=\"line\">style=&quot;@android:style/Widget.ProgressBar.Inverse&quot;</span><br><span class=\"line\">转圈圈</span><br><span class=\"line\">style=&quot;@android:style/Widget.ProgressBar.Horizontal&quot;</span><br><span class=\"line\">水平样式</span><br><span class=\"line\">android:max=&quot;100&quot;</span><br><span class=\"line\">最大值</span><br><span class=\"line\">android:progress=&quot;30&quot;</span><br><span class=\"line\">进度</span><br><span class=\"line\"></span><br><span class=\"line\">3)SeekBar属性</span><br><span class=\"line\">android:max=&quot;100&quot;</span><br><span class=\"line\">最大值</span><br><span class=\"line\">android:progress=&quot;30&quot;</span><br><span class=\"line\">进度</span><br><span class=\"line\">android:thumb=&quot;@mipmap/ic_launcher&quot;</span><br><span class=\"line\">控制图片</span><br><span class=\"line\"></span><br><span class=\"line\">4)RatingBar属性</span><br><span class=\"line\">android:numStars=&quot;5&quot;</span><br><span class=\"line\">星星总数量</span><br><span class=\"line\">android:rating=&quot;3.5&quot;</span><br><span class=\"line\">默认数量</span><br><span class=\"line\">android:stepSize=&quot;0.5&quot;</span><br><span class=\"line\">最小步伐</span><br><span class=\"line\">style=&quot;?android:attr/ratingBarStyleSmall&quot;</span><br><span class=\"line\">星星的样式</span><br><span class=\"line\"></span><br><span class=\"line\">5)线程是滚动条滚动</span><br><span class=\"line\">// 关注点：线程里面不能直接处理控件</span><br><span class=\"line\">new Thread(new Runnable() &#123;</span><br><span class=\"line\">public void run() &#123;</span><br><span class=\"line\">for(int i = 0;i&lt;=100;i++)&#123;</span><br><span class=\"line\">progressInt = i;</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">Thread.sleep(100);</span><br><span class=\"line\">&#125; catch (InterruptedException e) &#123;</span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">handler.sendEmptyMessage(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">// 用Handler处理接受的值</span><br><span class=\"line\">private Handler handler = new Handler()&#123;</span><br><span class=\"line\">public void handleMessage(Message msg) &#123;</span><br><span class=\"line\">switch (msg.what)&#123;</span><br><span class=\"line\">case 0:</span><br><span class=\"line\">progressBar.setProgress(progressInt);</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">super.handleMessage(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">9.网页控件（WebView）</span><br><span class=\"line\">1)WebView设置</span><br><span class=\"line\">WebView webView = (WebView) findViewById(R.id.tabspec1_wv_wv1);</span><br><span class=\"line\">WebSettings webSettings = webView.getSettings();    // 获取设置</span><br><span class=\"line\">webSettings.setJavaScriptEnabled(true);             // 设置能执行js脚本</span><br><span class=\"line\">webSettings.setAllowFileAccess(true);               // 设置可以访问文件</span><br><span class=\"line\">webSettings.setBuiltInZoomControls(true);           // 设置支持缩放</span><br><span class=\"line\">webView.loadUrl(&quot;file:///android_asset/welcome.html&quot;);// 加载页面（建asset文件夹，与res同级）</span><br><span class=\"line\"></span><br><span class=\"line\">//网页可在webView里面覆盖加载</span><br><span class=\"line\">webView.setWebViewClient(new WebViewClient()&#123;</span><br><span class=\"line\">public boolean shouldOverrideUrlLoading(WebView view, String url) &#123;</span><br><span class=\"line\">view.loadUrl(url);</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">2)返回键设置</span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">if ((keyCode == KeyEvent.KEYCODE_BACK) &amp;&amp; webView .canGoBack()) &#123; </span><br><span class=\"line\">webView.goBack();</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return false;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">3)网络权限</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * ==============================以下应用适配器======================================</span><br><span class=\"line\"> */</span><br><span class=\"line\">10.画廊、图片选择（Gallery和ImageSwitcher）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">gallery.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() &#123;&#125;);</span><br><span class=\"line\">// gallery选择事件，一般用于画布设图片</span><br><span class=\"line\">gallery.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\">// gallery点击事件</span><br><span class=\"line\"></span><br><span class=\"line\">2)Gallery属性</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:unselectedAlpha=&quot;0.6&quot;</span><br><span class=\"line\">android:spacing=&quot;4dp&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3)ImageSwitcher配置</span><br><span class=\"line\">imageSwitcher.setFactory(new ViewSwitcher.ViewFactory() &#123;</span><br><span class=\"line\">public View makeView() &#123;</span><br><span class=\"line\">ImageView imageView = new ImageView(TestActy.this);</span><br><span class=\"line\">imageView.setLayoutParams(new ImageSwitcher.LayoutParams(</span><br><span class=\"line\">ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT</span><br><span class=\"line\">));</span><br><span class=\"line\">imageView.setScaleType(ImageView.ScaleType.FIT_XY);</span><br><span class=\"line\">imageView.setBackgroundColor(0xff0000);</span><br><span class=\"line\">return imageView;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 设置图片</span><br><span class=\"line\">imageSwitcher.setImageResource(imgInt[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">11.自动提示框，下拉框（AutoCompleteTextView和Spinner）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() &#123;&#125;);</span><br><span class=\"line\">autoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)AutoCompleteTextView属性</span><br><span class=\"line\">android:completionHint=&quot;123&quot;</span><br><span class=\"line\">提示标题</span><br><span class=\"line\">android:completionThreshold=&quot;2&quot;</span><br><span class=\"line\">至少几个字符才会提示</span><br><span class=\"line\">android:dropDownWidth=&quot;match_parent&quot;</span><br><span class=\"line\">下拉框宽度</span><br><span class=\"line\">android:dropDownHeight=&quot;wrap_content&quot;</span><br><span class=\"line\">下拉框高度</span><br><span class=\"line\"></span><br><span class=\"line\">3)Spinner获值和设值</span><br><span class=\"line\">spinner.getSelectedItemPosition();</span><br><span class=\"line\">spinner.setSelection(i);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">12.网格（GridView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:numColumns=&quot;4&quot;</span><br><span class=\"line\">列数</span><br><span class=\"line\">android:verticalSpacing=&quot;10dp&quot;</span><br><span class=\"line\">垂直间隔</span><br><span class=\"line\">android:horizontalSpacing=&quot;10dp&quot;</span><br><span class=\"line\">水平间隔</span><br><span class=\"line\"></span><br><span class=\"line\">13.列表（ListView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">listView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">宽高需要 match_parent</span><br><span class=\"line\">android:listSelector=&quot;@android:color/transparent&quot;</span><br><span class=\"line\">选中的背景色</span><br><span class=\"line\">android:divider=&quot;@null&quot;</span><br><span class=\"line\">无分割线</span><br><span class=\"line\">android:scrollbars=&quot;none&quot;</span><br><span class=\"line\">无滚动条</span><br><span class=\"line\">android:fadingEdge=&quot;none&quot;</span><br><span class=\"line\">渐变区域的宽度</span><br><span class=\"line\">android:scrollingCache=&quot;false&quot;</span><br><span class=\"line\">滚动缓存</span><br><span class=\"line\"></span><br><span class=\"line\">3)ListView消息更新</span><br><span class=\"line\">1.更新适配器里的数据源</span><br><span class=\"line\">2.刷新适配器</span><br><span class=\"line\">myAdapter.notifyDataSetChanged();</span><br><span class=\"line\">3.ListView设置动态效果</span><br><span class=\"line\">listView.smoothScrollToPosition(0);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">14.可展开的列表（ExpandableListView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">expandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)适配器配置</span><br><span class=\"line\">1.继承BaseExpandableListAdapter</span><br><span class=\"line\">2.用二维数组或者Item嵌套Item传递数据源</span><br><span class=\"line\"></span><br><span class=\"line\">3)设置ExpandableListView默认显示图标为null</span><br><span class=\"line\">expandableListView.setGroupIndicator(null);</span><br><span class=\"line\"></span><br><span class=\"line\">15.页面轮换器（ViewPager）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)适配器配置</span><br><span class=\"line\">1.继承PagerAdapter</span><br><span class=\"line\">2.重写方法</span><br><span class=\"line\">public void destroyItem(ViewGroup container, int position, Object object) &#123;</span><br><span class=\"line\">container.removeView(imageViewList.get(position));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public Object instantiateItem(ViewGroup container, int position) &#123;</span><br><span class=\"line\">container.addView(imageViewList.get(position),0);</span><br><span class=\"line\">return imageViewList.get(position);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public int getCount() &#123;</span><br><span class=\"line\">return imageViewList.size();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public boolean isViewFromObject(View view, Object object) &#123;</span><br><span class=\"line\">return view == object;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">3)自定义选项卡设置页面</span><br><span class=\"line\">设置第几个选项：viewPager.setCurrentItem(0);</span><br><span class=\"line\"></span><br><span class=\"line\">16.AlertDialog</span><br><span class=\"line\">1)普通AlertDialog</span><br><span class=\"line\">customDialog.setCanceledOnTouchOutside(false);</span><br><span class=\"line\">// dialog</span><br><span class=\"line\">(1)AlertDialog的创建</span><br><span class=\"line\">if(alertDialog == null)&#123;</span><br><span class=\"line\">AlertDialog.Builder builder = new AlertDialog.Builder(context);</span><br><span class=\"line\">// 建造者模式，用Builder内部类去建造</span><br><span class=\"line\">builder.setTitle(&quot;提示框&quot;);</span><br><span class=\"line\">builder.setIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">builder.setMessage(&quot;确定退出吗&quot;);</span><br><span class=\"line\">builder.setPositiveButton(&quot;确定&quot;, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">builder.setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">alertDialog = builder.create();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alertDialog.show();</span><br><span class=\"line\"></span><br><span class=\"line\">(2)AlertDialog设置返回按钮，保证页面安全</span><br><span class=\"line\">@Override  </span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">//重写父类onKeyDown方法</span><br><span class=\"line\">switch (keyCode)&#123;</span><br><span class=\"line\">case KeyEvent.KEYCODE_BACK:</span><br><span class=\"line\">if(alertDialog != null &amp;&amp; alertDialog.isShowing())&#123;</span><br><span class=\"line\">alertDialog.dismiss();</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">showAlertDialog();</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)单选（SingleChoice）</span><br><span class=\"line\">setSingleChoiceItems(new String[]&#123;&quot;篮球&quot;,&quot;足球&quot;,&quot;排球&quot;&#125;, 0, new DialogInterface.OnClickListener() &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">3)复选（MultiChoice）</span><br><span class=\"line\">setMultiChoiceItems(new String[]&#123;&quot;篮球&quot;,&quot;足球&quot;,&quot;排球&quot;&#125;, new boolean[]&#123;false,false,false&#125;, new DialogInterface.OnMultiChoiceClickListener() &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">4)类单选（Items）</span><br><span class=\"line\">builder.setItems(arr, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">// 和单选AlertDialog的区别是没有右边的单选按钮，且会有dismiss()效果</span><br><span class=\"line\"></span><br><span class=\"line\">5)时间日期对话框</span><br><span class=\"line\">new DatePickerDialog(Context.this, new DatePickerDialog.OnDateSetListener() &#123;&#125;,year,month,day_of_month).show();</span><br><span class=\"line\">new TimePickerDialog(Context.this, new TimePickerDialog.OnTimeSetListener() &#123;&#125;,hour_of_day,minute,true).show();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6)进度条对话框</span><br><span class=\"line\">progressDialog1 = new ProgressDialog(mContext);</span><br><span class=\"line\">progressDialog1.setTitle(&quot;大片&quot;);</span><br><span class=\"line\">progressDialog1.setMessage(&quot;下载中。。。&quot;);</span><br><span class=\"line\">progressDialog1.setCancelable(false);</span><br><span class=\"line\">// 响应系统返回键的语句</span><br><span class=\"line\">progressDialog1.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL); // 圈圈格式ProgressDialog.STYLE_SPINNER</span><br><span class=\"line\">progressDialog1.setMax(100);</span><br><span class=\"line\">progressDialog1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">7)绑定自定义布局或控件</span><br><span class=\"line\">builder.setView(view);</span><br><span class=\"line\"></span><br><span class=\"line\">8)自定义Dialog</span><br><span class=\"line\">1)自定义Dialog，继承Dialog</span><br><span class=\"line\">public MyCustomDialog(Context context) &#123;</span><br><span class=\"line\">super(context,R.style.MyDialog);</span><br><span class=\"line\">setContentView(R.layout.dialog_listviewdialog);</span><br><span class=\"line\">titleTV = (TextView) findViewById(R.id.listviewdialog_tv_title);</span><br><span class=\"line\">listViewLV = (ListView) findViewById(R.id.listviewdialog_lv_main);</span><br><span class=\"line\">queDingBN = (Button) findViewById(R.id.listviewdialog_bn_queding);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">2)实现style样式</span><br><span class=\"line\">style样式</span><br><span class=\"line\">&lt;style name=&quot;MyDialog&quot; parent=&quot;@android:style/Theme.Dialog&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowFrame&quot;&gt;@null&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowContentOverlay&quot;&gt;@null&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowBackground&quot;&gt;@android:color/transparent&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowAnimationStyle&quot;&gt;@android:style/Animation.Dialog&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">9)自定义PopupWindow</span><br><span class=\"line\">popupWindow = new PopupWindow(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">popupWindow.setFocusable(true);</span><br><span class=\"line\">// 可获取焦点</span><br><span class=\"line\">popupWindow.setBackgroundDrawable(new BitmapDrawable());</span><br><span class=\"line\">// 响应系统返回键的语句</span><br><span class=\"line\">//方法一：</span><br><span class=\"line\">popupWindow.showAsDropDown(findViewById(R.id.main_bn_anxia));</span><br><span class=\"line\">//方法一：</span><br><span class=\"line\">popupWindow.showAtLocation(findViewById(R.id.main_bn_anxia), Gravity.BOTTOM,0,0);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">17.TabHost选项卡（弃用）：</span><br><span class=\"line\">1)布局</span><br><span class=\"line\">&lt;TabHost xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:id=&quot;@android:id/tabhost&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;FrameLayout</span><br><span class=\"line\">android:id=&quot;@android:id/tabcontent&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">&gt;&lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;TabWidget</span><br><span class=\"line\">android:id=&quot;@android:id/tabs&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">android:visibility=&quot;gone&quot;</span><br><span class=\"line\">&gt;&lt;/TabWidget&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;60dp&quot;</span><br><span class=\"line\">android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">android:gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;ImageView</span><br><span class=\"line\">android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">android:src=&quot;@mipmap/tabhost_1&quot;</span><br><span class=\"line\">/&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/TabHost&gt;</span><br><span class=\"line\">2)代码</span><br><span class=\"line\">tabHost = getTabHost();</span><br><span class=\"line\">//需要继承TabActivity</span><br><span class=\"line\">//添加进tabHost</span><br><span class=\"line\">tabHost.addTab(tabHost.newTabSpec(&quot;11&quot;).setIndicator(&quot;选项卡1&quot;).setContent(new Intent(TabHostActy.this, MyQQActivity.class)));</span><br><span class=\"line\">tabHost.addTab(tabHost.newTabSpec(&quot;22&quot;).setIndicator(&quot;选项卡2&quot;).setContent(new Intent(TabHostActy.this, TabSpec2Acty.class)));</span><br><span class=\"line\">//设置ImageView监听事件</span><br><span class=\"line\">public void onClick(View view) &#123;</span><br><span class=\"line\">imageView1.setImageResource(R.mipmap.tabhost_1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">switch (view.getId()) &#123;</span><br><span class=\"line\">case R.id.tabhost_tv_tv1:</span><br><span class=\"line\">imageView1.setImageResource(R.mipmap.tabhost_1_);</span><br><span class=\"line\">tabHost.setCurrentTab(0);</span><br><span class=\"line\">break;</span><br><span class=\"line\">case R.id.tabhost_tv_tv2:</span><br><span class=\"line\">imageView2.setImageResource(R.mipmap.tabhost_2_);</span><br><span class=\"line\">tabHost.setCurrentTab(1);</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">18.SlidingDrawer拖动框：（弃用）</span><br><span class=\"line\">&lt;SlidingDrawer</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;400dp&quot;</span><br><span class=\"line\">android:layout_alignParentBottom=&quot;true&quot;</span><br><span class=\"line\">android:handle=&quot;@+id/acty_test_iv_ic&quot;</span><br><span class=\"line\">android:content=&quot;@+id/acty_test_ll_ll&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;ImageView</span><br><span class=\"line\">android:id=&quot;@+id/acty_test_iv_ic&quot;</span><br><span class=\"line\">android:layout_width=&quot;25dp&quot;</span><br><span class=\"line\">android:layout_height=&quot;17dp&quot;</span><br><span class=\"line\">android:src=&quot;@mipmap/a4z&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\">/&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:id=&quot;@+id/acty_test_ll_ll&quot;</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">android:background=&quot;#44000000&quot;&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/SlidingDrawer&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Android基础</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br><span class=\"line\">1027</span><br><span class=\"line\">1028</span><br><span class=\"line\">1029</span><br><span class=\"line\">1030</span><br><span class=\"line\">1031</span><br><span class=\"line\">1032</span><br><span class=\"line\">1033</span><br><span class=\"line\">1034</span><br><span class=\"line\">1035</span><br><span class=\"line\">1036</span><br><span class=\"line\">1037</span><br><span class=\"line\">1038</span><br><span class=\"line\">1039</span><br><span class=\"line\">1040</span><br><span class=\"line\">1041</span><br><span class=\"line\">1042</span><br><span class=\"line\">1043</span><br><span class=\"line\">1044</span><br><span class=\"line\">1045</span><br><span class=\"line\">1046</span><br><span class=\"line\">1047</span><br><span class=\"line\">1048</span><br><span class=\"line\">1049</span><br><span class=\"line\">1050</span><br><span class=\"line\">1051</span><br><span class=\"line\">1052</span><br><span class=\"line\">1053</span><br><span class=\"line\">1054</span><br><span class=\"line\">1055</span><br><span class=\"line\">1056</span><br><span class=\"line\">1057</span><br><span class=\"line\">1058</span><br><span class=\"line\">1059</span><br><span class=\"line\">1060</span><br><span class=\"line\">1061</span><br><span class=\"line\">1062</span><br><span class=\"line\">1063</span><br><span class=\"line\">1064</span><br><span class=\"line\">1065</span><br><span class=\"line\">1066</span><br><span class=\"line\">1067</span><br><span class=\"line\">1068</span><br><span class=\"line\">1069</span><br><span class=\"line\">1070</span><br><span class=\"line\">1071</span><br><span class=\"line\">1072</span><br><span class=\"line\">1073</span><br><span class=\"line\">1074</span><br><span class=\"line\">1075</span><br><span class=\"line\">1076</span><br><span class=\"line\">1077</span><br><span class=\"line\">1078</span><br><span class=\"line\">1079</span><br><span class=\"line\">1080</span><br><span class=\"line\">1081</span><br><span class=\"line\">1082</span><br><span class=\"line\">1083</span><br><span class=\"line\">1084</span><br><span class=\"line\">1085</span><br><span class=\"line\">1086</span><br><span class=\"line\">1087</span><br><span class=\"line\">1088</span><br><span class=\"line\">1089</span><br><span class=\"line\">1090</span><br><span class=\"line\">1091</span><br><span class=\"line\">1092</span><br><span class=\"line\">1093</span><br><span class=\"line\">1094</span><br><span class=\"line\">1095</span><br><span class=\"line\">1096</span><br><span class=\"line\">1097</span><br><span class=\"line\">1098</span><br><span class=\"line\">1099</span><br><span class=\"line\">1100</span><br><span class=\"line\">1101</span><br><span class=\"line\">1102</span><br><span class=\"line\">1103</span><br><span class=\"line\">1104</span><br><span class=\"line\">1105</span><br><span class=\"line\">1106</span><br><span class=\"line\">1107</span><br><span class=\"line\">1108</span><br><span class=\"line\">1109</span><br><span class=\"line\">1110</span><br><span class=\"line\">1111</span><br><span class=\"line\">1112</span><br><span class=\"line\">1113</span><br><span class=\"line\">1114</span><br><span class=\"line\">1115</span><br><span class=\"line\">1116</span><br><span class=\"line\">1117</span><br><span class=\"line\">1118</span><br><span class=\"line\">1119</span><br><span class=\"line\">1120</span><br><span class=\"line\">1121</span><br><span class=\"line\">1122</span><br><span class=\"line\">1123</span><br><span class=\"line\">1124</span><br><span class=\"line\">1125</span><br><span class=\"line\">1126</span><br><span class=\"line\">1127</span><br><span class=\"line\">1128</span><br><span class=\"line\">1129</span><br><span class=\"line\">1130</span><br><span class=\"line\">1131</span><br><span class=\"line\">1132</span><br><span class=\"line\">1133</span><br><span class=\"line\">1134</span><br><span class=\"line\">1135</span><br><span class=\"line\">1136</span><br><span class=\"line\">1137</span><br><span class=\"line\">1138</span><br><span class=\"line\">1139</span><br><span class=\"line\">1140</span><br><span class=\"line\">1141</span><br><span class=\"line\">1142</span><br><span class=\"line\">1143</span><br><span class=\"line\">1144</span><br><span class=\"line\">1145</span><br><span class=\"line\">1146</span><br><span class=\"line\">1147</span><br><span class=\"line\">1148</span><br><span class=\"line\">1149</span><br><span class=\"line\">1150</span><br><span class=\"line\">1151</span><br><span class=\"line\">1152</span><br><span class=\"line\">1153</span><br><span class=\"line\">1154</span><br><span class=\"line\">1155</span><br><span class=\"line\">1156</span><br><span class=\"line\">1157</span><br><span class=\"line\">1158</span><br><span class=\"line\">1159</span><br><span class=\"line\">1160</span><br><span class=\"line\">1161</span><br><span class=\"line\">1162</span><br><span class=\"line\">1163</span><br><span class=\"line\">1164</span><br><span class=\"line\">1165</span><br><span class=\"line\">1166</span><br><span class=\"line\">1167</span><br><span class=\"line\">1168</span><br><span class=\"line\">1169</span><br><span class=\"line\">1170</span><br><span class=\"line\">1171</span><br><span class=\"line\">1172</span><br><span class=\"line\">1173</span><br><span class=\"line\">1174</span><br><span class=\"line\">1175</span><br><span class=\"line\">1176</span><br><span class=\"line\">1177</span><br><span class=\"line\">1178</span><br><span class=\"line\">1179</span><br><span class=\"line\">1180</span><br><span class=\"line\">1181</span><br><span class=\"line\">1182</span><br><span class=\"line\">1183</span><br><span class=\"line\">1184</span><br><span class=\"line\">1185</span><br><span class=\"line\">1186</span><br><span class=\"line\">1187</span><br><span class=\"line\">1188</span><br><span class=\"line\">1189</span><br><span class=\"line\">1190</span><br><span class=\"line\">1191</span><br><span class=\"line\">1192</span><br><span class=\"line\">1193</span><br><span class=\"line\">1194</span><br><span class=\"line\">1195</span><br><span class=\"line\">1196</span><br><span class=\"line\">1197</span><br><span class=\"line\">1198</span><br><span class=\"line\">1199</span><br><span class=\"line\">1200</span><br><span class=\"line\">1201</span><br><span class=\"line\">1202</span><br><span class=\"line\">1203</span><br><span class=\"line\">1204</span><br><span class=\"line\">1205</span><br><span class=\"line\">1206</span><br><span class=\"line\">1207</span><br><span class=\"line\">1208</span><br><span class=\"line\">1209</span><br><span class=\"line\">1210</span><br><span class=\"line\">1211</span><br><span class=\"line\">1212</span><br><span class=\"line\">1213</span><br><span class=\"line\">1214</span><br><span class=\"line\">1215</span><br><span class=\"line\">1216</span><br><span class=\"line\">1217</span><br><span class=\"line\">1218</span><br><span class=\"line\">1219</span><br><span class=\"line\">1220</span><br><span class=\"line\">1221</span><br><span class=\"line\">1222</span><br><span class=\"line\">1223</span><br><span class=\"line\">1224</span><br><span class=\"line\">1225</span><br><span class=\"line\">1226</span><br><span class=\"line\">1227</span><br><span class=\"line\">1228</span><br><span class=\"line\">1229</span><br><span class=\"line\">1230</span><br><span class=\"line\">1231</span><br><span class=\"line\">1232</span><br><span class=\"line\">1233</span><br><span class=\"line\">1234</span><br><span class=\"line\">1235</span><br><span class=\"line\">1236</span><br><span class=\"line\">1237</span><br><span class=\"line\">1238</span><br><span class=\"line\">1239</span><br><span class=\"line\">1240</span><br><span class=\"line\">1241</span><br><span class=\"line\">1242</span><br><span class=\"line\">1243</span><br><span class=\"line\">1244</span><br><span class=\"line\">1245</span><br><span class=\"line\">1246</span><br><span class=\"line\">1247</span><br><span class=\"line\">1248</span><br><span class=\"line\">1249</span><br><span class=\"line\">1250</span><br><span class=\"line\">1251</span><br><span class=\"line\">1252</span><br><span class=\"line\">1253</span><br><span class=\"line\">1254</span><br><span class=\"line\">1255</span><br><span class=\"line\">1256</span><br><span class=\"line\">1257</span><br><span class=\"line\">1258</span><br><span class=\"line\">1259</span><br><span class=\"line\">1260</span><br><span class=\"line\">1261</span><br><span class=\"line\">1262</span><br><span class=\"line\">1263</span><br><span class=\"line\">1264</span><br><span class=\"line\">1265</span><br><span class=\"line\">1266</span><br><span class=\"line\">1267</span><br><span class=\"line\">1268</span><br><span class=\"line\">1269</span><br><span class=\"line\">1270</span><br><span class=\"line\">1271</span><br><span class=\"line\">1272</span><br><span class=\"line\">1273</span><br><span class=\"line\">1274</span><br><span class=\"line\">1275</span><br><span class=\"line\">1276</span><br><span class=\"line\">1277</span><br><span class=\"line\">1278</span><br><span class=\"line\">1279</span><br><span class=\"line\">1280</span><br><span class=\"line\">1281</span><br><span class=\"line\">1282</span><br><span class=\"line\">1283</span><br><span class=\"line\">1284</span><br><span class=\"line\">1285</span><br><span class=\"line\">1286</span><br><span class=\"line\">1287</span><br><span class=\"line\">1288</span><br><span class=\"line\">1289</span><br><span class=\"line\">1290</span><br><span class=\"line\">1291</span><br><span class=\"line\">1292</span><br><span class=\"line\">1293</span><br><span class=\"line\">1294</span><br><span class=\"line\">1295</span><br><span class=\"line\">1296</span><br><span class=\"line\">1297</span><br><span class=\"line\">1298</span><br><span class=\"line\">1299</span><br><span class=\"line\">1300</span><br><span class=\"line\">1301</span><br><span class=\"line\">1302</span><br><span class=\"line\">1303</span><br><span class=\"line\">1304</span><br><span class=\"line\">1305</span><br><span class=\"line\">1306</span><br><span class=\"line\">1307</span><br><span class=\"line\">1308</span><br><span class=\"line\">1309</span><br><span class=\"line\">1310</span><br><span class=\"line\">1311</span><br><span class=\"line\">1312</span><br><span class=\"line\">1313</span><br><span class=\"line\">1314</span><br><span class=\"line\">1315</span><br><span class=\"line\">1316</span><br><span class=\"line\">1317</span><br><span class=\"line\">1318</span><br><span class=\"line\">1319</span><br><span class=\"line\">1320</span><br><span class=\"line\">1321</span><br><span class=\"line\">1322</span><br><span class=\"line\">1323</span><br><span class=\"line\">1324</span><br><span class=\"line\">1325</span><br><span class=\"line\">1326</span><br><span class=\"line\">1327</span><br><span class=\"line\">1328</span><br><span class=\"line\">1329</span><br><span class=\"line\">1330</span><br><span class=\"line\">1331</span><br><span class=\"line\">1332</span><br><span class=\"line\">1333</span><br><span class=\"line\">1334</span><br><span class=\"line\">1335</span><br><span class=\"line\">1336</span><br><span class=\"line\">1337</span><br><span class=\"line\">1338</span><br><span class=\"line\">1339</span><br><span class=\"line\">1340</span><br><span class=\"line\">1341</span><br><span class=\"line\">1342</span><br><span class=\"line\">1343</span><br><span class=\"line\">1344</span><br><span class=\"line\">1345</span><br><span class=\"line\">1346</span><br><span class=\"line\">1347</span><br><span class=\"line\">1348</span><br><span class=\"line\">1349</span><br><span class=\"line\">1350</span><br><span class=\"line\">1351</span><br><span class=\"line\">1352</span><br><span class=\"line\">1353</span><br><span class=\"line\">1354</span><br><span class=\"line\">1355</span><br><span class=\"line\">1356</span><br><span class=\"line\">1357</span><br><span class=\"line\">1358</span><br><span class=\"line\">1359</span><br><span class=\"line\">1360</span><br><span class=\"line\">1361</span><br><span class=\"line\">1362</span><br><span class=\"line\">1363</span><br><span class=\"line\">1364</span><br><span class=\"line\">1365</span><br><span class=\"line\">1366</span><br><span class=\"line\">1367</span><br><span class=\"line\">1368</span><br><span class=\"line\">1369</span><br><span class=\"line\">1370</span><br><span class=\"line\">1371</span><br><span class=\"line\">1372</span><br><span class=\"line\">1373</span><br><span class=\"line\">1374</span><br><span class=\"line\">1375</span><br><span class=\"line\">1376</span><br><span class=\"line\">1377</span><br><span class=\"line\">1378</span><br><span class=\"line\">1379</span><br><span class=\"line\">1380</span><br><span class=\"line\">1381</span><br><span class=\"line\">1382</span><br><span class=\"line\">1383</span><br><span class=\"line\">1384</span><br><span class=\"line\">1385</span><br><span class=\"line\">1386</span><br><span class=\"line\">1387</span><br><span class=\"line\">1388</span><br><span class=\"line\">1389</span><br><span class=\"line\">1390</span><br><span class=\"line\">1391</span><br><span class=\"line\">1392</span><br><span class=\"line\">1393</span><br><span class=\"line\">1394</span><br><span class=\"line\">1395</span><br><span class=\"line\">1396</span><br><span class=\"line\">1397</span><br><span class=\"line\">1398</span><br><span class=\"line\">1399</span><br><span class=\"line\">1400</span><br><span class=\"line\">1401</span><br><span class=\"line\">1402</span><br><span class=\"line\">1403</span><br><span class=\"line\">1404</span><br><span class=\"line\">1405</span><br><span class=\"line\">1406</span><br><span class=\"line\">1407</span><br><span class=\"line\">1408</span><br><span class=\"line\">1409</span><br><span class=\"line\">1410</span><br><span class=\"line\">1411</span><br><span class=\"line\">1412</span><br><span class=\"line\">1413</span><br><span class=\"line\">1414</span><br><span class=\"line\">1415</span><br><span class=\"line\">1416</span><br><span class=\"line\">1417</span><br><span class=\"line\">1418</span><br><span class=\"line\">1419</span><br><span class=\"line\">1420</span><br><span class=\"line\">1421</span><br><span class=\"line\">1422</span><br><span class=\"line\">1423</span><br><span class=\"line\">1424</span><br><span class=\"line\">1425</span><br><span class=\"line\">1426</span><br><span class=\"line\">1427</span><br><span class=\"line\">1428</span><br><span class=\"line\">1429</span><br><span class=\"line\">1430</span><br><span class=\"line\">1431</span><br><span class=\"line\">1432</span><br><span class=\"line\">1433</span><br><span class=\"line\">1434</span><br><span class=\"line\">1435</span><br><span class=\"line\">1436</span><br><span class=\"line\">1437</span><br><span class=\"line\">1438</span><br><span class=\"line\">1439</span><br><span class=\"line\">1440</span><br><span class=\"line\">1441</span><br><span class=\"line\">1442</span><br><span class=\"line\">1443</span><br><span class=\"line\">1444</span><br><span class=\"line\">1445</span><br><span class=\"line\">1446</span><br><span class=\"line\">1447</span><br><span class=\"line\">1448</span><br><span class=\"line\">1449</span><br><span class=\"line\">1450</span><br><span class=\"line\">1451</span><br><span class=\"line\">1452</span><br><span class=\"line\">1453</span><br><span class=\"line\">1454</span><br><span class=\"line\">1455</span><br><span class=\"line\">1456</span><br><span class=\"line\">1457</span><br><span class=\"line\">1458</span><br><span class=\"line\">1459</span><br><span class=\"line\">1460</span><br><span class=\"line\">1461</span><br><span class=\"line\">1462</span><br><span class=\"line\">1463</span><br><span class=\"line\">1464</span><br><span class=\"line\">1465</span><br><span class=\"line\">1466</span><br><span class=\"line\">1467</span><br><span class=\"line\">1468</span><br><span class=\"line\">1469</span><br><span class=\"line\">1470</span><br><span class=\"line\">1471</span><br><span class=\"line\">1472</span><br><span class=\"line\">1473</span><br><span class=\"line\">1474</span><br><span class=\"line\">1475</span><br><span class=\"line\">1476</span><br><span class=\"line\">1477</span><br><span class=\"line\">1478</span><br><span class=\"line\">1479</span><br><span class=\"line\">1480</span><br><span class=\"line\">1481</span><br><span class=\"line\">1482</span><br><span class=\"line\">1483</span><br><span class=\"line\">1484</span><br><span class=\"line\">1485</span><br><span class=\"line\">1486</span><br><span class=\"line\">1487</span><br><span class=\"line\">1488</span><br><span class=\"line\">1489</span><br><span class=\"line\">1490</span><br><span class=\"line\">1491</span><br><span class=\"line\">1492</span><br><span class=\"line\">1493</span><br><span class=\"line\">1494</span><br><span class=\"line\">1495</span><br><span class=\"line\">1496</span><br><span class=\"line\">1497</span><br><span class=\"line\">1498</span><br><span class=\"line\">1499</span><br><span class=\"line\">1500</span><br><span class=\"line\">1501</span><br><span class=\"line\">1502</span><br><span class=\"line\">1503</span><br><span class=\"line\">1504</span><br><span class=\"line\">1505</span><br><span class=\"line\">1506</span><br><span class=\"line\">1507</span><br><span class=\"line\">1508</span><br><span class=\"line\">1509</span><br><span class=\"line\">1510</span><br><span class=\"line\">1511</span><br><span class=\"line\">1512</span><br><span class=\"line\">1513</span><br><span class=\"line\">1514</span><br><span class=\"line\">1515</span><br><span class=\"line\">1516</span><br><span class=\"line\">1517</span><br><span class=\"line\">1518</span><br><span class=\"line\">1519</span><br><span class=\"line\">1520</span><br><span class=\"line\">1521</span><br><span class=\"line\">1522</span><br><span class=\"line\">1523</span><br><span class=\"line\">1524</span><br><span class=\"line\">1525</span><br><span class=\"line\">1526</span><br><span class=\"line\">1527</span><br><span class=\"line\">1528</span><br><span class=\"line\">1529</span><br><span class=\"line\">1530</span><br><span class=\"line\">1531</span><br><span class=\"line\">1532</span><br><span class=\"line\">1533</span><br><span class=\"line\">1534</span><br><span class=\"line\">1535</span><br><span class=\"line\">1536</span><br><span class=\"line\">1537</span><br><span class=\"line\">1538</span><br><span class=\"line\">1539</span><br><span class=\"line\">1540</span><br><span class=\"line\">1541</span><br><span class=\"line\">1542</span><br><span class=\"line\">1543</span><br><span class=\"line\">1544</span><br><span class=\"line\">1545</span><br><span class=\"line\">1546</span><br><span class=\"line\">1547</span><br><span class=\"line\">1548</span><br><span class=\"line\">1549</span><br><span class=\"line\">1550</span><br><span class=\"line\">1551</span><br><span class=\"line\">1552</span><br><span class=\"line\">1553</span><br><span class=\"line\">1554</span><br><span class=\"line\">1555</span><br><span class=\"line\">1556</span><br><span class=\"line\">1557</span><br><span class=\"line\">1558</span><br><span class=\"line\">1559</span><br><span class=\"line\">1560</span><br><span class=\"line\">1561</span><br><span class=\"line\">1562</span><br><span class=\"line\">1563</span><br><span class=\"line\">1564</span><br><span class=\"line\">1565</span><br><span class=\"line\">1566</span><br><span class=\"line\">1567</span><br><span class=\"line\">1568</span><br><span class=\"line\">1569</span><br><span class=\"line\">1570</span><br><span class=\"line\">1571</span><br><span class=\"line\">1572</span><br><span class=\"line\">1573</span><br><span class=\"line\">1574</span><br><span class=\"line\">1575</span><br><span class=\"line\">1576</span><br><span class=\"line\">1577</span><br><span class=\"line\">1578</span><br><span class=\"line\">1579</span><br><span class=\"line\">1580</span><br><span class=\"line\">1581</span><br><span class=\"line\">1582</span><br><span class=\"line\">1583</span><br><span class=\"line\">1584</span><br><span class=\"line\">1585</span><br><span class=\"line\">1586</span><br><span class=\"line\">1587</span><br><span class=\"line\">1588</span><br><span class=\"line\">1589</span><br><span class=\"line\">1590</span><br><span class=\"line\">1591</span><br><span class=\"line\">1592</span><br><span class=\"line\">1593</span><br><span class=\"line\">1594</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、Activity *******************************</span><br><span class=\"line\">1.Activity生命周期(↖↑↗ ← → ↙↓↘)</span><br><span class=\"line\">--↓--onCreate();</span><br><span class=\"line\">--↓--onStart(); ←←←←←←↑</span><br><span class=\"line\">--↓--onResume();←←←↑  ↑</span><br><span class=\"line\">--↓-- 运行中    ↑  onRestart();</span><br><span class=\"line\">--↓--onPause(); →→→↑  ↑</span><br><span class=\"line\">--↓--onStop();</span><br><span class=\"line\">→→→→→→↑</span><br><span class=\"line\">--↓--onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\">* 当第一次运行时会看到主Activity，主Activity可以通过Intent到其他的Activity进行相关操作。</span><br><span class=\"line\">* 当启动其他的Activity时当前的Activity将会停止，之前的Activity失去焦点，新的Activity会获取焦点</span><br><span class=\"line\">* 根据栈的先进后出原则，当按Back键时，当前这个Activity销毁，前一个Activity重新恢复，调用onResume</span><br><span class=\"line\">* 当按Home键退回到主界面时，会调用onStop，界面消失，重新进来会调用onRestart</span><br><span class=\"line\"></span><br><span class=\"line\">2.设置页面</span><br><span class=\"line\">1)设置xml布局文件</span><br><span class=\"line\">setContentView(R.layout.xxx_xxx);</span><br><span class=\"line\">2)写View（LayoutParams一定要和父布局的一致）</span><br><span class=\"line\">TextView textView = new TextView(this);</span><br><span class=\"line\">LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">params.leftMargin = 10;</span><br><span class=\"line\">params.rightMargin = 10;</span><br><span class=\"line\">textView.setLayoutParams(params);</span><br><span class=\"line\">textView.setTextSize(20);</span><br><span class=\"line\">textView.setPadding(100,20,0,20);</span><br><span class=\"line\">// 左上右下</span><br><span class=\"line\">textView.setBackgroundColor(Color.parseColor(&quot;#D4D4D4&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">// setFrame(x - 60, y - 120, x + 60, y);</span><br><span class=\"line\">// ImageView设置在父布局中位置</span><br><span class=\"line\"></span><br><span class=\"line\">3.关闭Activity</span><br><span class=\"line\">finish();</span><br><span class=\"line\"></span><br><span class=\"line\">4.页面跳转及传值</span><br><span class=\"line\">1)单向传值：</span><br><span class=\"line\">* 放值</span><br><span class=\"line\">Intent intent = new Intent(TabSpec3Acty.this, TabSpec3GoActy.class);</span><br><span class=\"line\">intent.putExtra(&quot;intentFlag&quot;, 0);</span><br><span class=\"line\">intent.putExtra(&quot;title&quot;, &quot;修改姓名&quot;);</span><br><span class=\"line\">startActivity(intent);</span><br><span class=\"line\">* 取值</span><br><span class=\"line\">Intent intent = getIntent();</span><br><span class=\"line\">int intentFlag = intent.getIntExtra(&quot;intentFlag&quot;,-1);</span><br><span class=\"line\">String title = intent.getStringExtra(&quot;title&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)数值回调：</span><br><span class=\"line\">* 等值</span><br><span class=\"line\">startActivityForResult(intent, 0);</span><br><span class=\"line\">// 0是requestCode</span><br><span class=\"line\">* 放值</span><br><span class=\"line\">Intent intent = new Intent();</span><br><span class=\"line\">intent.putExtra(&quot;resultIntentFlag&quot;,intentFlag);</span><br><span class=\"line\">setResult(101,intent);</span><br><span class=\"line\">// 101是resultCode</span><br><span class=\"line\">finish();</span><br><span class=\"line\">* 取值</span><br><span class=\"line\">protected void onActivityResult(int requestCode, int resultCode, Intent intent) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">5.Fragment</span><br><span class=\"line\">1)Fragment</span><br><span class=\"line\">--↓--onAttach();</span><br><span class=\"line\">--↓--onCreate();</span><br><span class=\"line\">--↓--onCreateView();</span><br><span class=\"line\">--↓--onActivityCreate();</span><br><span class=\"line\"></span><br><span class=\"line\">--↓--onStart();</span><br><span class=\"line\">--↓--onResume();←←←↑</span><br><span class=\"line\">--↓-- 运行中    ↑</span><br><span class=\"line\">--↓--onPause(); →→→↑</span><br><span class=\"line\">--↓--onStop();</span><br><span class=\"line\"></span><br><span class=\"line\">--↓--onDestroyView();</span><br><span class=\"line\">--↓--onDestroy();</span><br><span class=\"line\">--↓--onDetache();</span><br><span class=\"line\"></span><br><span class=\"line\">2)主Activity继承FragmentActivity</span><br><span class=\"line\">3)获取事务处理，进行增加、替换、或者隐藏，最后提交</span><br><span class=\"line\">FragmentTransaction fts = getSupportFragmentManager().beginTransaction();</span><br><span class=\"line\">fts.add(R.id.content, tab1);</span><br><span class=\"line\">// 资源可以用FrameLayout，或者ViewPager</span><br><span class=\"line\">// fts.replace(R.id.content, tab1);</span><br><span class=\"line\">// 替换</span><br><span class=\"line\">fts.commit();</span><br><span class=\"line\">4)继承Fragment，重写onCreateView方法</span><br><span class=\"line\">public View onCreateView(LayoutInflater inflater,ViewGroup container,Bundle savedInstanceState) &#123;</span><br><span class=\"line\">if(view == null)&#123;</span><br><span class=\"line\">view = inflater.inflate(R.layout.acty_test,container,false);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return view;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">5)得到上下文</span><br><span class=\"line\">Context context = this.getActivity();</span><br><span class=\"line\">6)操作Activity里面的东西</span><br><span class=\"line\">((FrameActy)getActivity()).refreshPage();</span><br><span class=\"line\">7)当Fragment相互切换的时候，会调用onHiddenChanged</span><br><span class=\"line\">会先调用activity的onResume</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、Intent *******************************</span><br><span class=\"line\">1.定义</span><br><span class=\"line\">作为一种意图，Activity，Service和Broadcast Receiver这三种核心组件都需要使用Intent来激活</span><br><span class=\"line\">Intent包含组件名称、动作、数据、种类、额外和标记等内容</span><br><span class=\"line\">2.动作（setAction()和getAction()）</span><br><span class=\"line\">1)Activity：通常使用context.startActivity();启动</span><br><span class=\"line\">2)Broadcast：通常使用context.registerReceiver();启动</span><br><span class=\"line\">3.数据（setData()和getData()）</span><br><span class=\"line\">4.种类（addCategory()和removeCategory()）</span><br><span class=\"line\">5.额外（putExtra()和getExxxxtra()）</span><br><span class=\"line\"></span><br><span class=\"line\">6.返回桌面</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_MAIN);</span><br><span class=\"line\">        intent.addCategory(Intent.CATEGORY_HOME);</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">7.拨打电话</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_CALL);</span><br><span class=\"line\">        intent.setData(Uri.parse(&quot;tel:&quot;+&quot;15951723371&quot;));</span><br><span class=\"line\">        startActivity(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">8.打开网页</span><br><span class=\"line\">        Intent intent = new Intent();</span><br><span class=\"line\">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class=\"line\">        intent.setData(Uri.parse(&quot;http://www.baidu.com&quot;));</span><br><span class=\"line\">        startActivity(intent); </span><br><span class=\"line\"></span><br><span class=\"line\">三、事件处理 *******************************</span><br><span class=\"line\">1.按钮点击事件（setOnClickListener或者setOnLongClickListener）</span><br><span class=\"line\">        kaishi.setOnLongClickListener(new View.OnLongClickListener() &#123;&#125;); </span><br><span class=\"line\">kaishi.setOnClickListener(new View.OnClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2.物理按键按下（重写onKeyDown()，返回值就是是否执行完毕）</span><br><span class=\"line\">1)屏蔽返回键</span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">if(keyCode == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return super.onKeyDown(keyCode, event);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">3.触摸事件（重写onTouch()，返回值就是是否执行完毕）</span><br><span class=\"line\">1)触摸事件</span><br><span class=\"line\">public boolean onTouchEvent(MotionEvent event) &#123;</span><br><span class=\"line\">switch (event.getAction())&#123;</span><br><span class=\"line\">case MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">downX = event.getRawX();</span><br><span class=\"line\">downY = event.getRawY();</span><br><span class=\"line\">break;</span><br><span class=\"line\">case MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">// 监听拖动</span><br><span class=\"line\">moveX = event.getRawX();</span><br><span class=\"line\">moveY = event.getRawY();</span><br><span class=\"line\">break;</span><br><span class=\"line\">case MotionEvent.ACTION_UP:</span><br><span class=\"line\">// 监听滑动</span><br><span class=\"line\">upX = event.getRawX();</span><br><span class=\"line\">upY = event.getRawY();</span><br><span class=\"line\">x = upX - downX;</span><br><span class=\"line\">y = upY - downY;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if(y &lt; 0 &amp;&amp; Math.abs(y) &gt;= Math.abs(x))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向上滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(y &gt; 0 &amp;&amp; y &gt;= Math.abs(x))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向下滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(x &gt; 0 &amp;&amp; x &gt; Math.abs(y))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向右滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;else if(x &lt; 0 &amp;&amp; Math.abs(x) &gt; Math.abs(y))&#123;</span><br><span class=\"line\">Toast.makeText(this, &quot;向左滑动&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">注：getX getRawX的区别</span><br><span class=\"line\">getX：是以widget左上角为坐标原点，计算的Ｘ轴坐标值</span><br><span class=\"line\">getRawX：是以屏幕左上角为坐标原点，计算的Ｘ轴坐标值</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">四、资源访问(不能大写，字 下数 命名) *******************************</span><br><span class=\"line\">1.字符串(string)</span><br><span class=\"line\">textView.setTextColor(getResources().getString(R.string.app_name));</span><br><span class=\"line\">android:text=&quot;@string/app_name&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">2.颜色(color)：颜色值通过RGB和透明度Alpha表示，可以用#RGB、#ARGB、#RRGGBB、#AARRGGBB表示</span><br><span class=\"line\">textView.setTextColor(getResources().getColor(R.color.red));</span><br><span class=\"line\">android:textColor=&quot;@color/red&quot;</span><br><span class=\"line\">        </span><br><span class=\"line\">3.尺寸(dimen)</span><br><span class=\"line\">textView.setTextSize(getResources().getDimension(R.dimen.margin));</span><br><span class=\"line\">android:textSize=&quot;@dimen/margin&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4.布局(layout)</span><br><span class=\"line\">* 布局中包含其他布局：</span><br><span class=\"line\">&lt;include layout=&quot;@layout/acty_top&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">5.数组(array)</span><br><span class=\"line\">1)类型：</span><br><span class=\"line\">&lt;array&gt;：普通类型数组</span><br><span class=\"line\">&lt;integer-array&gt;：整形数组</span><br><span class=\"line\">&lt;string-array&gt;：字符串数组</span><br><span class=\"line\">2)定义：</span><br><span class=\"line\">&lt;integer-array name=&quot;asdf&quot;&gt;</span><br><span class=\"line\">&lt;item&gt;111&lt;/item&gt;</span><br><span class=\"line\">&lt;item&gt;222&lt;/item&gt;</span><br><span class=\"line\">&lt;/integer-array&gt;</span><br><span class=\"line\">3)使用：</span><br><span class=\"line\">int[] asdf =  getResources().getIntArray(R.array.asdf);</span><br><span class=\"line\">String[] qwer = getResources().getStringArray(R.array.qwer);</span><br><span class=\"line\"></span><br><span class=\"line\">6.图片(drawable)</span><br><span class=\"line\">1).9图片的使用</span><br><span class=\"line\">2)虚拟图片</span><br><span class=\"line\">(1)两张图片切换</span><br><span class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item android:state_pressed=&quot;true&quot; android:drawable=&quot;@drawable/sdf&quot;/&gt;</span><br><span class=\"line\">&lt;item android:state_pressed=&quot;true&quot; android:drawable=&quot;@drawable/sdf&quot;/&gt;</span><br><span class=\"line\">&lt;/selector&gt;</span><br><span class=\"line\">(2)单一背景</span><br><span class=\"line\">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item&gt;</span><br><span class=\"line\">&lt;shape&gt;</span><br><span class=\"line\">&lt;solid android:color=&quot;#ffffff&quot; /&gt;</span><br><span class=\"line\">&lt;stroke android:width=&quot;1px&quot; android:color=&quot;#C0BFB6&quot; /&gt;</span><br><span class=\"line\">&lt;corners android:radius=&quot;5px&quot;/&gt;</span><br><span class=\"line\">&lt;/shape&gt;</span><br><span class=\"line\">&lt;/item&gt;</span><br><span class=\"line\">&lt;/selector&gt;</span><br><span class=\"line\">(3)去边</span><br><span class=\"line\">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class=\"line\">&lt;item android:top=&quot;-2px&quot;&gt;</span><br><span class=\"line\">&lt;shape&gt;</span><br><span class=\"line\">xxx</span><br><span class=\"line\">&lt;/shape&gt;</span><br><span class=\"line\">&lt;/item&gt;</span><br><span class=\"line\">&lt;/layer-list&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">7.样式(style)</span><br><span class=\"line\">1)样式支持继承：优先使用子样式</span><br><span class=\"line\">2)定义：</span><br><span class=\"line\">&lt;style name=&quot;title&quot; parent=&quot;basic&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:padding&quot;&gt;10px&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:gradientRadius&quot;&gt;center&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">3)使用：</span><br><span class=\"line\">style=&quot;@style/title&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">8.主题(theme)</span><br><span class=\"line\">1)定义资源color，attr，style</span><br><span class=\"line\">&lt;color name=&quot;color_gray&quot;&gt;#3b3b3b&lt;/color&gt;</span><br><span class=\"line\">&lt;attr name=&quot;main_color_normal&quot; format=&quot;reference|color&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style name=&quot;ThemeBlue&quot; parent=&quot;AppTheme&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;main_color_normal&quot;&gt;@color/color_blue&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">2)自定义MyApplication类，继承Application，存放curThemeId值，并生成getter，setter方法</span><br><span class=\"line\">3)AndroidManifest文件，name实现MyApplication类，修改默认android:theme=&quot;@style/ThemeBlue&quot;</span><br><span class=\"line\">4)修改主题</span><br><span class=\"line\">1.设置主题，要在setContentView方法之前</span><br><span class=\"line\">setTheme(((MyApplication) getApplication()).getCurThemeId());</span><br><span class=\"line\">2.向MyApplication里面放值</span><br><span class=\"line\">((MyApplication) getApplication()).setCurThemeId(curTheme);</span><br><span class=\"line\">3.页面重新创建</span><br><span class=\"line\">recreate();</span><br><span class=\"line\">5)其他</span><br><span class=\"line\">1.设置属性默认背景</span><br><span class=\"line\">android:background=&quot;?main_color_normal&quot;</span><br><span class=\"line\">2.拿到资源颜色转</span><br><span class=\"line\">int color = context.getResources().getColor(colorArr[i]);</span><br><span class=\"line\">3.拿到属性默认颜色</span><br><span class=\"line\">int mainColor = Utils.getThemeColor(this,R.attr.main_color_normal,R.color.color_blue);</span><br><span class=\"line\">6)工具类</span><br><span class=\"line\">// dip转px</span><br><span class=\"line\">public static float dipToPx(Context context, float dipValue) &#123;</span><br><span class=\"line\">float scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">return dipValue * scale + 0.5f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// px转dip</span><br><span class=\"line\">public static float pxToDip(Context context, float pxValue) &#123;</span><br><span class=\"line\">float scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">return pxValue / scale + 0.5f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 得到当前主题颜色</span><br><span class=\"line\">public static int getThemeColor(Context mContext, int attr, int defaultColor)&#123;</span><br><span class=\"line\">TypedArray array = mContext.obtainStyledAttributes(new int[]&#123;attr&#125;);</span><br><span class=\"line\">return array.getColor(0, defaultColor);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">9.原始xml(xml)</span><br><span class=\"line\">建文件夹xml</span><br><span class=\"line\"></span><br><span class=\"line\">=======================================================================================================================</span><br><span class=\"line\">==================================================分割线-高级==========================================================</span><br><span class=\"line\">=======================================================================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">五、图形图像处理 *******************************</span><br><span class=\"line\">1.常用绘图类</span><br><span class=\"line\">1)Paint（画笔）</span><br><span class=\"line\">paint = new Paint();</span><br><span class=\"line\">paint.setAntiAlias(true);</span><br><span class=\"line\">// 去锯齿</span><br><span class=\"line\">paint.setColor(Color.BLUE);</span><br><span class=\"line\">// 设置画笔颜色</span><br><span class=\"line\">paint.setStyle(Paint.Style.STROKE);</span><br><span class=\"line\">// 描边，填充的属性为 Paint.Style.FILL</span><br><span class=\"line\">paint.setStrokeWidth(3);</span><br><span class=\"line\">// 路径宽度</span><br><span class=\"line\">paint.setTextSize(18);</span><br><span class=\"line\">// 设置字体大小</span><br><span class=\"line\">2)Canvas（画图面板）</span><br><span class=\"line\">canvas.drawColor(Color.GRAY);</span><br><span class=\"line\">// 设置画布颜色</span><br><span class=\"line\">3)Bitmap（Bitmap类代表位图）</span><br><span class=\"line\">4)BitmapFactory（从不同数据源来解析、创建Bitmap对象）</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeFile(&quot;/sdcard/picture/bccd/img01.jpg&quot;);</span><br><span class=\"line\">// 从路径解析Bitmap</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher);</span><br><span class=\"line\">// 从资源解析Bitmap</span><br><span class=\"line\">Bitmap bitmap = BitmapFactory.decodeStream(inputStream);</span><br><span class=\"line\">// 输入流解析Bitmap</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.绘制2D图像</span><br><span class=\"line\">1)绘制几何图形</span><br><span class=\"line\">canvas.drawPoint(100, 100, paint);</span><br><span class=\"line\">// 绘制点(坐标)</span><br><span class=\"line\">canvas.drawLine(10,10,40,40,paint);</span><br><span class=\"line\">// 绘制线(开始坐标，结束坐标)</span><br><span class=\"line\">canvas.drawCircle(10, 10, 12, paint);</span><br><span class=\"line\">// 绘制圆(圆心坐标，半径)</span><br><span class=\"line\">canvas.drawRect(10,10,50,50,paint);</span><br><span class=\"line\">// 绘制方(左上角坐标，右下角坐标)</span><br><span class=\"line\">canvas.drawOval(new RectF(0,0,100,60),paint);</span><br><span class=\"line\">// 绘制椭圆(左上角坐标，右下角坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">2)绘制文本</span><br><span class=\"line\">canvas.drawText(&quot;张三&quot;,10,460,paint);</span><br><span class=\"line\">// 绘制文本(左下角起始坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">3)绘制路径</span><br><span class=\"line\">Path path = new Path();</span><br><span class=\"line\">// 绘制路径</span><br><span class=\"line\">path.moveTo(30,0);</span><br><span class=\"line\">// 起始点</span><br><span class=\"line\">path.lineTo(0,44);</span><br><span class=\"line\">// 路径</span><br><span class=\"line\">path.lineTo(60,44);</span><br><span class=\"line\"></span><br><span class=\"line\">path.close();  // 闭合路径，如果写了，就会闭合</span><br><span class=\"line\">canvas.drawPath(path,paint);</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.drawTextOnPath(&quot;xxx&quot;,path,0,0,paint);</span><br><span class=\"line\">// 沿着路径绘制文字</span><br><span class=\"line\"></span><br><span class=\"line\">4)绘制图片</span><br><span class=\"line\">canvas.drawBitmap(bitmap, 100, 100, paint);</span><br><span class=\"line\">// 从指定点绘制位图(左上角坐标)</span><br><span class=\"line\"></span><br><span class=\"line\">Rect src = new Rect(0, 0, 300, 500);</span><br><span class=\"line\">Rect dst = new Rect(50, 50, 350, 350);</span><br><span class=\"line\">canvas.drawBitmap(bitmap, src, dst, paint);</span><br><span class=\"line\">// 从源位图上挖取(0,0)到(300,500)的一块图像，然后绘制到(50,50)到(350,550)区域</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3.逐帧动画</span><br><span class=\"line\">1)写配置文件anim_frame_panda，oneshot表示循环，默认为true，</span><br><span class=\"line\">&lt;animation-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:oneshot=&quot;false&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;item  android:drawable=&quot;@mipmap/fat_po_f01&quot; android:duration=&quot;60&quot; /&gt;</span><br><span class=\"line\">&lt;/animation-list&gt;</span><br><span class=\"line\">2)ImageView的Background属性设置为配置文件，或者在Java里面设</span><br><span class=\"line\">android:background=&quot;@anim/anim_frame_panda&quot;</span><br><span class=\"line\">imageView.setBackgroundResource(R.anim.anim_frame_boom);</span><br><span class=\"line\">3)拿到ImageView的background，并强转为AnimationDrawable，并启动</span><br><span class=\"line\">AnimationDrawable animationDrawable = (AnimationDrawable) imageView.getBackground();</span><br><span class=\"line\">animationDrawable.start();</span><br><span class=\"line\">animationDrawable.stop();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4.补间动画</span><br><span class=\"line\">1)代码显示</span><br><span class=\"line\">(1)位移动画</span><br><span class=\"line\">TranslateAnimation translateAnimation = new TranslateAnimation(0, 400, 0, 200);</span><br><span class=\"line\">// x开始，x位移，y开始，y位移</span><br><span class=\"line\">translateAnimation.setDuration(1000);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">translateAnimation.setFillAfter(false);</span><br><span class=\"line\">// 是否停留在最后状态</span><br><span class=\"line\">translateAnimation.setRepeatCount(1);</span><br><span class=\"line\">// 设置重复次数，连同本身一共两次</span><br><span class=\"line\">translateAnimation.setRepeatMode(Animation.REVERSE);</span><br><span class=\"line\">// 反向执行</span><br><span class=\"line\">imageView.startAnimation(translateAnimation);</span><br><span class=\"line\">// 开始动画</span><br><span class=\"line\">(2)缩放动画</span><br><span class=\"line\">ScaleAnimation scaleAnimation = new ScaleAnimation(1.0f, 2.0f, 1.0f, 2.0f);</span><br><span class=\"line\">// x开始，x缩放，y开始，y缩放</span><br><span class=\"line\">scaleAnimation.setDuration(800);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">scaleAnimation.setRepeatCount(2);</span><br><span class=\"line\">// 设置重复次数，连同本身一共三次</span><br><span class=\"line\">scaleAnimation.setRepeatMode(Animation.REVERSE);</span><br><span class=\"line\">// 反向执行</span><br><span class=\"line\">imageView.startAnimation(scaleAnimation);</span><br><span class=\"line\">// 开始动画</span><br><span class=\"line\">(3)旋转动画</span><br><span class=\"line\">RotateAnimation rotateAnimation = new RotateAnimation(0, 360, 100, 100);</span><br><span class=\"line\">// 开始度数，旋转度数，圆心</span><br><span class=\"line\">rotateAnimation.setDuration(800);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new LinearInterpolator());</span><br><span class=\"line\">//均匀速度改变</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new AccelerateInterpolator());</span><br><span class=\"line\">//先慢后快</span><br><span class=\"line\">// rotateAnimation.setInterpolator(new DecelerateInterpolator());</span><br><span class=\"line\">//先快后慢</span><br><span class=\"line\">rotateAnimation.setInterpolator(new AccelerateDecelerateInterpolator());</span><br><span class=\"line\">//先慢后快</span><br><span class=\"line\">rotateAnimation.setStartTime(100);</span><br><span class=\"line\">//等待100ms执行</span><br><span class=\"line\">rotateIV.startAnimation(rotateAnimation);</span><br><span class=\"line\">// 开始动画 </span><br><span class=\"line\">(4)透明、渐变动画</span><br><span class=\"line\">AlphaAnimation alphaAnimation = new AlphaAnimation(0.1f, 1f);</span><br><span class=\"line\">// 开始透明度，结束透明度</span><br><span class=\"line\">alphaAnimation.setDuration(2000);</span><br><span class=\"line\">// 执行动画时间</span><br><span class=\"line\">alphaAnimation.setFillAfter(true);</span><br><span class=\"line\">// 是否停留在最后状态</span><br><span class=\"line\">alphaIV.startAnimation(alphaAnimation);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">alphaAnimation.setAnimationListener(new Animation.AnimationListener() &#123;&#125;);</span><br><span class=\"line\">// 设置监听</span><br><span class=\"line\">2)xml显示(新建directory -&gt; anim)</span><br><span class=\"line\">(1)位移动画</span><br><span class=\"line\">&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXDelta=&quot;0&quot;</span><br><span class=\"line\">android:fromYDelta=&quot;0&quot;</span><br><span class=\"line\">android:toXDelta=&quot;400&quot;</span><br><span class=\"line\">android:toYDelta=&quot;100&quot;</span><br><span class=\"line\">android:duration=&quot;1000&quot;&gt;</span><br><span class=\"line\">&lt;/translate&gt;</span><br><span class=\"line\">TranslateAnimation translateAnimation = (TranslateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_translate);</span><br><span class=\"line\">(2)缩放动画</span><br><span class=\"line\">&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXScale=&quot;1.0&quot;</span><br><span class=\"line\">android:fromYScale=&quot;1.0&quot;</span><br><span class=\"line\">android:toXScale=&quot;2.0&quot;</span><br><span class=\"line\">android:toYScale=&quot;2.0&quot;</span><br><span class=\"line\">android:pivotX=&quot;50%&quot;</span><br><span class=\"line\">// 缩放圆心</span><br><span class=\"line\">android:pivotY=&quot;50%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">android:duration=&quot;1000&quot;&gt;</span><br><span class=\"line\">&lt;/scale&gt;</span><br><span class=\"line\">ScaleAnimation scaleAnimation = (ScaleAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_scale);</span><br><span class=\"line\">(3)旋转动画</span><br><span class=\"line\">&lt;rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:duration=&quot;2000&quot;</span><br><span class=\"line\">android:fillAfter=&quot;true&quot;</span><br><span class=\"line\">android:fromDegrees=&quot;0&quot;</span><br><span class=\"line\">android:pivotX=&quot;50%&quot;</span><br><span class=\"line\">android:pivotY=&quot;50%&quot;</span><br><span class=\"line\">android:toDegrees=&quot;720&quot;&gt;</span><br><span class=\"line\">&lt;/rotate&gt;</span><br><span class=\"line\">RotateAnimation rotateAnimation = (RotateAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_rotate);</span><br><span class=\"line\">(4)透明、渐变动画</span><br><span class=\"line\">&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:duration=&quot;3500&quot;</span><br><span class=\"line\">android:fromAlpha=&quot;0.1&quot;</span><br><span class=\"line\">android:toAlpha=&quot;1&quot;</span><br><span class=\"line\">android:fillAfter=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;/alpha&gt;</span><br><span class=\"line\">AlphaAnimation alphaAnimation = (AlphaAnimation) AnimationUtils.loadAnimation(this,R.anim.anim_alpha);</span><br><span class=\"line\">3)页面平滑动画</span><br><span class=\"line\">(1)写四个动画(anim_left_out)</span><br><span class=\"line\">&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:fromXDelta=&quot;0&quot;</span><br><span class=\"line\">android:toXDelta=&quot;-100%&quot;</span><br><span class=\"line\">android:duration=&quot;400&quot;&gt;</span><br><span class=\"line\">&lt;/translate&gt;</span><br><span class=\"line\">(2)onCreate方法里面写</span><br><span class=\"line\">overridePendingTransition(R.anim.anim_right_in, R.anim.anim_left_out);</span><br><span class=\"line\">// 动画进来的效果，动画出去的效果</span><br><span class=\"line\">(3)finish方法里面写</span><br><span class=\"line\">overridePendingTransition(R.anim.anim_left_in, R.anim.anim_right_out);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">六、多媒体应用 *******************************</span><br><span class=\"line\">1.MediaPlayer播放音频 ↖↑↗ ← → ↙↓↘</span><br><span class=\"line\">1)MediaPlayer周期</span><br><span class=\"line\">new()或reset() →  → setDataSource() →  → prepare() →  → start()</span><br><span class=\"line\">如果调用create()，会直接进入准备状态</span><br><span class=\"line\"></span><br><span class=\"line\">2)主要方法</span><br><span class=\"line\">mediaPlayer.reset();</span><br><span class=\"line\">// 重置资源</span><br><span class=\"line\">mediaPlayer.setDataSource();</span><br><span class=\"line\">// 设置播放资源</span><br><span class=\"line\">mediaPlayer.prepare();</span><br><span class=\"line\">// 准备</span><br><span class=\"line\">mediaPlayer.start();</span><br><span class=\"line\">// 开始</span><br><span class=\"line\">mediaPlayer.pause();</span><br><span class=\"line\">// 暂停</span><br><span class=\"line\">mediaPlayer.stop();</span><br><span class=\"line\">// 停止</span><br><span class=\"line\">mediaPlayer.release();</span><br><span class=\"line\">// 释放资源</span><br><span class=\"line\"></span><br><span class=\"line\">mediaPlayer.getDuration();</span><br><span class=\"line\">// 得到播放时间</span><br><span class=\"line\">mediaPlayer.seekTo();</span><br><span class=\"line\">// 从哪边开始播放</span><br><span class=\"line\">mediaPlayer.getCurrentPosition();</span><br><span class=\"line\">// 得到当前位置</span><br><span class=\"line\"></span><br><span class=\"line\">2.SoundPool播放音频</span><br><span class=\"line\">3.VideoView播放视频</span><br><span class=\"line\">4.用MediaPlayer和SurfaceView播放视频</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">七、线程 *******************************</span><br><span class=\"line\">1.多线程</span><br><span class=\"line\">1)线程创建</span><br><span class=\"line\">Thread thread = new Thread(new Runnable() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)线程开启</span><br><span class=\"line\">thread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">3)线程休眠</span><br><span class=\"line\">thread.sleep(200);</span><br><span class=\"line\"></span><br><span class=\"line\">2.Handle消息传递</span><br><span class=\"line\">1)Handle作用</span><br><span class=\"line\">(1)在子线程与主线程进行通信</span><br><span class=\"line\">(2)在主线程中操作UI控件</span><br><span class=\"line\"></span><br><span class=\"line\">2)Handle创建，并实现handleMessage接受消息</span><br><span class=\"line\">Handler handler = new Handler()&#123;</span><br><span class=\"line\">public void handleMessage(Message msg) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">3)发送消息给handle</span><br><span class=\"line\">handler.sendMessage(message);</span><br><span class=\"line\">// 发送带有Message的消息</span><br><span class=\"line\">handler.sendEmptyMessage(0x12);</span><br><span class=\"line\">// 发送一个空的信息</span><br><span class=\"line\"></span><br><span class=\"line\">4)Message</span><br><span class=\"line\">Message message = Message.obtain();</span><br><span class=\"line\">message.arg1 = 1;</span><br><span class=\"line\">message.arg2 = 1;</span><br><span class=\"line\">message.obj = obj;</span><br><span class=\"line\">message.what = 0x12;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">八、数据存储</span><br><span class=\"line\">　　1.SharedPreference（xml文件）：用于存储较简单的数据</span><br><span class=\"line\">1)定义并设权限</span><br><span class=\"line\">SharedPreferences spf = getSharedPreferences(&quot;user&quot;,Activity.MODE_PRIVATE);</span><br><span class=\"line\"></span><br><span class=\"line\">2)放值</span><br><span class=\"line\">spf.edit()</span><br><span class=\"line\">spf.putString(&quot;name&quot;,&quot;张三&quot;)</span><br><span class=\"line\">spf.commit();</span><br><span class=\"line\"></span><br><span class=\"line\">3)取值</span><br><span class=\"line\">String name = spf.getString(&quot;name&quot;,&quot;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">4)清空</span><br><span class=\"line\">spf.edit()</span><br><span class=\"line\">spf.clear()</span><br><span class=\"line\">spf.commit();</span><br><span class=\"line\"></span><br><span class=\"line\">　　2.File（文件）：用于存储大数量的数据，缺点是更新数据困难</span><br><span class=\"line\">1)文件读取</span><br><span class=\"line\">            FileInputStream fis = this.openFileInput(FILE_NAME);</span><br><span class=\"line\">            byte[] buff = new byte[1024];</span><br><span class=\"line\">            int hasRead = 0;</span><br><span class=\"line\">            StringBuilder sb = new StringBuilder(&quot;&quot;);</span><br><span class=\"line\">            while ((hasRead = fis.read(buff)) &gt; 0) &#123;</span><br><span class=\"line\">                sb.append(new String(buff, 0, hasRead, &quot;utf-8&quot;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)文件写入</span><br><span class=\"line\">            FileInputStream fis = this.openFileInput(FILE_NAME);</span><br><span class=\"line\">            byte[] buff = new byte[1024];</span><br><span class=\"line\">            int hasRead = 0;</span><br><span class=\"line\">            StringBuilder sb = new StringBuilder(&quot;&quot;);</span><br><span class=\"line\">            while ((hasRead = fis.read(buff)) &gt; 0) &#123;</span><br><span class=\"line\">                sb.append(new String(buff, 0, hasRead, &quot;utf-8&quot;));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">　</span><br><span class=\"line\">3.SQLite（轻量级数据库）：支持基本SQL语法，是常被采用的一种数据存储方式</span><br><span class=\"line\">1)创建连接以及创表类，继承SQLiteOpenHelper</span><br><span class=\"line\">private static String dbName = &quot;data.db&quot;;</span><br><span class=\"line\">private static int version = 1;</span><br><span class=\"line\">public final static String T_USER = &quot;t_user&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public DataDBHelper(Context context)&#123;</span><br><span class=\"line\">super(context,dbName,null,version);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 创建数据表，只在第一次运行的时候执行</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onCreate(SQLiteDatabase db) &#123;</span><br><span class=\"line\">StringBuffer createTableSql = new StringBuffer(&quot;&quot;);</span><br><span class=\"line\">createTableSql.append(&quot; create table if not exists &quot; + T_NOTE + &quot; &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; ( &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; _id integer primary key autoincrement,&quot;);</span><br><span class=\"line\">createTableSql.append(&quot; name varchar, &quot;);</span><br><span class=\"line\">createTableSql.append(&quot; ) &quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.execSQL(createTableSql.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 更新数据库，新版本号比老版本号高的时候更新数据表</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) &#123;</span><br><span class=\"line\">sqLiteDatabase.execSQL(&quot;drop table &quot; + T_NOTE);</span><br><span class=\"line\">onCreate(sqLiteDatabase);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)写增删改查类</span><br><span class=\"line\">// 类型定义</span><br><span class=\"line\">private SQLiteHelper sqliteHelper;</span><br><span class=\"line\">public SQLiteDBManager(Context context) &#123;</span><br><span class=\"line\">if (sqliteHelper == null) &#123;</span><br><span class=\"line\">sqliteHelper = new SQLiteHelper(context);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 增删改</span><br><span class=\"line\">SQLiteDatabase db = sqliteHelper.getWritableDatabase();</span><br><span class=\"line\">db.execSQL(sql, new Object[]&#123;&#125;);</span><br><span class=\"line\">db.close();</span><br><span class=\"line\"></span><br><span class=\"line\">// 查</span><br><span class=\"line\">SQLiteDatabase db = sqliteHelper.getReadableDatabase();</span><br><span class=\"line\">Cursor cursor = db.rawQuery(sql, null);</span><br><span class=\"line\">while (cursor.moveToNext()) &#123;</span><br><span class=\"line\">cursor.getInt(cursor.getColumnIndex(&quot;_id&quot;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cursor.close();</span><br><span class=\"line\">db.close();</span><br><span class=\"line\"></span><br><span class=\"line\">// 包装类增、删、改</span><br><span class=\"line\">ContentValues cv = new ContentValues();</span><br><span class=\"line\">cv.put(&quot;_id&quot;, this.queryMaxId());</span><br><span class=\"line\">db.insert(&quot;table_name&quot;, null, cv);</span><br><span class=\"line\"></span><br><span class=\"line\">db.delete(&quot;table_name&quot;, &quot; _id = ? &quot;, new String[]&#123;String.valueOf(item.getId())&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ContentValues cv = new ContentValues();</span><br><span class=\"line\">cv.put(&quot;_id&quot;, item.getId());</span><br><span class=\"line\">db.update(&quot;table_name&quot;, cv, &quot; _id = ? &quot;, new String[]&#123;String.valueOf(item.getId())&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">九、Service *******************************</span><br><span class=\"line\">1)生命周期</span><br><span class=\"line\">(1)启动 (2)绑定</span><br><span class=\"line\">-↓-onCreate();</span><br><span class=\"line\">-↓-onCreate();</span><br><span class=\"line\">-↓-onStartCommand();</span><br><span class=\"line\">-↓-onBind();</span><br><span class=\"line\">-↓-onDestroy();</span><br><span class=\"line\">-↓-onUnBind();</span><br><span class=\"line\">-↓-onDestroy();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2)注册Service</span><br><span class=\"line\">        &lt;service android:name=&quot;.MyService&quot;&gt;</span><br><span class=\"line\">            &lt;!-- 优先级[-1000,1000] --&gt;</span><br><span class=\"line\">            &lt;intent-filter android:priority=&quot;900&quot;&gt;</span><br><span class=\"line\">                &lt;action android:name=&quot;com.suwei.someaction&quot; /&gt;</span><br><span class=\"line\">            &lt;/intent-filter&gt;</span><br><span class=\"line\">        &lt;/service&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3)启动Service</span><br><span class=\"line\">Intent intent = new Intent(&quot;com.suwei.someaction&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">startService(intent);</span><br><span class=\"line\">stopService(intent);</span><br><span class=\"line\"></span><br><span class=\"line\">4)绑定Service</span><br><span class=\"line\">        Intent intent = new Intent(mContext, MyService.class);</span><br><span class=\"line\">// 绑定或解绑</span><br><span class=\"line\">        bindService(intent, conn, Service.BIND_AUTO_CREATE);</span><br><span class=\"line\">unbindService(conn);</span><br><span class=\"line\"></span><br><span class=\"line\">// ServiceConnection匿名链接对象</span><br><span class=\"line\">private MyService myService;</span><br><span class=\"line\">private ServiceConnection conn = new ServiceConnection() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onServiceConnected(ComponentName componentName, IBinder iBinder) &#123;</span><br><span class=\"line\">MyService.MyBind bind = (MyService.MyBind) iBinder;</span><br><span class=\"line\">myService = bind.getMyService();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onServiceDisconnected(ComponentName componentName) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// Service的onBind方法每次return新的MyBind对象</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public IBinder onBind(Intent intent) &#123;</span><br><span class=\"line\">return new MyBind();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public class MyBind extends Binder &#123;</span><br><span class=\"line\">public MyService getMyService() &#123;</span><br><span class=\"line\">return MyService.this;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">十、Broadcast *******************************</span><br><span class=\"line\">1.注册方法</span><br><span class=\"line\">1)静态注册(继承BroadcastReceiver)</span><br><span class=\"line\">&lt;receiver android:name=&quot;.FirstReceive&quot;&gt;</span><br><span class=\"line\">&lt;!-- 优先级[-1000,1000] --&gt;</span><br><span class=\"line\">&lt;intent-filter android:priority=&quot;998&quot;&gt;</span><br><span class=\"line\">&lt;action android:name=&quot;qqq&quot;/&gt;</span><br><span class=\"line\">&lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt;</span><br><span class=\"line\">&lt;/intent-filter&gt;</span><br><span class=\"line\">&lt;/receiver&gt;</span><br><span class=\"line\">2)动态注册(可以使用匿名对象或者类继承BroadcastReceiver)</span><br><span class=\"line\">private BroadcastReceiver receiver = new BroadcastReceiver() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onReceive(Context context, Intent intent) &#123;</span><br><span class=\"line\">String action = intent.getAction();</span><br><span class=\"line\">if (&quot;name&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改名字为========= &quot; + intent.getStringExtra(&quot;name&quot;));</span><br><span class=\"line\">&#125; else if (&quot;age&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改年龄为========= &quot; + intent.getStringExtra(&quot;age&quot;));</span><br><span class=\"line\">&#125; else if (&quot;sex&quot;.equals(action)) &#123;</span><br><span class=\"line\">Log.e(&quot;收到广播&quot;, &quot;=========修改性别为========= &quot; + intent.getStringExtra(&quot;sex&quot;));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">IntentFilter intentFilter = new IntentFilter();</span><br><span class=\"line\">intentFilter.addAction(&quot;name&quot;);</span><br><span class=\"line\">intentFilter.addAction(&quot;age&quot;);</span><br><span class=\"line\">intentFilter.addAction(&quot;sex&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 注册receive</span><br><span class=\"line\">registerReceiver(receiver, intentFilter);</span><br><span class=\"line\">// 解注册receive</span><br><span class=\"line\">unregisterReceiver(receiver);</span><br><span class=\"line\"></span><br><span class=\"line\">2.分类</span><br><span class=\"line\">1)普通广播</span><br><span class=\"line\">Intent intent = new Intent();</span><br><span class=\"line\">intent.setAction(&quot;receive_action1&quot;);</span><br><span class=\"line\">intent.putExtra(&quot;name&quot;,&quot;张三&quot;);</span><br><span class=\"line\">sendBroadcast(intent);</span><br><span class=\"line\">2)有序广播(等前一个接受者处理完后才会发送给后一个接受者)</span><br><span class=\"line\">intent = new Intent();</span><br><span class=\"line\">intent.setAction(&quot;receive_action2&quot;);</span><br><span class=\"line\">intent.putExtra(&quot;kkk&quot;, &quot;111&quot;);</span><br><span class=\"line\">sendOrderedBroadcast(intent, null);</span><br><span class=\"line\"></span><br><span class=\"line\">// 截断广播</span><br><span class=\"line\">abortBroadcast();</span><br><span class=\"line\"></span><br><span class=\"line\">// 前一个receive放其他的值</span><br><span class=\"line\">Bundle bundle = new Bundle();</span><br><span class=\"line\">bundle.putString(&quot;msg&quot;,&quot;第一个页面的信息&quot;);</span><br><span class=\"line\">setResultExtras(bundle);</span><br><span class=\"line\"></span><br><span class=\"line\">// 后一个receive取值</span><br><span class=\"line\">String msg = getResultExtras(true).getString(&quot;msg&quot;);</span><br><span class=\"line\">3.系统广播</span><br><span class=\"line\">// 时间改变广播(只能动态注册)</span><br><span class=\"line\">SystemChangeReceive systemChangeReceive = new SystemChangeReceive();</span><br><span class=\"line\">IntentFilter filter = new IntentFilter();</span><br><span class=\"line\">filter.addAction(Intent.ACTION_TIME_TICK);</span><br><span class=\"line\">registerReceiver(systemChangeReceive, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">// 网络状态广播(动态静态都可以)</span><br><span class=\"line\">NetChangeReceive netChangeReceive = new NetChangeReceive();</span><br><span class=\"line\">IntentFilter filter = new IntentFilter();</span><br><span class=\"line\">filter.addAction(&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;);</span><br><span class=\"line\">registerReceiver(netChangeReceive, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">十一、ContentProvider *******************************</span><br><span class=\"line\">1.ContentResolver</span><br><span class=\"line\">Cursor cursor = context.getContentResolver().query(</span><br><span class=\"line\">uri,     // uri</span><br><span class=\"line\">null,   // 需要查询的字段String[]&#123;&#125;</span><br><span class=\"line\">null,   // 查询条件，可设?</span><br><span class=\"line\">null,   // 查询条件的参数，String[]&#123;&#125;</span><br><span class=\"line\">null      // 排序</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== Android体系结构（从上到下分为4层） ==========================================</span><br><span class=\"line\">\tAndroid应用层</span><br><span class=\"line\">\tAndroid应用框架层</span><br><span class=\"line\">\tAndroid系统运行层</span><br><span class=\"line\">\tLinux内核层</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== android四大组件 ==========================================</span><br><span class=\"line\">\tActivity</span><br><span class=\"line\">\tService</span><br><span class=\"line\">\tBroadcast Receiver</span><br><span class=\"line\">\tContent Provider</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">// ========================================== ANR（Application No Response） ==========================================</span><br><span class=\"line\">\t程序无响应的错误信息。（5秒）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== OOM（out of memory） ==========================================</span><br><span class=\"line\">\t内存溢出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 像素关系 ==========================================</span><br><span class=\"line\">\tpx: 像素</span><br><span class=\"line\">\tdpi: 对角线像素/尺寸</span><br><span class=\"line\">\tdp:(px*160)/dpi</span><br><span class=\"line\">\tppi: 针对显示器 ppi=dpi</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 沉浸式状态栏 ==========================================</span><br><span class=\"line\">\tandroid:fitsSystemWindows=&quot;true&quot;</span><br><span class=\"line\">\tandroid:clipToPadding=&quot;true&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">\tif(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class=\"line\">\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);</span><br><span class=\"line\">\t//透明状态栏</span><br><span class=\"line\">\t\t\t\tgetWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);</span><br><span class=\"line\">\t//透明导航栏</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tthis.requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 设置drawable-top图片 ==========================================</span><br><span class=\"line\">\ttextView.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.mipmap.tdi_yi), null, null);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 适配器 ==========================================</span><br><span class=\"line\">\t1)ArrayAdapter（数组适配器）：只能绑定单一类型的数据</span><br><span class=\"line\">\t\tArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(</span><br><span class=\"line\">\t\t\tTestActy.this,</span><br><span class=\"line\">\t\t\t// 1.上下文</span><br><span class=\"line\">\t\t\tandroid.R.layout.simple_list_item_1,</span><br><span class=\"line\">\t\t\t// 2.布局文件</span><br><span class=\"line\">\t\t\tnew String[]&#123;&quot;name&quot;,&quot;sex&quot;&#125;</span><br><span class=\"line\">\t\t\t// 3.数据源（可以是String数组，或者是List包含String）</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t\tspinner.setAdapter(adapter);</span><br><span class=\"line\"></span><br><span class=\"line\">\t2)SimpleAdapter（简单适配器）：可以显示比较复杂的数据</span><br><span class=\"line\">\t\tSimpleAdapter simpleAdapter = new SimpleAdapter(</span><br><span class=\"line\">\t\t\tTabSpec1Acty.this,</span><br><span class=\"line\">\t\t\t// 1.上下文</span><br><span class=\"line\">\t\t\tsimpleList,  // 2.数据源（可以是List包含Map，或者是List包含其他）</span><br><span class=\"line\">\t\t\tandroid.R.layout.simple_list_item_2,</span><br><span class=\"line\">\t\t\t// 3.布局文件</span><br><span class=\"line\">\t\t\tnew String[]&#123;&quot;name&quot;,&quot;sex&quot;&#125;,</span><br><span class=\"line\">\t\t\t// 4.Map的键</span><br><span class=\"line\">\t\t\tnew int[]&#123;android.R.id.text1,android.R.id.text2&#125;</span><br><span class=\"line\">\t\t\t// 5.布局控件的id</span><br><span class=\"line\">\t\t\t);</span><br><span class=\"line\">\t\tlistView.setAdapter(simpleAdapter);</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)BaseAdapter（自定义适配器）：</span><br><span class=\"line\">\t\tpublic View getView(int i, View view, ViewGroup viewGroup) &#123;</span><br><span class=\"line\">\t\t\tViewHolder holder;</span><br><span class=\"line\">\t\t\t\tif(view != null &amp;&amp; view.getTag() != null)&#123;</span><br><span class=\"line\">\t\t\t\t\tholder = (ViewHolder) view.getTag();</span><br><span class=\"line\">\t\t\t\t&#125;else &#123;</span><br><span class=\"line\">\t\t\t\t\tholder = new ViewHolder();</span><br><span class=\"line\">\t\t\t\t\tview = LayoutInflater.from(context).inflate(R.layout.item_resource,null);</span><br><span class=\"line\">\t\t\t\t\tholder.textView1 = (TextView) view.findViewById(R.id.item_text1);</span><br><span class=\"line\">\t\t\t\t\tview.setTag(holder);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tMap&lt;String,Object&gt; singleMap = list.get(i);</span><br><span class=\"line\">\t\t\tholder.textView1.setText(singleMap.get(&quot;name&quot;).toString());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn view;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprivate static class ViewHolder&#123;</span><br><span class=\"line\">\t\t\tTextView textView1;</span><br><span class=\"line\">\t\t\tTextView textView2;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 自定义View ==========================================</span><br><span class=\"line\">\t1)继承View</span><br><span class=\"line\">\t2)设置画布宽高（重写onMeasure方法，默认是全屏）</span><br><span class=\"line\">\t\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</span><br><span class=\"line\">\t\t\tsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class=\"line\">\t\t\t// 决定画布宽高</span><br><span class=\"line\">\t\t\tsetMeasuredDimension(700,800);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t3)绘图（重写onDraw方法）</span><br><span class=\"line\">\t4)重绘</span><br><span class=\"line\">\t\tinvalidate();  // 主线程中</span><br><span class=\"line\">\t\tpostInvalidate(); // 子线程中</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">// ========================================== Notification通知 ==========================================</span><br><span class=\"line\">\t1)显示系统通知</span><br><span class=\"line\">\t\tbuilder = new Notification.Builder(context);</span><br><span class=\"line\">\t\tbuilder.setTicker(&quot;提示内容&quot;);</span><br><span class=\"line\">\t\tbuilder.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">\t\t// 显示的图标</span><br><span class=\"line\">\t\tbuilder.setContentTitle(&quot;标题&quot;);</span><br><span class=\"line\">\t\tbuilder.setContentText(&quot;内容&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tnotification = builder.build();</span><br><span class=\"line\">\t\tnotification.flags = Notification.FLAG_AUTO_CANCEL;</span><br><span class=\"line\">\t\t// 设置为可以取消</span><br><span class=\"line\">\t\tnotificationManager.notify(1, notification);</span><br><span class=\"line\">\t\t// 第一个参数是notification的id，如果id一样，则覆盖</span><br><span class=\"line\">\t2)带有页面跳转</span><br><span class=\"line\">\t\t/**</span><br><span class=\"line\">\t\t* 上下文，requestCode,页面跳转intent</span><br><span class=\"line\">\t\t* PendingIntent.FLAG_CANCEL_CURRENT：新发和旧发不论requestCode是否一样，各自的值不变</span><br><span class=\"line\">\t\t* PendingIntent.FLAG_UPDATE_CURRENT：新发和旧发的requestCode一样，则新的会覆盖旧的</span><br><span class=\"line\">\t\t*/</span><br><span class=\"line\">\t\tintent = new Intent(context, BActy.class);</span><br><span class=\"line\">\t\tintent.putExtra(&quot;name&quot;,&quot;张三&quot;);</span><br><span class=\"line\">\t\tpendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);</span><br><span class=\"line\">\t\tbuilder.setContentIntent(pendingIntent);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tpendingIntent.getBroadcast(context,0,intent,0);</span><br><span class=\"line\">\t\t// pendingIntent去发送广播</span><br><span class=\"line\">\t3)自定义布局</span><br><span class=\"line\">\t\tRemoteViews remoteViews = new RemoteViews(context.getPackageName(),R.layout.notification_item);</span><br><span class=\"line\">\t\tremoteViews.setOnClickPendingIntent(R.id.notification_title,pendingIntent);</span><br><span class=\"line\">\t\t// 设置内部点击</span><br><span class=\"line\">\t\tremoteViews.setImageViewResource(R.id.notification_head,R.mipmap.ic_launcher);</span><br><span class=\"line\">\t\tremoteViews.setTextViewText(R.id.notification_title,&quot;标题&quot;);</span><br><span class=\"line\">\t\tremoteViews.setProgressBar(R.id.notification_progressbar,100,12,false);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbuilder.setContent(remoteViews);</span><br><span class=\"line\">\t\t4)移除通知</span><br><span class=\"line\">\t\tnotificationManager.cancel(0);</span><br><span class=\"line\">\t\t// 移除单个</span><br><span class=\"line\">\t\tnotificationManager.cancelAll();</span><br><span class=\"line\">\t\t// 移除所有</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== 通过Terminal获取SHA1 ==========================================</span><br><span class=\"line\">\tkeytool -v -list -keystore  C:\\Users\\jmm\\Desktop\\key.keystore</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// ========================================== android:windowSoftInputMode属性 ==========================================</span><br><span class=\"line\">【A】stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置</span><br><span class=\"line\">【B】stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示</span><br><span class=\"line\">【C】stateHidden：用户选择activity时，软键盘总是被隐藏</span><br><span class=\"line\">【D】stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的</span><br><span class=\"line\">【E】stateVisible：软键盘通常是可见的</span><br><span class=\"line\">【F】stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态</span><br><span class=\"line\">【G】adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示</span><br><span class=\"line\">【H】adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间</span><br><span class=\"line\">【I】adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分</span><br><span class=\"line\"></span><br><span class=\"line\">注：其中state和adjust是可以组合的，用 | 连接</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">一、通用属性</span><br><span class=\"line\">android:layout_weight=&quot;0|1&quot;</span><br><span class=\"line\">* 权重，在线性布局中，如果设置为1，则最后摆放，且占领剩余空间</span><br><span class=\"line\">* 首先按照控件声明的尺寸进行分配，然后再将剩下的尺寸按weight分配</span><br><span class=\"line\">* 可在父容器中设置 android:weightSum=&quot;2&quot; 来规定子控件总共的weight数量</span><br><span class=\"line\">* 宽度 = 本身宽度 + 剩余宽度根据权重平分</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">二、位置属性</span><br><span class=\"line\">1)子控件在本控件的位置，没有layout</span><br><span class=\"line\">android:padding=&quot;&quot; </span><br><span class=\"line\">内边距</span><br><span class=\"line\">android:gravity=&quot;&quot;</span><br><span class=\"line\">子控件在本控件的位置</span><br><span class=\"line\"></span><br><span class=\"line\">2)本控件在父控件的位置，有layout</span><br><span class=\"line\">android:layout_margin=&quot;&quot; </span><br><span class=\"line\">外边距</span><br><span class=\"line\"></span><br><span class=\"line\">LinearLayout布局：</span><br><span class=\"line\">android:layout_gravity=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">RelativeLayout布局：</span><br><span class=\"line\">* 位置关系</span><br><span class=\"line\">android:layout_below=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的下边</span><br><span class=\"line\">android:layout_above=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的上边</span><br><span class=\"line\">android:layout_toLeftOf=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的左边</span><br><span class=\"line\">android:layout_toRightOf=&quot;@id/xx&quot;</span><br><span class=\"line\">在某元素的右边</span><br><span class=\"line\"></span><br><span class=\"line\">android:layout_centerHrizontal=&quot;t|f&quot;</span><br><span class=\"line\">水平居中（父控件中）</span><br><span class=\"line\">android:layout_centerVertical=&quot;t|f&quot;</span><br><span class=\"line\">垂直居中（父控件中）</span><br><span class=\"line\">android:layout_centerInparent=&quot;t|f&quot;</span><br><span class=\"line\">完全居中（父控件中）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">* 对齐关系</span><br><span class=\"line\">android:layout_alignTop=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的上边缘和某元素的上边缘对齐</span><br><span class=\"line\">android:layout_alignLeft=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的左边缘和某元素的左边缘对齐</span><br><span class=\"line\">android:layout_alignBottom=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的下边缘和某元素的下边缘对齐</span><br><span class=\"line\">android:layout_alignRight=&quot;@id/xx&quot;</span><br><span class=\"line\">本元素的右边缘和某元素的右边缘对齐</span><br><span class=\"line\"></span><br><span class=\"line\">android:layout_alignParentBottom=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的下边缘</span><br><span class=\"line\">android:layout_alignParentLeft=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的左边缘</span><br><span class=\"line\">android:layout_alignParentRight=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的右边缘</span><br><span class=\"line\">android:layout_alignParentTop=&quot;t|f&quot;</span><br><span class=\"line\">贴紧父元素的上边缘</span><br><span class=\"line\">android:layout_alignWithParentIfMissing=&quot;t|f&quot;</span><br><span class=\"line\">如果对应的兄弟元素找不到的话就以父元素做参照物</span><br><span class=\"line\"></span><br><span class=\"line\">三、文本框，编辑框（TextView，EditText）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">editText.addTextChangedListener(new TextWatcher()&#123;&#125;);</span><br><span class=\"line\">//文本改变事件</span><br><span class=\"line\">editText.setOnFocusChangeListener(new View.OnFocusChangeListener() &#123;&#125;);</span><br><span class=\"line\">//焦点改变事件</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:text=&quot;&quot;</span><br><span class=\"line\">设置显示文字</span><br><span class=\"line\">android:autoLink=&quot;&quot; </span><br><span class=\"line\">设置超链接格式（一般用于TextView底部超链接）</span><br><span class=\"line\"></span><br><span class=\"line\">android:editable=&quot;true&quot;</span><br><span class=\"line\">是否可以编辑</span><br><span class=\"line\">android:password=&quot;true&quot;</span><br><span class=\"line\">是否密码显示</span><br><span class=\"line\">android:lines=&quot;3&quot;</span><br><span class=\"line\">文本编辑框行数（显示行数）</span><br><span class=\"line\">android:maxLines=&quot;3&quot;</span><br><span class=\"line\">最大行数（数字行数）</span><br><span class=\"line\">android:maxLength=&quot;3&quot;</span><br><span class=\"line\">限制输入字数</span><br><span class=\"line\">android:hint=&quot;asdf&quot;</span><br><span class=\"line\">默认提示字</span><br><span class=\"line\">android:numeric=&quot;integer&quot;</span><br><span class=\"line\">integer（正整数）、signed（整数）、decimal（浮点）</span><br><span class=\"line\">android:phoneNumber=&quot;true&quot;</span><br><span class=\"line\">是否数字显示，弹数字键盘</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">android:digits=&quot;asdf&quot;</span><br><span class=\"line\">过滤字符串</span><br><span class=\"line\">android:selectAllOnFocus=&quot;true&quot;</span><br><span class=\"line\">获取焦点时是否选中自我</span><br><span class=\"line\">android:capitalize=&quot;cwj1987&quot;</span><br><span class=\"line\">这样仅允许接受输入cwj1987，一般用于密码验证</span><br><span class=\"line\"></span><br><span class=\"line\">android:imeOptions=&quot;actionNext&quot;</span><br><span class=\"line\">输入法选项，移动到下一个输入框</span><br><span class=\"line\">android:imeOptions=&quot;actionDone&quot;</span><br><span class=\"line\">输入法选项，关闭键盘</span><br><span class=\"line\">android:singleLine=&quot;true&quot;</span><br><span class=\"line\">是否单行显示</span><br><span class=\"line\"></span><br><span class=\"line\">3)密码明文密文显示</span><br><span class=\"line\">editText.setTransformationMethod(HideReturnsTransformationMethod.getInstance());</span><br><span class=\"line\">editText.setTransformationMethod(PasswordTransformationMethod.getInstance());</span><br><span class=\"line\"></span><br><span class=\"line\">四、按钮，图片按钮，图片（Button、ImageButton、ImageView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">button.setOnClickListener(new View.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">//点击事件</span><br><span class=\"line\">button.setOnTouchListener(new View.OnTouchListener() &#123;</span><br><span class=\"line\">//按钮等触摸事件</span><br><span class=\"line\">public boolean onTouch(View view, MotionEvent motionEvent) &#123;</span><br><span class=\"line\">switch (motionEvent.getAction())&#123;</span><br><span class=\"line\">case MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)Button属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:drawableTop=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:drawablePadding=&quot;10dp&quot;</span><br><span class=\"line\">android:onClick=&quot;onClick&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3)ImageButton属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:src=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">4)ImageView属性</span><br><span class=\"line\">android:background=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:src=&quot;@drawable/cal_edittext_bg&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">* 默认：不缩放，左上角开始绘制图</span><br><span class=\"line\">* center：不缩放，图像放在ImageView中间（用于小图片按钮）</span><br><span class=\"line\">* centerCrop：等比缩放，图片完全覆盖ImageView</span><br><span class=\"line\">* centerInside：等比缩放，使图片完全显示</span><br><span class=\"line\">* fitXY：独立缩放，贴合ImageView</span><br><span class=\"line\"></span><br><span class=\"line\">5)差异</span><br><span class=\"line\">* ImageButton不支持setText，而Button支持，ImageButton支持setImageURI，而Button不支持</span><br><span class=\"line\">* ImageButton有Button的状态，但是ImageView没有</span><br><span class=\"line\">* ImageButton拥有默认背景android:background=&quot;@android:drawable/btn_default&quot;</span><br><span class=\"line\">* ImageButton支持9.png图片，ImageView不支持</span><br><span class=\"line\">* 点9图片需要放在drawable-hdpi里面</span><br><span class=\"line\"></span><br><span class=\"line\">5.单选按钮，复选按钮，开关按钮（RadioGroup,RadioButton,CheckBox,ToggleButton）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\">checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\">toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">RadioGroup中的选中android:checkedButton=&quot;@+id/at_rb_rb1&quot;</span><br><span class=\"line\">CheckBox中的选中android:checked=&quot;true&quot;</span><br><span class=\"line\">ToggleButton就相当于CheckBox</span><br><span class=\"line\"></span><br><span class=\"line\">6.日期控件，时间控件（DatePicker,TimePicker）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">datePicker.init(year, month, day, new DatePicker.OnDateChangedListener() &#123;</span><br><span class=\"line\">@Override</span><br><span class=\"line\">public void onDateChanged(DatePicker datePicker, int year, int month, int day) &#123;&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">timePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:startYear=&quot;2005&quot;</span><br><span class=\"line\">android:endYear=&quot;2016&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3)日历类</span><br><span class=\"line\">Calendar calendar = Calendar.getInstance();</span><br><span class=\"line\">int year = calendar.get(Calendar.YEAR);</span><br><span class=\"line\">int month = calendar.get(Calendar.MONTH);</span><br><span class=\"line\">int day = calendar.get(Calendar.DAY_OF_MONTH);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7.滚动页面（ScrollView,HorizontalScrollView）</span><br><span class=\"line\">1)属性</span><br><span class=\"line\">android:scrollbars=&quot;none&quot;</span><br><span class=\"line\">// 设置滚动条</span><br><span class=\"line\"></span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">android:fillViewport=&quot;true&quot;</span><br><span class=\"line\">注：ScrollView里面只能存在一个组件，而且是垂直摆放的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">8.进度条，拖动条，评分条（ProgressBar,SeekBar,RatingBar）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() &#123;&#125;);</span><br><span class=\"line\">ratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)ProgressBar属性</span><br><span class=\"line\">style=&quot;@android:style/Widget.ProgressBar.Inverse&quot;</span><br><span class=\"line\">转圈圈</span><br><span class=\"line\">style=&quot;@android:style/Widget.ProgressBar.Horizontal&quot;</span><br><span class=\"line\">水平样式</span><br><span class=\"line\">android:max=&quot;100&quot;</span><br><span class=\"line\">最大值</span><br><span class=\"line\">android:progress=&quot;30&quot;</span><br><span class=\"line\">进度</span><br><span class=\"line\"></span><br><span class=\"line\">3)SeekBar属性</span><br><span class=\"line\">android:max=&quot;100&quot;</span><br><span class=\"line\">最大值</span><br><span class=\"line\">android:progress=&quot;30&quot;</span><br><span class=\"line\">进度</span><br><span class=\"line\">android:thumb=&quot;@mipmap/ic_launcher&quot;</span><br><span class=\"line\">控制图片</span><br><span class=\"line\"></span><br><span class=\"line\">4)RatingBar属性</span><br><span class=\"line\">android:numStars=&quot;5&quot;</span><br><span class=\"line\">星星总数量</span><br><span class=\"line\">android:rating=&quot;3.5&quot;</span><br><span class=\"line\">默认数量</span><br><span class=\"line\">android:stepSize=&quot;0.5&quot;</span><br><span class=\"line\">最小步伐</span><br><span class=\"line\">style=&quot;?android:attr/ratingBarStyleSmall&quot;</span><br><span class=\"line\">星星的样式</span><br><span class=\"line\"></span><br><span class=\"line\">5)线程是滚动条滚动</span><br><span class=\"line\">// 关注点：线程里面不能直接处理控件</span><br><span class=\"line\">new Thread(new Runnable() &#123;</span><br><span class=\"line\">public void run() &#123;</span><br><span class=\"line\">for(int i = 0;i&lt;=100;i++)&#123;</span><br><span class=\"line\">progressInt = i;</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">Thread.sleep(100);</span><br><span class=\"line\">&#125; catch (InterruptedException e) &#123;</span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">handler.sendEmptyMessage(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">// 用Handler处理接受的值</span><br><span class=\"line\">private Handler handler = new Handler()&#123;</span><br><span class=\"line\">public void handleMessage(Message msg) &#123;</span><br><span class=\"line\">switch (msg.what)&#123;</span><br><span class=\"line\">case 0:</span><br><span class=\"line\">progressBar.setProgress(progressInt);</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">super.handleMessage(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">9.网页控件（WebView）</span><br><span class=\"line\">1)WebView设置</span><br><span class=\"line\">WebView webView = (WebView) findViewById(R.id.tabspec1_wv_wv1);</span><br><span class=\"line\">WebSettings webSettings = webView.getSettings();    // 获取设置</span><br><span class=\"line\">webSettings.setJavaScriptEnabled(true);             // 设置能执行js脚本</span><br><span class=\"line\">webSettings.setAllowFileAccess(true);               // 设置可以访问文件</span><br><span class=\"line\">webSettings.setBuiltInZoomControls(true);           // 设置支持缩放</span><br><span class=\"line\">webView.loadUrl(&quot;file:///android_asset/welcome.html&quot;);// 加载页面（建asset文件夹，与res同级）</span><br><span class=\"line\"></span><br><span class=\"line\">//网页可在webView里面覆盖加载</span><br><span class=\"line\">webView.setWebViewClient(new WebViewClient()&#123;</span><br><span class=\"line\">public boolean shouldOverrideUrlLoading(WebView view, String url) &#123;</span><br><span class=\"line\">view.loadUrl(url);</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">2)返回键设置</span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">if ((keyCode == KeyEvent.KEYCODE_BACK) &amp;&amp; webView .canGoBack()) &#123; </span><br><span class=\"line\">webView.goBack();</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return false;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">3)网络权限</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * ==============================以下应用适配器======================================</span><br><span class=\"line\"> */</span><br><span class=\"line\">10.画廊、图片选择（Gallery和ImageSwitcher）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">gallery.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() &#123;&#125;);</span><br><span class=\"line\">// gallery选择事件，一般用于画布设图片</span><br><span class=\"line\">gallery.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\">// gallery点击事件</span><br><span class=\"line\"></span><br><span class=\"line\">2)Gallery属性</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:unselectedAlpha=&quot;0.6&quot;</span><br><span class=\"line\">android:spacing=&quot;4dp&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3)ImageSwitcher配置</span><br><span class=\"line\">imageSwitcher.setFactory(new ViewSwitcher.ViewFactory() &#123;</span><br><span class=\"line\">public View makeView() &#123;</span><br><span class=\"line\">ImageView imageView = new ImageView(TestActy.this);</span><br><span class=\"line\">imageView.setLayoutParams(new ImageSwitcher.LayoutParams(</span><br><span class=\"line\">ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT</span><br><span class=\"line\">));</span><br><span class=\"line\">imageView.setScaleType(ImageView.ScaleType.FIT_XY);</span><br><span class=\"line\">imageView.setBackgroundColor(0xff0000);</span><br><span class=\"line\">return imageView;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 设置图片</span><br><span class=\"line\">imageSwitcher.setImageResource(imgInt[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">11.自动提示框，下拉框（AutoCompleteTextView和Spinner）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() &#123;&#125;);</span><br><span class=\"line\">autoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)AutoCompleteTextView属性</span><br><span class=\"line\">android:completionHint=&quot;123&quot;</span><br><span class=\"line\">提示标题</span><br><span class=\"line\">android:completionThreshold=&quot;2&quot;</span><br><span class=\"line\">至少几个字符才会提示</span><br><span class=\"line\">android:dropDownWidth=&quot;match_parent&quot;</span><br><span class=\"line\">下拉框宽度</span><br><span class=\"line\">android:dropDownHeight=&quot;wrap_content&quot;</span><br><span class=\"line\">下拉框高度</span><br><span class=\"line\"></span><br><span class=\"line\">3)Spinner获值和设值</span><br><span class=\"line\">spinner.getSelectedItemPosition();</span><br><span class=\"line\">spinner.setSelection(i);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">12.网格（GridView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">android:numColumns=&quot;4&quot;</span><br><span class=\"line\">列数</span><br><span class=\"line\">android:verticalSpacing=&quot;10dp&quot;</span><br><span class=\"line\">垂直间隔</span><br><span class=\"line\">android:horizontalSpacing=&quot;10dp&quot;</span><br><span class=\"line\">水平间隔</span><br><span class=\"line\"></span><br><span class=\"line\">13.列表（ListView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">listView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)属性</span><br><span class=\"line\">宽高需要 match_parent</span><br><span class=\"line\">android:listSelector=&quot;@android:color/transparent&quot;</span><br><span class=\"line\">选中的背景色</span><br><span class=\"line\">android:divider=&quot;@null&quot;</span><br><span class=\"line\">无分割线</span><br><span class=\"line\">android:scrollbars=&quot;none&quot;</span><br><span class=\"line\">无滚动条</span><br><span class=\"line\">android:fadingEdge=&quot;none&quot;</span><br><span class=\"line\">渐变区域的宽度</span><br><span class=\"line\">android:scrollingCache=&quot;false&quot;</span><br><span class=\"line\">滚动缓存</span><br><span class=\"line\"></span><br><span class=\"line\">3)ListView消息更新</span><br><span class=\"line\">1.更新适配器里的数据源</span><br><span class=\"line\">2.刷新适配器</span><br><span class=\"line\">myAdapter.notifyDataSetChanged();</span><br><span class=\"line\">3.ListView设置动态效果</span><br><span class=\"line\">listView.smoothScrollToPosition(0);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">14.可展开的列表（ExpandableListView）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">expandableListView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)适配器配置</span><br><span class=\"line\">1.继承BaseExpandableListAdapter</span><br><span class=\"line\">2.用二维数组或者Item嵌套Item传递数据源</span><br><span class=\"line\"></span><br><span class=\"line\">3)设置ExpandableListView默认显示图标为null</span><br><span class=\"line\">expandableListView.setGroupIndicator(null);</span><br><span class=\"line\"></span><br><span class=\"line\">15.页面轮换器（ViewPager）</span><br><span class=\"line\">1)监听事件</span><br><span class=\"line\">viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() &#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">2)适配器配置</span><br><span class=\"line\">1.继承PagerAdapter</span><br><span class=\"line\">2.重写方法</span><br><span class=\"line\">public void destroyItem(ViewGroup container, int position, Object object) &#123;</span><br><span class=\"line\">container.removeView(imageViewList.get(position));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public Object instantiateItem(ViewGroup container, int position) &#123;</span><br><span class=\"line\">container.addView(imageViewList.get(position),0);</span><br><span class=\"line\">return imageViewList.get(position);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public int getCount() &#123;</span><br><span class=\"line\">return imageViewList.size();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public boolean isViewFromObject(View view, Object object) &#123;</span><br><span class=\"line\">return view == object;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">3)自定义选项卡设置页面</span><br><span class=\"line\">设置第几个选项：viewPager.setCurrentItem(0);</span><br><span class=\"line\"></span><br><span class=\"line\">16.AlertDialog</span><br><span class=\"line\">1)普通AlertDialog</span><br><span class=\"line\">customDialog.setCanceledOnTouchOutside(false);</span><br><span class=\"line\">// dialog</span><br><span class=\"line\">(1)AlertDialog的创建</span><br><span class=\"line\">if(alertDialog == null)&#123;</span><br><span class=\"line\">AlertDialog.Builder builder = new AlertDialog.Builder(context);</span><br><span class=\"line\">// 建造者模式，用Builder内部类去建造</span><br><span class=\"line\">builder.setTitle(&quot;提示框&quot;);</span><br><span class=\"line\">builder.setIcon(R.mipmap.ic_launcher);</span><br><span class=\"line\">builder.setMessage(&quot;确定退出吗&quot;);</span><br><span class=\"line\">builder.setPositiveButton(&quot;确定&quot;, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">builder.setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">alertDialog = builder.create();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alertDialog.show();</span><br><span class=\"line\"></span><br><span class=\"line\">(2)AlertDialog设置返回按钮，保证页面安全</span><br><span class=\"line\">@Override  </span><br><span class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">//重写父类onKeyDown方法</span><br><span class=\"line\">switch (keyCode)&#123;</span><br><span class=\"line\">case KeyEvent.KEYCODE_BACK:</span><br><span class=\"line\">if(alertDialog != null &amp;&amp; alertDialog.isShowing())&#123;</span><br><span class=\"line\">alertDialog.dismiss();</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">showAlertDialog();</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">return true;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">2)单选（SingleChoice）</span><br><span class=\"line\">setSingleChoiceItems(new String[]&#123;&quot;篮球&quot;,&quot;足球&quot;,&quot;排球&quot;&#125;, 0, new DialogInterface.OnClickListener() &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">3)复选（MultiChoice）</span><br><span class=\"line\">setMultiChoiceItems(new String[]&#123;&quot;篮球&quot;,&quot;足球&quot;,&quot;排球&quot;&#125;, new boolean[]&#123;false,false,false&#125;, new DialogInterface.OnMultiChoiceClickListener() &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">4)类单选（Items）</span><br><span class=\"line\">builder.setItems(arr, new DialogInterface.OnClickListener() &#123;&#125;);</span><br><span class=\"line\">// 和单选AlertDialog的区别是没有右边的单选按钮，且会有dismiss()效果</span><br><span class=\"line\"></span><br><span class=\"line\">5)时间日期对话框</span><br><span class=\"line\">new DatePickerDialog(Context.this, new DatePickerDialog.OnDateSetListener() &#123;&#125;,year,month,day_of_month).show();</span><br><span class=\"line\">new TimePickerDialog(Context.this, new TimePickerDialog.OnTimeSetListener() &#123;&#125;,hour_of_day,minute,true).show();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6)进度条对话框</span><br><span class=\"line\">progressDialog1 = new ProgressDialog(mContext);</span><br><span class=\"line\">progressDialog1.setTitle(&quot;大片&quot;);</span><br><span class=\"line\">progressDialog1.setMessage(&quot;下载中。。。&quot;);</span><br><span class=\"line\">progressDialog1.setCancelable(false);</span><br><span class=\"line\">// 响应系统返回键的语句</span><br><span class=\"line\">progressDialog1.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL); // 圈圈格式ProgressDialog.STYLE_SPINNER</span><br><span class=\"line\">progressDialog1.setMax(100);</span><br><span class=\"line\">progressDialog1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">7)绑定自定义布局或控件</span><br><span class=\"line\">builder.setView(view);</span><br><span class=\"line\"></span><br><span class=\"line\">8)自定义Dialog</span><br><span class=\"line\">1)自定义Dialog，继承Dialog</span><br><span class=\"line\">public MyCustomDialog(Context context) &#123;</span><br><span class=\"line\">super(context,R.style.MyDialog);</span><br><span class=\"line\">setContentView(R.layout.dialog_listviewdialog);</span><br><span class=\"line\">titleTV = (TextView) findViewById(R.id.listviewdialog_tv_title);</span><br><span class=\"line\">listViewLV = (ListView) findViewById(R.id.listviewdialog_lv_main);</span><br><span class=\"line\">queDingBN = (Button) findViewById(R.id.listviewdialog_bn_queding);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">2)实现style样式</span><br><span class=\"line\">style样式</span><br><span class=\"line\">&lt;style name=&quot;MyDialog&quot; parent=&quot;@android:style/Theme.Dialog&quot;&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowFrame&quot;&gt;@null&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowContentOverlay&quot;&gt;@null&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowBackground&quot;&gt;@android:color/transparent&lt;/item&gt;</span><br><span class=\"line\">&lt;item name=&quot;android:windowAnimationStyle&quot;&gt;@android:style/Animation.Dialog&lt;/item&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">9)自定义PopupWindow</span><br><span class=\"line\">popupWindow = new PopupWindow(view, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class=\"line\">popupWindow.setFocusable(true);</span><br><span class=\"line\">// 可获取焦点</span><br><span class=\"line\">popupWindow.setBackgroundDrawable(new BitmapDrawable());</span><br><span class=\"line\">// 响应系统返回键的语句</span><br><span class=\"line\">//方法一：</span><br><span class=\"line\">popupWindow.showAsDropDown(findViewById(R.id.main_bn_anxia));</span><br><span class=\"line\">//方法一：</span><br><span class=\"line\">popupWindow.showAtLocation(findViewById(R.id.main_bn_anxia), Gravity.BOTTOM,0,0);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">17.TabHost选项卡（弃用）：</span><br><span class=\"line\">1)布局</span><br><span class=\"line\">&lt;TabHost xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:id=&quot;@android:id/tabhost&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;FrameLayout</span><br><span class=\"line\">android:id=&quot;@android:id/tabcontent&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">&gt;&lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;TabWidget</span><br><span class=\"line\">android:id=&quot;@android:id/tabs&quot;</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">android:visibility=&quot;gone&quot;</span><br><span class=\"line\">&gt;&lt;/TabWidget&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:layout_width=&quot;fill_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;60dp&quot;</span><br><span class=\"line\">android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">android:gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;ImageView</span><br><span class=\"line\">android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">android:layout_weight=&quot;1&quot;</span><br><span class=\"line\">android:src=&quot;@mipmap/tabhost_1&quot;</span><br><span class=\"line\">/&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/TabHost&gt;</span><br><span class=\"line\">2)代码</span><br><span class=\"line\">tabHost = getTabHost();</span><br><span class=\"line\">//需要继承TabActivity</span><br><span class=\"line\">//添加进tabHost</span><br><span class=\"line\">tabHost.addTab(tabHost.newTabSpec(&quot;11&quot;).setIndicator(&quot;选项卡1&quot;).setContent(new Intent(TabHostActy.this, MyQQActivity.class)));</span><br><span class=\"line\">tabHost.addTab(tabHost.newTabSpec(&quot;22&quot;).setIndicator(&quot;选项卡2&quot;).setContent(new Intent(TabHostActy.this, TabSpec2Acty.class)));</span><br><span class=\"line\">//设置ImageView监听事件</span><br><span class=\"line\">public void onClick(View view) &#123;</span><br><span class=\"line\">imageView1.setImageResource(R.mipmap.tabhost_1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">switch (view.getId()) &#123;</span><br><span class=\"line\">case R.id.tabhost_tv_tv1:</span><br><span class=\"line\">imageView1.setImageResource(R.mipmap.tabhost_1_);</span><br><span class=\"line\">tabHost.setCurrentTab(0);</span><br><span class=\"line\">break;</span><br><span class=\"line\">case R.id.tabhost_tv_tv2:</span><br><span class=\"line\">imageView2.setImageResource(R.mipmap.tabhost_2_);</span><br><span class=\"line\">tabHost.setCurrentTab(1);</span><br><span class=\"line\">break;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">18.SlidingDrawer拖动框：（弃用）</span><br><span class=\"line\">&lt;SlidingDrawer</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;400dp&quot;</span><br><span class=\"line\">android:layout_alignParentBottom=&quot;true&quot;</span><br><span class=\"line\">android:handle=&quot;@+id/acty_test_iv_ic&quot;</span><br><span class=\"line\">android:content=&quot;@+id/acty_test_ll_ll&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&lt;ImageView</span><br><span class=\"line\">android:id=&quot;@+id/acty_test_iv_ic&quot;</span><br><span class=\"line\">android:layout_width=&quot;25dp&quot;</span><br><span class=\"line\">android:layout_height=&quot;17dp&quot;</span><br><span class=\"line\">android:src=&quot;@mipmap/a4z&quot;</span><br><span class=\"line\">android:scaleType=&quot;fitXY&quot;</span><br><span class=\"line\">/&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">android:id=&quot;@+id/acty_test_ll_ll&quot;</span><br><span class=\"line\">android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">android:background=&quot;#44000000&quot;&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/SlidingDrawer&gt;</span><br></pre></td></tr></table></figure>"},{"title":"git merge策略解析","date":"2022-06-25T16:00:00.000Z","_content":"\ngit merge策略解析\n\n<!--more-->\n\n## 命令\n``git merge BRANCH_NAME [-s, --strategy <strategy>] [-X, --strategy-option <option=value>]``\n\n## git merge策略，参数：``-s``\n\n- resolve\n- recursive\n- octopus\n- ours\n- subtree\n\n### resolve\n\n```\n这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。\n此策略会 “仔细地” 寻找其中一个共同祖先。\n由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。\n不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。\n所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。\n```\n\n### recursive\n\n```\n这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。\n```\n\n### octopus\n\n```\n此策略允许合并多个 git 提交节点（分支）。\n不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。\n此策略就是用来把多个分支聚集在一起的。\n```\n\n### ours\n\n```\n在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。\n\n你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。\n\n注意 recursive 策略中也有一个 ours 参数，与这个不同的。\n```\n\n### subtree\n\n```\n此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。\n```\n\n## git merge策略的参数，参数：``-X``\n\n- ours\n- theirs\n- ignore-space-change\n- find-renames=0\n- diff-algorithm={patience|minimal|histogram|myers}\n\n### resolve\n\n```\n-X ours（使用我们的）\n-X theirs（使用他们的）\n-X ignore-space-change（空格改动的话就忽略）\n-X find-renames=0（值越小，使文件越相同）\n-X diff-algorithm={patience|minimal|histogram|myers}（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）\n    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法\n```\n\n## git merge其他参数\n\n``git merge BRANCH_NAME``\n\n- no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认--ff）\n- no-edit             不进入编辑页面，直接提交\n- squash              创建一个单独的提交而不是做一次合并\n- stat                show a diffstat at the end of the merge\n- summary             (synonym to --stat)\n\n\n## git merge方案\n\n- 可使用``git merge-base -a [branch1] [branch2]``查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些\n- 使用``git merge --no-ff -s recursive -X ignore-space-change  -m \"Upgrade from xxx\" --no-edit -q [BRANCH_NAME]``合入代码\n- 使用``git ls-files -u``查看未合并的文件\n- 提交到审查系统修改后统一合入\n","source":"_posts/2022-6-26git merge策略解析.md","raw":"---\ntitle: git merge策略解析\ndate: 2022-6-26\ntags: [git, merge, 策略]\n---\n\ngit merge策略解析\n\n<!--more-->\n\n## 命令\n``git merge BRANCH_NAME [-s, --strategy <strategy>] [-X, --strategy-option <option=value>]``\n\n## git merge策略，参数：``-s``\n\n- resolve\n- recursive\n- octopus\n- ours\n- subtree\n\n### resolve\n\n```\n这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。\n此策略会 “仔细地” 寻找其中一个共同祖先。\n由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。\n不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。\n所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。\n```\n\n### recursive\n\n```\n这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。\n```\n\n### octopus\n\n```\n此策略允许合并多个 git 提交节点（分支）。\n不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。\n此策略就是用来把多个分支聚集在一起的。\n```\n\n### ours\n\n```\n在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。\n\n你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。\n\n注意 recursive 策略中也有一个 ours 参数，与这个不同的。\n```\n\n### subtree\n\n```\n此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。\n```\n\n## git merge策略的参数，参数：``-X``\n\n- ours\n- theirs\n- ignore-space-change\n- find-renames=0\n- diff-algorithm={patience|minimal|histogram|myers}\n\n### resolve\n\n```\n-X ours（使用我们的）\n-X theirs（使用他们的）\n-X ignore-space-change（空格改动的话就忽略）\n-X find-renames=0（值越小，使文件越相同）\n-X diff-algorithm={patience|minimal|histogram|myers}（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）\n    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法\n```\n\n## git merge其他参数\n\n``git merge BRANCH_NAME``\n\n- no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认--ff）\n- no-edit             不进入编辑页面，直接提交\n- squash              创建一个单独的提交而不是做一次合并\n- stat                show a diffstat at the end of the merge\n- summary             (synonym to --stat)\n\n\n## git merge方案\n\n- 可使用``git merge-base -a [branch1] [branch2]``查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些\n- 使用``git merge --no-ff -s recursive -X ignore-space-change  -m \"Upgrade from xxx\" --no-edit -q [BRANCH_NAME]``合入代码\n- 使用``git ls-files -u``查看未合并的文件\n- 提交到审查系统修改后统一合入\n","slug":"2022-6-26git merge策略解析","published":1,"updated":"2022-06-28T14:55:31.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooev000bnkvv5lm24y68","content":"<p>git merge策略解析</p>\n<span id=\"more\"></span>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p><code>git merge BRANCH_NAME [-s, --strategy &lt;strategy&gt;] [-X, --strategy-option &lt;option=value&gt;]</code></p>\n<h2 id=\"git-merge策略，参数：-s\"><a href=\"#git-merge策略，参数：-s\" class=\"headerlink\" title=\"git merge策略，参数：-s\"></a>git merge策略，参数：<code>-s</code></h2><ul>\n<li>resolve</li>\n<li>recursive</li>\n<li>octopus</li>\n<li>ours</li>\n<li>subtree</li>\n</ul>\n<h3 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。</span><br><span class=\"line\">此策略会 “仔细地” 寻找其中一个共同祖先。</span><br><span class=\"line\">由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。</span><br><span class=\"line\">不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。</span><br><span class=\"line\">所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"octopus\"><a href=\"#octopus\" class=\"headerlink\" title=\"octopus\"></a>octopus</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略允许合并多个 git 提交节点（分支）。</span><br><span class=\"line\">不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。</span><br><span class=\"line\">此策略就是用来把多个分支聚集在一起的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ours\"><a href=\"#ours\" class=\"headerlink\" title=\"ours\"></a>ours</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。</span><br><span class=\"line\"></span><br><span class=\"line\">你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。</span><br><span class=\"line\"></span><br><span class=\"line\">注意 recursive 策略中也有一个 ours 参数，与这个不同的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"subtree\"><a href=\"#subtree\" class=\"headerlink\" title=\"subtree\"></a>subtree</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge策略的参数，参数：-X\"><a href=\"#git-merge策略的参数，参数：-X\" class=\"headerlink\" title=\"git merge策略的参数，参数：-X\"></a>git merge策略的参数，参数：<code>-X</code></h2><ul>\n<li>ours</li>\n<li>theirs</li>\n<li>ignore-space-change</li>\n<li>find-renames&#x3D;0</li>\n<li>diff-algorithm&#x3D;{patience|minimal|histogram|myers}</li>\n</ul>\n<h3 id=\"resolve-1\"><a href=\"#resolve-1\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-X ours（使用我们的）</span><br><span class=\"line\">-X theirs（使用他们的）</span><br><span class=\"line\">-X ignore-space-change（空格改动的话就忽略）</span><br><span class=\"line\">-X find-renames=0（值越小，使文件越相同）</span><br><span class=\"line\">-X diff-algorithm=&#123;patience|minimal|histogram|myers&#125;（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）</span><br><span class=\"line\">    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge其他参数\"><a href=\"#git-merge其他参数\" class=\"headerlink\" title=\"git merge其他参数\"></a>git merge其他参数</h2><p><code>git merge BRANCH_NAME</code></p>\n<ul>\n<li>no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认–ff）</li>\n<li>no-edit             不进入编辑页面，直接提交</li>\n<li>squash              创建一个单独的提交而不是做一次合并</li>\n<li>stat                show a diffstat at the end of the merge</li>\n<li>summary             (synonym to –stat)</li>\n</ul>\n<h2 id=\"git-merge方案\"><a href=\"#git-merge方案\" class=\"headerlink\" title=\"git merge方案\"></a>git merge方案</h2><ul>\n<li>可使用<code>git merge-base -a [branch1] [branch2]</code>查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些</li>\n<li>使用<code>git merge --no-ff -s recursive -X ignore-space-change  -m &quot;Upgrade from xxx&quot; --no-edit -q [BRANCH_NAME]</code>合入代码</li>\n<li>使用<code>git ls-files -u</code>查看未合并的文件</li>\n<li>提交到审查系统修改后统一合入</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>git merge策略解析</p>","more":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p><code>git merge BRANCH_NAME [-s, --strategy &lt;strategy&gt;] [-X, --strategy-option &lt;option=value&gt;]</code></p>\n<h2 id=\"git-merge策略，参数：-s\"><a href=\"#git-merge策略，参数：-s\" class=\"headerlink\" title=\"git merge策略，参数：-s\"></a>git merge策略，参数：<code>-s</code></h2><ul>\n<li>resolve</li>\n<li>recursive</li>\n<li>octopus</li>\n<li>ours</li>\n<li>subtree</li>\n</ul>\n<h3 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这使用的是三路合并算法。的三路合并算法会存在发现多个共同祖先的问题。</span><br><span class=\"line\">此策略会 “仔细地” 寻找其中一个共同祖先。</span><br><span class=\"line\">由于不需要递归合并出虚拟节点，所以此方法合并时会比较快速，但也可能会带来更多冲突。</span><br><span class=\"line\">不敢说带来更多冲突是好事还是坏事，因为自动合并成功并不一定意味着在代码含义上也算是正确的合并。</span><br><span class=\"line\">所以如果自动合并总是成功但代码含义上会失败，可以考虑此合并策略，这将让更多的冲突变成手工合并而不是自动合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是默认的合并策略，如果你不指定策略参数，那么将使用这个合并策略。这将直接使用递归三路合并算法进行合并。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"octopus\"><a href=\"#octopus\" class=\"headerlink\" title=\"octopus\"></a>octopus</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略允许合并多个 git 提交节点（分支）。</span><br><span class=\"line\">不过，如果会出现需要手工解决的冲突，那么此策略将不会执行。</span><br><span class=\"line\">此策略就是用来把多个分支聚集在一起的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ours\"><a href=\"#ours\" class=\"headerlink\" title=\"ours\"></a>ours</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在合并的时候，无论有多少个合并分支，当前分支就直接是最终的合并结果。无论其他人有多少修改，在此次合并之后，都将不存在（当然历史里面还有）。</span><br><span class=\"line\"></span><br><span class=\"line\">你可能觉得这种丢失改动的合并策略没有什么用。但如果你准备重新在你的仓库中进行开发（程序员最喜欢的重构），那么当你的修改与旧分支合并时，采用此合并策略就非常有用，你新的重构代码将完全不会被旧分支的改动所影响。</span><br><span class=\"line\"></span><br><span class=\"line\">注意 recursive 策略中也有一个 ours 参数，与这个不同的。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"subtree\"><a href=\"#subtree\" class=\"headerlink\" title=\"subtree\"></a>subtree</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此策略使用的是修改后的递归三路合并算法。与 recursive 不同的是，此策略会将合并的两个分支的其中一个视为另一个的子树，就像 git subtree 中使用的子树一样。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge策略的参数，参数：-X\"><a href=\"#git-merge策略的参数，参数：-X\" class=\"headerlink\" title=\"git merge策略的参数，参数：-X\"></a>git merge策略的参数，参数：<code>-X</code></h2><ul>\n<li>ours</li>\n<li>theirs</li>\n<li>ignore-space-change</li>\n<li>find-renames&#x3D;0</li>\n<li>diff-algorithm&#x3D;{patience|minimal|histogram|myers}</li>\n</ul>\n<h3 id=\"resolve-1\"><a href=\"#resolve-1\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-X ours（使用我们的）</span><br><span class=\"line\">-X theirs（使用他们的）</span><br><span class=\"line\">-X ignore-space-change（空格改动的话就忽略）</span><br><span class=\"line\">-X find-renames=0（值越小，使文件越相同）</span><br><span class=\"line\">-X diff-algorithm=&#123;patience|minimal|histogram|myers&#125;（指定一个差异算法，myers是默认的，具体算法差异可通过man手册来查看）</span><br><span class=\"line\">    此策略的名称叫 “耐心”，因为 git 将话费更多的时间来进行合并一些看起来不怎么重要的行，合并的结果也更加准确。当然，使用的算法是 recursive 即递归三路合并算法</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"git-merge其他参数\"><a href=\"#git-merge其他参数\" class=\"headerlink\" title=\"git merge其他参数\"></a>git merge其他参数</h2><p><code>git merge BRANCH_NAME</code></p>\n<ul>\n<li>no-ff               强行关掉fast-forward，所以在使用这种方式后，分支合并后会生成一个新的commit（默认–ff）</li>\n<li>no-edit             不进入编辑页面，直接提交</li>\n<li>squash              创建一个单独的提交而不是做一次合并</li>\n<li>stat                show a diffstat at the end of the merge</li>\n<li>summary             (synonym to –stat)</li>\n</ul>\n<h2 id=\"git-merge方案\"><a href=\"#git-merge方案\" class=\"headerlink\" title=\"git merge方案\"></a>git merge方案</h2><ul>\n<li>可使用<code>git merge-base -a [branch1] [branch2]</code>查看两个分支或节点共同祖先，可提炼出需要合入的修改有哪些</li>\n<li>使用<code>git merge --no-ff -s recursive -X ignore-space-change  -m &quot;Upgrade from xxx&quot; --no-edit -q [BRANCH_NAME]</code>合入代码</li>\n<li>使用<code>git ls-files -u</code>查看未合并的文件</li>\n<li>提交到审查系统修改后统一合入</li>\n</ul>"},{"title":"食物药理及营养(5类66种)","date":"2018-06-04T16:00:00.000Z","_content":"\n食物药理及营养(5类66种)\n\n<!--more-->\n\n```\n一、谷类豆类\n\n1、糯 米\n［性味］味甘，性温粘滞。\n［功能］补中益气，暖脾胃，止泻痢，止溲止汗。\n［主治］脾胃虚弱，食少泄泻；气虚自汗；消渴口干；夜尿多，小便频数；神经衰弱、贫血等。\n［现代研究］含淀粉、蛋白质、脂肪、糖类、钙、磷、铁、维生素Ｂ1、维生素Ｂ2及烟酸等成分。\n\n2、粟 米\n［性味］味甘、咸，性凉。陈者性寒。也称秫米，小米。\n［功能］益脾胃，除烦热，益肾气，补虚损，利小便。\n［主治］脾胃虚弱反胃呕吐及脾虚泄泻，消化不良；胃热消渴，口干；热结膀胱，小便不利及病后、产后体弱等。\n［现代研究］含蛋白质、淀粉、糖类、脂肪、钙、磷、铁、胡萝卜素、硫胺素、尼克酸、核黄素及烟酸等成分。蛋白质中含多量谷氨酸、脯氨酸、丙氨酸和蛋氨酸。其所含营养成分与大米相比，蛋白质、脂肪、维生素比大米含量高，因此对于产妇、小儿尤为相宜。\n\n3、小 麦\n［性味］味甘，性微寒。\n［功能］养心益肾，健脾厚肠，除热止渴。\n［主治］脏躁心神不宁；失眠，烦热口干；肾气不足，小便不利；肠胃不固的慢性泄泻。\n［注意事项］小麦陈者平和，新者壅气助湿热。素蕴湿热者，当慎用。\n［现代研究］含淀粉、蛋白质、糖类、糊精、脂肪、谷甾醇、卵磷脂、尿胆素、精氨酸、淀粉酶、麦芽糖酶、蛋白酶及维生素Ｂ等。麦胚含植物凝集素。\n\n4、麦 片\n［性味］味甘，性平。\n［功能］补脾益胃，充饥滑肠。\n［主治］病后体虚、纳呆、便秘及糖尿病等。\n［现代研究］含蛋白质、维生素Ｂ1、维生素Ｂ2、脂肪及碳水化合物。\n\n5、荞 麦\n［性味］味甘，性凉。\n［功能］开胃宽肠，下气消积，清热利湿。\n［主治］肠胃积滞，腹痛胀满，湿热泄泻，痢疾，或湿热淋浊及妇女带下等。\n［注意事项］脾胃虚寒者不宜服，食之动寒气，发痼疾；不宜多食，多食难消，令人头晕；部分人食之可发生对光敏感症（又名荞麦病）或过敏性皮炎。\n［现代研究］含蛋白质、脂肪、维生素Ｂ及水杨胺等成分。其对皮肤可产生某些刺激，对某些人亦可产生各种过敏症状。\n\n6、高 梁\n［性味］味甘、涩，性温。\n［功能］益肠温中，涩肠止泻。\n［主治］脾胃虚弱，消化不良，便溏腹泻等。\n［用法］煎汤，研末，或煮粥服食。\n［现代研究］含碳水化合物、蛋白质、脂肪、磷、铁、钙及核黄素等。\n\n7、薏苡仁\n［性味］味甘、淡，性微寒。\n［功能］利水渗湿，健脾，除痹，清热排脓。\n［主治］脾虚湿盛水肿，小便不利，或脚气肿痛；脾虚泄泻；风湿痹痛，筋脉挛急；肺痈咳吐脓痰，肠痈拘急腹痛。此外，现又用于胃癌、肠癌等肿瘤以及扁平疣。\n［用法］煎汤，煮粥，或研末。本品力缓，用量须大，宜久服。健脾炒用，其余生用。\n［现代研究］含蛋白质、脂肪、淀粉、糖类、维生素Ｂ1、薏苡素、薏苡仁脂和亮氨酸、赖氨酸、精氨酸、酪氨酸等氨基酸。有报告称其对癌细胞，有阻止成长及伤害作用。\n\n8、赤小豆\n［性味］味甘、酸，性平。\n［功能］清热利水，散血消肿，通乳。\n［主治］水肿、脚气、黄疸或小便不利；痔疮下血、肠痈、腹泻；产后缺乳等。外敷可治热毒痈肿、血肿和扭伤。\n［用法］煎汤或研末服用。\n［注意事项］阴虚津枯者忌用。本品渗泄太过、瘦人多食之则令其愈瘦。\n［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、维生素Ｂ1、维生素Ｂ2和烟酸等。另含三种结晶性皂甙，能引起肠道泻下作用。\n\n9、绿 豆\n［性味］味甘，性凉。\n［功能］清热解毒，清暑利水。\n［主治］热病或暑热所致的心烦、口渴、发热；水肿或湿热泄泻；痈疖、痄腮、丹毒、痘疹及多种药、食物中毒。\n［用法］煎汤，研末磨浆，或煮粥服。\n［注意事项］本品皮寒肉平，用时不宜去皮。脾胃虚寒或阳虚体质不宜服。\n［现代研究］含蛋白质、糖类、脂肪、磷、钙、铁、胡萝卜素、维生素Ｂ1、维生素Ｂ2和烟酸等成份。有较明显的解毒、保肝作用。\n\n10、扁 豆\n［性味］味甘，性微温。又名蛾眉豆。\n［功能］健脾化湿。\n［主治］脾虚有湿，体倦乏力，食少便溏或泄泻；妇女脾虚带下；暑湿吐泻。\n［用法］健脾止泻宜炒用；消暑宜生用。煎汤，研末，或煮熟食。\n［注意事项］脾胃虚寒中满者，食之腹胀，宜慎用。\n［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、锌、维生素Ｂ1、维生素Ｂ2和烟酸、泛酸、豆甾醇、磷脂、氰甙、血球凝结素等成份。据药理研究：扁豆含有一种毒蛋白，豆荚上有一种溶血素。此二物须高温方能被破坏，若加热不够，食后可发生恶心、呕吐、腹痛、头晕等中毒症状。\n\n二、肉类\n\n11、猪 肝\n［性味］苦寒。\n［功能］养肝明目及补血。\n［主治］肝虚血枯及失血后的眼花、夜盲、失眠、大便不畅及贫血等。\n\n12、猪肚\n［性味］ 味甘微温。\n［功能］补益脾胃。\n［主治］用于脾虚腹泻、虚劳瘦弱、消渴、小儿疳积、尿频或遗尿。猪肚为猪全身胆固醇含量最低的部分，适宜各种年龄和体质的人食用。\n\n13、猪 脾\n［性味］ 味甘性平。又称联贴。\n［功能］益脾胃，助消化。\n［主治］多用于小儿脾胃虚弱、饮食不化、食欲减退。\n\n14、猪 肾\n［性味］ 味甘、咸，性平。俗称猪腰子。\n［功能］补肾、止遗、止汗、利水。\n［主治］用于肾虚耳聋、腰痛、遗精盗汗、身面浮肿等。猪肾的胆固醇含量较高，不宜常食和多食。\n\n15、猪 蹄\n［性味］ 味甘、咸，性平。\n［功能］有补血、通乳、托疮之功，可用于产后奶少，痈疽疮疡等。催乳可用本品或加黄芪、当归炖熟服食。\n\n16、牛 肉\n［性味］味甘，性平（水牛肉性偏寒）\n［功能］补脾胃，益气血，强筋骨。\n［主治］虚损羸瘦；腰膝酸软，筋骨不健；脾虚食少及水肿等。\n［注意事项］牛肉为发物，患疮疥湿疹、痘痧、瘙痒者，食后病情可能加重，宜慎用。\n［现代研究］含蛋白质、脂肪、无机盐及维生素等。牛肉蛋白质所含必需氨基酸甚多，故其营养价值甚高。\n\n17、羊 肉\n［性味］味甘，性温。\n［功能］补气养血，温中暖肾。\n［主治］气血不足，虚劳羸瘦；脾胃虚冷，腹痛，少食或欲呕；肾虚阳衰，腰膝酸软，尿频，阳痿。\n［注意事项］各种急性炎症、外感发烧、热病初愈、皮肤疮疡、漆疮、疖肿及各种出血病患者均应忌食。孕妇及素有体热者不宜食。\n［现代研究］含丰富的蛋白质、脂肪、磷、铁、钙、维生素Ｂ1、维生素Ｂ2和烟酸、脂甾醇等成分。\n\n18、羊肝\n味甘性平。功能补血益肝，明目。适用于血虚萎黄瘦弱、肝虚视力减退、青光眼、雀盲等，可单用熟食或蘸醋食。现代研究表明，以羊肝６０克，香油３０克，炒热，入少许盐即可，小吃或佐餐食用，可治慢性咳嗽。\n\n19、羊鞭\n味甘、咸，性温。为羊的阴茎和睾丸。功能补肾、壮阳、益精。可用于下部虚寒之阳痿遗精、带下等。可煨烂，或熬粥食。\n\n20、羊肾\n味甘性温。功能补肾气、益精髓。用于肾虚劳损、腰脊疼痛、足膝萎弱、耳聋、消渴、阳痿、尿频、遗精等。可切片与大米煮粥食。\n\n21、狗 肉\n［性味］味甘、咸，性温。\n［功能］温补脾胃，温肾助阳。\n［主治］脾胃虚寒，胀满少食；肾阳不足，腰膝酸软，肢体欠温，阳痿遗精，夜多小便；脾虚水肿。\n［注意事项］狗肉性温能散，食之易发热动火以及壮阳，故青壮年时期、热病恢复期、各种出血疾患以及各种急性炎症、湿疹、痈疽、疮疡、阴虚内热者及妊娠妇女均应忌食。且不宜春、夏季用。食狗肉忌蒜、忌茶，若食后口燥可饮米汤解之。\n［现代研究］除含一般营养成分外，尚含嘌呤类和肌肽、肌酸、钾、钠、氯等成分。\n\n22、黄狗肾（狗鞭）\n味甘、咸，性温。为黄狗的阴茎和睾丸。功能补肾壮阳、益精。可用于肾虚阳衰所致的男子阳痿、阴冷、或畏寒肢冷，腰酸尿频等。可单用煮熟，或研末，温开水送服。\n\n23、鸡 肉\n［性味］味甘，性温。\n［功能］温中益气养血，补肾益精添髓。\n［主治］虚劳瘦弱，病后体弱乏力；中虚食少、泄泻；气血不足，头晕心悸，或产后乳汁缺乏；肾虚之小便频数、遗精、耳聋耳鸣、月经不调；脾虚水肿；疮疡久不愈合等。\n［注意事项］高血压、口腔溃疡、急生炎症、皮肤疖肿、大便秘结者均不宜食；幼儿、体盛之人不宜多食；鸡尾部有个法氏囊，它可能有各种病菌及癌细胞的聚结，故不宜食用。\n［现代研究］含丰富的蛋白质、脂肪、钙、磷、铁、镁、钾、钠和烟酸等成分，还含有Ａ、Ｂ1、Ｂ2、Ｃ、Ｅ等多种维生素。脂肪含量较少，其中含有高度不饱和脂肪酸。另含胆固醇、组氨酸。\n\n24、乌骨鸡\n［性味］味甘，性平。\n［功能］养阴退热，益脾补中。\n［主治］肝肾阴虚，骨蒸潮热，盗汗，口渴；脾虚泄泻；脾虚或脾肾两虚，遗精，白浊或妇女带下。\n\n25、鸭 肉\n［性味］味甘、咸，性微寒。\n［功能］养胃滋阴，清虚热，利水消肿。\n［主治］虚劳骨蒸发热，咳嗽痰少，咽喉干燥；阴虚阳亢之头晕头痛；水肿，小便不利。\n［注意事项］脾虚便溏腹泻，或外感未清的病人不宜用。食鸭肉忌大蒜、木耳和鳖肉。\n［现代研究］含蛋白质、脂肪、少量的碳水化合物，无机盐钙、磷、铁，以及维生素Ｂ1、维生素Ｂ2等。\n\n26、鹅 肉\n［性味］味甘，性平。\n［功能］补虚益气，和胃止渴。\n［主治］中气不足，消瘦乏力，食少；气阴不足的口渴、气短、咳嗽等。\n\n27、麻雀肉\n［性味］味甘，性温。\n［功能］补益精髓，补肾壮阳，缩小便。\n［主治］肾气虚衰，精髓不足所致的眩晕耳鸣、腰膝酸软、阳痿早泄、小便频数或余沥不尽，百日咳等。\n［用法］煨食，熬膏，煎汤。或入丸、散。\n［注意事项］阴虚火旺者或阳盛及阳强易举者忌用；孕妇，大便秘结、小便短赤、各种血液病、各种炎症者也均应忌食；春夏季节不宜食雀。\n［现代研究］含蛋白质、脂肪、钙、磷、铁等成分。\n\n28、燕 窝\n［性味］味甘，性平。\n［功能］滋阴润肺，补脾益气。\n［主治］阴虚肺燥，咳嗽痰喘，或肺痨咯血；久痢，老年疟疾及久疟；胎热或噎隔反胃。\n［用法］用绢包煎汤，用开水发过，隔水炖或蒸熟服食。\n［注意事项］脾胃虚寒，痰饮停滞及有外感的病人不宜用。\n［现代研究］其成分以蛋白质为主，氨基酸的主要成分为精氨酸、胱氨酸、赖氨酸、色氨酸、酪氨酸等，还含氨基已糖及类似粘蛋白的物质，灰分中以钙、磷、钾、硫为主。\n\n29、鹿 肉\n［性味］味甘，性温。\n［功能］益气血，补虚羸，补肾益精。\n［主治］虚损羸瘦，气血不足，体倦乏力，或产后缺乳；肾阳虚衰，肾精不足，腰脊酸软，畏寒肢冷，阳痿精少。\n［用法］煮食，或煎汤。\n［注意事项］阳盛或阴虚有热者不宜食；炎热季节不宜食，面部有痤疮、皮疹、湿疹和各种炎症的患者应禁食；儿童、青少年除遵医嘱之外应该忌食。\n\n30、鹿 鞭\n［性味］味甘、咸，性温。\n［功能］补肾，壮阳，益精。\n［主治］肾虚阳衰，精血不足所致的眩晕耳鸣耳聋，腰膝酸软，阳痿，或妇女宫寒不孕等。\n［用法］煮粥食，煎汤，也可研末服用。\n［注意事项］凡阴虚火旺所致的咽喉干痛、出血症、阳强易举、便秘、心烦以及外感实热等症忌用。\n\n三、水产类\n\n31、鲤 鱼\n［性味］味甘，性平。\n［功能］健脾益气，利水消肿，下气通乳。\n［主治］产后或病后虚弱；脾胃虚弱，食少便溏；脾虚水肿，小便不利，或脚 气，黄疸；产后乳少及咳嗽、气逆等。\n［注意事项］痘疹、瘙痒、疥癣等症患者忌用。鲤鱼胆味苦有毒，勿使污染鱼肉。\n［现代研究］含蛋白质，脂肪，胱氨酸，谷氨酸，组氨酸，甘氨酸等２０余种氨基酸，维生素Ａ、Ｂ1、Ｂ2、，蛋白酶，钙，磷，铁，肌酸等。\n\n32、鲫 鱼\n［性味］味甘，性平。\n［功能］健脾利湿。\n［主治］脾虚食少，乏力，浮肿，小便不利等。本品除内服外，煅灰存性，可以外敷痞肿、乳癌。其头煮汤可治脱肛，子宫下垂；其子能明目。\n［现代研究］含蛋白质，氨基酸，钙，磷，铁及维生素Ａ、Ｂ1、Ｂ2等。\n\n33、黄花鱼\n［性味］味甘，性平。\n［功能］补虚益精，开胃消食，调中止痢。\n［主治］久病体虚，面黄羸瘦，目昏神倦；脾胃虚弱，少食腹泻或营养不良；脾虚水肿等。\n［注意事项］黄鱼古称发物，认为“多食发疮助热”。少数过敏体质者应加注意。且多食助湿生痰，胃呆痰多者宜慎。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2、烟酸和钙、磷、铁、碘等成分。\n\n34、鳝 鱼\n［性味］味甘，性温。\n［功能］补气益血，强筋骨，祛风湿，止血。\n［主治］气血不足，虚羸瘦弱；产后恶露不尽或久痢；痔疮出血而气虚血亏者；风寒湿痹，肢体酸痛，足痿无力等。\n［用法］煎炒，煮食，或作丸、散。\n［注意事项］凡病属虚热，或时病前后及痢疾、腹胀满诸实症均不宜用。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ1和烟酸等成分。经药理研究证实，鳝鱼含有降血糖和调节血糖的物质，故糖尿病人常食有益。\n\n35、泥 鳅\n［性味］味甘，性平。\n［功能］补中，益肾，祛湿。\n［主治］脾虚弱，脱肛；湿热黄疸，小便不利；肾气不足，阳痿早泄；消渴；痔疮，疮癣瘙痒等。本品诸病不忌，是肝病，糖尿病，泌尿系统疾病的食疗上品。\n［注意事项］泥鳅忌狗肉。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ2、和烟酸等成分。有利胆作用，能明显地促使黄疸消退及转氨酶下降。\n\n36、鲇 鱼\n［性味］味甘，性平。\n［功能］补脾，益血，催乳，利尿。\n［主治］气血不足或营养不良；脾虚水肿，小便不利；产后气血虚亏，乳汁不足等；鲇鱼目煅灰，可涂皮肤脓疮。鲇鱼尾生贴，可治口眼歪斜。\n［注意事项］鲇鱼卵有一定毒性，不宜食用。\n［现代研究］含蛋白质，脂肪，糖类，钙，磷，铁等成分。\n\n37、鱼 鳔\n［性味］味甘，性平。即黄鱼、鲟鱼、蝗鱼等肚中的鳔胶。\n［功能］补肾益精，滋养筋脉，散瘀消肿，止血。\n［主治］肾虚阳痿遗精；产后抽搐；血瘀肿痛；吐血崩漏，痔疮等。\n［用法］炒食。炖食，或熬膏服。\n［现代研究］含蛋白质、脂肪等。\n\n38、河 虾\n［性味］味甘，性温。\n［功能］补肾壮阳，通乳托毒。\n［主治］肾虚阳痿，产后乳少，体虚，麻疹、水痘出而不畅及痈疽疮疡等。\n［用法］煮汤，油炸，烧菜，研末。\n［注意事项］本品性湿易动风，故高血压患者，急性炎症和面部痤疮患者，不宜食。\n［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁等成分。\n\n39、螃 蟹\n［性味］味咸性寒。有河蟹、海蟹，二者功用同。\n［功能］续筋接骨，活血行瘀，利湿退黄，清热解毒。\n［主治］跌打损伤，损筋伤骨，血瘀肿痛；妇人产后血瘀腹痛，难产、胎衣不下；湿热黄疸；咽喉肿痛等。\n［用法］浸酒，油炸，煎汤，作丸、散等。\n［注意事项］外感寒邪未净，咳嗽便泻或脾胃虚寒者忌用；本品易动风，素有风痰（曾患中风、面瘫等症）者不宜食用；月经过多、痛经、妊娠妇女及各种出血病应忌食。\n［现代研究］肉的内脏含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁及谷氨酸、甘氨酸、脯氨酸、组氨酸、精氨酸等多种氨基酸，微量的胆甾醇。蟹壳含碳酸钙、蟹红素、甲壳素、蛋白质等。\n\n40、墨 鱼\n［性味］味甘，咸，性平。\n［功能］补肝肾。养血滋阴。\n［主治］精血亏损，头晕耳鸣，遗精早泄；血虚所致的经闭、崩漏、产后乳汁少及老人虚弱者。\n［用法］煮食，或鲜用炒食。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2和烟酸、钙、磷、铁等成分。\n\n41、甲 鱼\n［性味］味甘，性平。\n［功能］滋补肝肾，凉血。\n［主治］肝肾阴虚，劳热骨蒸，或虚劳咳嗽；冲任虚损，崩漏带下；久疟不止；瘰疬，十二指肠溃疡；肝脾肿大等。\n［用法］蒸食，或炖汤。\n［注意事项］滋腻之品，不宜多食，以免引起胃弱和消化不良。痰湿壅盛者，宜慎用。\n［现代研究］肉含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，钙，磷，铁和烟酸等成分。甲含动物胶、角质蛋白、碘、维生素Ｄ。能抑制肿瘤细胞的生长，提高机体的免疫功能。\n\n42、乌 龟\n［性味］味甘、咸，性平。\n［功能］滋阴补血。\n［主治］阴虚劳热骨蒸；久嗽咯血、吐血、便血；肝肾阴虚，月经闭止；疟疾等。\n［现代研究］肉含蛋白质、脂肪、钙、磷等。能抑制肿瘤细胞Ｓ180`ＥＣ等，并可增强机体免疫功能。\n\n43、田 螺\n［性味］味甘、咸，性寒。\n［功能］清热利湿，明目，退黄。\n［主治］湿热淋症，水肿，小便不利；风热目赤痛；黄疸；痔疮便血、消渴等。\n［用法］煎汤，或煮食。\n［注意事项］性寒，过食易令人腹泻。\n［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2、Ｄ，钙、磷、铁和烟酸等成分。\n\n44、牡 蛎\n［性味］味甘、咸，性平。又名海蛎子 。\n［功能］滋阴养血，养心安神。\n［主治］虚损劳疾，阴虚血亏；失眠心悸，心神不安等。\n［用法］煎汤，烧菜，油炸。\n［注意事项］牡蛎肉可生吃，脾虚者忌用。\n［现代研究］含糖元，牛磺酸，１０种必需氨基酸，谷胱甘酸，维生素Ａ、Ｂ1、Ｂ2、Ｄ、Ｅ，岩藻糖及铜、锌、锰、钡、磷、钙、镁、铝、氧化铁等成分。牡蛎肉内含能促进儿童智力的微量元素锌，故又有益智海味之称。\n\n45、海 参\n［性味］味甘、咸，性温。\n［功能］益精血，补肾气，润肠燥，止血。\n［主治］精血亏损，虚衰瘦弱；肾虚不固之遗精尿频，或肾虚阳痿；阴血亏虚，肠燥便秘；结核病咯血，崩漏下血或皮下出血。另脑外伤后或大脑发育不良，常食海参，有补肾健脑之效。\n［用洁］煎汤，煮食，爆炒，或入丸剂。\n［注意事项］脾运不健，痰湿壅滞或便溏腹泻及病邪未尽者忌用。\n［现代研究］含蛋白质、脂肪、糖类、钙、磷、铁、碘、维生素Ｂ1、维生素Ｂ2、和烟酸等。海参蛋白质中所含氨基酸为精氨酸、胱氨酸、组氨酸等。另含海参毒素。近人发现海参煮食可防护宫颈癌放射治疗的直肠反应。海参毒素能抑制Ｓ180及Ｋｒｅｂｓ－ａ腹水癌的生长，抑制多种霉菌。\n\n46、海 蜇\n［性味］味咸，性平。\n［功能］清热化痰，消积，润肠。\n［主治］阴虚肺燥，痰热咳嗽，喘息；瘰疬痰核；食积痞胀；大便燥结。现代用以治疗高血压病亦有效。\n［用法］煎汤，蒸、煮食，或生吃（凉拌）。\n［注意事项］脾胃虚弱及虚寒者不宜服用。生食难以消化，故不可过量。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2的烟酸、钙、磷、铁、碘的胆碱等成分。有降压、扩张血管及乙酰胆碱样作用。\n\n47、海 带\n［性味］味咸，性寒。\n［功能］软坚化痰，清热利水。\n［主治］瘿瘤结核；疝气，症瘕；水肿，脚气等。\n［用法］煎汤，煮食，或作丸、散。\n［注意事项］体虚及孕妇不宜用。\n［现代研究］含大叶藻素，维生素Ｂ2、蛋白质、脂肪、戊聚糖、鞣质、碘等成分。\n\n48、紫 菜\n［性味］味甘，性平。\n［功能］软坚化痰散结，清热利尿。\n［主治］瘿瘤，瘰疬；咳嗽痰稠或肺痈初起；脚气，水肿，热淋尿赤涩痕等。\n［用法］煎汤，煮食，或作丸，散。\n［注意事项］脾虚消化不良者多食可致腹胀。\n\n四、果品蔬菜类\n\n49、枸 杞\n［性味］味甘，性平。\n［功能］滋补肝肾，明目，润肺。\n［主治］肝肾阴虚之头晕耳鸣、腰膝酸软、遗精消渴；精血不足之眼目昏花、视力减退；阴虚劳嗽。\n［用法］生食、煎汤、熬膏、浸酒。\n［注意事项］脾虚有湿痰者及脾胃虚弱、经常腹泻者不宜食。\n［现代研究］含甜菜碱、氨基酸、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ，钙、磷、铁等成分。有降低胆固醇的作用。\n\n50、核 桃\n［性味］味甘，性温。\n［功能］滋补肝肾，补气养血，温肺润肠。\n［主治］肾虚所致的喘嗽、腰痛脚弱、阳痿遗精、尿频石淋；习惯性便秘，老年人便秘。\n［用法］生食或煮食。补肾多连内皮熟用；润肠则以去内皮生用为好。\n［现代研究］含脂肪、蛋白质、碳水化合物、钙、磷、铁、胡萝卜素、核黄素，以及维生素Ａ、Ｂ、Ｃ、Ｅ等。其含有较高的不饱和脂肪酸，能预防动脉硬化，对高血压、冠心病有益。\n\n51、白 果\n［性味］味甘、苦、涩，性平。\n［功能］敛肺定喘，缩尿止带，止泻，益脾。\n［主治］肺虚喘咳、哮喘；气虚或肾虚不固之遗尿、尿频、肾虚遗精；脾虚或脾肾两虚，带下，白浊、腹泻。\n［用法］熟食，或入丸、散剂。\n［注意事项］不可生食。不能多食，每次以服１０～１５克为宜，否则易于中毒。\n［现代研究］含蛋白质、氨基酸、脂肪、胡萝卜素、维生素Ｂ2、钙磷、铁和微量氢氰酸等成分。\n\n52、莲 子\n［性味］味甘、涩，性平。\n［功能］补脾止泻，益肾固精，养心安神。\n［主治］脾虚久泻，食欲不振；肾虚遗精、滑精；虚烦、心悸怔忡。也可作于妇女崩漏、白带过多等症。\n［用法］生食，熟食，煎汤，或入丸、散剂。\n［注意事项］大便燥结者不宜食。\n［现代研究］含淀粉、蛋白质、脂肪、棉子糖、天门冬素及蜜三糖、钙、磷、铁等。\n\n53、芡 实\n［性味］味甘、涩，性平。\n［功能］补脾止泻止带，益肾固精。\n［主治］脾虚久泻；肾虚遗尿尿频；妇女白带过多等。\n［用法］煮粥或研末，煎汤服。\n［现代研究］含大量淀粉及少量蛋白质、磷、钙、尼克酸、核黄酸、胡萝卜素等。\n\n54、栗 子\n［性味］味甘，性温。\n［功能］补肾强腰，益脾胃，止泻。\n［主治］肾虚腰膝无力，筋骨肿痛；脾胃虚弱或脾肾阳虚，便溏腹泻、久泻等。\n［用法］生食或熟食。\n［注意事项］生食不易消化，熟食又易带气膈食，故不宜多食。\n［现代研究］含淀粉、糖、蛋白质、脂肪等，此外尚含较高的维生素Ｃ以及胡萝卜素、核黄素、尼克酸等多种维生素。\n\n55、冬 瓜\n［性味］味甘、淡，性微寒。\n［功能］清热化痰，生津止渴，利尿消肿，解毒。\n［主治］痰热咳喘，热病烦渴，水肿，小便不利。痔疮疼痛可用冬瓜煎汤外洗；食鱼蟹或河豚中毒，可用鲜冬瓜绞汁或捣汁频饮。常食可用于减肥。\n［用法］煎汤，绞汁或熟食。作菜食。\n［注意事项］脾胃虚寒，阳气不足，阴虚消瘦者不宜食。\n［现代研究］含蛋白质、糖类、粗纤维、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ、烟酸等成分。\n\n56、苦 瓜\n［性味］味苦，性寒。\n［功能］清热解暑，明目，解毒。\n［主治］热病或暑热烦渴，暑疖，痱子过多；肝热目赤疼痛；痈肿、火烫伤、痢疾等。\n［注意事项］脾胃虚寒者宜少食。\n［现代研究］含苦瓜甙、５－羟基色胺、谷氨酸、丙氨酸、脯氨酸、a－氨基丁酸、瓜氨酸、半乳糖醛酸、果胶等成分。苦瓜浆汁或苦瓜有降低血糖的作用。近年来发现苦瓜中有一种苦瓜蛋白脂类成分，是一种有待开发，前景诱人的抗癌物质。\n\n57、韭 菜\n［性味］味甘、辛，性温。\n［功能］补肾助阳，温中行气，散瘀。\n［主治］肾阳虚衰，阳痿遗精或遗尿，腰膝冷痛；噎膈反胃，食积腹痛，便秘；胸痹作痛，跌打损伤肿痛等。\n［用法］捣汁饮，炒菜或作馅，煮汤食等。\n［注意事项］本品不宜久煎，久炒，阴虚内热、疮疡、疱疹、目疾者不宜食。\n［现代研究］含挥发油、硫化物、甙类、蛋白质、脂肪、糖类、胡萝卜素和维生素Ｂ、维生素Ｃ、纤维素及钙、磷、铁等成分。现代医学研究证明，韭菜中所含的挥发性精油及硫化合物具有降低血脂作用。同时，韭菜纤维素有利便作用，减少对食物中胆固醇的吸收而增加排泄，故韭菜对高血脂及冠心病人有好处。\n\n58、香 菜\n［性味］味辛，性温。又名芫荽。\n［功能］发汗透疹，解毒。果实芳香理气，健胃。\n［主治］小儿麻疹，风疹透发不畅，流感以及食肉类食物中毒等。果实可用于胸膈胀闷，胃弱消化不良，胃寒痛，噎膈，反胃。\n［用法］煎汤或凉拌食。\n［注意事项］患脚气、金疮及阴虚火旺者不宜食。\n［现代研究］全草含维生素Ｃ。果实含有挥发油，称胡荽油，油中主要成分为６０％～７０％的Ａ－沉香木醇、松萜、二聚戊稀、醋酸冰片酯、醋酸沉香萜脂等。此外尚含脂肪油。\n\n59、生 姜\n［性味］味辛，性温。\n［功能］发汗解表，温中止呕，温肺止咳，解毒。\n［主治］感冒风寒，恶寒发热头痛；胃寒呕吐泄泻、反酸；肺寒咳嗽，痰多色白清稀；食鱼蟹中毒等。\n［用法］煎汤，生食，捣汁冲服或作调味品。\n［注意事项］阴虚火旺及热盛者忌食。\n［现代研究］含辛辣和芳香气味的挥发油。油中主要成分为姜醇、姜烯、姜油萜、姜酚、龙脑、枸橼酸等。\n\n60、大 蒜\n［性味］味辛，性温。\n［功能］温中健胃，消食理气，解毒杀虫。\n［主治］脘腹冷痛，饮食积滞，饮食不洁或食物中毒所致的呕吐腹泻，痢病；蛲虫病，钩虫病；肺结核，百日咳；外感风寒感冒头痛；痈疖肿毒，癣疮等。现代又用于高血压病、高血脂症、流感、流脑等。\n［用法］生食，煨食，煮食，煎汤，捣泥为丸服或制糖浆服。外用捣敷，切片或隔蒜灸。\n［注意事项］大量服用，可减少胃液分泌。有抗菌、抗原虫的作用，一般紫皮蒜强于白皮蒜，生用强于熟用。凡阴虚火旺及有目疾、舌、喉、口齿、狐臭诸疾均不宜食。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ｂ1、维生素Ｃ、胡萝卜素、糖类、挥发油，主要成分为大蒜辣素、大蒜新素。此外，尚含大蒜甙。本品可防癌。大蒜中的蒜辣素又可刺激胃液分泌，增进食欲，帮助消化。\n\n61、香 菇\n［性味］味甘，性平。\n［功能］补脾益气，透疹。\n［主治］脾胃虚弱，食欲减退，少气乏力；小儿麻疹透发不畅。现代又可用于佝偻病、高血压、动脉硬化、高血脂症、糖尿病、慢胜肝炎、肾炎、肿瘤（如胃癌、子宫颈癌）等。\n［用法］煎汤，煮食，炖食等。\n［现代研究］含脂肪、蛋白质、粗纤维、维生素Ｄ原、维生素Ａ原、维生素Ｂ族、酶及嘌呤等。本品有降低血脂的作用（包括血清甘油三酯、磷脂、总酯），香菇麦角甾醇经日光或紫外线照射可能转变为维生素Ｄ2，可抗佝偻病。\n\n62、木 耳\n［性味］味甘，性平。\n［功能］凉血止血，润肺益胃，益气补血。\n［主治］吐血、便血或血痢、痔疮出血、妇女崩漏；肺燥咳嗽，或胃阴不足，咽干口燥；气虚脱肛或妇女产后虚弱、抽筋麻木等。\n［注意事项］便溏腹泻者不宜食。\n［现代研究］含糖、蛋白质、粗纤维、磷、钙、胡萝卜素、维生素Ｂ1、维生素Ｂ2、麦角甾醇、卵磷脂、鞘磷脂、黑刺菌素等。有报道本品能减少血液凝块，有防止动脉粥样硬化、冠心病的作用。\n\n五、 蛋奶类\n\n63、鸡 蛋\n［性味］味甘，性平。\n［功能］滋阴益血润燥，养心除烦安神。\n［主治］血虚所致的妇女月经不调，乳汁减少，眩晕，夜盲；病后体虚，营养不良；肺痨咯血，阴虚肺燥之咳嗽痰少，咽干喉痛，阴血不足之失眠烦躁、心悸，小儿惊痫，每天服５～１０毫升蛋黄油也可用于小儿消化不良。\n［用法］煎、炒、蒸、煮、冲食均可。\n［注意事项］不宜生食。老人宜少吃蛋黄，多吃蛋清。\n［现代研究］含蛋白质及人体必需的八种氨基酸；脂肪中含多量卵磷脂、甘油三脂、胆固醇和蛋黄素。尚含铁、磷、钙等矿物质及维生素Ａ、Ｂ2、Ｂ6、Ｄ、\nＥ和烟酸等。鸡蛋中含有大量的卵磷脂（尤其是蛋黄）。\n\n64、鹌鹑蛋\n［性味］味甘，性平。\n［功能］补益气血，强身健脑。\n［主治］肺痨咳嗽，久病或年老体弱，心悸失眠，体倦食少，小儿营养不良。现代又用于神经衰弱，高血压，动脉硬化，气管炎，慢性胃炎。\n［现代研究］含较高的蛋白质及丰富的脑磷脂、卵磷脂，尚含铁和维生素等。据近年研究报道，本品的所含蛋白质、卵磷脂、维生素和铁等成分均较鸡蛋高，而胆固醇含量则较鸡蛋低１／３，所以本品是年老人及心脑血管病患者的理想食疗品。\n\n65、牛 奶\n［性味］味甘，性平。\n［功能］补气养血，补肺养胃，生津润肠。\n［主治］久病体虚，气血不足，虚损瘦弱，小儿营养不良；胃阴不足，噎膈反胃，消渴口干，大便燥结或习惯性便秘。也可用于胃及十二指肠溃疡。\n［现代研究］含蛋白质，其中主要含酪蛋白；含八种人体必需氨基酸，尤含蛋氨酸及赖氨酸丰富；所含脂肪主要是棕榈酸、硬脂酸的甘油脂，也含少量低级脂肪酸及卵磷脂；含乳糖、钙、磷、铁，含维生素Ａ、Ｃ等多种维生素。\n\n66、蜂 蜜\n［性味］味甘，性平。\n［功能］补中缓急，益阴润燥，解毒。\n［主治］脾胃虚弱，体倦少食，脘腹作痛，或泻痢腹痛；肺燥咳嗽，肠燥便秘；疮疡毒，或服乌头、附子等引起的毒性反应。\n［用法］沸水化服，或入膏剂、丸剂。\n［注意事项］多食助痰湿，令腹胀泄泻，故痰湿痞满、腹泻者不宜食。\n［现代研究］含大量葡萄糖的果糖，少量蔗糖、蛋白质、柠檬酸、苹果酸、琥珀酸、甲酸、乙酸、泛酸、烟酸、胡萝卜素、淀粉酶、转化酶、脂酶，少量维生素Ｂ1、Ｂ2、Ｂ6、Ｃ、Ｋ，微量镁、硫、磷、钙、钾、钠、碘等多种盐类。本品对大肠杆菌、痢疾杆菌、伤寒杆菌、副伤寒杆菌、葡萄球菌、链球菌等有较强的抑制作用。\n```","source":"_posts/2018-6-5食物药理及营养(5类66种).md","raw":"---\ntitle: 食物药理及营养(5类66种)\ndate: 2018-6-5\ntags: [食物]\n---\n\n食物药理及营养(5类66种)\n\n<!--more-->\n\n```\n一、谷类豆类\n\n1、糯 米\n［性味］味甘，性温粘滞。\n［功能］补中益气，暖脾胃，止泻痢，止溲止汗。\n［主治］脾胃虚弱，食少泄泻；气虚自汗；消渴口干；夜尿多，小便频数；神经衰弱、贫血等。\n［现代研究］含淀粉、蛋白质、脂肪、糖类、钙、磷、铁、维生素Ｂ1、维生素Ｂ2及烟酸等成分。\n\n2、粟 米\n［性味］味甘、咸，性凉。陈者性寒。也称秫米，小米。\n［功能］益脾胃，除烦热，益肾气，补虚损，利小便。\n［主治］脾胃虚弱反胃呕吐及脾虚泄泻，消化不良；胃热消渴，口干；热结膀胱，小便不利及病后、产后体弱等。\n［现代研究］含蛋白质、淀粉、糖类、脂肪、钙、磷、铁、胡萝卜素、硫胺素、尼克酸、核黄素及烟酸等成分。蛋白质中含多量谷氨酸、脯氨酸、丙氨酸和蛋氨酸。其所含营养成分与大米相比，蛋白质、脂肪、维生素比大米含量高，因此对于产妇、小儿尤为相宜。\n\n3、小 麦\n［性味］味甘，性微寒。\n［功能］养心益肾，健脾厚肠，除热止渴。\n［主治］脏躁心神不宁；失眠，烦热口干；肾气不足，小便不利；肠胃不固的慢性泄泻。\n［注意事项］小麦陈者平和，新者壅气助湿热。素蕴湿热者，当慎用。\n［现代研究］含淀粉、蛋白质、糖类、糊精、脂肪、谷甾醇、卵磷脂、尿胆素、精氨酸、淀粉酶、麦芽糖酶、蛋白酶及维生素Ｂ等。麦胚含植物凝集素。\n\n4、麦 片\n［性味］味甘，性平。\n［功能］补脾益胃，充饥滑肠。\n［主治］病后体虚、纳呆、便秘及糖尿病等。\n［现代研究］含蛋白质、维生素Ｂ1、维生素Ｂ2、脂肪及碳水化合物。\n\n5、荞 麦\n［性味］味甘，性凉。\n［功能］开胃宽肠，下气消积，清热利湿。\n［主治］肠胃积滞，腹痛胀满，湿热泄泻，痢疾，或湿热淋浊及妇女带下等。\n［注意事项］脾胃虚寒者不宜服，食之动寒气，发痼疾；不宜多食，多食难消，令人头晕；部分人食之可发生对光敏感症（又名荞麦病）或过敏性皮炎。\n［现代研究］含蛋白质、脂肪、维生素Ｂ及水杨胺等成分。其对皮肤可产生某些刺激，对某些人亦可产生各种过敏症状。\n\n6、高 梁\n［性味］味甘、涩，性温。\n［功能］益肠温中，涩肠止泻。\n［主治］脾胃虚弱，消化不良，便溏腹泻等。\n［用法］煎汤，研末，或煮粥服食。\n［现代研究］含碳水化合物、蛋白质、脂肪、磷、铁、钙及核黄素等。\n\n7、薏苡仁\n［性味］味甘、淡，性微寒。\n［功能］利水渗湿，健脾，除痹，清热排脓。\n［主治］脾虚湿盛水肿，小便不利，或脚气肿痛；脾虚泄泻；风湿痹痛，筋脉挛急；肺痈咳吐脓痰，肠痈拘急腹痛。此外，现又用于胃癌、肠癌等肿瘤以及扁平疣。\n［用法］煎汤，煮粥，或研末。本品力缓，用量须大，宜久服。健脾炒用，其余生用。\n［现代研究］含蛋白质、脂肪、淀粉、糖类、维生素Ｂ1、薏苡素、薏苡仁脂和亮氨酸、赖氨酸、精氨酸、酪氨酸等氨基酸。有报告称其对癌细胞，有阻止成长及伤害作用。\n\n8、赤小豆\n［性味］味甘、酸，性平。\n［功能］清热利水，散血消肿，通乳。\n［主治］水肿、脚气、黄疸或小便不利；痔疮下血、肠痈、腹泻；产后缺乳等。外敷可治热毒痈肿、血肿和扭伤。\n［用法］煎汤或研末服用。\n［注意事项］阴虚津枯者忌用。本品渗泄太过、瘦人多食之则令其愈瘦。\n［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、维生素Ｂ1、维生素Ｂ2和烟酸等。另含三种结晶性皂甙，能引起肠道泻下作用。\n\n9、绿 豆\n［性味］味甘，性凉。\n［功能］清热解毒，清暑利水。\n［主治］热病或暑热所致的心烦、口渴、发热；水肿或湿热泄泻；痈疖、痄腮、丹毒、痘疹及多种药、食物中毒。\n［用法］煎汤，研末磨浆，或煮粥服。\n［注意事项］本品皮寒肉平，用时不宜去皮。脾胃虚寒或阳虚体质不宜服。\n［现代研究］含蛋白质、糖类、脂肪、磷、钙、铁、胡萝卜素、维生素Ｂ1、维生素Ｂ2和烟酸等成份。有较明显的解毒、保肝作用。\n\n10、扁 豆\n［性味］味甘，性微温。又名蛾眉豆。\n［功能］健脾化湿。\n［主治］脾虚有湿，体倦乏力，食少便溏或泄泻；妇女脾虚带下；暑湿吐泻。\n［用法］健脾止泻宜炒用；消暑宜生用。煎汤，研末，或煮熟食。\n［注意事项］脾胃虚寒中满者，食之腹胀，宜慎用。\n［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、锌、维生素Ｂ1、维生素Ｂ2和烟酸、泛酸、豆甾醇、磷脂、氰甙、血球凝结素等成份。据药理研究：扁豆含有一种毒蛋白，豆荚上有一种溶血素。此二物须高温方能被破坏，若加热不够，食后可发生恶心、呕吐、腹痛、头晕等中毒症状。\n\n二、肉类\n\n11、猪 肝\n［性味］苦寒。\n［功能］养肝明目及补血。\n［主治］肝虚血枯及失血后的眼花、夜盲、失眠、大便不畅及贫血等。\n\n12、猪肚\n［性味］ 味甘微温。\n［功能］补益脾胃。\n［主治］用于脾虚腹泻、虚劳瘦弱、消渴、小儿疳积、尿频或遗尿。猪肚为猪全身胆固醇含量最低的部分，适宜各种年龄和体质的人食用。\n\n13、猪 脾\n［性味］ 味甘性平。又称联贴。\n［功能］益脾胃，助消化。\n［主治］多用于小儿脾胃虚弱、饮食不化、食欲减退。\n\n14、猪 肾\n［性味］ 味甘、咸，性平。俗称猪腰子。\n［功能］补肾、止遗、止汗、利水。\n［主治］用于肾虚耳聋、腰痛、遗精盗汗、身面浮肿等。猪肾的胆固醇含量较高，不宜常食和多食。\n\n15、猪 蹄\n［性味］ 味甘、咸，性平。\n［功能］有补血、通乳、托疮之功，可用于产后奶少，痈疽疮疡等。催乳可用本品或加黄芪、当归炖熟服食。\n\n16、牛 肉\n［性味］味甘，性平（水牛肉性偏寒）\n［功能］补脾胃，益气血，强筋骨。\n［主治］虚损羸瘦；腰膝酸软，筋骨不健；脾虚食少及水肿等。\n［注意事项］牛肉为发物，患疮疥湿疹、痘痧、瘙痒者，食后病情可能加重，宜慎用。\n［现代研究］含蛋白质、脂肪、无机盐及维生素等。牛肉蛋白质所含必需氨基酸甚多，故其营养价值甚高。\n\n17、羊 肉\n［性味］味甘，性温。\n［功能］补气养血，温中暖肾。\n［主治］气血不足，虚劳羸瘦；脾胃虚冷，腹痛，少食或欲呕；肾虚阳衰，腰膝酸软，尿频，阳痿。\n［注意事项］各种急性炎症、外感发烧、热病初愈、皮肤疮疡、漆疮、疖肿及各种出血病患者均应忌食。孕妇及素有体热者不宜食。\n［现代研究］含丰富的蛋白质、脂肪、磷、铁、钙、维生素Ｂ1、维生素Ｂ2和烟酸、脂甾醇等成分。\n\n18、羊肝\n味甘性平。功能补血益肝，明目。适用于血虚萎黄瘦弱、肝虚视力减退、青光眼、雀盲等，可单用熟食或蘸醋食。现代研究表明，以羊肝６０克，香油３０克，炒热，入少许盐即可，小吃或佐餐食用，可治慢性咳嗽。\n\n19、羊鞭\n味甘、咸，性温。为羊的阴茎和睾丸。功能补肾、壮阳、益精。可用于下部虚寒之阳痿遗精、带下等。可煨烂，或熬粥食。\n\n20、羊肾\n味甘性温。功能补肾气、益精髓。用于肾虚劳损、腰脊疼痛、足膝萎弱、耳聋、消渴、阳痿、尿频、遗精等。可切片与大米煮粥食。\n\n21、狗 肉\n［性味］味甘、咸，性温。\n［功能］温补脾胃，温肾助阳。\n［主治］脾胃虚寒，胀满少食；肾阳不足，腰膝酸软，肢体欠温，阳痿遗精，夜多小便；脾虚水肿。\n［注意事项］狗肉性温能散，食之易发热动火以及壮阳，故青壮年时期、热病恢复期、各种出血疾患以及各种急性炎症、湿疹、痈疽、疮疡、阴虚内热者及妊娠妇女均应忌食。且不宜春、夏季用。食狗肉忌蒜、忌茶，若食后口燥可饮米汤解之。\n［现代研究］除含一般营养成分外，尚含嘌呤类和肌肽、肌酸、钾、钠、氯等成分。\n\n22、黄狗肾（狗鞭）\n味甘、咸，性温。为黄狗的阴茎和睾丸。功能补肾壮阳、益精。可用于肾虚阳衰所致的男子阳痿、阴冷、或畏寒肢冷，腰酸尿频等。可单用煮熟，或研末，温开水送服。\n\n23、鸡 肉\n［性味］味甘，性温。\n［功能］温中益气养血，补肾益精添髓。\n［主治］虚劳瘦弱，病后体弱乏力；中虚食少、泄泻；气血不足，头晕心悸，或产后乳汁缺乏；肾虚之小便频数、遗精、耳聋耳鸣、月经不调；脾虚水肿；疮疡久不愈合等。\n［注意事项］高血压、口腔溃疡、急生炎症、皮肤疖肿、大便秘结者均不宜食；幼儿、体盛之人不宜多食；鸡尾部有个法氏囊，它可能有各种病菌及癌细胞的聚结，故不宜食用。\n［现代研究］含丰富的蛋白质、脂肪、钙、磷、铁、镁、钾、钠和烟酸等成分，还含有Ａ、Ｂ1、Ｂ2、Ｃ、Ｅ等多种维生素。脂肪含量较少，其中含有高度不饱和脂肪酸。另含胆固醇、组氨酸。\n\n24、乌骨鸡\n［性味］味甘，性平。\n［功能］养阴退热，益脾补中。\n［主治］肝肾阴虚，骨蒸潮热，盗汗，口渴；脾虚泄泻；脾虚或脾肾两虚，遗精，白浊或妇女带下。\n\n25、鸭 肉\n［性味］味甘、咸，性微寒。\n［功能］养胃滋阴，清虚热，利水消肿。\n［主治］虚劳骨蒸发热，咳嗽痰少，咽喉干燥；阴虚阳亢之头晕头痛；水肿，小便不利。\n［注意事项］脾虚便溏腹泻，或外感未清的病人不宜用。食鸭肉忌大蒜、木耳和鳖肉。\n［现代研究］含蛋白质、脂肪、少量的碳水化合物，无机盐钙、磷、铁，以及维生素Ｂ1、维生素Ｂ2等。\n\n26、鹅 肉\n［性味］味甘，性平。\n［功能］补虚益气，和胃止渴。\n［主治］中气不足，消瘦乏力，食少；气阴不足的口渴、气短、咳嗽等。\n\n27、麻雀肉\n［性味］味甘，性温。\n［功能］补益精髓，补肾壮阳，缩小便。\n［主治］肾气虚衰，精髓不足所致的眩晕耳鸣、腰膝酸软、阳痿早泄、小便频数或余沥不尽，百日咳等。\n［用法］煨食，熬膏，煎汤。或入丸、散。\n［注意事项］阴虚火旺者或阳盛及阳强易举者忌用；孕妇，大便秘结、小便短赤、各种血液病、各种炎症者也均应忌食；春夏季节不宜食雀。\n［现代研究］含蛋白质、脂肪、钙、磷、铁等成分。\n\n28、燕 窝\n［性味］味甘，性平。\n［功能］滋阴润肺，补脾益气。\n［主治］阴虚肺燥，咳嗽痰喘，或肺痨咯血；久痢，老年疟疾及久疟；胎热或噎隔反胃。\n［用法］用绢包煎汤，用开水发过，隔水炖或蒸熟服食。\n［注意事项］脾胃虚寒，痰饮停滞及有外感的病人不宜用。\n［现代研究］其成分以蛋白质为主，氨基酸的主要成分为精氨酸、胱氨酸、赖氨酸、色氨酸、酪氨酸等，还含氨基已糖及类似粘蛋白的物质，灰分中以钙、磷、钾、硫为主。\n\n29、鹿 肉\n［性味］味甘，性温。\n［功能］益气血，补虚羸，补肾益精。\n［主治］虚损羸瘦，气血不足，体倦乏力，或产后缺乳；肾阳虚衰，肾精不足，腰脊酸软，畏寒肢冷，阳痿精少。\n［用法］煮食，或煎汤。\n［注意事项］阳盛或阴虚有热者不宜食；炎热季节不宜食，面部有痤疮、皮疹、湿疹和各种炎症的患者应禁食；儿童、青少年除遵医嘱之外应该忌食。\n\n30、鹿 鞭\n［性味］味甘、咸，性温。\n［功能］补肾，壮阳，益精。\n［主治］肾虚阳衰，精血不足所致的眩晕耳鸣耳聋，腰膝酸软，阳痿，或妇女宫寒不孕等。\n［用法］煮粥食，煎汤，也可研末服用。\n［注意事项］凡阴虚火旺所致的咽喉干痛、出血症、阳强易举、便秘、心烦以及外感实热等症忌用。\n\n三、水产类\n\n31、鲤 鱼\n［性味］味甘，性平。\n［功能］健脾益气，利水消肿，下气通乳。\n［主治］产后或病后虚弱；脾胃虚弱，食少便溏；脾虚水肿，小便不利，或脚 气，黄疸；产后乳少及咳嗽、气逆等。\n［注意事项］痘疹、瘙痒、疥癣等症患者忌用。鲤鱼胆味苦有毒，勿使污染鱼肉。\n［现代研究］含蛋白质，脂肪，胱氨酸，谷氨酸，组氨酸，甘氨酸等２０余种氨基酸，维生素Ａ、Ｂ1、Ｂ2、，蛋白酶，钙，磷，铁，肌酸等。\n\n32、鲫 鱼\n［性味］味甘，性平。\n［功能］健脾利湿。\n［主治］脾虚食少，乏力，浮肿，小便不利等。本品除内服外，煅灰存性，可以外敷痞肿、乳癌。其头煮汤可治脱肛，子宫下垂；其子能明目。\n［现代研究］含蛋白质，氨基酸，钙，磷，铁及维生素Ａ、Ｂ1、Ｂ2等。\n\n33、黄花鱼\n［性味］味甘，性平。\n［功能］补虚益精，开胃消食，调中止痢。\n［主治］久病体虚，面黄羸瘦，目昏神倦；脾胃虚弱，少食腹泻或营养不良；脾虚水肿等。\n［注意事项］黄鱼古称发物，认为“多食发疮助热”。少数过敏体质者应加注意。且多食助湿生痰，胃呆痰多者宜慎。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2、烟酸和钙、磷、铁、碘等成分。\n\n34、鳝 鱼\n［性味］味甘，性温。\n［功能］补气益血，强筋骨，祛风湿，止血。\n［主治］气血不足，虚羸瘦弱；产后恶露不尽或久痢；痔疮出血而气虚血亏者；风寒湿痹，肢体酸痛，足痿无力等。\n［用法］煎炒，煮食，或作丸、散。\n［注意事项］凡病属虚热，或时病前后及痢疾、腹胀满诸实症均不宜用。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ1和烟酸等成分。经药理研究证实，鳝鱼含有降血糖和调节血糖的物质，故糖尿病人常食有益。\n\n35、泥 鳅\n［性味］味甘，性平。\n［功能］补中，益肾，祛湿。\n［主治］脾虚弱，脱肛；湿热黄疸，小便不利；肾气不足，阳痿早泄；消渴；痔疮，疮癣瘙痒等。本品诸病不忌，是肝病，糖尿病，泌尿系统疾病的食疗上品。\n［注意事项］泥鳅忌狗肉。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ2、和烟酸等成分。有利胆作用，能明显地促使黄疸消退及转氨酶下降。\n\n36、鲇 鱼\n［性味］味甘，性平。\n［功能］补脾，益血，催乳，利尿。\n［主治］气血不足或营养不良；脾虚水肿，小便不利；产后气血虚亏，乳汁不足等；鲇鱼目煅灰，可涂皮肤脓疮。鲇鱼尾生贴，可治口眼歪斜。\n［注意事项］鲇鱼卵有一定毒性，不宜食用。\n［现代研究］含蛋白质，脂肪，糖类，钙，磷，铁等成分。\n\n37、鱼 鳔\n［性味］味甘，性平。即黄鱼、鲟鱼、蝗鱼等肚中的鳔胶。\n［功能］补肾益精，滋养筋脉，散瘀消肿，止血。\n［主治］肾虚阳痿遗精；产后抽搐；血瘀肿痛；吐血崩漏，痔疮等。\n［用法］炒食。炖食，或熬膏服。\n［现代研究］含蛋白质、脂肪等。\n\n38、河 虾\n［性味］味甘，性温。\n［功能］补肾壮阳，通乳托毒。\n［主治］肾虚阳痿，产后乳少，体虚，麻疹、水痘出而不畅及痈疽疮疡等。\n［用法］煮汤，油炸，烧菜，研末。\n［注意事项］本品性湿易动风，故高血压患者，急性炎症和面部痤疮患者，不宜食。\n［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁等成分。\n\n39、螃 蟹\n［性味］味咸性寒。有河蟹、海蟹，二者功用同。\n［功能］续筋接骨，活血行瘀，利湿退黄，清热解毒。\n［主治］跌打损伤，损筋伤骨，血瘀肿痛；妇人产后血瘀腹痛，难产、胎衣不下；湿热黄疸；咽喉肿痛等。\n［用法］浸酒，油炸，煎汤，作丸、散等。\n［注意事项］外感寒邪未净，咳嗽便泻或脾胃虚寒者忌用；本品易动风，素有风痰（曾患中风、面瘫等症）者不宜食用；月经过多、痛经、妊娠妇女及各种出血病应忌食。\n［现代研究］肉的内脏含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁及谷氨酸、甘氨酸、脯氨酸、组氨酸、精氨酸等多种氨基酸，微量的胆甾醇。蟹壳含碳酸钙、蟹红素、甲壳素、蛋白质等。\n\n40、墨 鱼\n［性味］味甘，咸，性平。\n［功能］补肝肾。养血滋阴。\n［主治］精血亏损，头晕耳鸣，遗精早泄；血虚所致的经闭、崩漏、产后乳汁少及老人虚弱者。\n［用法］煮食，或鲜用炒食。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2和烟酸、钙、磷、铁等成分。\n\n41、甲 鱼\n［性味］味甘，性平。\n［功能］滋补肝肾，凉血。\n［主治］肝肾阴虚，劳热骨蒸，或虚劳咳嗽；冲任虚损，崩漏带下；久疟不止；瘰疬，十二指肠溃疡；肝脾肿大等。\n［用法］蒸食，或炖汤。\n［注意事项］滋腻之品，不宜多食，以免引起胃弱和消化不良。痰湿壅盛者，宜慎用。\n［现代研究］肉含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，钙，磷，铁和烟酸等成分。甲含动物胶、角质蛋白、碘、维生素Ｄ。能抑制肿瘤细胞的生长，提高机体的免疫功能。\n\n42、乌 龟\n［性味］味甘、咸，性平。\n［功能］滋阴补血。\n［主治］阴虚劳热骨蒸；久嗽咯血、吐血、便血；肝肾阴虚，月经闭止；疟疾等。\n［现代研究］肉含蛋白质、脂肪、钙、磷等。能抑制肿瘤细胞Ｓ180`ＥＣ等，并可增强机体免疫功能。\n\n43、田 螺\n［性味］味甘、咸，性寒。\n［功能］清热利湿，明目，退黄。\n［主治］湿热淋症，水肿，小便不利；风热目赤痛；黄疸；痔疮便血、消渴等。\n［用法］煎汤，或煮食。\n［注意事项］性寒，过食易令人腹泻。\n［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2、Ｄ，钙、磷、铁和烟酸等成分。\n\n44、牡 蛎\n［性味］味甘、咸，性平。又名海蛎子 。\n［功能］滋阴养血，养心安神。\n［主治］虚损劳疾，阴虚血亏；失眠心悸，心神不安等。\n［用法］煎汤，烧菜，油炸。\n［注意事项］牡蛎肉可生吃，脾虚者忌用。\n［现代研究］含糖元，牛磺酸，１０种必需氨基酸，谷胱甘酸，维生素Ａ、Ｂ1、Ｂ2、Ｄ、Ｅ，岩藻糖及铜、锌、锰、钡、磷、钙、镁、铝、氧化铁等成分。牡蛎肉内含能促进儿童智力的微量元素锌，故又有益智海味之称。\n\n45、海 参\n［性味］味甘、咸，性温。\n［功能］益精血，补肾气，润肠燥，止血。\n［主治］精血亏损，虚衰瘦弱；肾虚不固之遗精尿频，或肾虚阳痿；阴血亏虚，肠燥便秘；结核病咯血，崩漏下血或皮下出血。另脑外伤后或大脑发育不良，常食海参，有补肾健脑之效。\n［用洁］煎汤，煮食，爆炒，或入丸剂。\n［注意事项］脾运不健，痰湿壅滞或便溏腹泻及病邪未尽者忌用。\n［现代研究］含蛋白质、脂肪、糖类、钙、磷、铁、碘、维生素Ｂ1、维生素Ｂ2、和烟酸等。海参蛋白质中所含氨基酸为精氨酸、胱氨酸、组氨酸等。另含海参毒素。近人发现海参煮食可防护宫颈癌放射治疗的直肠反应。海参毒素能抑制Ｓ180及Ｋｒｅｂｓ－ａ腹水癌的生长，抑制多种霉菌。\n\n46、海 蜇\n［性味］味咸，性平。\n［功能］清热化痰，消积，润肠。\n［主治］阴虚肺燥，痰热咳嗽，喘息；瘰疬痰核；食积痞胀；大便燥结。现代用以治疗高血压病亦有效。\n［用法］煎汤，蒸、煮食，或生吃（凉拌）。\n［注意事项］脾胃虚弱及虚寒者不宜服用。生食难以消化，故不可过量。\n［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2的烟酸、钙、磷、铁、碘的胆碱等成分。有降压、扩张血管及乙酰胆碱样作用。\n\n47、海 带\n［性味］味咸，性寒。\n［功能］软坚化痰，清热利水。\n［主治］瘿瘤结核；疝气，症瘕；水肿，脚气等。\n［用法］煎汤，煮食，或作丸、散。\n［注意事项］体虚及孕妇不宜用。\n［现代研究］含大叶藻素，维生素Ｂ2、蛋白质、脂肪、戊聚糖、鞣质、碘等成分。\n\n48、紫 菜\n［性味］味甘，性平。\n［功能］软坚化痰散结，清热利尿。\n［主治］瘿瘤，瘰疬；咳嗽痰稠或肺痈初起；脚气，水肿，热淋尿赤涩痕等。\n［用法］煎汤，煮食，或作丸，散。\n［注意事项］脾虚消化不良者多食可致腹胀。\n\n四、果品蔬菜类\n\n49、枸 杞\n［性味］味甘，性平。\n［功能］滋补肝肾，明目，润肺。\n［主治］肝肾阴虚之头晕耳鸣、腰膝酸软、遗精消渴；精血不足之眼目昏花、视力减退；阴虚劳嗽。\n［用法］生食、煎汤、熬膏、浸酒。\n［注意事项］脾虚有湿痰者及脾胃虚弱、经常腹泻者不宜食。\n［现代研究］含甜菜碱、氨基酸、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ，钙、磷、铁等成分。有降低胆固醇的作用。\n\n50、核 桃\n［性味］味甘，性温。\n［功能］滋补肝肾，补气养血，温肺润肠。\n［主治］肾虚所致的喘嗽、腰痛脚弱、阳痿遗精、尿频石淋；习惯性便秘，老年人便秘。\n［用法］生食或煮食。补肾多连内皮熟用；润肠则以去内皮生用为好。\n［现代研究］含脂肪、蛋白质、碳水化合物、钙、磷、铁、胡萝卜素、核黄素，以及维生素Ａ、Ｂ、Ｃ、Ｅ等。其含有较高的不饱和脂肪酸，能预防动脉硬化，对高血压、冠心病有益。\n\n51、白 果\n［性味］味甘、苦、涩，性平。\n［功能］敛肺定喘，缩尿止带，止泻，益脾。\n［主治］肺虚喘咳、哮喘；气虚或肾虚不固之遗尿、尿频、肾虚遗精；脾虚或脾肾两虚，带下，白浊、腹泻。\n［用法］熟食，或入丸、散剂。\n［注意事项］不可生食。不能多食，每次以服１０～１５克为宜，否则易于中毒。\n［现代研究］含蛋白质、氨基酸、脂肪、胡萝卜素、维生素Ｂ2、钙磷、铁和微量氢氰酸等成分。\n\n52、莲 子\n［性味］味甘、涩，性平。\n［功能］补脾止泻，益肾固精，养心安神。\n［主治］脾虚久泻，食欲不振；肾虚遗精、滑精；虚烦、心悸怔忡。也可作于妇女崩漏、白带过多等症。\n［用法］生食，熟食，煎汤，或入丸、散剂。\n［注意事项］大便燥结者不宜食。\n［现代研究］含淀粉、蛋白质、脂肪、棉子糖、天门冬素及蜜三糖、钙、磷、铁等。\n\n53、芡 实\n［性味］味甘、涩，性平。\n［功能］补脾止泻止带，益肾固精。\n［主治］脾虚久泻；肾虚遗尿尿频；妇女白带过多等。\n［用法］煮粥或研末，煎汤服。\n［现代研究］含大量淀粉及少量蛋白质、磷、钙、尼克酸、核黄酸、胡萝卜素等。\n\n54、栗 子\n［性味］味甘，性温。\n［功能］补肾强腰，益脾胃，止泻。\n［主治］肾虚腰膝无力，筋骨肿痛；脾胃虚弱或脾肾阳虚，便溏腹泻、久泻等。\n［用法］生食或熟食。\n［注意事项］生食不易消化，熟食又易带气膈食，故不宜多食。\n［现代研究］含淀粉、糖、蛋白质、脂肪等，此外尚含较高的维生素Ｃ以及胡萝卜素、核黄素、尼克酸等多种维生素。\n\n55、冬 瓜\n［性味］味甘、淡，性微寒。\n［功能］清热化痰，生津止渴，利尿消肿，解毒。\n［主治］痰热咳喘，热病烦渴，水肿，小便不利。痔疮疼痛可用冬瓜煎汤外洗；食鱼蟹或河豚中毒，可用鲜冬瓜绞汁或捣汁频饮。常食可用于减肥。\n［用法］煎汤，绞汁或熟食。作菜食。\n［注意事项］脾胃虚寒，阳气不足，阴虚消瘦者不宜食。\n［现代研究］含蛋白质、糖类、粗纤维、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ、烟酸等成分。\n\n56、苦 瓜\n［性味］味苦，性寒。\n［功能］清热解暑，明目，解毒。\n［主治］热病或暑热烦渴，暑疖，痱子过多；肝热目赤疼痛；痈肿、火烫伤、痢疾等。\n［注意事项］脾胃虚寒者宜少食。\n［现代研究］含苦瓜甙、５－羟基色胺、谷氨酸、丙氨酸、脯氨酸、a－氨基丁酸、瓜氨酸、半乳糖醛酸、果胶等成分。苦瓜浆汁或苦瓜有降低血糖的作用。近年来发现苦瓜中有一种苦瓜蛋白脂类成分，是一种有待开发，前景诱人的抗癌物质。\n\n57、韭 菜\n［性味］味甘、辛，性温。\n［功能］补肾助阳，温中行气，散瘀。\n［主治］肾阳虚衰，阳痿遗精或遗尿，腰膝冷痛；噎膈反胃，食积腹痛，便秘；胸痹作痛，跌打损伤肿痛等。\n［用法］捣汁饮，炒菜或作馅，煮汤食等。\n［注意事项］本品不宜久煎，久炒，阴虚内热、疮疡、疱疹、目疾者不宜食。\n［现代研究］含挥发油、硫化物、甙类、蛋白质、脂肪、糖类、胡萝卜素和维生素Ｂ、维生素Ｃ、纤维素及钙、磷、铁等成分。现代医学研究证明，韭菜中所含的挥发性精油及硫化合物具有降低血脂作用。同时，韭菜纤维素有利便作用，减少对食物中胆固醇的吸收而增加排泄，故韭菜对高血脂及冠心病人有好处。\n\n58、香 菜\n［性味］味辛，性温。又名芫荽。\n［功能］发汗透疹，解毒。果实芳香理气，健胃。\n［主治］小儿麻疹，风疹透发不畅，流感以及食肉类食物中毒等。果实可用于胸膈胀闷，胃弱消化不良，胃寒痛，噎膈，反胃。\n［用法］煎汤或凉拌食。\n［注意事项］患脚气、金疮及阴虚火旺者不宜食。\n［现代研究］全草含维生素Ｃ。果实含有挥发油，称胡荽油，油中主要成分为６０％～７０％的Ａ－沉香木醇、松萜、二聚戊稀、醋酸冰片酯、醋酸沉香萜脂等。此外尚含脂肪油。\n\n59、生 姜\n［性味］味辛，性温。\n［功能］发汗解表，温中止呕，温肺止咳，解毒。\n［主治］感冒风寒，恶寒发热头痛；胃寒呕吐泄泻、反酸；肺寒咳嗽，痰多色白清稀；食鱼蟹中毒等。\n［用法］煎汤，生食，捣汁冲服或作调味品。\n［注意事项］阴虚火旺及热盛者忌食。\n［现代研究］含辛辣和芳香气味的挥发油。油中主要成分为姜醇、姜烯、姜油萜、姜酚、龙脑、枸橼酸等。\n\n60、大 蒜\n［性味］味辛，性温。\n［功能］温中健胃，消食理气，解毒杀虫。\n［主治］脘腹冷痛，饮食积滞，饮食不洁或食物中毒所致的呕吐腹泻，痢病；蛲虫病，钩虫病；肺结核，百日咳；外感风寒感冒头痛；痈疖肿毒，癣疮等。现代又用于高血压病、高血脂症、流感、流脑等。\n［用法］生食，煨食，煮食，煎汤，捣泥为丸服或制糖浆服。外用捣敷，切片或隔蒜灸。\n［注意事项］大量服用，可减少胃液分泌。有抗菌、抗原虫的作用，一般紫皮蒜强于白皮蒜，生用强于熟用。凡阴虚火旺及有目疾、舌、喉、口齿、狐臭诸疾均不宜食。\n［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ｂ1、维生素Ｃ、胡萝卜素、糖类、挥发油，主要成分为大蒜辣素、大蒜新素。此外，尚含大蒜甙。本品可防癌。大蒜中的蒜辣素又可刺激胃液分泌，增进食欲，帮助消化。\n\n61、香 菇\n［性味］味甘，性平。\n［功能］补脾益气，透疹。\n［主治］脾胃虚弱，食欲减退，少气乏力；小儿麻疹透发不畅。现代又可用于佝偻病、高血压、动脉硬化、高血脂症、糖尿病、慢胜肝炎、肾炎、肿瘤（如胃癌、子宫颈癌）等。\n［用法］煎汤，煮食，炖食等。\n［现代研究］含脂肪、蛋白质、粗纤维、维生素Ｄ原、维生素Ａ原、维生素Ｂ族、酶及嘌呤等。本品有降低血脂的作用（包括血清甘油三酯、磷脂、总酯），香菇麦角甾醇经日光或紫外线照射可能转变为维生素Ｄ2，可抗佝偻病。\n\n62、木 耳\n［性味］味甘，性平。\n［功能］凉血止血，润肺益胃，益气补血。\n［主治］吐血、便血或血痢、痔疮出血、妇女崩漏；肺燥咳嗽，或胃阴不足，咽干口燥；气虚脱肛或妇女产后虚弱、抽筋麻木等。\n［注意事项］便溏腹泻者不宜食。\n［现代研究］含糖、蛋白质、粗纤维、磷、钙、胡萝卜素、维生素Ｂ1、维生素Ｂ2、麦角甾醇、卵磷脂、鞘磷脂、黑刺菌素等。有报道本品能减少血液凝块，有防止动脉粥样硬化、冠心病的作用。\n\n五、 蛋奶类\n\n63、鸡 蛋\n［性味］味甘，性平。\n［功能］滋阴益血润燥，养心除烦安神。\n［主治］血虚所致的妇女月经不调，乳汁减少，眩晕，夜盲；病后体虚，营养不良；肺痨咯血，阴虚肺燥之咳嗽痰少，咽干喉痛，阴血不足之失眠烦躁、心悸，小儿惊痫，每天服５～１０毫升蛋黄油也可用于小儿消化不良。\n［用法］煎、炒、蒸、煮、冲食均可。\n［注意事项］不宜生食。老人宜少吃蛋黄，多吃蛋清。\n［现代研究］含蛋白质及人体必需的八种氨基酸；脂肪中含多量卵磷脂、甘油三脂、胆固醇和蛋黄素。尚含铁、磷、钙等矿物质及维生素Ａ、Ｂ2、Ｂ6、Ｄ、\nＥ和烟酸等。鸡蛋中含有大量的卵磷脂（尤其是蛋黄）。\n\n64、鹌鹑蛋\n［性味］味甘，性平。\n［功能］补益气血，强身健脑。\n［主治］肺痨咳嗽，久病或年老体弱，心悸失眠，体倦食少，小儿营养不良。现代又用于神经衰弱，高血压，动脉硬化，气管炎，慢性胃炎。\n［现代研究］含较高的蛋白质及丰富的脑磷脂、卵磷脂，尚含铁和维生素等。据近年研究报道，本品的所含蛋白质、卵磷脂、维生素和铁等成分均较鸡蛋高，而胆固醇含量则较鸡蛋低１／３，所以本品是年老人及心脑血管病患者的理想食疗品。\n\n65、牛 奶\n［性味］味甘，性平。\n［功能］补气养血，补肺养胃，生津润肠。\n［主治］久病体虚，气血不足，虚损瘦弱，小儿营养不良；胃阴不足，噎膈反胃，消渴口干，大便燥结或习惯性便秘。也可用于胃及十二指肠溃疡。\n［现代研究］含蛋白质，其中主要含酪蛋白；含八种人体必需氨基酸，尤含蛋氨酸及赖氨酸丰富；所含脂肪主要是棕榈酸、硬脂酸的甘油脂，也含少量低级脂肪酸及卵磷脂；含乳糖、钙、磷、铁，含维生素Ａ、Ｃ等多种维生素。\n\n66、蜂 蜜\n［性味］味甘，性平。\n［功能］补中缓急，益阴润燥，解毒。\n［主治］脾胃虚弱，体倦少食，脘腹作痛，或泻痢腹痛；肺燥咳嗽，肠燥便秘；疮疡毒，或服乌头、附子等引起的毒性反应。\n［用法］沸水化服，或入膏剂、丸剂。\n［注意事项］多食助痰湿，令腹胀泄泻，故痰湿痞满、腹泻者不宜食。\n［现代研究］含大量葡萄糖的果糖，少量蔗糖、蛋白质、柠檬酸、苹果酸、琥珀酸、甲酸、乙酸、泛酸、烟酸、胡萝卜素、淀粉酶、转化酶、脂酶，少量维生素Ｂ1、Ｂ2、Ｂ6、Ｃ、Ｋ，微量镁、硫、磷、钙、钾、钠、碘等多种盐类。本品对大肠杆菌、痢疾杆菌、伤寒杆菌、副伤寒杆菌、葡萄球菌、链球菌等有较强的抑制作用。\n```","slug":"2018-6-5食物药理及营养(5类66种)","published":1,"updated":"2022-06-30T16:30:02.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooew000dnkvvazy4966t","content":"<p>食物药理及营养(5类66种)</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、谷类豆类</span><br><span class=\"line\"></span><br><span class=\"line\">1、糯 米</span><br><span class=\"line\">［性味］味甘，性温粘滞。</span><br><span class=\"line\">［功能］补中益气，暖脾胃，止泻痢，止溲止汗。</span><br><span class=\"line\">［主治］脾胃虚弱，食少泄泻；气虚自汗；消渴口干；夜尿多，小便频数；神经衰弱、贫血等。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、脂肪、糖类、钙、磷、铁、维生素Ｂ1、维生素Ｂ2及烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">2、粟 米</span><br><span class=\"line\">［性味］味甘、咸，性凉。陈者性寒。也称秫米，小米。</span><br><span class=\"line\">［功能］益脾胃，除烦热，益肾气，补虚损，利小便。</span><br><span class=\"line\">［主治］脾胃虚弱反胃呕吐及脾虚泄泻，消化不良；胃热消渴，口干；热结膀胱，小便不利及病后、产后体弱等。</span><br><span class=\"line\">［现代研究］含蛋白质、淀粉、糖类、脂肪、钙、磷、铁、胡萝卜素、硫胺素、尼克酸、核黄素及烟酸等成分。蛋白质中含多量谷氨酸、脯氨酸、丙氨酸和蛋氨酸。其所含营养成分与大米相比，蛋白质、脂肪、维生素比大米含量高，因此对于产妇、小儿尤为相宜。</span><br><span class=\"line\"></span><br><span class=\"line\">3、小 麦</span><br><span class=\"line\">［性味］味甘，性微寒。</span><br><span class=\"line\">［功能］养心益肾，健脾厚肠，除热止渴。</span><br><span class=\"line\">［主治］脏躁心神不宁；失眠，烦热口干；肾气不足，小便不利；肠胃不固的慢性泄泻。</span><br><span class=\"line\">［注意事项］小麦陈者平和，新者壅气助湿热。素蕴湿热者，当慎用。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、糖类、糊精、脂肪、谷甾醇、卵磷脂、尿胆素、精氨酸、淀粉酶、麦芽糖酶、蛋白酶及维生素Ｂ等。麦胚含植物凝集素。</span><br><span class=\"line\"></span><br><span class=\"line\">4、麦 片</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾益胃，充饥滑肠。</span><br><span class=\"line\">［主治］病后体虚、纳呆、便秘及糖尿病等。</span><br><span class=\"line\">［现代研究］含蛋白质、维生素Ｂ1、维生素Ｂ2、脂肪及碳水化合物。</span><br><span class=\"line\"></span><br><span class=\"line\">5、荞 麦</span><br><span class=\"line\">［性味］味甘，性凉。</span><br><span class=\"line\">［功能］开胃宽肠，下气消积，清热利湿。</span><br><span class=\"line\">［主治］肠胃积滞，腹痛胀满，湿热泄泻，痢疾，或湿热淋浊及妇女带下等。</span><br><span class=\"line\">［注意事项］脾胃虚寒者不宜服，食之动寒气，发痼疾；不宜多食，多食难消，令人头晕；部分人食之可发生对光敏感症（又名荞麦病）或过敏性皮炎。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ及水杨胺等成分。其对皮肤可产生某些刺激，对某些人亦可产生各种过敏症状。</span><br><span class=\"line\"></span><br><span class=\"line\">6、高 梁</span><br><span class=\"line\">［性味］味甘、涩，性温。</span><br><span class=\"line\">［功能］益肠温中，涩肠止泻。</span><br><span class=\"line\">［主治］脾胃虚弱，消化不良，便溏腹泻等。</span><br><span class=\"line\">［用法］煎汤，研末，或煮粥服食。</span><br><span class=\"line\">［现代研究］含碳水化合物、蛋白质、脂肪、磷、铁、钙及核黄素等。</span><br><span class=\"line\"></span><br><span class=\"line\">7、薏苡仁</span><br><span class=\"line\">［性味］味甘、淡，性微寒。</span><br><span class=\"line\">［功能］利水渗湿，健脾，除痹，清热排脓。</span><br><span class=\"line\">［主治］脾虚湿盛水肿，小便不利，或脚气肿痛；脾虚泄泻；风湿痹痛，筋脉挛急；肺痈咳吐脓痰，肠痈拘急腹痛。此外，现又用于胃癌、肠癌等肿瘤以及扁平疣。</span><br><span class=\"line\">［用法］煎汤，煮粥，或研末。本品力缓，用量须大，宜久服。健脾炒用，其余生用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、淀粉、糖类、维生素Ｂ1、薏苡素、薏苡仁脂和亮氨酸、赖氨酸、精氨酸、酪氨酸等氨基酸。有报告称其对癌细胞，有阻止成长及伤害作用。</span><br><span class=\"line\"></span><br><span class=\"line\">8、赤小豆</span><br><span class=\"line\">［性味］味甘、酸，性平。</span><br><span class=\"line\">［功能］清热利水，散血消肿，通乳。</span><br><span class=\"line\">［主治］水肿、脚气、黄疸或小便不利；痔疮下血、肠痈、腹泻；产后缺乳等。外敷可治热毒痈肿、血肿和扭伤。</span><br><span class=\"line\">［用法］煎汤或研末服用。</span><br><span class=\"line\">［注意事项］阴虚津枯者忌用。本品渗泄太过、瘦人多食之则令其愈瘦。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、维生素Ｂ1、维生素Ｂ2和烟酸等。另含三种结晶性皂甙，能引起肠道泻下作用。</span><br><span class=\"line\"></span><br><span class=\"line\">9、绿 豆</span><br><span class=\"line\">［性味］味甘，性凉。</span><br><span class=\"line\">［功能］清热解毒，清暑利水。</span><br><span class=\"line\">［主治］热病或暑热所致的心烦、口渴、发热；水肿或湿热泄泻；痈疖、痄腮、丹毒、痘疹及多种药、食物中毒。</span><br><span class=\"line\">［用法］煎汤，研末磨浆，或煮粥服。</span><br><span class=\"line\">［注意事项］本品皮寒肉平，用时不宜去皮。脾胃虚寒或阳虚体质不宜服。</span><br><span class=\"line\">［现代研究］含蛋白质、糖类、脂肪、磷、钙、铁、胡萝卜素、维生素Ｂ1、维生素Ｂ2和烟酸等成份。有较明显的解毒、保肝作用。</span><br><span class=\"line\"></span><br><span class=\"line\">10、扁 豆</span><br><span class=\"line\">［性味］味甘，性微温。又名蛾眉豆。</span><br><span class=\"line\">［功能］健脾化湿。</span><br><span class=\"line\">［主治］脾虚有湿，体倦乏力，食少便溏或泄泻；妇女脾虚带下；暑湿吐泻。</span><br><span class=\"line\">［用法］健脾止泻宜炒用；消暑宜生用。煎汤，研末，或煮熟食。</span><br><span class=\"line\">［注意事项］脾胃虚寒中满者，食之腹胀，宜慎用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、锌、维生素Ｂ1、维生素Ｂ2和烟酸、泛酸、豆甾醇、磷脂、氰甙、血球凝结素等成份。据药理研究：扁豆含有一种毒蛋白，豆荚上有一种溶血素。此二物须高温方能被破坏，若加热不够，食后可发生恶心、呕吐、腹痛、头晕等中毒症状。</span><br><span class=\"line\"></span><br><span class=\"line\">二、肉类</span><br><span class=\"line\"></span><br><span class=\"line\">11、猪 肝</span><br><span class=\"line\">［性味］苦寒。</span><br><span class=\"line\">［功能］养肝明目及补血。</span><br><span class=\"line\">［主治］肝虚血枯及失血后的眼花、夜盲、失眠、大便不畅及贫血等。</span><br><span class=\"line\"></span><br><span class=\"line\">12、猪肚</span><br><span class=\"line\">［性味］ 味甘微温。</span><br><span class=\"line\">［功能］补益脾胃。</span><br><span class=\"line\">［主治］用于脾虚腹泻、虚劳瘦弱、消渴、小儿疳积、尿频或遗尿。猪肚为猪全身胆固醇含量最低的部分，适宜各种年龄和体质的人食用。</span><br><span class=\"line\"></span><br><span class=\"line\">13、猪 脾</span><br><span class=\"line\">［性味］ 味甘性平。又称联贴。</span><br><span class=\"line\">［功能］益脾胃，助消化。</span><br><span class=\"line\">［主治］多用于小儿脾胃虚弱、饮食不化、食欲减退。</span><br><span class=\"line\"></span><br><span class=\"line\">14、猪 肾</span><br><span class=\"line\">［性味］ 味甘、咸，性平。俗称猪腰子。</span><br><span class=\"line\">［功能］补肾、止遗、止汗、利水。</span><br><span class=\"line\">［主治］用于肾虚耳聋、腰痛、遗精盗汗、身面浮肿等。猪肾的胆固醇含量较高，不宜常食和多食。</span><br><span class=\"line\"></span><br><span class=\"line\">15、猪 蹄</span><br><span class=\"line\">［性味］ 味甘、咸，性平。</span><br><span class=\"line\">［功能］有补血、通乳、托疮之功，可用于产后奶少，痈疽疮疡等。催乳可用本品或加黄芪、当归炖熟服食。</span><br><span class=\"line\"></span><br><span class=\"line\">16、牛 肉</span><br><span class=\"line\">［性味］味甘，性平（水牛肉性偏寒）</span><br><span class=\"line\">［功能］补脾胃，益气血，强筋骨。</span><br><span class=\"line\">［主治］虚损羸瘦；腰膝酸软，筋骨不健；脾虚食少及水肿等。</span><br><span class=\"line\">［注意事项］牛肉为发物，患疮疥湿疹、痘痧、瘙痒者，食后病情可能加重，宜慎用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、无机盐及维生素等。牛肉蛋白质所含必需氨基酸甚多，故其营养价值甚高。</span><br><span class=\"line\"></span><br><span class=\"line\">17、羊 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补气养血，温中暖肾。</span><br><span class=\"line\">［主治］气血不足，虚劳羸瘦；脾胃虚冷，腹痛，少食或欲呕；肾虚阳衰，腰膝酸软，尿频，阳痿。</span><br><span class=\"line\">［注意事项］各种急性炎症、外感发烧、热病初愈、皮肤疮疡、漆疮、疖肿及各种出血病患者均应忌食。孕妇及素有体热者不宜食。</span><br><span class=\"line\">［现代研究］含丰富的蛋白质、脂肪、磷、铁、钙、维生素Ｂ1、维生素Ｂ2和烟酸、脂甾醇等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">18、羊肝</span><br><span class=\"line\">味甘性平。功能补血益肝，明目。适用于血虚萎黄瘦弱、肝虚视力减退、青光眼、雀盲等，可单用熟食或蘸醋食。现代研究表明，以羊肝６０克，香油３０克，炒热，入少许盐即可，小吃或佐餐食用，可治慢性咳嗽。</span><br><span class=\"line\"></span><br><span class=\"line\">19、羊鞭</span><br><span class=\"line\">味甘、咸，性温。为羊的阴茎和睾丸。功能补肾、壮阳、益精。可用于下部虚寒之阳痿遗精、带下等。可煨烂，或熬粥食。</span><br><span class=\"line\"></span><br><span class=\"line\">20、羊肾</span><br><span class=\"line\">味甘性温。功能补肾气、益精髓。用于肾虚劳损、腰脊疼痛、足膝萎弱、耳聋、消渴、阳痿、尿频、遗精等。可切片与大米煮粥食。</span><br><span class=\"line\"></span><br><span class=\"line\">21、狗 肉</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］温补脾胃，温肾助阳。</span><br><span class=\"line\">［主治］脾胃虚寒，胀满少食；肾阳不足，腰膝酸软，肢体欠温，阳痿遗精，夜多小便；脾虚水肿。</span><br><span class=\"line\">［注意事项］狗肉性温能散，食之易发热动火以及壮阳，故青壮年时期、热病恢复期、各种出血疾患以及各种急性炎症、湿疹、痈疽、疮疡、阴虚内热者及妊娠妇女均应忌食。且不宜春、夏季用。食狗肉忌蒜、忌茶，若食后口燥可饮米汤解之。</span><br><span class=\"line\">［现代研究］除含一般营养成分外，尚含嘌呤类和肌肽、肌酸、钾、钠、氯等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">22、黄狗肾（狗鞭）</span><br><span class=\"line\">味甘、咸，性温。为黄狗的阴茎和睾丸。功能补肾壮阳、益精。可用于肾虚阳衰所致的男子阳痿、阴冷、或畏寒肢冷，腰酸尿频等。可单用煮熟，或研末，温开水送服。</span><br><span class=\"line\"></span><br><span class=\"line\">23、鸡 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］温中益气养血，补肾益精添髓。</span><br><span class=\"line\">［主治］虚劳瘦弱，病后体弱乏力；中虚食少、泄泻；气血不足，头晕心悸，或产后乳汁缺乏；肾虚之小便频数、遗精、耳聋耳鸣、月经不调；脾虚水肿；疮疡久不愈合等。</span><br><span class=\"line\">［注意事项］高血压、口腔溃疡、急生炎症、皮肤疖肿、大便秘结者均不宜食；幼儿、体盛之人不宜多食；鸡尾部有个法氏囊，它可能有各种病菌及癌细胞的聚结，故不宜食用。</span><br><span class=\"line\">［现代研究］含丰富的蛋白质、脂肪、钙、磷、铁、镁、钾、钠和烟酸等成分，还含有Ａ、Ｂ1、Ｂ2、Ｃ、Ｅ等多种维生素。脂肪含量较少，其中含有高度不饱和脂肪酸。另含胆固醇、组氨酸。</span><br><span class=\"line\"></span><br><span class=\"line\">24、乌骨鸡</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］养阴退热，益脾补中。</span><br><span class=\"line\">［主治］肝肾阴虚，骨蒸潮热，盗汗，口渴；脾虚泄泻；脾虚或脾肾两虚，遗精，白浊或妇女带下。</span><br><span class=\"line\"></span><br><span class=\"line\">25、鸭 肉</span><br><span class=\"line\">［性味］味甘、咸，性微寒。</span><br><span class=\"line\">［功能］养胃滋阴，清虚热，利水消肿。</span><br><span class=\"line\">［主治］虚劳骨蒸发热，咳嗽痰少，咽喉干燥；阴虚阳亢之头晕头痛；水肿，小便不利。</span><br><span class=\"line\">［注意事项］脾虚便溏腹泻，或外感未清的病人不宜用。食鸭肉忌大蒜、木耳和鳖肉。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、少量的碳水化合物，无机盐钙、磷、铁，以及维生素Ｂ1、维生素Ｂ2等。</span><br><span class=\"line\"></span><br><span class=\"line\">26、鹅 肉</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补虚益气，和胃止渴。</span><br><span class=\"line\">［主治］中气不足，消瘦乏力，食少；气阴不足的口渴、气短、咳嗽等。</span><br><span class=\"line\"></span><br><span class=\"line\">27、麻雀肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补益精髓，补肾壮阳，缩小便。</span><br><span class=\"line\">［主治］肾气虚衰，精髓不足所致的眩晕耳鸣、腰膝酸软、阳痿早泄、小便频数或余沥不尽，百日咳等。</span><br><span class=\"line\">［用法］煨食，熬膏，煎汤。或入丸、散。</span><br><span class=\"line\">［注意事项］阴虚火旺者或阳盛及阳强易举者忌用；孕妇，大便秘结、小便短赤、各种血液病、各种炎症者也均应忌食；春夏季节不宜食雀。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">28、燕 窝</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋阴润肺，补脾益气。</span><br><span class=\"line\">［主治］阴虚肺燥，咳嗽痰喘，或肺痨咯血；久痢，老年疟疾及久疟；胎热或噎隔反胃。</span><br><span class=\"line\">［用法］用绢包煎汤，用开水发过，隔水炖或蒸熟服食。</span><br><span class=\"line\">［注意事项］脾胃虚寒，痰饮停滞及有外感的病人不宜用。</span><br><span class=\"line\">［现代研究］其成分以蛋白质为主，氨基酸的主要成分为精氨酸、胱氨酸、赖氨酸、色氨酸、酪氨酸等，还含氨基已糖及类似粘蛋白的物质，灰分中以钙、磷、钾、硫为主。</span><br><span class=\"line\"></span><br><span class=\"line\">29、鹿 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］益气血，补虚羸，补肾益精。</span><br><span class=\"line\">［主治］虚损羸瘦，气血不足，体倦乏力，或产后缺乳；肾阳虚衰，肾精不足，腰脊酸软，畏寒肢冷，阳痿精少。</span><br><span class=\"line\">［用法］煮食，或煎汤。</span><br><span class=\"line\">［注意事项］阳盛或阴虚有热者不宜食；炎热季节不宜食，面部有痤疮、皮疹、湿疹和各种炎症的患者应禁食；儿童、青少年除遵医嘱之外应该忌食。</span><br><span class=\"line\"></span><br><span class=\"line\">30、鹿 鞭</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］补肾，壮阳，益精。</span><br><span class=\"line\">［主治］肾虚阳衰，精血不足所致的眩晕耳鸣耳聋，腰膝酸软，阳痿，或妇女宫寒不孕等。</span><br><span class=\"line\">［用法］煮粥食，煎汤，也可研末服用。</span><br><span class=\"line\">［注意事项］凡阴虚火旺所致的咽喉干痛、出血症、阳强易举、便秘、心烦以及外感实热等症忌用。</span><br><span class=\"line\"></span><br><span class=\"line\">三、水产类</span><br><span class=\"line\"></span><br><span class=\"line\">31、鲤 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］健脾益气，利水消肿，下气通乳。</span><br><span class=\"line\">［主治］产后或病后虚弱；脾胃虚弱，食少便溏；脾虚水肿，小便不利，或脚 气，黄疸；产后乳少及咳嗽、气逆等。</span><br><span class=\"line\">［注意事项］痘疹、瘙痒、疥癣等症患者忌用。鲤鱼胆味苦有毒，勿使污染鱼肉。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，胱氨酸，谷氨酸，组氨酸，甘氨酸等２０余种氨基酸，维生素Ａ、Ｂ1、Ｂ2、，蛋白酶，钙，磷，铁，肌酸等。</span><br><span class=\"line\"></span><br><span class=\"line\">32、鲫 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］健脾利湿。</span><br><span class=\"line\">［主治］脾虚食少，乏力，浮肿，小便不利等。本品除内服外，煅灰存性，可以外敷痞肿、乳癌。其头煮汤可治脱肛，子宫下垂；其子能明目。</span><br><span class=\"line\">［现代研究］含蛋白质，氨基酸，钙，磷，铁及维生素Ａ、Ｂ1、Ｂ2等。</span><br><span class=\"line\"></span><br><span class=\"line\">33、黄花鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补虚益精，开胃消食，调中止痢。</span><br><span class=\"line\">［主治］久病体虚，面黄羸瘦，目昏神倦；脾胃虚弱，少食腹泻或营养不良；脾虚水肿等。</span><br><span class=\"line\">［注意事项］黄鱼古称发物，认为“多食发疮助热”。少数过敏体质者应加注意。且多食助湿生痰，胃呆痰多者宜慎。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2、烟酸和钙、磷、铁、碘等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">34、鳝 鱼</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补气益血，强筋骨，祛风湿，止血。</span><br><span class=\"line\">［主治］气血不足，虚羸瘦弱；产后恶露不尽或久痢；痔疮出血而气虚血亏者；风寒湿痹，肢体酸痛，足痿无力等。</span><br><span class=\"line\">［用法］煎炒，煮食，或作丸、散。</span><br><span class=\"line\">［注意事项］凡病属虚热，或时病前后及痢疾、腹胀满诸实症均不宜用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ1和烟酸等成分。经药理研究证实，鳝鱼含有降血糖和调节血糖的物质，故糖尿病人常食有益。</span><br><span class=\"line\"></span><br><span class=\"line\">35、泥 鳅</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补中，益肾，祛湿。</span><br><span class=\"line\">［主治］脾虚弱，脱肛；湿热黄疸，小便不利；肾气不足，阳痿早泄；消渴；痔疮，疮癣瘙痒等。本品诸病不忌，是肝病，糖尿病，泌尿系统疾病的食疗上品。</span><br><span class=\"line\">［注意事项］泥鳅忌狗肉。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ2、和烟酸等成分。有利胆作用，能明显地促使黄疸消退及转氨酶下降。</span><br><span class=\"line\"></span><br><span class=\"line\">36、鲇 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾，益血，催乳，利尿。</span><br><span class=\"line\">［主治］气血不足或营养不良；脾虚水肿，小便不利；产后气血虚亏，乳汁不足等；鲇鱼目煅灰，可涂皮肤脓疮。鲇鱼尾生贴，可治口眼歪斜。</span><br><span class=\"line\">［注意事项］鲇鱼卵有一定毒性，不宜食用。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，糖类，钙，磷，铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">37、鱼 鳔</span><br><span class=\"line\">［性味］味甘，性平。即黄鱼、鲟鱼、蝗鱼等肚中的鳔胶。</span><br><span class=\"line\">［功能］补肾益精，滋养筋脉，散瘀消肿，止血。</span><br><span class=\"line\">［主治］肾虚阳痿遗精；产后抽搐；血瘀肿痛；吐血崩漏，痔疮等。</span><br><span class=\"line\">［用法］炒食。炖食，或熬膏服。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪等。</span><br><span class=\"line\"></span><br><span class=\"line\">38、河 虾</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补肾壮阳，通乳托毒。</span><br><span class=\"line\">［主治］肾虚阳痿，产后乳少，体虚，麻疹、水痘出而不畅及痈疽疮疡等。</span><br><span class=\"line\">［用法］煮汤，油炸，烧菜，研末。</span><br><span class=\"line\">［注意事项］本品性湿易动风，故高血压患者，急性炎症和面部痤疮患者，不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">39、螃 蟹</span><br><span class=\"line\">［性味］味咸性寒。有河蟹、海蟹，二者功用同。</span><br><span class=\"line\">［功能］续筋接骨，活血行瘀，利湿退黄，清热解毒。</span><br><span class=\"line\">［主治］跌打损伤，损筋伤骨，血瘀肿痛；妇人产后血瘀腹痛，难产、胎衣不下；湿热黄疸；咽喉肿痛等。</span><br><span class=\"line\">［用法］浸酒，油炸，煎汤，作丸、散等。</span><br><span class=\"line\">［注意事项］外感寒邪未净，咳嗽便泻或脾胃虚寒者忌用；本品易动风，素有风痰（曾患中风、面瘫等症）者不宜食用；月经过多、痛经、妊娠妇女及各种出血病应忌食。</span><br><span class=\"line\">［现代研究］肉的内脏含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁及谷氨酸、甘氨酸、脯氨酸、组氨酸、精氨酸等多种氨基酸，微量的胆甾醇。蟹壳含碳酸钙、蟹红素、甲壳素、蛋白质等。</span><br><span class=\"line\"></span><br><span class=\"line\">40、墨 鱼</span><br><span class=\"line\">［性味］味甘，咸，性平。</span><br><span class=\"line\">［功能］补肝肾。养血滋阴。</span><br><span class=\"line\">［主治］精血亏损，头晕耳鸣，遗精早泄；血虚所致的经闭、崩漏、产后乳汁少及老人虚弱者。</span><br><span class=\"line\">［用法］煮食，或鲜用炒食。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2和烟酸、钙、磷、铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">41、甲 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋补肝肾，凉血。</span><br><span class=\"line\">［主治］肝肾阴虚，劳热骨蒸，或虚劳咳嗽；冲任虚损，崩漏带下；久疟不止；瘰疬，十二指肠溃疡；肝脾肿大等。</span><br><span class=\"line\">［用法］蒸食，或炖汤。</span><br><span class=\"line\">［注意事项］滋腻之品，不宜多食，以免引起胃弱和消化不良。痰湿壅盛者，宜慎用。</span><br><span class=\"line\">［现代研究］肉含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，钙，磷，铁和烟酸等成分。甲含动物胶、角质蛋白、碘、维生素Ｄ。能抑制肿瘤细胞的生长，提高机体的免疫功能。</span><br><span class=\"line\"></span><br><span class=\"line\">42、乌 龟</span><br><span class=\"line\">［性味］味甘、咸，性平。</span><br><span class=\"line\">［功能］滋阴补血。</span><br><span class=\"line\">［主治］阴虚劳热骨蒸；久嗽咯血、吐血、便血；肝肾阴虚，月经闭止；疟疾等。</span><br><span class=\"line\">［现代研究］肉含蛋白质、脂肪、钙、磷等。能抑制肿瘤细胞Ｓ180`ＥＣ等，并可增强机体免疫功能。</span><br><span class=\"line\"></span><br><span class=\"line\">43、田 螺</span><br><span class=\"line\">［性味］味甘、咸，性寒。</span><br><span class=\"line\">［功能］清热利湿，明目，退黄。</span><br><span class=\"line\">［主治］湿热淋症，水肿，小便不利；风热目赤痛；黄疸；痔疮便血、消渴等。</span><br><span class=\"line\">［用法］煎汤，或煮食。</span><br><span class=\"line\">［注意事项］性寒，过食易令人腹泻。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2、Ｄ，钙、磷、铁和烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">44、牡 蛎</span><br><span class=\"line\">［性味］味甘、咸，性平。又名海蛎子 。</span><br><span class=\"line\">［功能］滋阴养血，养心安神。</span><br><span class=\"line\">［主治］虚损劳疾，阴虚血亏；失眠心悸，心神不安等。</span><br><span class=\"line\">［用法］煎汤，烧菜，油炸。</span><br><span class=\"line\">［注意事项］牡蛎肉可生吃，脾虚者忌用。</span><br><span class=\"line\">［现代研究］含糖元，牛磺酸，１０种必需氨基酸，谷胱甘酸，维生素Ａ、Ｂ1、Ｂ2、Ｄ、Ｅ，岩藻糖及铜、锌、锰、钡、磷、钙、镁、铝、氧化铁等成分。牡蛎肉内含能促进儿童智力的微量元素锌，故又有益智海味之称。</span><br><span class=\"line\"></span><br><span class=\"line\">45、海 参</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］益精血，补肾气，润肠燥，止血。</span><br><span class=\"line\">［主治］精血亏损，虚衰瘦弱；肾虚不固之遗精尿频，或肾虚阳痿；阴血亏虚，肠燥便秘；结核病咯血，崩漏下血或皮下出血。另脑外伤后或大脑发育不良，常食海参，有补肾健脑之效。</span><br><span class=\"line\">［用洁］煎汤，煮食，爆炒，或入丸剂。</span><br><span class=\"line\">［注意事项］脾运不健，痰湿壅滞或便溏腹泻及病邪未尽者忌用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、钙、磷、铁、碘、维生素Ｂ1、维生素Ｂ2、和烟酸等。海参蛋白质中所含氨基酸为精氨酸、胱氨酸、组氨酸等。另含海参毒素。近人发现海参煮食可防护宫颈癌放射治疗的直肠反应。海参毒素能抑制Ｓ180及Ｋｒｅｂｓ－ａ腹水癌的生长，抑制多种霉菌。</span><br><span class=\"line\"></span><br><span class=\"line\">46、海 蜇</span><br><span class=\"line\">［性味］味咸，性平。</span><br><span class=\"line\">［功能］清热化痰，消积，润肠。</span><br><span class=\"line\">［主治］阴虚肺燥，痰热咳嗽，喘息；瘰疬痰核；食积痞胀；大便燥结。现代用以治疗高血压病亦有效。</span><br><span class=\"line\">［用法］煎汤，蒸、煮食，或生吃（凉拌）。</span><br><span class=\"line\">［注意事项］脾胃虚弱及虚寒者不宜服用。生食难以消化，故不可过量。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2的烟酸、钙、磷、铁、碘的胆碱等成分。有降压、扩张血管及乙酰胆碱样作用。</span><br><span class=\"line\"></span><br><span class=\"line\">47、海 带</span><br><span class=\"line\">［性味］味咸，性寒。</span><br><span class=\"line\">［功能］软坚化痰，清热利水。</span><br><span class=\"line\">［主治］瘿瘤结核；疝气，症瘕；水肿，脚气等。</span><br><span class=\"line\">［用法］煎汤，煮食，或作丸、散。</span><br><span class=\"line\">［注意事项］体虚及孕妇不宜用。</span><br><span class=\"line\">［现代研究］含大叶藻素，维生素Ｂ2、蛋白质、脂肪、戊聚糖、鞣质、碘等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">48、紫 菜</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］软坚化痰散结，清热利尿。</span><br><span class=\"line\">［主治］瘿瘤，瘰疬；咳嗽痰稠或肺痈初起；脚气，水肿，热淋尿赤涩痕等。</span><br><span class=\"line\">［用法］煎汤，煮食，或作丸，散。</span><br><span class=\"line\">［注意事项］脾虚消化不良者多食可致腹胀。</span><br><span class=\"line\"></span><br><span class=\"line\">四、果品蔬菜类</span><br><span class=\"line\"></span><br><span class=\"line\">49、枸 杞</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋补肝肾，明目，润肺。</span><br><span class=\"line\">［主治］肝肾阴虚之头晕耳鸣、腰膝酸软、遗精消渴；精血不足之眼目昏花、视力减退；阴虚劳嗽。</span><br><span class=\"line\">［用法］生食、煎汤、熬膏、浸酒。</span><br><span class=\"line\">［注意事项］脾虚有湿痰者及脾胃虚弱、经常腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含甜菜碱、氨基酸、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ，钙、磷、铁等成分。有降低胆固醇的作用。</span><br><span class=\"line\"></span><br><span class=\"line\">50、核 桃</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］滋补肝肾，补气养血，温肺润肠。</span><br><span class=\"line\">［主治］肾虚所致的喘嗽、腰痛脚弱、阳痿遗精、尿频石淋；习惯性便秘，老年人便秘。</span><br><span class=\"line\">［用法］生食或煮食。补肾多连内皮熟用；润肠则以去内皮生用为好。</span><br><span class=\"line\">［现代研究］含脂肪、蛋白质、碳水化合物、钙、磷、铁、胡萝卜素、核黄素，以及维生素Ａ、Ｂ、Ｃ、Ｅ等。其含有较高的不饱和脂肪酸，能预防动脉硬化，对高血压、冠心病有益。</span><br><span class=\"line\"></span><br><span class=\"line\">51、白 果</span><br><span class=\"line\">［性味］味甘、苦、涩，性平。</span><br><span class=\"line\">［功能］敛肺定喘，缩尿止带，止泻，益脾。</span><br><span class=\"line\">［主治］肺虚喘咳、哮喘；气虚或肾虚不固之遗尿、尿频、肾虚遗精；脾虚或脾肾两虚，带下，白浊、腹泻。</span><br><span class=\"line\">［用法］熟食，或入丸、散剂。</span><br><span class=\"line\">［注意事项］不可生食。不能多食，每次以服１０～１５克为宜，否则易于中毒。</span><br><span class=\"line\">［现代研究］含蛋白质、氨基酸、脂肪、胡萝卜素、维生素Ｂ2、钙磷、铁和微量氢氰酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">52、莲 子</span><br><span class=\"line\">［性味］味甘、涩，性平。</span><br><span class=\"line\">［功能］补脾止泻，益肾固精，养心安神。</span><br><span class=\"line\">［主治］脾虚久泻，食欲不振；肾虚遗精、滑精；虚烦、心悸怔忡。也可作于妇女崩漏、白带过多等症。</span><br><span class=\"line\">［用法］生食，熟食，煎汤，或入丸、散剂。</span><br><span class=\"line\">［注意事项］大便燥结者不宜食。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、脂肪、棉子糖、天门冬素及蜜三糖、钙、磷、铁等。</span><br><span class=\"line\"></span><br><span class=\"line\">53、芡 实</span><br><span class=\"line\">［性味］味甘、涩，性平。</span><br><span class=\"line\">［功能］补脾止泻止带，益肾固精。</span><br><span class=\"line\">［主治］脾虚久泻；肾虚遗尿尿频；妇女白带过多等。</span><br><span class=\"line\">［用法］煮粥或研末，煎汤服。</span><br><span class=\"line\">［现代研究］含大量淀粉及少量蛋白质、磷、钙、尼克酸、核黄酸、胡萝卜素等。</span><br><span class=\"line\"></span><br><span class=\"line\">54、栗 子</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补肾强腰，益脾胃，止泻。</span><br><span class=\"line\">［主治］肾虚腰膝无力，筋骨肿痛；脾胃虚弱或脾肾阳虚，便溏腹泻、久泻等。</span><br><span class=\"line\">［用法］生食或熟食。</span><br><span class=\"line\">［注意事项］生食不易消化，熟食又易带气膈食，故不宜多食。</span><br><span class=\"line\">［现代研究］含淀粉、糖、蛋白质、脂肪等，此外尚含较高的维生素Ｃ以及胡萝卜素、核黄素、尼克酸等多种维生素。</span><br><span class=\"line\"></span><br><span class=\"line\">55、冬 瓜</span><br><span class=\"line\">［性味］味甘、淡，性微寒。</span><br><span class=\"line\">［功能］清热化痰，生津止渴，利尿消肿，解毒。</span><br><span class=\"line\">［主治］痰热咳喘，热病烦渴，水肿，小便不利。痔疮疼痛可用冬瓜煎汤外洗；食鱼蟹或河豚中毒，可用鲜冬瓜绞汁或捣汁频饮。常食可用于减肥。</span><br><span class=\"line\">［用法］煎汤，绞汁或熟食。作菜食。</span><br><span class=\"line\">［注意事项］脾胃虚寒，阳气不足，阴虚消瘦者不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质、糖类、粗纤维、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ、烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">56、苦 瓜</span><br><span class=\"line\">［性味］味苦，性寒。</span><br><span class=\"line\">［功能］清热解暑，明目，解毒。</span><br><span class=\"line\">［主治］热病或暑热烦渴，暑疖，痱子过多；肝热目赤疼痛；痈肿、火烫伤、痢疾等。</span><br><span class=\"line\">［注意事项］脾胃虚寒者宜少食。</span><br><span class=\"line\">［现代研究］含苦瓜甙、５－羟基色胺、谷氨酸、丙氨酸、脯氨酸、a－氨基丁酸、瓜氨酸、半乳糖醛酸、果胶等成分。苦瓜浆汁或苦瓜有降低血糖的作用。近年来发现苦瓜中有一种苦瓜蛋白脂类成分，是一种有待开发，前景诱人的抗癌物质。</span><br><span class=\"line\"></span><br><span class=\"line\">57、韭 菜</span><br><span class=\"line\">［性味］味甘、辛，性温。</span><br><span class=\"line\">［功能］补肾助阳，温中行气，散瘀。</span><br><span class=\"line\">［主治］肾阳虚衰，阳痿遗精或遗尿，腰膝冷痛；噎膈反胃，食积腹痛，便秘；胸痹作痛，跌打损伤肿痛等。</span><br><span class=\"line\">［用法］捣汁饮，炒菜或作馅，煮汤食等。</span><br><span class=\"line\">［注意事项］本品不宜久煎，久炒，阴虚内热、疮疡、疱疹、目疾者不宜食。</span><br><span class=\"line\">［现代研究］含挥发油、硫化物、甙类、蛋白质、脂肪、糖类、胡萝卜素和维生素Ｂ、维生素Ｃ、纤维素及钙、磷、铁等成分。现代医学研究证明，韭菜中所含的挥发性精油及硫化合物具有降低血脂作用。同时，韭菜纤维素有利便作用，减少对食物中胆固醇的吸收而增加排泄，故韭菜对高血脂及冠心病人有好处。</span><br><span class=\"line\"></span><br><span class=\"line\">58、香 菜</span><br><span class=\"line\">［性味］味辛，性温。又名芫荽。</span><br><span class=\"line\">［功能］发汗透疹，解毒。果实芳香理气，健胃。</span><br><span class=\"line\">［主治］小儿麻疹，风疹透发不畅，流感以及食肉类食物中毒等。果实可用于胸膈胀闷，胃弱消化不良，胃寒痛，噎膈，反胃。</span><br><span class=\"line\">［用法］煎汤或凉拌食。</span><br><span class=\"line\">［注意事项］患脚气、金疮及阴虚火旺者不宜食。</span><br><span class=\"line\">［现代研究］全草含维生素Ｃ。果实含有挥发油，称胡荽油，油中主要成分为６０％～７０％的Ａ－沉香木醇、松萜、二聚戊稀、醋酸冰片酯、醋酸沉香萜脂等。此外尚含脂肪油。</span><br><span class=\"line\"></span><br><span class=\"line\">59、生 姜</span><br><span class=\"line\">［性味］味辛，性温。</span><br><span class=\"line\">［功能］发汗解表，温中止呕，温肺止咳，解毒。</span><br><span class=\"line\">［主治］感冒风寒，恶寒发热头痛；胃寒呕吐泄泻、反酸；肺寒咳嗽，痰多色白清稀；食鱼蟹中毒等。</span><br><span class=\"line\">［用法］煎汤，生食，捣汁冲服或作调味品。</span><br><span class=\"line\">［注意事项］阴虚火旺及热盛者忌食。</span><br><span class=\"line\">［现代研究］含辛辣和芳香气味的挥发油。油中主要成分为姜醇、姜烯、姜油萜、姜酚、龙脑、枸橼酸等。</span><br><span class=\"line\"></span><br><span class=\"line\">60、大 蒜</span><br><span class=\"line\">［性味］味辛，性温。</span><br><span class=\"line\">［功能］温中健胃，消食理气，解毒杀虫。</span><br><span class=\"line\">［主治］脘腹冷痛，饮食积滞，饮食不洁或食物中毒所致的呕吐腹泻，痢病；蛲虫病，钩虫病；肺结核，百日咳；外感风寒感冒头痛；痈疖肿毒，癣疮等。现代又用于高血压病、高血脂症、流感、流脑等。</span><br><span class=\"line\">［用法］生食，煨食，煮食，煎汤，捣泥为丸服或制糖浆服。外用捣敷，切片或隔蒜灸。</span><br><span class=\"line\">［注意事项］大量服用，可减少胃液分泌。有抗菌、抗原虫的作用，一般紫皮蒜强于白皮蒜，生用强于熟用。凡阴虚火旺及有目疾、舌、喉、口齿、狐臭诸疾均不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ｂ1、维生素Ｃ、胡萝卜素、糖类、挥发油，主要成分为大蒜辣素、大蒜新素。此外，尚含大蒜甙。本品可防癌。大蒜中的蒜辣素又可刺激胃液分泌，增进食欲，帮助消化。</span><br><span class=\"line\"></span><br><span class=\"line\">61、香 菇</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾益气，透疹。</span><br><span class=\"line\">［主治］脾胃虚弱，食欲减退，少气乏力；小儿麻疹透发不畅。现代又可用于佝偻病、高血压、动脉硬化、高血脂症、糖尿病、慢胜肝炎、肾炎、肿瘤（如胃癌、子宫颈癌）等。</span><br><span class=\"line\">［用法］煎汤，煮食，炖食等。</span><br><span class=\"line\">［现代研究］含脂肪、蛋白质、粗纤维、维生素Ｄ原、维生素Ａ原、维生素Ｂ族、酶及嘌呤等。本品有降低血脂的作用（包括血清甘油三酯、磷脂、总酯），香菇麦角甾醇经日光或紫外线照射可能转变为维生素Ｄ2，可抗佝偻病。</span><br><span class=\"line\"></span><br><span class=\"line\">62、木 耳</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］凉血止血，润肺益胃，益气补血。</span><br><span class=\"line\">［主治］吐血、便血或血痢、痔疮出血、妇女崩漏；肺燥咳嗽，或胃阴不足，咽干口燥；气虚脱肛或妇女产后虚弱、抽筋麻木等。</span><br><span class=\"line\">［注意事项］便溏腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含糖、蛋白质、粗纤维、磷、钙、胡萝卜素、维生素Ｂ1、维生素Ｂ2、麦角甾醇、卵磷脂、鞘磷脂、黑刺菌素等。有报道本品能减少血液凝块，有防止动脉粥样硬化、冠心病的作用。</span><br><span class=\"line\"></span><br><span class=\"line\">五、 蛋奶类</span><br><span class=\"line\"></span><br><span class=\"line\">63、鸡 蛋</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋阴益血润燥，养心除烦安神。</span><br><span class=\"line\">［主治］血虚所致的妇女月经不调，乳汁减少，眩晕，夜盲；病后体虚，营养不良；肺痨咯血，阴虚肺燥之咳嗽痰少，咽干喉痛，阴血不足之失眠烦躁、心悸，小儿惊痫，每天服５～１０毫升蛋黄油也可用于小儿消化不良。</span><br><span class=\"line\">［用法］煎、炒、蒸、煮、冲食均可。</span><br><span class=\"line\">［注意事项］不宜生食。老人宜少吃蛋黄，多吃蛋清。</span><br><span class=\"line\">［现代研究］含蛋白质及人体必需的八种氨基酸；脂肪中含多量卵磷脂、甘油三脂、胆固醇和蛋黄素。尚含铁、磷、钙等矿物质及维生素Ａ、Ｂ2、Ｂ6、Ｄ、</span><br><span class=\"line\">Ｅ和烟酸等。鸡蛋中含有大量的卵磷脂（尤其是蛋黄）。</span><br><span class=\"line\"></span><br><span class=\"line\">64、鹌鹑蛋</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补益气血，强身健脑。</span><br><span class=\"line\">［主治］肺痨咳嗽，久病或年老体弱，心悸失眠，体倦食少，小儿营养不良。现代又用于神经衰弱，高血压，动脉硬化，气管炎，慢性胃炎。</span><br><span class=\"line\">［现代研究］含较高的蛋白质及丰富的脑磷脂、卵磷脂，尚含铁和维生素等。据近年研究报道，本品的所含蛋白质、卵磷脂、维生素和铁等成分均较鸡蛋高，而胆固醇含量则较鸡蛋低１／３，所以本品是年老人及心脑血管病患者的理想食疗品。</span><br><span class=\"line\"></span><br><span class=\"line\">65、牛 奶</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补气养血，补肺养胃，生津润肠。</span><br><span class=\"line\">［主治］久病体虚，气血不足，虚损瘦弱，小儿营养不良；胃阴不足，噎膈反胃，消渴口干，大便燥结或习惯性便秘。也可用于胃及十二指肠溃疡。</span><br><span class=\"line\">［现代研究］含蛋白质，其中主要含酪蛋白；含八种人体必需氨基酸，尤含蛋氨酸及赖氨酸丰富；所含脂肪主要是棕榈酸、硬脂酸的甘油脂，也含少量低级脂肪酸及卵磷脂；含乳糖、钙、磷、铁，含维生素Ａ、Ｃ等多种维生素。</span><br><span class=\"line\"></span><br><span class=\"line\">66、蜂 蜜</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补中缓急，益阴润燥，解毒。</span><br><span class=\"line\">［主治］脾胃虚弱，体倦少食，脘腹作痛，或泻痢腹痛；肺燥咳嗽，肠燥便秘；疮疡毒，或服乌头、附子等引起的毒性反应。</span><br><span class=\"line\">［用法］沸水化服，或入膏剂、丸剂。</span><br><span class=\"line\">［注意事项］多食助痰湿，令腹胀泄泻，故痰湿痞满、腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含大量葡萄糖的果糖，少量蔗糖、蛋白质、柠檬酸、苹果酸、琥珀酸、甲酸、乙酸、泛酸、烟酸、胡萝卜素、淀粉酶、转化酶、脂酶，少量维生素Ｂ1、Ｂ2、Ｂ6、Ｃ、Ｋ，微量镁、硫、磷、钙、钾、钠、碘等多种盐类。本品对大肠杆菌、痢疾杆菌、伤寒杆菌、副伤寒杆菌、葡萄球菌、链球菌等有较强的抑制作用。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>食物药理及营养(5类66种)</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一、谷类豆类</span><br><span class=\"line\"></span><br><span class=\"line\">1、糯 米</span><br><span class=\"line\">［性味］味甘，性温粘滞。</span><br><span class=\"line\">［功能］补中益气，暖脾胃，止泻痢，止溲止汗。</span><br><span class=\"line\">［主治］脾胃虚弱，食少泄泻；气虚自汗；消渴口干；夜尿多，小便频数；神经衰弱、贫血等。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、脂肪、糖类、钙、磷、铁、维生素Ｂ1、维生素Ｂ2及烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">2、粟 米</span><br><span class=\"line\">［性味］味甘、咸，性凉。陈者性寒。也称秫米，小米。</span><br><span class=\"line\">［功能］益脾胃，除烦热，益肾气，补虚损，利小便。</span><br><span class=\"line\">［主治］脾胃虚弱反胃呕吐及脾虚泄泻，消化不良；胃热消渴，口干；热结膀胱，小便不利及病后、产后体弱等。</span><br><span class=\"line\">［现代研究］含蛋白质、淀粉、糖类、脂肪、钙、磷、铁、胡萝卜素、硫胺素、尼克酸、核黄素及烟酸等成分。蛋白质中含多量谷氨酸、脯氨酸、丙氨酸和蛋氨酸。其所含营养成分与大米相比，蛋白质、脂肪、维生素比大米含量高，因此对于产妇、小儿尤为相宜。</span><br><span class=\"line\"></span><br><span class=\"line\">3、小 麦</span><br><span class=\"line\">［性味］味甘，性微寒。</span><br><span class=\"line\">［功能］养心益肾，健脾厚肠，除热止渴。</span><br><span class=\"line\">［主治］脏躁心神不宁；失眠，烦热口干；肾气不足，小便不利；肠胃不固的慢性泄泻。</span><br><span class=\"line\">［注意事项］小麦陈者平和，新者壅气助湿热。素蕴湿热者，当慎用。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、糖类、糊精、脂肪、谷甾醇、卵磷脂、尿胆素、精氨酸、淀粉酶、麦芽糖酶、蛋白酶及维生素Ｂ等。麦胚含植物凝集素。</span><br><span class=\"line\"></span><br><span class=\"line\">4、麦 片</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾益胃，充饥滑肠。</span><br><span class=\"line\">［主治］病后体虚、纳呆、便秘及糖尿病等。</span><br><span class=\"line\">［现代研究］含蛋白质、维生素Ｂ1、维生素Ｂ2、脂肪及碳水化合物。</span><br><span class=\"line\"></span><br><span class=\"line\">5、荞 麦</span><br><span class=\"line\">［性味］味甘，性凉。</span><br><span class=\"line\">［功能］开胃宽肠，下气消积，清热利湿。</span><br><span class=\"line\">［主治］肠胃积滞，腹痛胀满，湿热泄泻，痢疾，或湿热淋浊及妇女带下等。</span><br><span class=\"line\">［注意事项］脾胃虚寒者不宜服，食之动寒气，发痼疾；不宜多食，多食难消，令人头晕；部分人食之可发生对光敏感症（又名荞麦病）或过敏性皮炎。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ及水杨胺等成分。其对皮肤可产生某些刺激，对某些人亦可产生各种过敏症状。</span><br><span class=\"line\"></span><br><span class=\"line\">6、高 梁</span><br><span class=\"line\">［性味］味甘、涩，性温。</span><br><span class=\"line\">［功能］益肠温中，涩肠止泻。</span><br><span class=\"line\">［主治］脾胃虚弱，消化不良，便溏腹泻等。</span><br><span class=\"line\">［用法］煎汤，研末，或煮粥服食。</span><br><span class=\"line\">［现代研究］含碳水化合物、蛋白质、脂肪、磷、铁、钙及核黄素等。</span><br><span class=\"line\"></span><br><span class=\"line\">7、薏苡仁</span><br><span class=\"line\">［性味］味甘、淡，性微寒。</span><br><span class=\"line\">［功能］利水渗湿，健脾，除痹，清热排脓。</span><br><span class=\"line\">［主治］脾虚湿盛水肿，小便不利，或脚气肿痛；脾虚泄泻；风湿痹痛，筋脉挛急；肺痈咳吐脓痰，肠痈拘急腹痛。此外，现又用于胃癌、肠癌等肿瘤以及扁平疣。</span><br><span class=\"line\">［用法］煎汤，煮粥，或研末。本品力缓，用量须大，宜久服。健脾炒用，其余生用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、淀粉、糖类、维生素Ｂ1、薏苡素、薏苡仁脂和亮氨酸、赖氨酸、精氨酸、酪氨酸等氨基酸。有报告称其对癌细胞，有阻止成长及伤害作用。</span><br><span class=\"line\"></span><br><span class=\"line\">8、赤小豆</span><br><span class=\"line\">［性味］味甘、酸，性平。</span><br><span class=\"line\">［功能］清热利水，散血消肿，通乳。</span><br><span class=\"line\">［主治］水肿、脚气、黄疸或小便不利；痔疮下血、肠痈、腹泻；产后缺乳等。外敷可治热毒痈肿、血肿和扭伤。</span><br><span class=\"line\">［用法］煎汤或研末服用。</span><br><span class=\"line\">［注意事项］阴虚津枯者忌用。本品渗泄太过、瘦人多食之则令其愈瘦。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、维生素Ｂ1、维生素Ｂ2和烟酸等。另含三种结晶性皂甙，能引起肠道泻下作用。</span><br><span class=\"line\"></span><br><span class=\"line\">9、绿 豆</span><br><span class=\"line\">［性味］味甘，性凉。</span><br><span class=\"line\">［功能］清热解毒，清暑利水。</span><br><span class=\"line\">［主治］热病或暑热所致的心烦、口渴、发热；水肿或湿热泄泻；痈疖、痄腮、丹毒、痘疹及多种药、食物中毒。</span><br><span class=\"line\">［用法］煎汤，研末磨浆，或煮粥服。</span><br><span class=\"line\">［注意事项］本品皮寒肉平，用时不宜去皮。脾胃虚寒或阳虚体质不宜服。</span><br><span class=\"line\">［现代研究］含蛋白质、糖类、脂肪、磷、钙、铁、胡萝卜素、维生素Ｂ1、维生素Ｂ2和烟酸等成份。有较明显的解毒、保肝作用。</span><br><span class=\"line\"></span><br><span class=\"line\">10、扁 豆</span><br><span class=\"line\">［性味］味甘，性微温。又名蛾眉豆。</span><br><span class=\"line\">［功能］健脾化湿。</span><br><span class=\"line\">［主治］脾虚有湿，体倦乏力，食少便溏或泄泻；妇女脾虚带下；暑湿吐泻。</span><br><span class=\"line\">［用法］健脾止泻宜炒用；消暑宜生用。煎汤，研末，或煮熟食。</span><br><span class=\"line\">［注意事项］脾胃虚寒中满者，食之腹胀，宜慎用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、磷、钙、铁、锌、维生素Ｂ1、维生素Ｂ2和烟酸、泛酸、豆甾醇、磷脂、氰甙、血球凝结素等成份。据药理研究：扁豆含有一种毒蛋白，豆荚上有一种溶血素。此二物须高温方能被破坏，若加热不够，食后可发生恶心、呕吐、腹痛、头晕等中毒症状。</span><br><span class=\"line\"></span><br><span class=\"line\">二、肉类</span><br><span class=\"line\"></span><br><span class=\"line\">11、猪 肝</span><br><span class=\"line\">［性味］苦寒。</span><br><span class=\"line\">［功能］养肝明目及补血。</span><br><span class=\"line\">［主治］肝虚血枯及失血后的眼花、夜盲、失眠、大便不畅及贫血等。</span><br><span class=\"line\"></span><br><span class=\"line\">12、猪肚</span><br><span class=\"line\">［性味］ 味甘微温。</span><br><span class=\"line\">［功能］补益脾胃。</span><br><span class=\"line\">［主治］用于脾虚腹泻、虚劳瘦弱、消渴、小儿疳积、尿频或遗尿。猪肚为猪全身胆固醇含量最低的部分，适宜各种年龄和体质的人食用。</span><br><span class=\"line\"></span><br><span class=\"line\">13、猪 脾</span><br><span class=\"line\">［性味］ 味甘性平。又称联贴。</span><br><span class=\"line\">［功能］益脾胃，助消化。</span><br><span class=\"line\">［主治］多用于小儿脾胃虚弱、饮食不化、食欲减退。</span><br><span class=\"line\"></span><br><span class=\"line\">14、猪 肾</span><br><span class=\"line\">［性味］ 味甘、咸，性平。俗称猪腰子。</span><br><span class=\"line\">［功能］补肾、止遗、止汗、利水。</span><br><span class=\"line\">［主治］用于肾虚耳聋、腰痛、遗精盗汗、身面浮肿等。猪肾的胆固醇含量较高，不宜常食和多食。</span><br><span class=\"line\"></span><br><span class=\"line\">15、猪 蹄</span><br><span class=\"line\">［性味］ 味甘、咸，性平。</span><br><span class=\"line\">［功能］有补血、通乳、托疮之功，可用于产后奶少，痈疽疮疡等。催乳可用本品或加黄芪、当归炖熟服食。</span><br><span class=\"line\"></span><br><span class=\"line\">16、牛 肉</span><br><span class=\"line\">［性味］味甘，性平（水牛肉性偏寒）</span><br><span class=\"line\">［功能］补脾胃，益气血，强筋骨。</span><br><span class=\"line\">［主治］虚损羸瘦；腰膝酸软，筋骨不健；脾虚食少及水肿等。</span><br><span class=\"line\">［注意事项］牛肉为发物，患疮疥湿疹、痘痧、瘙痒者，食后病情可能加重，宜慎用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、无机盐及维生素等。牛肉蛋白质所含必需氨基酸甚多，故其营养价值甚高。</span><br><span class=\"line\"></span><br><span class=\"line\">17、羊 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补气养血，温中暖肾。</span><br><span class=\"line\">［主治］气血不足，虚劳羸瘦；脾胃虚冷，腹痛，少食或欲呕；肾虚阳衰，腰膝酸软，尿频，阳痿。</span><br><span class=\"line\">［注意事项］各种急性炎症、外感发烧、热病初愈、皮肤疮疡、漆疮、疖肿及各种出血病患者均应忌食。孕妇及素有体热者不宜食。</span><br><span class=\"line\">［现代研究］含丰富的蛋白质、脂肪、磷、铁、钙、维生素Ｂ1、维生素Ｂ2和烟酸、脂甾醇等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">18、羊肝</span><br><span class=\"line\">味甘性平。功能补血益肝，明目。适用于血虚萎黄瘦弱、肝虚视力减退、青光眼、雀盲等，可单用熟食或蘸醋食。现代研究表明，以羊肝６０克，香油３０克，炒热，入少许盐即可，小吃或佐餐食用，可治慢性咳嗽。</span><br><span class=\"line\"></span><br><span class=\"line\">19、羊鞭</span><br><span class=\"line\">味甘、咸，性温。为羊的阴茎和睾丸。功能补肾、壮阳、益精。可用于下部虚寒之阳痿遗精、带下等。可煨烂，或熬粥食。</span><br><span class=\"line\"></span><br><span class=\"line\">20、羊肾</span><br><span class=\"line\">味甘性温。功能补肾气、益精髓。用于肾虚劳损、腰脊疼痛、足膝萎弱、耳聋、消渴、阳痿、尿频、遗精等。可切片与大米煮粥食。</span><br><span class=\"line\"></span><br><span class=\"line\">21、狗 肉</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］温补脾胃，温肾助阳。</span><br><span class=\"line\">［主治］脾胃虚寒，胀满少食；肾阳不足，腰膝酸软，肢体欠温，阳痿遗精，夜多小便；脾虚水肿。</span><br><span class=\"line\">［注意事项］狗肉性温能散，食之易发热动火以及壮阳，故青壮年时期、热病恢复期、各种出血疾患以及各种急性炎症、湿疹、痈疽、疮疡、阴虚内热者及妊娠妇女均应忌食。且不宜春、夏季用。食狗肉忌蒜、忌茶，若食后口燥可饮米汤解之。</span><br><span class=\"line\">［现代研究］除含一般营养成分外，尚含嘌呤类和肌肽、肌酸、钾、钠、氯等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">22、黄狗肾（狗鞭）</span><br><span class=\"line\">味甘、咸，性温。为黄狗的阴茎和睾丸。功能补肾壮阳、益精。可用于肾虚阳衰所致的男子阳痿、阴冷、或畏寒肢冷，腰酸尿频等。可单用煮熟，或研末，温开水送服。</span><br><span class=\"line\"></span><br><span class=\"line\">23、鸡 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］温中益气养血，补肾益精添髓。</span><br><span class=\"line\">［主治］虚劳瘦弱，病后体弱乏力；中虚食少、泄泻；气血不足，头晕心悸，或产后乳汁缺乏；肾虚之小便频数、遗精、耳聋耳鸣、月经不调；脾虚水肿；疮疡久不愈合等。</span><br><span class=\"line\">［注意事项］高血压、口腔溃疡、急生炎症、皮肤疖肿、大便秘结者均不宜食；幼儿、体盛之人不宜多食；鸡尾部有个法氏囊，它可能有各种病菌及癌细胞的聚结，故不宜食用。</span><br><span class=\"line\">［现代研究］含丰富的蛋白质、脂肪、钙、磷、铁、镁、钾、钠和烟酸等成分，还含有Ａ、Ｂ1、Ｂ2、Ｃ、Ｅ等多种维生素。脂肪含量较少，其中含有高度不饱和脂肪酸。另含胆固醇、组氨酸。</span><br><span class=\"line\"></span><br><span class=\"line\">24、乌骨鸡</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］养阴退热，益脾补中。</span><br><span class=\"line\">［主治］肝肾阴虚，骨蒸潮热，盗汗，口渴；脾虚泄泻；脾虚或脾肾两虚，遗精，白浊或妇女带下。</span><br><span class=\"line\"></span><br><span class=\"line\">25、鸭 肉</span><br><span class=\"line\">［性味］味甘、咸，性微寒。</span><br><span class=\"line\">［功能］养胃滋阴，清虚热，利水消肿。</span><br><span class=\"line\">［主治］虚劳骨蒸发热，咳嗽痰少，咽喉干燥；阴虚阳亢之头晕头痛；水肿，小便不利。</span><br><span class=\"line\">［注意事项］脾虚便溏腹泻，或外感未清的病人不宜用。食鸭肉忌大蒜、木耳和鳖肉。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、少量的碳水化合物，无机盐钙、磷、铁，以及维生素Ｂ1、维生素Ｂ2等。</span><br><span class=\"line\"></span><br><span class=\"line\">26、鹅 肉</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补虚益气，和胃止渴。</span><br><span class=\"line\">［主治］中气不足，消瘦乏力，食少；气阴不足的口渴、气短、咳嗽等。</span><br><span class=\"line\"></span><br><span class=\"line\">27、麻雀肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补益精髓，补肾壮阳，缩小便。</span><br><span class=\"line\">［主治］肾气虚衰，精髓不足所致的眩晕耳鸣、腰膝酸软、阳痿早泄、小便频数或余沥不尽，百日咳等。</span><br><span class=\"line\">［用法］煨食，熬膏，煎汤。或入丸、散。</span><br><span class=\"line\">［注意事项］阴虚火旺者或阳盛及阳强易举者忌用；孕妇，大便秘结、小便短赤、各种血液病、各种炎症者也均应忌食；春夏季节不宜食雀。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">28、燕 窝</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋阴润肺，补脾益气。</span><br><span class=\"line\">［主治］阴虚肺燥，咳嗽痰喘，或肺痨咯血；久痢，老年疟疾及久疟；胎热或噎隔反胃。</span><br><span class=\"line\">［用法］用绢包煎汤，用开水发过，隔水炖或蒸熟服食。</span><br><span class=\"line\">［注意事项］脾胃虚寒，痰饮停滞及有外感的病人不宜用。</span><br><span class=\"line\">［现代研究］其成分以蛋白质为主，氨基酸的主要成分为精氨酸、胱氨酸、赖氨酸、色氨酸、酪氨酸等，还含氨基已糖及类似粘蛋白的物质，灰分中以钙、磷、钾、硫为主。</span><br><span class=\"line\"></span><br><span class=\"line\">29、鹿 肉</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］益气血，补虚羸，补肾益精。</span><br><span class=\"line\">［主治］虚损羸瘦，气血不足，体倦乏力，或产后缺乳；肾阳虚衰，肾精不足，腰脊酸软，畏寒肢冷，阳痿精少。</span><br><span class=\"line\">［用法］煮食，或煎汤。</span><br><span class=\"line\">［注意事项］阳盛或阴虚有热者不宜食；炎热季节不宜食，面部有痤疮、皮疹、湿疹和各种炎症的患者应禁食；儿童、青少年除遵医嘱之外应该忌食。</span><br><span class=\"line\"></span><br><span class=\"line\">30、鹿 鞭</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］补肾，壮阳，益精。</span><br><span class=\"line\">［主治］肾虚阳衰，精血不足所致的眩晕耳鸣耳聋，腰膝酸软，阳痿，或妇女宫寒不孕等。</span><br><span class=\"line\">［用法］煮粥食，煎汤，也可研末服用。</span><br><span class=\"line\">［注意事项］凡阴虚火旺所致的咽喉干痛、出血症、阳强易举、便秘、心烦以及外感实热等症忌用。</span><br><span class=\"line\"></span><br><span class=\"line\">三、水产类</span><br><span class=\"line\"></span><br><span class=\"line\">31、鲤 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］健脾益气，利水消肿，下气通乳。</span><br><span class=\"line\">［主治］产后或病后虚弱；脾胃虚弱，食少便溏；脾虚水肿，小便不利，或脚 气，黄疸；产后乳少及咳嗽、气逆等。</span><br><span class=\"line\">［注意事项］痘疹、瘙痒、疥癣等症患者忌用。鲤鱼胆味苦有毒，勿使污染鱼肉。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，胱氨酸，谷氨酸，组氨酸，甘氨酸等２０余种氨基酸，维生素Ａ、Ｂ1、Ｂ2、，蛋白酶，钙，磷，铁，肌酸等。</span><br><span class=\"line\"></span><br><span class=\"line\">32、鲫 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］健脾利湿。</span><br><span class=\"line\">［主治］脾虚食少，乏力，浮肿，小便不利等。本品除内服外，煅灰存性，可以外敷痞肿、乳癌。其头煮汤可治脱肛，子宫下垂；其子能明目。</span><br><span class=\"line\">［现代研究］含蛋白质，氨基酸，钙，磷，铁及维生素Ａ、Ｂ1、Ｂ2等。</span><br><span class=\"line\"></span><br><span class=\"line\">33、黄花鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补虚益精，开胃消食，调中止痢。</span><br><span class=\"line\">［主治］久病体虚，面黄羸瘦，目昏神倦；脾胃虚弱，少食腹泻或营养不良；脾虚水肿等。</span><br><span class=\"line\">［注意事项］黄鱼古称发物，认为“多食发疮助热”。少数过敏体质者应加注意。且多食助湿生痰，胃呆痰多者宜慎。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2、烟酸和钙、磷、铁、碘等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">34、鳝 鱼</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补气益血，强筋骨，祛风湿，止血。</span><br><span class=\"line\">［主治］气血不足，虚羸瘦弱；产后恶露不尽或久痢；痔疮出血而气虚血亏者；风寒湿痹，肢体酸痛，足痿无力等。</span><br><span class=\"line\">［用法］煎炒，煮食，或作丸、散。</span><br><span class=\"line\">［注意事项］凡病属虚热，或时病前后及痢疾、腹胀满诸实症均不宜用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ1和烟酸等成分。经药理研究证实，鳝鱼含有降血糖和调节血糖的物质，故糖尿病人常食有益。</span><br><span class=\"line\"></span><br><span class=\"line\">35、泥 鳅</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补中，益肾，祛湿。</span><br><span class=\"line\">［主治］脾虚弱，脱肛；湿热黄疸，小便不利；肾气不足，阳痿早泄；消渴；痔疮，疮癣瘙痒等。本品诸病不忌，是肝病，糖尿病，泌尿系统疾病的食疗上品。</span><br><span class=\"line\">［注意事项］泥鳅忌狗肉。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ａ、维生素Ｂ2、和烟酸等成分。有利胆作用，能明显地促使黄疸消退及转氨酶下降。</span><br><span class=\"line\"></span><br><span class=\"line\">36、鲇 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾，益血，催乳，利尿。</span><br><span class=\"line\">［主治］气血不足或营养不良；脾虚水肿，小便不利；产后气血虚亏，乳汁不足等；鲇鱼目煅灰，可涂皮肤脓疮。鲇鱼尾生贴，可治口眼歪斜。</span><br><span class=\"line\">［注意事项］鲇鱼卵有一定毒性，不宜食用。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，糖类，钙，磷，铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">37、鱼 鳔</span><br><span class=\"line\">［性味］味甘，性平。即黄鱼、鲟鱼、蝗鱼等肚中的鳔胶。</span><br><span class=\"line\">［功能］补肾益精，滋养筋脉，散瘀消肿，止血。</span><br><span class=\"line\">［主治］肾虚阳痿遗精；产后抽搐；血瘀肿痛；吐血崩漏，痔疮等。</span><br><span class=\"line\">［用法］炒食。炖食，或熬膏服。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪等。</span><br><span class=\"line\"></span><br><span class=\"line\">38、河 虾</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补肾壮阳，通乳托毒。</span><br><span class=\"line\">［主治］肾虚阳痿，产后乳少，体虚，麻疹、水痘出而不畅及痈疽疮疡等。</span><br><span class=\"line\">［用法］煮汤，油炸，烧菜，研末。</span><br><span class=\"line\">［注意事项］本品性湿易动风，故高血压患者，急性炎症和面部痤疮患者，不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">39、螃 蟹</span><br><span class=\"line\">［性味］味咸性寒。有河蟹、海蟹，二者功用同。</span><br><span class=\"line\">［功能］续筋接骨，活血行瘀，利湿退黄，清热解毒。</span><br><span class=\"line\">［主治］跌打损伤，损筋伤骨，血瘀肿痛；妇人产后血瘀腹痛，难产、胎衣不下；湿热黄疸；咽喉肿痛等。</span><br><span class=\"line\">［用法］浸酒，油炸，煎汤，作丸、散等。</span><br><span class=\"line\">［注意事项］外感寒邪未净，咳嗽便泻或脾胃虚寒者忌用；本品易动风，素有风痰（曾患中风、面瘫等症）者不宜食用；月经过多、痛经、妊娠妇女及各种出血病应忌食。</span><br><span class=\"line\">［现代研究］肉的内脏含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，烟酸，钙，磷，铁及谷氨酸、甘氨酸、脯氨酸、组氨酸、精氨酸等多种氨基酸，微量的胆甾醇。蟹壳含碳酸钙、蟹红素、甲壳素、蛋白质等。</span><br><span class=\"line\"></span><br><span class=\"line\">40、墨 鱼</span><br><span class=\"line\">［性味］味甘，咸，性平。</span><br><span class=\"line\">［功能］补肝肾。养血滋阴。</span><br><span class=\"line\">［主治］精血亏损，头晕耳鸣，遗精早泄；血虚所致的经闭、崩漏、产后乳汁少及老人虚弱者。</span><br><span class=\"line\">［用法］煮食，或鲜用炒食。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2和烟酸、钙、磷、铁等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">41、甲 鱼</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋补肝肾，凉血。</span><br><span class=\"line\">［主治］肝肾阴虚，劳热骨蒸，或虚劳咳嗽；冲任虚损，崩漏带下；久疟不止；瘰疬，十二指肠溃疡；肝脾肿大等。</span><br><span class=\"line\">［用法］蒸食，或炖汤。</span><br><span class=\"line\">［注意事项］滋腻之品，不宜多食，以免引起胃弱和消化不良。痰湿壅盛者，宜慎用。</span><br><span class=\"line\">［现代研究］肉含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2，钙，磷，铁和烟酸等成分。甲含动物胶、角质蛋白、碘、维生素Ｄ。能抑制肿瘤细胞的生长，提高机体的免疫功能。</span><br><span class=\"line\"></span><br><span class=\"line\">42、乌 龟</span><br><span class=\"line\">［性味］味甘、咸，性平。</span><br><span class=\"line\">［功能］滋阴补血。</span><br><span class=\"line\">［主治］阴虚劳热骨蒸；久嗽咯血、吐血、便血；肝肾阴虚，月经闭止；疟疾等。</span><br><span class=\"line\">［现代研究］肉含蛋白质、脂肪、钙、磷等。能抑制肿瘤细胞Ｓ180`ＥＣ等，并可增强机体免疫功能。</span><br><span class=\"line\"></span><br><span class=\"line\">43、田 螺</span><br><span class=\"line\">［性味］味甘、咸，性寒。</span><br><span class=\"line\">［功能］清热利湿，明目，退黄。</span><br><span class=\"line\">［主治］湿热淋症，水肿，小便不利；风热目赤痛；黄疸；痔疮便血、消渴等。</span><br><span class=\"line\">［用法］煎汤，或煮食。</span><br><span class=\"line\">［注意事项］性寒，过食易令人腹泻。</span><br><span class=\"line\">［现代研究］含蛋白质，脂肪，维生素Ａ、Ｂ1、Ｂ2、Ｄ，钙、磷、铁和烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">44、牡 蛎</span><br><span class=\"line\">［性味］味甘、咸，性平。又名海蛎子 。</span><br><span class=\"line\">［功能］滋阴养血，养心安神。</span><br><span class=\"line\">［主治］虚损劳疾，阴虚血亏；失眠心悸，心神不安等。</span><br><span class=\"line\">［用法］煎汤，烧菜，油炸。</span><br><span class=\"line\">［注意事项］牡蛎肉可生吃，脾虚者忌用。</span><br><span class=\"line\">［现代研究］含糖元，牛磺酸，１０种必需氨基酸，谷胱甘酸，维生素Ａ、Ｂ1、Ｂ2、Ｄ、Ｅ，岩藻糖及铜、锌、锰、钡、磷、钙、镁、铝、氧化铁等成分。牡蛎肉内含能促进儿童智力的微量元素锌，故又有益智海味之称。</span><br><span class=\"line\"></span><br><span class=\"line\">45、海 参</span><br><span class=\"line\">［性味］味甘、咸，性温。</span><br><span class=\"line\">［功能］益精血，补肾气，润肠燥，止血。</span><br><span class=\"line\">［主治］精血亏损，虚衰瘦弱；肾虚不固之遗精尿频，或肾虚阳痿；阴血亏虚，肠燥便秘；结核病咯血，崩漏下血或皮下出血。另脑外伤后或大脑发育不良，常食海参，有补肾健脑之效。</span><br><span class=\"line\">［用洁］煎汤，煮食，爆炒，或入丸剂。</span><br><span class=\"line\">［注意事项］脾运不健，痰湿壅滞或便溏腹泻及病邪未尽者忌用。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、糖类、钙、磷、铁、碘、维生素Ｂ1、维生素Ｂ2、和烟酸等。海参蛋白质中所含氨基酸为精氨酸、胱氨酸、组氨酸等。另含海参毒素。近人发现海参煮食可防护宫颈癌放射治疗的直肠反应。海参毒素能抑制Ｓ180及Ｋｒｅｂｓ－ａ腹水癌的生长，抑制多种霉菌。</span><br><span class=\"line\"></span><br><span class=\"line\">46、海 蜇</span><br><span class=\"line\">［性味］味咸，性平。</span><br><span class=\"line\">［功能］清热化痰，消积，润肠。</span><br><span class=\"line\">［主治］阴虚肺燥，痰热咳嗽，喘息；瘰疬痰核；食积痞胀；大便燥结。现代用以治疗高血压病亦有效。</span><br><span class=\"line\">［用法］煎汤，蒸、煮食，或生吃（凉拌）。</span><br><span class=\"line\">［注意事项］脾胃虚弱及虚寒者不宜服用。生食难以消化，故不可过量。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、维生素Ｂ1、维生素Ｂ2的烟酸、钙、磷、铁、碘的胆碱等成分。有降压、扩张血管及乙酰胆碱样作用。</span><br><span class=\"line\"></span><br><span class=\"line\">47、海 带</span><br><span class=\"line\">［性味］味咸，性寒。</span><br><span class=\"line\">［功能］软坚化痰，清热利水。</span><br><span class=\"line\">［主治］瘿瘤结核；疝气，症瘕；水肿，脚气等。</span><br><span class=\"line\">［用法］煎汤，煮食，或作丸、散。</span><br><span class=\"line\">［注意事项］体虚及孕妇不宜用。</span><br><span class=\"line\">［现代研究］含大叶藻素，维生素Ｂ2、蛋白质、脂肪、戊聚糖、鞣质、碘等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">48、紫 菜</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］软坚化痰散结，清热利尿。</span><br><span class=\"line\">［主治］瘿瘤，瘰疬；咳嗽痰稠或肺痈初起；脚气，水肿，热淋尿赤涩痕等。</span><br><span class=\"line\">［用法］煎汤，煮食，或作丸，散。</span><br><span class=\"line\">［注意事项］脾虚消化不良者多食可致腹胀。</span><br><span class=\"line\"></span><br><span class=\"line\">四、果品蔬菜类</span><br><span class=\"line\"></span><br><span class=\"line\">49、枸 杞</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋补肝肾，明目，润肺。</span><br><span class=\"line\">［主治］肝肾阴虚之头晕耳鸣、腰膝酸软、遗精消渴；精血不足之眼目昏花、视力减退；阴虚劳嗽。</span><br><span class=\"line\">［用法］生食、煎汤、熬膏、浸酒。</span><br><span class=\"line\">［注意事项］脾虚有湿痰者及脾胃虚弱、经常腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含甜菜碱、氨基酸、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ，钙、磷、铁等成分。有降低胆固醇的作用。</span><br><span class=\"line\"></span><br><span class=\"line\">50、核 桃</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］滋补肝肾，补气养血，温肺润肠。</span><br><span class=\"line\">［主治］肾虚所致的喘嗽、腰痛脚弱、阳痿遗精、尿频石淋；习惯性便秘，老年人便秘。</span><br><span class=\"line\">［用法］生食或煮食。补肾多连内皮熟用；润肠则以去内皮生用为好。</span><br><span class=\"line\">［现代研究］含脂肪、蛋白质、碳水化合物、钙、磷、铁、胡萝卜素、核黄素，以及维生素Ａ、Ｂ、Ｃ、Ｅ等。其含有较高的不饱和脂肪酸，能预防动脉硬化，对高血压、冠心病有益。</span><br><span class=\"line\"></span><br><span class=\"line\">51、白 果</span><br><span class=\"line\">［性味］味甘、苦、涩，性平。</span><br><span class=\"line\">［功能］敛肺定喘，缩尿止带，止泻，益脾。</span><br><span class=\"line\">［主治］肺虚喘咳、哮喘；气虚或肾虚不固之遗尿、尿频、肾虚遗精；脾虚或脾肾两虚，带下，白浊、腹泻。</span><br><span class=\"line\">［用法］熟食，或入丸、散剂。</span><br><span class=\"line\">［注意事项］不可生食。不能多食，每次以服１０～１５克为宜，否则易于中毒。</span><br><span class=\"line\">［现代研究］含蛋白质、氨基酸、脂肪、胡萝卜素、维生素Ｂ2、钙磷、铁和微量氢氰酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">52、莲 子</span><br><span class=\"line\">［性味］味甘、涩，性平。</span><br><span class=\"line\">［功能］补脾止泻，益肾固精，养心安神。</span><br><span class=\"line\">［主治］脾虚久泻，食欲不振；肾虚遗精、滑精；虚烦、心悸怔忡。也可作于妇女崩漏、白带过多等症。</span><br><span class=\"line\">［用法］生食，熟食，煎汤，或入丸、散剂。</span><br><span class=\"line\">［注意事项］大便燥结者不宜食。</span><br><span class=\"line\">［现代研究］含淀粉、蛋白质、脂肪、棉子糖、天门冬素及蜜三糖、钙、磷、铁等。</span><br><span class=\"line\"></span><br><span class=\"line\">53、芡 实</span><br><span class=\"line\">［性味］味甘、涩，性平。</span><br><span class=\"line\">［功能］补脾止泻止带，益肾固精。</span><br><span class=\"line\">［主治］脾虚久泻；肾虚遗尿尿频；妇女白带过多等。</span><br><span class=\"line\">［用法］煮粥或研末，煎汤服。</span><br><span class=\"line\">［现代研究］含大量淀粉及少量蛋白质、磷、钙、尼克酸、核黄酸、胡萝卜素等。</span><br><span class=\"line\"></span><br><span class=\"line\">54、栗 子</span><br><span class=\"line\">［性味］味甘，性温。</span><br><span class=\"line\">［功能］补肾强腰，益脾胃，止泻。</span><br><span class=\"line\">［主治］肾虚腰膝无力，筋骨肿痛；脾胃虚弱或脾肾阳虚，便溏腹泻、久泻等。</span><br><span class=\"line\">［用法］生食或熟食。</span><br><span class=\"line\">［注意事项］生食不易消化，熟食又易带气膈食，故不宜多食。</span><br><span class=\"line\">［现代研究］含淀粉、糖、蛋白质、脂肪等，此外尚含较高的维生素Ｃ以及胡萝卜素、核黄素、尼克酸等多种维生素。</span><br><span class=\"line\"></span><br><span class=\"line\">55、冬 瓜</span><br><span class=\"line\">［性味］味甘、淡，性微寒。</span><br><span class=\"line\">［功能］清热化痰，生津止渴，利尿消肿，解毒。</span><br><span class=\"line\">［主治］痰热咳喘，热病烦渴，水肿，小便不利。痔疮疼痛可用冬瓜煎汤外洗；食鱼蟹或河豚中毒，可用鲜冬瓜绞汁或捣汁频饮。常食可用于减肥。</span><br><span class=\"line\">［用法］煎汤，绞汁或熟食。作菜食。</span><br><span class=\"line\">［注意事项］脾胃虚寒，阳气不足，阴虚消瘦者不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质、糖类、粗纤维、胡萝卜素、维生素Ｂ1、维生素Ｂ2、维生素Ｃ、烟酸等成分。</span><br><span class=\"line\"></span><br><span class=\"line\">56、苦 瓜</span><br><span class=\"line\">［性味］味苦，性寒。</span><br><span class=\"line\">［功能］清热解暑，明目，解毒。</span><br><span class=\"line\">［主治］热病或暑热烦渴，暑疖，痱子过多；肝热目赤疼痛；痈肿、火烫伤、痢疾等。</span><br><span class=\"line\">［注意事项］脾胃虚寒者宜少食。</span><br><span class=\"line\">［现代研究］含苦瓜甙、５－羟基色胺、谷氨酸、丙氨酸、脯氨酸、a－氨基丁酸、瓜氨酸、半乳糖醛酸、果胶等成分。苦瓜浆汁或苦瓜有降低血糖的作用。近年来发现苦瓜中有一种苦瓜蛋白脂类成分，是一种有待开发，前景诱人的抗癌物质。</span><br><span class=\"line\"></span><br><span class=\"line\">57、韭 菜</span><br><span class=\"line\">［性味］味甘、辛，性温。</span><br><span class=\"line\">［功能］补肾助阳，温中行气，散瘀。</span><br><span class=\"line\">［主治］肾阳虚衰，阳痿遗精或遗尿，腰膝冷痛；噎膈反胃，食积腹痛，便秘；胸痹作痛，跌打损伤肿痛等。</span><br><span class=\"line\">［用法］捣汁饮，炒菜或作馅，煮汤食等。</span><br><span class=\"line\">［注意事项］本品不宜久煎，久炒，阴虚内热、疮疡、疱疹、目疾者不宜食。</span><br><span class=\"line\">［现代研究］含挥发油、硫化物、甙类、蛋白质、脂肪、糖类、胡萝卜素和维生素Ｂ、维生素Ｃ、纤维素及钙、磷、铁等成分。现代医学研究证明，韭菜中所含的挥发性精油及硫化合物具有降低血脂作用。同时，韭菜纤维素有利便作用，减少对食物中胆固醇的吸收而增加排泄，故韭菜对高血脂及冠心病人有好处。</span><br><span class=\"line\"></span><br><span class=\"line\">58、香 菜</span><br><span class=\"line\">［性味］味辛，性温。又名芫荽。</span><br><span class=\"line\">［功能］发汗透疹，解毒。果实芳香理气，健胃。</span><br><span class=\"line\">［主治］小儿麻疹，风疹透发不畅，流感以及食肉类食物中毒等。果实可用于胸膈胀闷，胃弱消化不良，胃寒痛，噎膈，反胃。</span><br><span class=\"line\">［用法］煎汤或凉拌食。</span><br><span class=\"line\">［注意事项］患脚气、金疮及阴虚火旺者不宜食。</span><br><span class=\"line\">［现代研究］全草含维生素Ｃ。果实含有挥发油，称胡荽油，油中主要成分为６０％～７０％的Ａ－沉香木醇、松萜、二聚戊稀、醋酸冰片酯、醋酸沉香萜脂等。此外尚含脂肪油。</span><br><span class=\"line\"></span><br><span class=\"line\">59、生 姜</span><br><span class=\"line\">［性味］味辛，性温。</span><br><span class=\"line\">［功能］发汗解表，温中止呕，温肺止咳，解毒。</span><br><span class=\"line\">［主治］感冒风寒，恶寒发热头痛；胃寒呕吐泄泻、反酸；肺寒咳嗽，痰多色白清稀；食鱼蟹中毒等。</span><br><span class=\"line\">［用法］煎汤，生食，捣汁冲服或作调味品。</span><br><span class=\"line\">［注意事项］阴虚火旺及热盛者忌食。</span><br><span class=\"line\">［现代研究］含辛辣和芳香气味的挥发油。油中主要成分为姜醇、姜烯、姜油萜、姜酚、龙脑、枸橼酸等。</span><br><span class=\"line\"></span><br><span class=\"line\">60、大 蒜</span><br><span class=\"line\">［性味］味辛，性温。</span><br><span class=\"line\">［功能］温中健胃，消食理气，解毒杀虫。</span><br><span class=\"line\">［主治］脘腹冷痛，饮食积滞，饮食不洁或食物中毒所致的呕吐腹泻，痢病；蛲虫病，钩虫病；肺结核，百日咳；外感风寒感冒头痛；痈疖肿毒，癣疮等。现代又用于高血压病、高血脂症、流感、流脑等。</span><br><span class=\"line\">［用法］生食，煨食，煮食，煎汤，捣泥为丸服或制糖浆服。外用捣敷，切片或隔蒜灸。</span><br><span class=\"line\">［注意事项］大量服用，可减少胃液分泌。有抗菌、抗原虫的作用，一般紫皮蒜强于白皮蒜，生用强于熟用。凡阴虚火旺及有目疾、舌、喉、口齿、狐臭诸疾均不宜食。</span><br><span class=\"line\">［现代研究］含蛋白质、脂肪、钙、磷、铁、维生素Ｂ1、维生素Ｃ、胡萝卜素、糖类、挥发油，主要成分为大蒜辣素、大蒜新素。此外，尚含大蒜甙。本品可防癌。大蒜中的蒜辣素又可刺激胃液分泌，增进食欲，帮助消化。</span><br><span class=\"line\"></span><br><span class=\"line\">61、香 菇</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补脾益气，透疹。</span><br><span class=\"line\">［主治］脾胃虚弱，食欲减退，少气乏力；小儿麻疹透发不畅。现代又可用于佝偻病、高血压、动脉硬化、高血脂症、糖尿病、慢胜肝炎、肾炎、肿瘤（如胃癌、子宫颈癌）等。</span><br><span class=\"line\">［用法］煎汤，煮食，炖食等。</span><br><span class=\"line\">［现代研究］含脂肪、蛋白质、粗纤维、维生素Ｄ原、维生素Ａ原、维生素Ｂ族、酶及嘌呤等。本品有降低血脂的作用（包括血清甘油三酯、磷脂、总酯），香菇麦角甾醇经日光或紫外线照射可能转变为维生素Ｄ2，可抗佝偻病。</span><br><span class=\"line\"></span><br><span class=\"line\">62、木 耳</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］凉血止血，润肺益胃，益气补血。</span><br><span class=\"line\">［主治］吐血、便血或血痢、痔疮出血、妇女崩漏；肺燥咳嗽，或胃阴不足，咽干口燥；气虚脱肛或妇女产后虚弱、抽筋麻木等。</span><br><span class=\"line\">［注意事项］便溏腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含糖、蛋白质、粗纤维、磷、钙、胡萝卜素、维生素Ｂ1、维生素Ｂ2、麦角甾醇、卵磷脂、鞘磷脂、黑刺菌素等。有报道本品能减少血液凝块，有防止动脉粥样硬化、冠心病的作用。</span><br><span class=\"line\"></span><br><span class=\"line\">五、 蛋奶类</span><br><span class=\"line\"></span><br><span class=\"line\">63、鸡 蛋</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］滋阴益血润燥，养心除烦安神。</span><br><span class=\"line\">［主治］血虚所致的妇女月经不调，乳汁减少，眩晕，夜盲；病后体虚，营养不良；肺痨咯血，阴虚肺燥之咳嗽痰少，咽干喉痛，阴血不足之失眠烦躁、心悸，小儿惊痫，每天服５～１０毫升蛋黄油也可用于小儿消化不良。</span><br><span class=\"line\">［用法］煎、炒、蒸、煮、冲食均可。</span><br><span class=\"line\">［注意事项］不宜生食。老人宜少吃蛋黄，多吃蛋清。</span><br><span class=\"line\">［现代研究］含蛋白质及人体必需的八种氨基酸；脂肪中含多量卵磷脂、甘油三脂、胆固醇和蛋黄素。尚含铁、磷、钙等矿物质及维生素Ａ、Ｂ2、Ｂ6、Ｄ、</span><br><span class=\"line\">Ｅ和烟酸等。鸡蛋中含有大量的卵磷脂（尤其是蛋黄）。</span><br><span class=\"line\"></span><br><span class=\"line\">64、鹌鹑蛋</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补益气血，强身健脑。</span><br><span class=\"line\">［主治］肺痨咳嗽，久病或年老体弱，心悸失眠，体倦食少，小儿营养不良。现代又用于神经衰弱，高血压，动脉硬化，气管炎，慢性胃炎。</span><br><span class=\"line\">［现代研究］含较高的蛋白质及丰富的脑磷脂、卵磷脂，尚含铁和维生素等。据近年研究报道，本品的所含蛋白质、卵磷脂、维生素和铁等成分均较鸡蛋高，而胆固醇含量则较鸡蛋低１／３，所以本品是年老人及心脑血管病患者的理想食疗品。</span><br><span class=\"line\"></span><br><span class=\"line\">65、牛 奶</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补气养血，补肺养胃，生津润肠。</span><br><span class=\"line\">［主治］久病体虚，气血不足，虚损瘦弱，小儿营养不良；胃阴不足，噎膈反胃，消渴口干，大便燥结或习惯性便秘。也可用于胃及十二指肠溃疡。</span><br><span class=\"line\">［现代研究］含蛋白质，其中主要含酪蛋白；含八种人体必需氨基酸，尤含蛋氨酸及赖氨酸丰富；所含脂肪主要是棕榈酸、硬脂酸的甘油脂，也含少量低级脂肪酸及卵磷脂；含乳糖、钙、磷、铁，含维生素Ａ、Ｃ等多种维生素。</span><br><span class=\"line\"></span><br><span class=\"line\">66、蜂 蜜</span><br><span class=\"line\">［性味］味甘，性平。</span><br><span class=\"line\">［功能］补中缓急，益阴润燥，解毒。</span><br><span class=\"line\">［主治］脾胃虚弱，体倦少食，脘腹作痛，或泻痢腹痛；肺燥咳嗽，肠燥便秘；疮疡毒，或服乌头、附子等引起的毒性反应。</span><br><span class=\"line\">［用法］沸水化服，或入膏剂、丸剂。</span><br><span class=\"line\">［注意事项］多食助痰湿，令腹胀泄泻，故痰湿痞满、腹泻者不宜食。</span><br><span class=\"line\">［现代研究］含大量葡萄糖的果糖，少量蔗糖、蛋白质、柠檬酸、苹果酸、琥珀酸、甲酸、乙酸、泛酸、烟酸、胡萝卜素、淀粉酶、转化酶、脂酶，少量维生素Ｂ1、Ｂ2、Ｂ6、Ｃ、Ｋ，微量镁、硫、磷、钙、钾、钠、碘等多种盐类。本品对大肠杆菌、痢疾杆菌、伤寒杆菌、副伤寒杆菌、葡萄球菌、链球菌等有较强的抑制作用。</span><br></pre></td></tr></table></figure>"},{"title":"Linux常见问题","date":"2022-06-27T16:00:00.000Z","_content":"\nLinux常见问题\n\n<!--more-->\n\n## 源处理\n```\nsudo vim /etc/apt/sources.list\nsudo apt update\n\n阿里镜像站：https://mirrors.aliyun.com/ubuntu-releases\n网易镜像站：http://tel.mirrors.163.com/\n中科大：http://mirrors.ustc.edu.cn/ubuntu-releases\n浙大：http://mirrors.zju.edu.cn/ubuntu-releases\n清华镜像站：https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases\n清华帮助：https://mirrors.tuna.tsinghua.edu.cn/help\n替换为阿里源：sudo sed -i 's/mirrors.aliyun.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list\n\nubuntu各版本：\n    14：trusty\n    16：xenial\n    18：bionic\n    20：focal\n    22：jammy\n\nubuntu18\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n\nGPG error: The following signatures couldn't be verified because the public key is not available\n    sudo gpg --keyserver keyserver.ubuntu.com --recv 5523BAEEB01FA116\n    sudo gpg --export --armor 5523BAEEB01FA116 | sudo apt-key add -\n    sudo apt-get update\n```\n\n## ssh\n```\nssh -vT -p port user@ip（ssh登录，-v：详细信息，-T：测试，-t：开启伪终端，-tt：强制开启伪终端）\nssh-copy-id -p port user@ip（ssh免密登录）\nssh-keygen -f \"/home/jmm/.ssh/known_hosts\" -R [10.20.33.43]:10025（ssh更新known_hosts）\nssh -vvv（调试）\n\nssh免密登录\n    vim ~/.ssh/authorized_keys\n    chmod 600 ~/.ssh/authorized_keys\n    公钥拷贝到里面\n\n指定秘钥：\n    vim ~/.ssh/config\n    chmod 600 ~/.ssh/config\n        Host man1\n            HostName 192.168.2.18\n            IdentityFile ~/.ssh/id_rsa\n            User root\n            Port 22\n\n使ssh生效：\n    eval \"$(ssh-agent -s)\"\n    ssh-add\n    ssh-agent bash\n\nTheir offer:diffie-hellman-group1-sha1问题：\n    vim ~/.ssh/config\n    Host *\n        StrictHostKeyChecking no\n        KexAlgorithms +diffie-hellman-group1-sha1\n\n启用ssh-rsa：\n    vim ~/.ssh/config\n    Host *\n        HostKeyAlgorithms +ssh-rsa\n        PubkeyAcceptedKeyTypes +ssh-rsa\n\n修改22端口：\n    sudo vim /etc/ssh/sshd_config\n        修改Port 22为65534以下即可\n    sudo /etc/init.d/ssh restart #重启ssh\n\n允许远程登录：\n    sudo vim /etc/ssh/sshd_config\n        PermitRootLogin yes\n    sudo service ssh restart\n```\n\n## crontab定时任务\n```\ncrontab -e：添加任务\ncrontab -l：查看任务列表\n\n0 2 * * * /bin/bash backup.sh：每天 02:00 执行任务\n0 5,17 * * * /bin/bash /scripts/script.sh：每天 5:00和17:00执行任务\n*/60 * * * * /bin/bash /scripts/script.sh：每隔一个小时执行一次\n0 */2 * * * /bin/bash /scripts/script.sh：每隔两个小时执行一次\n0 17 * * sun /bin/bash /scripts/script.sh：每周日 17:00 执行任务\n```\n\n## 开机启动\n```\n1.修改启动文件（ubuntu14、ubuntu16支持）\n    /etc/rc.local\n2.配置启动脚本\n    sudo vim /etc/init.d/automount\n        #!/bin/sh\n\n        ### BEGIN INIT INFO\n        # Provides:          jmm.com\n        # Required-Start:    $local_fs $remote_fs $network $syslog $named\n        # Required-Stop:     $local_fs $remote_fs $network $syslog $named\n        # Default-Start:     2 3 4 5\n        # Default-Stop:      0 1 6\n        # Short-Description: jmm service\n        # Description:       jmm service\n        ### END INIT INFO\n\n        busybox mount -t nfs -o nolock 10.169.0.203:/data/backup /data/mirror\n        exit 0\n\n    sudo chmod +x /etc/init.d/automount\n    sudo update-rc.d automount defaults 99（开启）\n    sudo update-rc.d -f automount remove（移除）\n```\n\n## service 和 systemctl\n```\nservice命令其实是去/etc/init.d目录下，去执行相关程序\n    sudo service redis start\n    sudo /etc/init.d/redis start\nsystemd作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动，systemd对应的进程管理命令是systemctl。\n    兼容service：\n    sudo systemctl redis start（启动服务）\n    systemctl enable redis（开机启动服务）\n```\n\n## 防火墙\n\n```\niptables/firewall/ufw\n    iptables比较老默认开放就行\n    ufw是debian系列的（iptables托管给ufw）\n    firewall是redhat系列的\n\nufw接管防火墙\n    sudo ufw enable（开启，阶段iptables，底层还是iptables）\n    sudo ufw disable（关闭）\n    sudo ufw status（查看防火墙表）\n    sudo ufw status verbose（查看策略）\n    sudo ufw status numbered（查看防火墙表 加行号，删除 sudo ufw delete 1）\n\n    sudo ufw allow 80（允许80，sudo ufw delete allow 80（删除就是在规则前加delete））\n    sudo ufw deny 80（拒绝80）\n\n    sudo ufw allow 80/tcp（允许80，tcp形式）\n    sudo ufw allow 9000:9002（允许一段端口）\n    sudo ufw allow from 192.168.29.36（允许ip）\n    sudo ufw allow from 192.168.1.0/24（允许ip段）\n    sudo ufw allow from 192.168.29.36 to any port 80（允许ip访问80）\n    sudo ufw allow from 192.168.29.36 to any port 80 proto tcp（允许ip以tcp形式访问80）\n\niptables防火墙\n    sudo iptables --line-number -nL（查看列表）\n    sudo iptables -F（清空列表）\n    sudo iptables -D INPUT 3（删除input表第三条规则）\n\n    sudo iptables -P INPUT ACCEPT（允许input表）\n    sudo iptables -P OUTPUT ACCEPT（允许output表）\n    sudo iptables -P INPUT DROP（禁止input表）\n    sudo iptables -P OUTPUT DROP（禁止output表）\n\n    sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT（允许某个端口进）\n    sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT（允许某个端口出）\n    sudo iptables -A INPUT -s 192.168.0.3 -j ACCEPT（允许某个ip进）\n    sudo iptables -A OUTPUT -s 192.168.0.3 -j ACCEPT（允许某个ip出）\n    sudo iptables -A INPUT -s 192.168.0.0/24 -j ACCEPT（允许192.168.0.1 - 192.168.0.254网段访问）\n\n    sudo iptables -A INPUT -p tcp --dport 22 -j DROP（禁止某个端口进）\n    sudo iptables -A OUTPUT -p tcp --sport 22 -j DROP（禁止某个端口出）\n    sudo iptables -A INPUT -s 192.168.0.3 -j DROP（禁止某个ip进）\n    sudo iptables -A OUTPUT -s 192.168.0.3 -j DROP（禁止某个ip出）\n\n    sudo iptables -I INPUT 1 -s 192.168.0.3 -j ACCEPT（允许某个ip进，插入）\n```\n\n## vim编辑器\n```\n编辑文件：vim [file]\n三种模式：命令模式（esc进入）、底线命令模式（:/?进入）、编辑模式（i、a、o、r、I、A、O、R进入）、块模式（ctrl+v进入）\n命令模式（前面加数字可以达到重复的效果）\n    删除行：dd\n    复制行：yy\n    拷贝行：p\n    首行：gg\n    尾行：G\n    删除数字：x（X为向前删除）\n    撤销：u（ctrl+r反撤销）\n    重复上一次命令：.\n    显示当前文件名和位置：ctrl+g\n    合并两行：J\n\n底线命令模式\n    退出：:wq!、:q!、:x!、:qa!\n    跳转到行：:20\n    查找：/xxx （忽略大小写:\\c，n下一个，N上一个）\n    反向查找：?xxx（忽略转义和大小写）\n    替换每行所有：:%s/aaa/bbb/g（替换当前行第一个：:s/aaa/bbb/，用其他分割符：%s#aaa#bbb#g）\n    列出所有匹配项：:g/aaa（忽略大小写:\\c）\n    显示行号：set number（关闭行号：set nonumber，可写在~/.vimrc里面）\n    取消自动换行：set nowrap（换行：set wrap）\n    搜索关键字高亮：set incsearch（关闭高亮：set noincsearch）\n    忽略大小写：set ignorecase（关闭忽略大小写：set noignorecase）\n    取消粘贴缩进：set paste\n    取消鼠标选择：set mouse=（开启鼠标选择：set mouse=a）\n\n其他\n    vim分屏：:vs [file]（左右分屏），ctrl + w w（切换屏幕）\n    vimdiff对比文件：vimdiff file1 file2（dp：应用于另一边，do：获得另一边的修改，zo：展开）\n    meld对比文件：meld file1 file2\n```\n\n## 配置静态ip\n```\nnetwork（ubuntu16及以下）\n    sudo vim /etc/network/interfaces\n        auto enp3s0\n        iface enp3s0 inet static\n        address 192.168.0.200\n        netmask 255.255.255.0\n        gateway 192.168.0.1\n        dns-nameserver 8.8.8.8\n\n    sudo service networking restart\n\nnetplan（ubuntu18及以上）\n    sudo vim /etc/netplan/01-network-manager-all.yaml\n        network:\n          version: 2\n          renderer: NetworkManager\n          ethernets:\n             eno1: # 网卡\n               dhcp4: no # dhcp4关闭\n               addresses: [192.168.202.36/24] # ip和掩码\n               gateway4: 192.168.202.1 # 网关\n               nameservers:\n                 addresses: [8.8.8.8,114.114.114.114] #设置DNS\n\n    sudo netplan apply\n\nnetplan（ubuntu20及以上）\n    sudo vim /etc/netplan/01-network-manager-all.yaml\n        network:\n          version: 2\n          renderer: NetworkManager\n          ethernets:\n             eno1:\n               dhcp4: no\n               addresses: [10.170.0.238/23]\n               routes:\n               - to: default\n                 via: 10.170.0.1\n               nameservers:\n                 addresses: [8.8.8.8,114.114.114.114] #设置DNS\n\n    sudo netplan apply\n```\n\n## dependency problems - leaving unconfigured问题\n```\nsudo mv /var/lib/dpkg/info/ /var/lib/dpkg/info_old/\nsudo mkdir /var/lib/dpkg/info/\nsudo apt-get update\nsudo apt-get -f install\nsudo apt-get upgrade\n```\n\n## profile和bashrc\n```\nprofile：系统全局环境登录的一些配置\nbashrc：用户bash的一些配置\n.env：进入目录时初始化环境\n执⾏顺序为：/etc/profile -> (~/.bash_profile | ~/.bash_login | ~/.profile) -> ~/.bashrc -> /etc/bashrc -> ~/.\n```\n\n## 文本处理三剑客（grep/egrep、sed、awk）\n\n```\n正则支持（三剑客都是以行为单位进行处理）\n    grep：默认不支持扩展正则，加上-E支持扩展正则，如果不加上-E，使用\\{\\}要加上\\进行转义。\n    egrep：支持基础和扩展正则，相当于grep -E。\n    sed：默认不支持扩展正则，机上-r选项支持扩展正则，如果不加上-r，使用\\{\\}要加上\\进行转义。\n    awk：默认支持所有正则。\n\n    shell的正则分为两类：\n        基础正则表达式、扩展正则表达式 {扩展的有+、？、|、（）}\n    区分正则和通配符：\n        1、只要涉及grep/egrep sed awk都是正则。其他的都是统配符\n        2、涉及文件和目录名——统配符；涉及文本内容——正则\n    基础正则\n        ^ ：表示匹配字符串开头\n        . ：匹配一个字符，且该字符必须存在\n        * ：匹配前面一个字符的0个或者多个\n        .* ：可以匹配任意长度的任意内容\n        $ ：匹配字符串结尾\n        [] ：表示匹配括号里的任意一个字符\n        ^[^s] ：^在中括号中有^表示取反，非。匹配不以s开头的字符\n        \\{n,m\\} ：匹配字符n到m次，至少n次，至多m次\n        \\(\\) ：分组\n        \\<\\> ：单词锚定，\\<root\\<，root必须作为一行的单词出现,也可\\broot\\b\n    拓展正则\n        grep -E ：-E支持拓展正则，或者直接使用egrep，拓展正则支持所有的基础正则\n        ? ：最多匹配一个，可以是0个\n        + ：至少匹配一个可以是多个\n        | ：或\n        () ：分组\n\ngrep使用\n    -r：目录递归\n    -n：打印行号\n    -s：不显示错误\n    -i：忽略大小写\n    -o：只打印匹配的内容\n    -v：取反，打印不匹配的行\n    -q：如果有匹配的内容则返回状态值0\n    -c：匹配的内容有多少行\n    -E：扩展正则表达式\n    -P：支持perl的正则语法\n    -A1：after打印匹配的后几行\n    -B1：before打印匹配的后几行\n    -C1：打印匹配的前后几行\n\nsed操作\n    选项\n        -i：直接修改写入到文件内容，而不是输出到终端。如果不使用-i那么只会修改内存中的内容，而不会写入到磁盘。\n        -n：输出模式，取消默认的sed软件输出，常与sed-commands的p连用\n        -e：多点操作，一条命令语句执行多个sed操作。\n        -r：使用扩展正则表达式\n    sed-commands（$表示行末）：\n        i ：insert 插入，在指定的行前添加一行或多行文本\n        a ：append 在指定行后面追加一行或者多行文本\n        s ：search 搜索字符串\n        c ：change 取代指定的行或者多行\n        d ：delete 删除指定的行或者多行\n        p ：print 打印模式空间的内容，通常p和-n选项一起使用\n        ! ：取非，对指定行以外的所有行应用命令\n    例子\n        第一行前添加：sed \"1 i hello world\" xxx.xml\n        第一行后添加：sed \"1 a hello world\" xxx.xml\n        最后一行之后添加：sed \"$ a hello world\" xxx.xml\n        删除第一行：sed \"1 d\" xxx.xml\n        删除1-最后行：sed \"1,$ d\" xxx.xml\n        取代第一行：sed \"1 c hello world\\nname\" xxx.xml\n        取代1-最后行：sed \"1,$ c hello world\\nname\" xxx.xml\n        打印第一行：sed -n \"1 p\" xxx.xml\n        打印1-最后行：sed -n \"1,$ p\" xxx.xml\n        打印除2-5行：sed -n '2,5! p' xxx.xml\n\n        找到某行在前添加：sed \"/path=\\\"build\\/make\\\"/i hello world\" xxx.xml\n        找到某行在后添加：sed \"/path=\\\"build\\/make\\\"/a hello world\" xxx.xml\n        找到某行后删除：sed \"/path=\\\"build\\/make\\\"/d\" xxx.xml\n        找到某行后取代：sed \"/path=\\\"build\\/make\\\"/c hello world\" xxx.xml\n        找到某行后打印：sed -n \"/path=\\\"build\\/make\\\"/p\" xxx.xml\n\n        多点操作：sed -e '1d' -e '5,7d' xxx.xml\n\n        替换文件内容：sed \"s/path=\\\"build\\/make\\\"/path=\\\"hello world\\\"/g\" xxx.xml\n        替换文件内容（基础正则，使用取反来达到懒汉模式）：sed \"s/path=\\\"[^\\\"]*\\\"/path=\\\"hello world\\\"/g\" xxx.xml\n\nawk操作\n    $0，整条记录\n    $1、$2、$3，输出一个指定的字段\n    FS，段分隔符，默认空格\n    RS，行分隔符\n    NR，行号\n    NF，字段数量，$NF，最后一个字段\n    ~，表示正则匹配\n    //，进行内容匹配\n\n    输出所有行：awk '{print $0}' /etc/passwd\n    输出第二行：awk 'NR==2{print $0}' /etc/passwd\n    输出二到五行：awk 'NR>=2&&NR<=5{print $0}' /etc/passwd\n    输出行号：awk '{print NR,$0}' /etc/passwd\n    输出行号：awk '{print NR\" \"$0}' /etc/passwd\n    分隔符：awk -F ':' '{print $1,$2,$3,$4}' /etc/passwd\n    锚定查找并输出：awk '/\\<root\\>/{print NR\"\\t\"$0}' /etc/passwd\n    正则匹配：awk '$0~/root/' /etc/passwd\n    末尾查找字串：awk -F ':' '$NF~/sbin/{print $0}' /etc/passwd\n    多个分隔符：awk -F '[:/]+' '{print $5,$6,$7,$8}' /etc/passwd\n\n    开始前输入：awk -F : 'BEGIN{print \"USERNAME\"} {print $1}' /etc/passwd\n    前后输入：awk -F : 'BEGIN{print \"USERNAME\"} {print $1} END{print \"END OF FILE\"}' /etc/passwd\n    统计次数：awk 'BEGIN{num=0}/nologin/{num++}END{print num}' /etc/passwd\n    遍历：awk -F : '{ken[$NF]++}END{for (i in ken) print ken[i] i}' /etc/passwd\n\n\n    cat access.log | awk '{print $1}' | sort | uniq -c | sort -rn | head -3\n    awk '{ken[$1]++}END{for (i in ken) print ken[i],i}' access.log | sort -rn | head -3\n```","source":"_posts/2022-6-28Linux常见问题.md","raw":"---\ntitle: Linux常见问题\ndate: 2022-6-28\ntags: [linux]\n---\n\nLinux常见问题\n\n<!--more-->\n\n## 源处理\n```\nsudo vim /etc/apt/sources.list\nsudo apt update\n\n阿里镜像站：https://mirrors.aliyun.com/ubuntu-releases\n网易镜像站：http://tel.mirrors.163.com/\n中科大：http://mirrors.ustc.edu.cn/ubuntu-releases\n浙大：http://mirrors.zju.edu.cn/ubuntu-releases\n清华镜像站：https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases\n清华帮助：https://mirrors.tuna.tsinghua.edu.cn/help\n替换为阿里源：sudo sed -i 's/mirrors.aliyun.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list\n\nubuntu各版本：\n    14：trusty\n    16：xenial\n    18：bionic\n    20：focal\n    22：jammy\n\nubuntu18\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n\nGPG error: The following signatures couldn't be verified because the public key is not available\n    sudo gpg --keyserver keyserver.ubuntu.com --recv 5523BAEEB01FA116\n    sudo gpg --export --armor 5523BAEEB01FA116 | sudo apt-key add -\n    sudo apt-get update\n```\n\n## ssh\n```\nssh -vT -p port user@ip（ssh登录，-v：详细信息，-T：测试，-t：开启伪终端，-tt：强制开启伪终端）\nssh-copy-id -p port user@ip（ssh免密登录）\nssh-keygen -f \"/home/jmm/.ssh/known_hosts\" -R [10.20.33.43]:10025（ssh更新known_hosts）\nssh -vvv（调试）\n\nssh免密登录\n    vim ~/.ssh/authorized_keys\n    chmod 600 ~/.ssh/authorized_keys\n    公钥拷贝到里面\n\n指定秘钥：\n    vim ~/.ssh/config\n    chmod 600 ~/.ssh/config\n        Host man1\n            HostName 192.168.2.18\n            IdentityFile ~/.ssh/id_rsa\n            User root\n            Port 22\n\n使ssh生效：\n    eval \"$(ssh-agent -s)\"\n    ssh-add\n    ssh-agent bash\n\nTheir offer:diffie-hellman-group1-sha1问题：\n    vim ~/.ssh/config\n    Host *\n        StrictHostKeyChecking no\n        KexAlgorithms +diffie-hellman-group1-sha1\n\n启用ssh-rsa：\n    vim ~/.ssh/config\n    Host *\n        HostKeyAlgorithms +ssh-rsa\n        PubkeyAcceptedKeyTypes +ssh-rsa\n\n修改22端口：\n    sudo vim /etc/ssh/sshd_config\n        修改Port 22为65534以下即可\n    sudo /etc/init.d/ssh restart #重启ssh\n\n允许远程登录：\n    sudo vim /etc/ssh/sshd_config\n        PermitRootLogin yes\n    sudo service ssh restart\n```\n\n## crontab定时任务\n```\ncrontab -e：添加任务\ncrontab -l：查看任务列表\n\n0 2 * * * /bin/bash backup.sh：每天 02:00 执行任务\n0 5,17 * * * /bin/bash /scripts/script.sh：每天 5:00和17:00执行任务\n*/60 * * * * /bin/bash /scripts/script.sh：每隔一个小时执行一次\n0 */2 * * * /bin/bash /scripts/script.sh：每隔两个小时执行一次\n0 17 * * sun /bin/bash /scripts/script.sh：每周日 17:00 执行任务\n```\n\n## 开机启动\n```\n1.修改启动文件（ubuntu14、ubuntu16支持）\n    /etc/rc.local\n2.配置启动脚本\n    sudo vim /etc/init.d/automount\n        #!/bin/sh\n\n        ### BEGIN INIT INFO\n        # Provides:          jmm.com\n        # Required-Start:    $local_fs $remote_fs $network $syslog $named\n        # Required-Stop:     $local_fs $remote_fs $network $syslog $named\n        # Default-Start:     2 3 4 5\n        # Default-Stop:      0 1 6\n        # Short-Description: jmm service\n        # Description:       jmm service\n        ### END INIT INFO\n\n        busybox mount -t nfs -o nolock 10.169.0.203:/data/backup /data/mirror\n        exit 0\n\n    sudo chmod +x /etc/init.d/automount\n    sudo update-rc.d automount defaults 99（开启）\n    sudo update-rc.d -f automount remove（移除）\n```\n\n## service 和 systemctl\n```\nservice命令其实是去/etc/init.d目录下，去执行相关程序\n    sudo service redis start\n    sudo /etc/init.d/redis start\nsystemd作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动，systemd对应的进程管理命令是systemctl。\n    兼容service：\n    sudo systemctl redis start（启动服务）\n    systemctl enable redis（开机启动服务）\n```\n\n## 防火墙\n\n```\niptables/firewall/ufw\n    iptables比较老默认开放就行\n    ufw是debian系列的（iptables托管给ufw）\n    firewall是redhat系列的\n\nufw接管防火墙\n    sudo ufw enable（开启，阶段iptables，底层还是iptables）\n    sudo ufw disable（关闭）\n    sudo ufw status（查看防火墙表）\n    sudo ufw status verbose（查看策略）\n    sudo ufw status numbered（查看防火墙表 加行号，删除 sudo ufw delete 1）\n\n    sudo ufw allow 80（允许80，sudo ufw delete allow 80（删除就是在规则前加delete））\n    sudo ufw deny 80（拒绝80）\n\n    sudo ufw allow 80/tcp（允许80，tcp形式）\n    sudo ufw allow 9000:9002（允许一段端口）\n    sudo ufw allow from 192.168.29.36（允许ip）\n    sudo ufw allow from 192.168.1.0/24（允许ip段）\n    sudo ufw allow from 192.168.29.36 to any port 80（允许ip访问80）\n    sudo ufw allow from 192.168.29.36 to any port 80 proto tcp（允许ip以tcp形式访问80）\n\niptables防火墙\n    sudo iptables --line-number -nL（查看列表）\n    sudo iptables -F（清空列表）\n    sudo iptables -D INPUT 3（删除input表第三条规则）\n\n    sudo iptables -P INPUT ACCEPT（允许input表）\n    sudo iptables -P OUTPUT ACCEPT（允许output表）\n    sudo iptables -P INPUT DROP（禁止input表）\n    sudo iptables -P OUTPUT DROP（禁止output表）\n\n    sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT（允许某个端口进）\n    sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT（允许某个端口出）\n    sudo iptables -A INPUT -s 192.168.0.3 -j ACCEPT（允许某个ip进）\n    sudo iptables -A OUTPUT -s 192.168.0.3 -j ACCEPT（允许某个ip出）\n    sudo iptables -A INPUT -s 192.168.0.0/24 -j ACCEPT（允许192.168.0.1 - 192.168.0.254网段访问）\n\n    sudo iptables -A INPUT -p tcp --dport 22 -j DROP（禁止某个端口进）\n    sudo iptables -A OUTPUT -p tcp --sport 22 -j DROP（禁止某个端口出）\n    sudo iptables -A INPUT -s 192.168.0.3 -j DROP（禁止某个ip进）\n    sudo iptables -A OUTPUT -s 192.168.0.3 -j DROP（禁止某个ip出）\n\n    sudo iptables -I INPUT 1 -s 192.168.0.3 -j ACCEPT（允许某个ip进，插入）\n```\n\n## vim编辑器\n```\n编辑文件：vim [file]\n三种模式：命令模式（esc进入）、底线命令模式（:/?进入）、编辑模式（i、a、o、r、I、A、O、R进入）、块模式（ctrl+v进入）\n命令模式（前面加数字可以达到重复的效果）\n    删除行：dd\n    复制行：yy\n    拷贝行：p\n    首行：gg\n    尾行：G\n    删除数字：x（X为向前删除）\n    撤销：u（ctrl+r反撤销）\n    重复上一次命令：.\n    显示当前文件名和位置：ctrl+g\n    合并两行：J\n\n底线命令模式\n    退出：:wq!、:q!、:x!、:qa!\n    跳转到行：:20\n    查找：/xxx （忽略大小写:\\c，n下一个，N上一个）\n    反向查找：?xxx（忽略转义和大小写）\n    替换每行所有：:%s/aaa/bbb/g（替换当前行第一个：:s/aaa/bbb/，用其他分割符：%s#aaa#bbb#g）\n    列出所有匹配项：:g/aaa（忽略大小写:\\c）\n    显示行号：set number（关闭行号：set nonumber，可写在~/.vimrc里面）\n    取消自动换行：set nowrap（换行：set wrap）\n    搜索关键字高亮：set incsearch（关闭高亮：set noincsearch）\n    忽略大小写：set ignorecase（关闭忽略大小写：set noignorecase）\n    取消粘贴缩进：set paste\n    取消鼠标选择：set mouse=（开启鼠标选择：set mouse=a）\n\n其他\n    vim分屏：:vs [file]（左右分屏），ctrl + w w（切换屏幕）\n    vimdiff对比文件：vimdiff file1 file2（dp：应用于另一边，do：获得另一边的修改，zo：展开）\n    meld对比文件：meld file1 file2\n```\n\n## 配置静态ip\n```\nnetwork（ubuntu16及以下）\n    sudo vim /etc/network/interfaces\n        auto enp3s0\n        iface enp3s0 inet static\n        address 192.168.0.200\n        netmask 255.255.255.0\n        gateway 192.168.0.1\n        dns-nameserver 8.8.8.8\n\n    sudo service networking restart\n\nnetplan（ubuntu18及以上）\n    sudo vim /etc/netplan/01-network-manager-all.yaml\n        network:\n          version: 2\n          renderer: NetworkManager\n          ethernets:\n             eno1: # 网卡\n               dhcp4: no # dhcp4关闭\n               addresses: [192.168.202.36/24] # ip和掩码\n               gateway4: 192.168.202.1 # 网关\n               nameservers:\n                 addresses: [8.8.8.8,114.114.114.114] #设置DNS\n\n    sudo netplan apply\n\nnetplan（ubuntu20及以上）\n    sudo vim /etc/netplan/01-network-manager-all.yaml\n        network:\n          version: 2\n          renderer: NetworkManager\n          ethernets:\n             eno1:\n               dhcp4: no\n               addresses: [10.170.0.238/23]\n               routes:\n               - to: default\n                 via: 10.170.0.1\n               nameservers:\n                 addresses: [8.8.8.8,114.114.114.114] #设置DNS\n\n    sudo netplan apply\n```\n\n## dependency problems - leaving unconfigured问题\n```\nsudo mv /var/lib/dpkg/info/ /var/lib/dpkg/info_old/\nsudo mkdir /var/lib/dpkg/info/\nsudo apt-get update\nsudo apt-get -f install\nsudo apt-get upgrade\n```\n\n## profile和bashrc\n```\nprofile：系统全局环境登录的一些配置\nbashrc：用户bash的一些配置\n.env：进入目录时初始化环境\n执⾏顺序为：/etc/profile -> (~/.bash_profile | ~/.bash_login | ~/.profile) -> ~/.bashrc -> /etc/bashrc -> ~/.\n```\n\n## 文本处理三剑客（grep/egrep、sed、awk）\n\n```\n正则支持（三剑客都是以行为单位进行处理）\n    grep：默认不支持扩展正则，加上-E支持扩展正则，如果不加上-E，使用\\{\\}要加上\\进行转义。\n    egrep：支持基础和扩展正则，相当于grep -E。\n    sed：默认不支持扩展正则，机上-r选项支持扩展正则，如果不加上-r，使用\\{\\}要加上\\进行转义。\n    awk：默认支持所有正则。\n\n    shell的正则分为两类：\n        基础正则表达式、扩展正则表达式 {扩展的有+、？、|、（）}\n    区分正则和通配符：\n        1、只要涉及grep/egrep sed awk都是正则。其他的都是统配符\n        2、涉及文件和目录名——统配符；涉及文本内容——正则\n    基础正则\n        ^ ：表示匹配字符串开头\n        . ：匹配一个字符，且该字符必须存在\n        * ：匹配前面一个字符的0个或者多个\n        .* ：可以匹配任意长度的任意内容\n        $ ：匹配字符串结尾\n        [] ：表示匹配括号里的任意一个字符\n        ^[^s] ：^在中括号中有^表示取反，非。匹配不以s开头的字符\n        \\{n,m\\} ：匹配字符n到m次，至少n次，至多m次\n        \\(\\) ：分组\n        \\<\\> ：单词锚定，\\<root\\<，root必须作为一行的单词出现,也可\\broot\\b\n    拓展正则\n        grep -E ：-E支持拓展正则，或者直接使用egrep，拓展正则支持所有的基础正则\n        ? ：最多匹配一个，可以是0个\n        + ：至少匹配一个可以是多个\n        | ：或\n        () ：分组\n\ngrep使用\n    -r：目录递归\n    -n：打印行号\n    -s：不显示错误\n    -i：忽略大小写\n    -o：只打印匹配的内容\n    -v：取反，打印不匹配的行\n    -q：如果有匹配的内容则返回状态值0\n    -c：匹配的内容有多少行\n    -E：扩展正则表达式\n    -P：支持perl的正则语法\n    -A1：after打印匹配的后几行\n    -B1：before打印匹配的后几行\n    -C1：打印匹配的前后几行\n\nsed操作\n    选项\n        -i：直接修改写入到文件内容，而不是输出到终端。如果不使用-i那么只会修改内存中的内容，而不会写入到磁盘。\n        -n：输出模式，取消默认的sed软件输出，常与sed-commands的p连用\n        -e：多点操作，一条命令语句执行多个sed操作。\n        -r：使用扩展正则表达式\n    sed-commands（$表示行末）：\n        i ：insert 插入，在指定的行前添加一行或多行文本\n        a ：append 在指定行后面追加一行或者多行文本\n        s ：search 搜索字符串\n        c ：change 取代指定的行或者多行\n        d ：delete 删除指定的行或者多行\n        p ：print 打印模式空间的内容，通常p和-n选项一起使用\n        ! ：取非，对指定行以外的所有行应用命令\n    例子\n        第一行前添加：sed \"1 i hello world\" xxx.xml\n        第一行后添加：sed \"1 a hello world\" xxx.xml\n        最后一行之后添加：sed \"$ a hello world\" xxx.xml\n        删除第一行：sed \"1 d\" xxx.xml\n        删除1-最后行：sed \"1,$ d\" xxx.xml\n        取代第一行：sed \"1 c hello world\\nname\" xxx.xml\n        取代1-最后行：sed \"1,$ c hello world\\nname\" xxx.xml\n        打印第一行：sed -n \"1 p\" xxx.xml\n        打印1-最后行：sed -n \"1,$ p\" xxx.xml\n        打印除2-5行：sed -n '2,5! p' xxx.xml\n\n        找到某行在前添加：sed \"/path=\\\"build\\/make\\\"/i hello world\" xxx.xml\n        找到某行在后添加：sed \"/path=\\\"build\\/make\\\"/a hello world\" xxx.xml\n        找到某行后删除：sed \"/path=\\\"build\\/make\\\"/d\" xxx.xml\n        找到某行后取代：sed \"/path=\\\"build\\/make\\\"/c hello world\" xxx.xml\n        找到某行后打印：sed -n \"/path=\\\"build\\/make\\\"/p\" xxx.xml\n\n        多点操作：sed -e '1d' -e '5,7d' xxx.xml\n\n        替换文件内容：sed \"s/path=\\\"build\\/make\\\"/path=\\\"hello world\\\"/g\" xxx.xml\n        替换文件内容（基础正则，使用取反来达到懒汉模式）：sed \"s/path=\\\"[^\\\"]*\\\"/path=\\\"hello world\\\"/g\" xxx.xml\n\nawk操作\n    $0，整条记录\n    $1、$2、$3，输出一个指定的字段\n    FS，段分隔符，默认空格\n    RS，行分隔符\n    NR，行号\n    NF，字段数量，$NF，最后一个字段\n    ~，表示正则匹配\n    //，进行内容匹配\n\n    输出所有行：awk '{print $0}' /etc/passwd\n    输出第二行：awk 'NR==2{print $0}' /etc/passwd\n    输出二到五行：awk 'NR>=2&&NR<=5{print $0}' /etc/passwd\n    输出行号：awk '{print NR,$0}' /etc/passwd\n    输出行号：awk '{print NR\" \"$0}' /etc/passwd\n    分隔符：awk -F ':' '{print $1,$2,$3,$4}' /etc/passwd\n    锚定查找并输出：awk '/\\<root\\>/{print NR\"\\t\"$0}' /etc/passwd\n    正则匹配：awk '$0~/root/' /etc/passwd\n    末尾查找字串：awk -F ':' '$NF~/sbin/{print $0}' /etc/passwd\n    多个分隔符：awk -F '[:/]+' '{print $5,$6,$7,$8}' /etc/passwd\n\n    开始前输入：awk -F : 'BEGIN{print \"USERNAME\"} {print $1}' /etc/passwd\n    前后输入：awk -F : 'BEGIN{print \"USERNAME\"} {print $1} END{print \"END OF FILE\"}' /etc/passwd\n    统计次数：awk 'BEGIN{num=0}/nologin/{num++}END{print num}' /etc/passwd\n    遍历：awk -F : '{ken[$NF]++}END{for (i in ken) print ken[i] i}' /etc/passwd\n\n\n    cat access.log | awk '{print $1}' | sort | uniq -c | sort -rn | head -3\n    awk '{ken[$1]++}END{for (i in ken) print ken[i],i}' access.log | sort -rn | head -3\n```","slug":"2022-6-28Linux常见问题","published":1,"updated":"2022-06-28T15:35:47.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooey000fnkvvbu973p8n","content":"<p>Linux常见问题</p>\n<span id=\"more\"></span>\n\n<h2 id=\"源处理\"><a href=\"#源处理\" class=\"headerlink\" title=\"源处理\"></a>源处理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"></span><br><span class=\"line\">阿里镜像站：https://mirrors.aliyun.com/ubuntu-releases</span><br><span class=\"line\">网易镜像站：http://tel.mirrors.163.com/</span><br><span class=\"line\">中科大：http://mirrors.ustc.edu.cn/ubuntu-releases</span><br><span class=\"line\">浙大：http://mirrors.zju.edu.cn/ubuntu-releases</span><br><span class=\"line\">清华镜像站：https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases</span><br><span class=\"line\">清华帮助：https://mirrors.tuna.tsinghua.edu.cn/help</span><br><span class=\"line\">替换为阿里源：sudo sed -i &#x27;s/mirrors.aliyun.com/mirrors.tuna.tsinghua.edu.cn/g&#x27; /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">ubuntu各版本：</span><br><span class=\"line\">    14：trusty</span><br><span class=\"line\">    16：xenial</span><br><span class=\"line\">    18：bionic</span><br><span class=\"line\">    20：focal</span><br><span class=\"line\">    22：jammy</span><br><span class=\"line\"></span><br><span class=\"line\">ubuntu18</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">GPG error: The following signatures couldn&#x27;t be verified because the public key is not available</span><br><span class=\"line\">    sudo gpg --keyserver keyserver.ubuntu.com --recv 5523BAEEB01FA116</span><br><span class=\"line\">    sudo gpg --export --armor 5523BAEEB01FA116 | sudo apt-key add -</span><br><span class=\"line\">    sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -vT -p port user@ip（ssh登录，-v：详细信息，-T：测试，-t：开启伪终端，-tt：强制开启伪终端）</span><br><span class=\"line\">ssh-copy-id -p port user@ip（ssh免密登录）</span><br><span class=\"line\">ssh-keygen -f &quot;/home/jmm/.ssh/known_hosts&quot; -R [10.20.33.43]:10025（ssh更新known_hosts）</span><br><span class=\"line\">ssh -vvv（调试）</span><br><span class=\"line\"></span><br><span class=\"line\">ssh免密登录</span><br><span class=\"line\">    vim ~/.ssh/authorized_keys</span><br><span class=\"line\">    chmod 600 ~/.ssh/authorized_keys</span><br><span class=\"line\">    公钥拷贝到里面</span><br><span class=\"line\"></span><br><span class=\"line\">指定秘钥：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    chmod 600 ~/.ssh/config</span><br><span class=\"line\">        Host man1</span><br><span class=\"line\">            HostName 192.168.2.18</span><br><span class=\"line\">            IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">            User root</span><br><span class=\"line\">            Port 22</span><br><span class=\"line\"></span><br><span class=\"line\">使ssh生效：</span><br><span class=\"line\">    eval &quot;$(ssh-agent -s)&quot;</span><br><span class=\"line\">    ssh-add</span><br><span class=\"line\">    ssh-agent bash</span><br><span class=\"line\"></span><br><span class=\"line\">Their offer:diffie-hellman-group1-sha1问题：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    Host *</span><br><span class=\"line\">        StrictHostKeyChecking no</span><br><span class=\"line\">        KexAlgorithms +diffie-hellman-group1-sha1</span><br><span class=\"line\"></span><br><span class=\"line\">启用ssh-rsa：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    Host *</span><br><span class=\"line\">        HostKeyAlgorithms +ssh-rsa</span><br><span class=\"line\">        PubkeyAcceptedKeyTypes +ssh-rsa</span><br><span class=\"line\"></span><br><span class=\"line\">修改22端口：</span><br><span class=\"line\">    sudo vim /etc/ssh/sshd_config</span><br><span class=\"line\">        修改Port 22为65534以下即可</span><br><span class=\"line\">    sudo /etc/init.d/ssh restart #重启ssh</span><br><span class=\"line\"></span><br><span class=\"line\">允许远程登录：</span><br><span class=\"line\">    sudo vim /etc/ssh/sshd_config</span><br><span class=\"line\">        PermitRootLogin yes</span><br><span class=\"line\">    sudo service ssh restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"crontab定时任务\"><a href=\"#crontab定时任务\" class=\"headerlink\" title=\"crontab定时任务\"></a>crontab定时任务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e：添加任务</span><br><span class=\"line\">crontab -l：查看任务列表</span><br><span class=\"line\"></span><br><span class=\"line\">0 2 * * * /bin/bash backup.sh：每天 02:00 执行任务</span><br><span class=\"line\">0 5,17 * * * /bin/bash /scripts/script.sh：每天 5:00和17:00执行任务</span><br><span class=\"line\">*/60 * * * * /bin/bash /scripts/script.sh：每隔一个小时执行一次</span><br><span class=\"line\">0 */2 * * * /bin/bash /scripts/script.sh：每隔两个小时执行一次</span><br><span class=\"line\">0 17 * * sun /bin/bash /scripts/script.sh：每周日 17:00 执行任务</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.修改启动文件（ubuntu14、ubuntu16支持）</span><br><span class=\"line\">    /etc/rc.local</span><br><span class=\"line\">2.配置启动脚本</span><br><span class=\"line\">    sudo vim /etc/init.d/automount</span><br><span class=\"line\">        #!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">        ### BEGIN INIT INFO</span><br><span class=\"line\">        # Provides:          jmm.com</span><br><span class=\"line\">        # Required-Start:    $local_fs $remote_fs $network $syslog $named</span><br><span class=\"line\">        # Required-Stop:     $local_fs $remote_fs $network $syslog $named</span><br><span class=\"line\">        # Default-Start:     2 3 4 5</span><br><span class=\"line\">        # Default-Stop:      0 1 6</span><br><span class=\"line\">        # Short-Description: jmm service</span><br><span class=\"line\">        # Description:       jmm service</span><br><span class=\"line\">        ### END INIT INFO</span><br><span class=\"line\"></span><br><span class=\"line\">        busybox mount -t nfs -o nolock 10.169.0.203:/data/backup /data/mirror</span><br><span class=\"line\">        exit 0</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo chmod +x /etc/init.d/automount</span><br><span class=\"line\">    sudo update-rc.d automount defaults 99（开启）</span><br><span class=\"line\">    sudo update-rc.d -f automount remove（移除）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"service-和-systemctl\"><a href=\"#service-和-systemctl\" class=\"headerlink\" title=\"service 和 systemctl\"></a>service 和 systemctl</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service命令其实是去/etc/init.d目录下，去执行相关程序</span><br><span class=\"line\">    sudo service redis start</span><br><span class=\"line\">    sudo /etc/init.d/redis start</span><br><span class=\"line\">systemd作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动，systemd对应的进程管理命令是systemctl。</span><br><span class=\"line\">    兼容service：</span><br><span class=\"line\">    sudo systemctl redis start（启动服务）</span><br><span class=\"line\">    systemctl enable redis（开机启动服务）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables/firewall/ufw</span><br><span class=\"line\">    iptables比较老默认开放就行</span><br><span class=\"line\">    ufw是debian系列的（iptables托管给ufw）</span><br><span class=\"line\">    firewall是redhat系列的</span><br><span class=\"line\"></span><br><span class=\"line\">ufw接管防火墙</span><br><span class=\"line\">    sudo ufw enable（开启，阶段iptables，底层还是iptables）</span><br><span class=\"line\">    sudo ufw disable（关闭）</span><br><span class=\"line\">    sudo ufw status（查看防火墙表）</span><br><span class=\"line\">    sudo ufw status verbose（查看策略）</span><br><span class=\"line\">    sudo ufw status numbered（查看防火墙表 加行号，删除 sudo ufw delete 1）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo ufw allow 80（允许80，sudo ufw delete allow 80（删除就是在规则前加delete））</span><br><span class=\"line\">    sudo ufw deny 80（拒绝80）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo ufw allow 80/tcp（允许80，tcp形式）</span><br><span class=\"line\">    sudo ufw allow 9000:9002（允许一段端口）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36（允许ip）</span><br><span class=\"line\">    sudo ufw allow from 192.168.1.0/24（允许ip段）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36 to any port 80（允许ip访问80）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36 to any port 80 proto tcp（允许ip以tcp形式访问80）</span><br><span class=\"line\"></span><br><span class=\"line\">iptables防火墙</span><br><span class=\"line\">    sudo iptables --line-number -nL（查看列表）</span><br><span class=\"line\">    sudo iptables -F（清空列表）</span><br><span class=\"line\">    sudo iptables -D INPUT 3（删除input表第三条规则）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -P INPUT ACCEPT（允许input表）</span><br><span class=\"line\">    sudo iptables -P OUTPUT ACCEPT（允许output表）</span><br><span class=\"line\">    sudo iptables -P INPUT DROP（禁止input表）</span><br><span class=\"line\">    sudo iptables -P OUTPUT DROP（禁止output表）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT（允许某个端口进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT（允许某个端口出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.3 -j ACCEPT（允许某个ip进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -s 192.168.0.3 -j ACCEPT（允许某个ip出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.0/24 -j ACCEPT（允许192.168.0.1 - 192.168.0.254网段访问）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -A INPUT -p tcp --dport 22 -j DROP（禁止某个端口进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -p tcp --sport 22 -j DROP（禁止某个端口出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.3 -j DROP（禁止某个ip进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -s 192.168.0.3 -j DROP（禁止某个ip出）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -I INPUT 1 -s 192.168.0.3 -j ACCEPT（允许某个ip进，插入）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vim编辑器\"><a href=\"#vim编辑器\" class=\"headerlink\" title=\"vim编辑器\"></a>vim编辑器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编辑文件：vim [file]</span><br><span class=\"line\">三种模式：命令模式（esc进入）、底线命令模式（:/?进入）、编辑模式（i、a、o、r、I、A、O、R进入）、块模式（ctrl+v进入）</span><br><span class=\"line\">命令模式（前面加数字可以达到重复的效果）</span><br><span class=\"line\">    删除行：dd</span><br><span class=\"line\">    复制行：yy</span><br><span class=\"line\">    拷贝行：p</span><br><span class=\"line\">    首行：gg</span><br><span class=\"line\">    尾行：G</span><br><span class=\"line\">    删除数字：x（X为向前删除）</span><br><span class=\"line\">    撤销：u（ctrl+r反撤销）</span><br><span class=\"line\">    重复上一次命令：.</span><br><span class=\"line\">    显示当前文件名和位置：ctrl+g</span><br><span class=\"line\">    合并两行：J</span><br><span class=\"line\"></span><br><span class=\"line\">底线命令模式</span><br><span class=\"line\">    退出：:wq!、:q!、:x!、:qa!</span><br><span class=\"line\">    跳转到行：:20</span><br><span class=\"line\">    查找：/xxx （忽略大小写:\\c，n下一个，N上一个）</span><br><span class=\"line\">    反向查找：?xxx（忽略转义和大小写）</span><br><span class=\"line\">    替换每行所有：:%s/aaa/bbb/g（替换当前行第一个：:s/aaa/bbb/，用其他分割符：%s#aaa#bbb#g）</span><br><span class=\"line\">    列出所有匹配项：:g/aaa（忽略大小写:\\c）</span><br><span class=\"line\">    显示行号：set number（关闭行号：set nonumber，可写在~/.vimrc里面）</span><br><span class=\"line\">    取消自动换行：set nowrap（换行：set wrap）</span><br><span class=\"line\">    搜索关键字高亮：set incsearch（关闭高亮：set noincsearch）</span><br><span class=\"line\">    忽略大小写：set ignorecase（关闭忽略大小写：set noignorecase）</span><br><span class=\"line\">    取消粘贴缩进：set paste</span><br><span class=\"line\">    取消鼠标选择：set mouse=（开启鼠标选择：set mouse=a）</span><br><span class=\"line\"></span><br><span class=\"line\">其他</span><br><span class=\"line\">    vim分屏：:vs [file]（左右分屏），ctrl + w w（切换屏幕）</span><br><span class=\"line\">    vimdiff对比文件：vimdiff file1 file2（dp：应用于另一边，do：获得另一边的修改，zo：展开）</span><br><span class=\"line\">    meld对比文件：meld file1 file2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置静态ip\"><a href=\"#配置静态ip\" class=\"headerlink\" title=\"配置静态ip\"></a>配置静态ip</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network（ubuntu16及以下）</span><br><span class=\"line\">    sudo vim /etc/network/interfaces</span><br><span class=\"line\">        auto enp3s0</span><br><span class=\"line\">        iface enp3s0 inet static</span><br><span class=\"line\">        address 192.168.0.200</span><br><span class=\"line\">        netmask 255.255.255.0</span><br><span class=\"line\">        gateway 192.168.0.1</span><br><span class=\"line\">        dns-nameserver 8.8.8.8</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo service networking restart</span><br><span class=\"line\"></span><br><span class=\"line\">netplan（ubuntu18及以上）</span><br><span class=\"line\">    sudo vim /etc/netplan/01-network-manager-all.yaml</span><br><span class=\"line\">        network:</span><br><span class=\"line\">          version: 2</span><br><span class=\"line\">          renderer: NetworkManager</span><br><span class=\"line\">          ethernets:</span><br><span class=\"line\">             eno1: # 网卡</span><br><span class=\"line\">               dhcp4: no # dhcp4关闭</span><br><span class=\"line\">               addresses: [192.168.202.36/24] # ip和掩码</span><br><span class=\"line\">               gateway4: 192.168.202.1 # 网关</span><br><span class=\"line\">               nameservers:</span><br><span class=\"line\">                 addresses: [8.8.8.8,114.114.114.114] #设置DNS</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo netplan apply</span><br><span class=\"line\"></span><br><span class=\"line\">netplan（ubuntu20及以上）</span><br><span class=\"line\">    sudo vim /etc/netplan/01-network-manager-all.yaml</span><br><span class=\"line\">        network:</span><br><span class=\"line\">          version: 2</span><br><span class=\"line\">          renderer: NetworkManager</span><br><span class=\"line\">          ethernets:</span><br><span class=\"line\">             eno1:</span><br><span class=\"line\">               dhcp4: no</span><br><span class=\"line\">               addresses: [10.170.0.238/23]</span><br><span class=\"line\">               routes:</span><br><span class=\"line\">               - to: default</span><br><span class=\"line\">                 via: 10.170.0.1</span><br><span class=\"line\">               nameservers:</span><br><span class=\"line\">                 addresses: [8.8.8.8,114.114.114.114] #设置DNS</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo netplan apply</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dependency-problems-leaving-unconfigured问题\"><a href=\"#dependency-problems-leaving-unconfigured问题\" class=\"headerlink\" title=\"dependency problems - leaving unconfigured问题\"></a>dependency problems - leaving unconfigured问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv /var/lib/dpkg/info/ /var/lib/dpkg/info_old/</span><br><span class=\"line\">sudo mkdir /var/lib/dpkg/info/</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -f install</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"profile和bashrc\"><a href=\"#profile和bashrc\" class=\"headerlink\" title=\"profile和bashrc\"></a>profile和bashrc</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">profile：系统全局环境登录的一些配置</span><br><span class=\"line\">bashrc：用户bash的一些配置</span><br><span class=\"line\">.env：进入目录时初始化环境</span><br><span class=\"line\">执⾏顺序为：/etc/profile -&gt; (~/.bash_profile | ~/.bash_login | ~/.profile) -&gt; ~/.bashrc -&gt; /etc/bashrc -&gt; ~/.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文本处理三剑客（grep-x2F-egrep、sed、awk）\"><a href=\"#文本处理三剑客（grep-x2F-egrep、sed、awk）\" class=\"headerlink\" title=\"文本处理三剑客（grep&#x2F;egrep、sed、awk）\"></a>文本处理三剑客（grep&#x2F;egrep、sed、awk）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正则支持（三剑客都是以行为单位进行处理）</span><br><span class=\"line\">    grep：默认不支持扩展正则，加上-E支持扩展正则，如果不加上-E，使用\\&#123;\\&#125;要加上\\进行转义。</span><br><span class=\"line\">    egrep：支持基础和扩展正则，相当于grep -E。</span><br><span class=\"line\">    sed：默认不支持扩展正则，机上-r选项支持扩展正则，如果不加上-r，使用\\&#123;\\&#125;要加上\\进行转义。</span><br><span class=\"line\">    awk：默认支持所有正则。</span><br><span class=\"line\"></span><br><span class=\"line\">    shell的正则分为两类：</span><br><span class=\"line\">        基础正则表达式、扩展正则表达式 &#123;扩展的有+、？、|、（）&#125;</span><br><span class=\"line\">    区分正则和通配符：</span><br><span class=\"line\">        1、只要涉及grep/egrep sed awk都是正则。其他的都是统配符</span><br><span class=\"line\">        2、涉及文件和目录名——统配符；涉及文本内容——正则</span><br><span class=\"line\">    基础正则</span><br><span class=\"line\">        ^ ：表示匹配字符串开头</span><br><span class=\"line\">        . ：匹配一个字符，且该字符必须存在</span><br><span class=\"line\">        * ：匹配前面一个字符的0个或者多个</span><br><span class=\"line\">        .* ：可以匹配任意长度的任意内容</span><br><span class=\"line\">        $ ：匹配字符串结尾</span><br><span class=\"line\">        [] ：表示匹配括号里的任意一个字符</span><br><span class=\"line\">        ^[^s] ：^在中括号中有^表示取反，非。匹配不以s开头的字符</span><br><span class=\"line\">        \\&#123;n,m\\&#125; ：匹配字符n到m次，至少n次，至多m次</span><br><span class=\"line\">        \\(\\) ：分组</span><br><span class=\"line\">        \\&lt;\\&gt; ：单词锚定，\\&lt;root\\&lt;，root必须作为一行的单词出现,也可\\broot\\b</span><br><span class=\"line\">    拓展正则</span><br><span class=\"line\">        grep -E ：-E支持拓展正则，或者直接使用egrep，拓展正则支持所有的基础正则</span><br><span class=\"line\">        ? ：最多匹配一个，可以是0个</span><br><span class=\"line\">        + ：至少匹配一个可以是多个</span><br><span class=\"line\">        | ：或</span><br><span class=\"line\">        () ：分组</span><br><span class=\"line\"></span><br><span class=\"line\">grep使用</span><br><span class=\"line\">    -r：目录递归</span><br><span class=\"line\">    -n：打印行号</span><br><span class=\"line\">    -s：不显示错误</span><br><span class=\"line\">    -i：忽略大小写</span><br><span class=\"line\">    -o：只打印匹配的内容</span><br><span class=\"line\">    -v：取反，打印不匹配的行</span><br><span class=\"line\">    -q：如果有匹配的内容则返回状态值0</span><br><span class=\"line\">    -c：匹配的内容有多少行</span><br><span class=\"line\">    -E：扩展正则表达式</span><br><span class=\"line\">    -P：支持perl的正则语法</span><br><span class=\"line\">    -A1：after打印匹配的后几行</span><br><span class=\"line\">    -B1：before打印匹配的后几行</span><br><span class=\"line\">    -C1：打印匹配的前后几行</span><br><span class=\"line\"></span><br><span class=\"line\">sed操作</span><br><span class=\"line\">    选项</span><br><span class=\"line\">        -i：直接修改写入到文件内容，而不是输出到终端。如果不使用-i那么只会修改内存中的内容，而不会写入到磁盘。</span><br><span class=\"line\">        -n：输出模式，取消默认的sed软件输出，常与sed-commands的p连用</span><br><span class=\"line\">        -e：多点操作，一条命令语句执行多个sed操作。</span><br><span class=\"line\">        -r：使用扩展正则表达式</span><br><span class=\"line\">    sed-commands（$表示行末）：</span><br><span class=\"line\">        i ：insert 插入，在指定的行前添加一行或多行文本</span><br><span class=\"line\">        a ：append 在指定行后面追加一行或者多行文本</span><br><span class=\"line\">        s ：search 搜索字符串</span><br><span class=\"line\">        c ：change 取代指定的行或者多行</span><br><span class=\"line\">        d ：delete 删除指定的行或者多行</span><br><span class=\"line\">        p ：print 打印模式空间的内容，通常p和-n选项一起使用</span><br><span class=\"line\">        ! ：取非，对指定行以外的所有行应用命令</span><br><span class=\"line\">    例子</span><br><span class=\"line\">        第一行前添加：sed &quot;1 i hello world&quot; xxx.xml</span><br><span class=\"line\">        第一行后添加：sed &quot;1 a hello world&quot; xxx.xml</span><br><span class=\"line\">        最后一行之后添加：sed &quot;$ a hello world&quot; xxx.xml</span><br><span class=\"line\">        删除第一行：sed &quot;1 d&quot; xxx.xml</span><br><span class=\"line\">        删除1-最后行：sed &quot;1,$ d&quot; xxx.xml</span><br><span class=\"line\">        取代第一行：sed &quot;1 c hello world\\nname&quot; xxx.xml</span><br><span class=\"line\">        取代1-最后行：sed &quot;1,$ c hello world\\nname&quot; xxx.xml</span><br><span class=\"line\">        打印第一行：sed -n &quot;1 p&quot; xxx.xml</span><br><span class=\"line\">        打印1-最后行：sed -n &quot;1,$ p&quot; xxx.xml</span><br><span class=\"line\">        打印除2-5行：sed -n &#x27;2,5! p&#x27; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        找到某行在前添加：sed &quot;/path=\\&quot;build\\/make\\&quot;/i hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行在后添加：sed &quot;/path=\\&quot;build\\/make\\&quot;/a hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行后删除：sed &quot;/path=\\&quot;build\\/make\\&quot;/d&quot; xxx.xml</span><br><span class=\"line\">        找到某行后取代：sed &quot;/path=\\&quot;build\\/make\\&quot;/c hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行后打印：sed -n &quot;/path=\\&quot;build\\/make\\&quot;/p&quot; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        多点操作：sed -e &#x27;1d&#x27; -e &#x27;5,7d&#x27; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        替换文件内容：sed &quot;s/path=\\&quot;build\\/make\\&quot;/path=\\&quot;hello world\\&quot;/g&quot; xxx.xml</span><br><span class=\"line\">        替换文件内容（基础正则，使用取反来达到懒汉模式）：sed &quot;s/path=\\&quot;[^\\&quot;]*\\&quot;/path=\\&quot;hello world\\&quot;/g&quot; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">awk操作</span><br><span class=\"line\">    $0，整条记录</span><br><span class=\"line\">    $1、$2、$3，输出一个指定的字段</span><br><span class=\"line\">    FS，段分隔符，默认空格</span><br><span class=\"line\">    RS，行分隔符</span><br><span class=\"line\">    NR，行号</span><br><span class=\"line\">    NF，字段数量，$NF，最后一个字段</span><br><span class=\"line\">    ~，表示正则匹配</span><br><span class=\"line\">    //，进行内容匹配</span><br><span class=\"line\"></span><br><span class=\"line\">    输出所有行：awk &#x27;&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出第二行：awk &#x27;NR==2&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出二到五行：awk &#x27;NR&gt;=2&amp;&amp;NR&lt;=5&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出行号：awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出行号：awk &#x27;&#123;print NR&quot; &quot;$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    分隔符：awk -F &#x27;:&#x27; &#x27;&#123;print $1,$2,$3,$4&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    锚定查找并输出：awk &#x27;/\\&lt;root\\&gt;/&#123;print NR&quot;\\t&quot;$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    正则匹配：awk &#x27;$0~/root/&#x27; /etc/passwd</span><br><span class=\"line\">    末尾查找字串：awk -F &#x27;:&#x27; &#x27;$NF~/sbin/&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    多个分隔符：awk -F &#x27;[:/]+&#x27; &#x27;&#123;print $5,$6,$7,$8&#125;&#x27; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">    开始前输入：awk -F : &#x27;BEGIN&#123;print &quot;USERNAME&quot;&#125; &#123;print $1&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    前后输入：awk -F : &#x27;BEGIN&#123;print &quot;USERNAME&quot;&#125; &#123;print $1&#125; END&#123;print &quot;END OF FILE&quot;&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    统计次数：awk &#x27;BEGIN&#123;num=0&#125;/nologin/&#123;num++&#125;END&#123;print num&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    遍历：awk -F : &#x27;&#123;ken[$NF]++&#125;END&#123;for (i in ken) print ken[i] i&#125;&#x27; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    cat access.log | awk &#x27;&#123;print $1&#125;&#x27; | sort | uniq -c | sort -rn | head -3</span><br><span class=\"line\">    awk &#x27;&#123;ken[$1]++&#125;END&#123;for (i in ken) print ken[i],i&#125;&#x27; access.log | sort -rn | head -3</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Linux常见问题</p>","more":"<h2 id=\"源处理\"><a href=\"#源处理\" class=\"headerlink\" title=\"源处理\"></a>源处理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/apt/sources.list</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\"></span><br><span class=\"line\">阿里镜像站：https://mirrors.aliyun.com/ubuntu-releases</span><br><span class=\"line\">网易镜像站：http://tel.mirrors.163.com/</span><br><span class=\"line\">中科大：http://mirrors.ustc.edu.cn/ubuntu-releases</span><br><span class=\"line\">浙大：http://mirrors.zju.edu.cn/ubuntu-releases</span><br><span class=\"line\">清华镜像站：https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases</span><br><span class=\"line\">清华帮助：https://mirrors.tuna.tsinghua.edu.cn/help</span><br><span class=\"line\">替换为阿里源：sudo sed -i &#x27;s/mirrors.aliyun.com/mirrors.tuna.tsinghua.edu.cn/g&#x27; /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">ubuntu各版本：</span><br><span class=\"line\">    14：trusty</span><br><span class=\"line\">    16：xenial</span><br><span class=\"line\">    18：bionic</span><br><span class=\"line\">    20：focal</span><br><span class=\"line\">    22：jammy</span><br><span class=\"line\"></span><br><span class=\"line\">ubuntu18</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class=\"line\">    deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">GPG error: The following signatures couldn&#x27;t be verified because the public key is not available</span><br><span class=\"line\">    sudo gpg --keyserver keyserver.ubuntu.com --recv 5523BAEEB01FA116</span><br><span class=\"line\">    sudo gpg --export --armor 5523BAEEB01FA116 | sudo apt-key add -</span><br><span class=\"line\">    sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -vT -p port user@ip（ssh登录，-v：详细信息，-T：测试，-t：开启伪终端，-tt：强制开启伪终端）</span><br><span class=\"line\">ssh-copy-id -p port user@ip（ssh免密登录）</span><br><span class=\"line\">ssh-keygen -f &quot;/home/jmm/.ssh/known_hosts&quot; -R [10.20.33.43]:10025（ssh更新known_hosts）</span><br><span class=\"line\">ssh -vvv（调试）</span><br><span class=\"line\"></span><br><span class=\"line\">ssh免密登录</span><br><span class=\"line\">    vim ~/.ssh/authorized_keys</span><br><span class=\"line\">    chmod 600 ~/.ssh/authorized_keys</span><br><span class=\"line\">    公钥拷贝到里面</span><br><span class=\"line\"></span><br><span class=\"line\">指定秘钥：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    chmod 600 ~/.ssh/config</span><br><span class=\"line\">        Host man1</span><br><span class=\"line\">            HostName 192.168.2.18</span><br><span class=\"line\">            IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">            User root</span><br><span class=\"line\">            Port 22</span><br><span class=\"line\"></span><br><span class=\"line\">使ssh生效：</span><br><span class=\"line\">    eval &quot;$(ssh-agent -s)&quot;</span><br><span class=\"line\">    ssh-add</span><br><span class=\"line\">    ssh-agent bash</span><br><span class=\"line\"></span><br><span class=\"line\">Their offer:diffie-hellman-group1-sha1问题：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    Host *</span><br><span class=\"line\">        StrictHostKeyChecking no</span><br><span class=\"line\">        KexAlgorithms +diffie-hellman-group1-sha1</span><br><span class=\"line\"></span><br><span class=\"line\">启用ssh-rsa：</span><br><span class=\"line\">    vim ~/.ssh/config</span><br><span class=\"line\">    Host *</span><br><span class=\"line\">        HostKeyAlgorithms +ssh-rsa</span><br><span class=\"line\">        PubkeyAcceptedKeyTypes +ssh-rsa</span><br><span class=\"line\"></span><br><span class=\"line\">修改22端口：</span><br><span class=\"line\">    sudo vim /etc/ssh/sshd_config</span><br><span class=\"line\">        修改Port 22为65534以下即可</span><br><span class=\"line\">    sudo /etc/init.d/ssh restart #重启ssh</span><br><span class=\"line\"></span><br><span class=\"line\">允许远程登录：</span><br><span class=\"line\">    sudo vim /etc/ssh/sshd_config</span><br><span class=\"line\">        PermitRootLogin yes</span><br><span class=\"line\">    sudo service ssh restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"crontab定时任务\"><a href=\"#crontab定时任务\" class=\"headerlink\" title=\"crontab定时任务\"></a>crontab定时任务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e：添加任务</span><br><span class=\"line\">crontab -l：查看任务列表</span><br><span class=\"line\"></span><br><span class=\"line\">0 2 * * * /bin/bash backup.sh：每天 02:00 执行任务</span><br><span class=\"line\">0 5,17 * * * /bin/bash /scripts/script.sh：每天 5:00和17:00执行任务</span><br><span class=\"line\">*/60 * * * * /bin/bash /scripts/script.sh：每隔一个小时执行一次</span><br><span class=\"line\">0 */2 * * * /bin/bash /scripts/script.sh：每隔两个小时执行一次</span><br><span class=\"line\">0 17 * * sun /bin/bash /scripts/script.sh：每周日 17:00 执行任务</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.修改启动文件（ubuntu14、ubuntu16支持）</span><br><span class=\"line\">    /etc/rc.local</span><br><span class=\"line\">2.配置启动脚本</span><br><span class=\"line\">    sudo vim /etc/init.d/automount</span><br><span class=\"line\">        #!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">        ### BEGIN INIT INFO</span><br><span class=\"line\">        # Provides:          jmm.com</span><br><span class=\"line\">        # Required-Start:    $local_fs $remote_fs $network $syslog $named</span><br><span class=\"line\">        # Required-Stop:     $local_fs $remote_fs $network $syslog $named</span><br><span class=\"line\">        # Default-Start:     2 3 4 5</span><br><span class=\"line\">        # Default-Stop:      0 1 6</span><br><span class=\"line\">        # Short-Description: jmm service</span><br><span class=\"line\">        # Description:       jmm service</span><br><span class=\"line\">        ### END INIT INFO</span><br><span class=\"line\"></span><br><span class=\"line\">        busybox mount -t nfs -o nolock 10.169.0.203:/data/backup /data/mirror</span><br><span class=\"line\">        exit 0</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo chmod +x /etc/init.d/automount</span><br><span class=\"line\">    sudo update-rc.d automount defaults 99（开启）</span><br><span class=\"line\">    sudo update-rc.d -f automount remove（移除）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"service-和-systemctl\"><a href=\"#service-和-systemctl\" class=\"headerlink\" title=\"service 和 systemctl\"></a>service 和 systemctl</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service命令其实是去/etc/init.d目录下，去执行相关程序</span><br><span class=\"line\">    sudo service redis start</span><br><span class=\"line\">    sudo /etc/init.d/redis start</span><br><span class=\"line\">systemd作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动，systemd对应的进程管理命令是systemctl。</span><br><span class=\"line\">    兼容service：</span><br><span class=\"line\">    sudo systemctl redis start（启动服务）</span><br><span class=\"line\">    systemctl enable redis（开机启动服务）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables/firewall/ufw</span><br><span class=\"line\">    iptables比较老默认开放就行</span><br><span class=\"line\">    ufw是debian系列的（iptables托管给ufw）</span><br><span class=\"line\">    firewall是redhat系列的</span><br><span class=\"line\"></span><br><span class=\"line\">ufw接管防火墙</span><br><span class=\"line\">    sudo ufw enable（开启，阶段iptables，底层还是iptables）</span><br><span class=\"line\">    sudo ufw disable（关闭）</span><br><span class=\"line\">    sudo ufw status（查看防火墙表）</span><br><span class=\"line\">    sudo ufw status verbose（查看策略）</span><br><span class=\"line\">    sudo ufw status numbered（查看防火墙表 加行号，删除 sudo ufw delete 1）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo ufw allow 80（允许80，sudo ufw delete allow 80（删除就是在规则前加delete））</span><br><span class=\"line\">    sudo ufw deny 80（拒绝80）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo ufw allow 80/tcp（允许80，tcp形式）</span><br><span class=\"line\">    sudo ufw allow 9000:9002（允许一段端口）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36（允许ip）</span><br><span class=\"line\">    sudo ufw allow from 192.168.1.0/24（允许ip段）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36 to any port 80（允许ip访问80）</span><br><span class=\"line\">    sudo ufw allow from 192.168.29.36 to any port 80 proto tcp（允许ip以tcp形式访问80）</span><br><span class=\"line\"></span><br><span class=\"line\">iptables防火墙</span><br><span class=\"line\">    sudo iptables --line-number -nL（查看列表）</span><br><span class=\"line\">    sudo iptables -F（清空列表）</span><br><span class=\"line\">    sudo iptables -D INPUT 3（删除input表第三条规则）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -P INPUT ACCEPT（允许input表）</span><br><span class=\"line\">    sudo iptables -P OUTPUT ACCEPT（允许output表）</span><br><span class=\"line\">    sudo iptables -P INPUT DROP（禁止input表）</span><br><span class=\"line\">    sudo iptables -P OUTPUT DROP（禁止output表）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT（允许某个端口进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT（允许某个端口出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.3 -j ACCEPT（允许某个ip进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -s 192.168.0.3 -j ACCEPT（允许某个ip出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.0/24 -j ACCEPT（允许192.168.0.1 - 192.168.0.254网段访问）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -A INPUT -p tcp --dport 22 -j DROP（禁止某个端口进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -p tcp --sport 22 -j DROP（禁止某个端口出）</span><br><span class=\"line\">    sudo iptables -A INPUT -s 192.168.0.3 -j DROP（禁止某个ip进）</span><br><span class=\"line\">    sudo iptables -A OUTPUT -s 192.168.0.3 -j DROP（禁止某个ip出）</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo iptables -I INPUT 1 -s 192.168.0.3 -j ACCEPT（允许某个ip进，插入）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vim编辑器\"><a href=\"#vim编辑器\" class=\"headerlink\" title=\"vim编辑器\"></a>vim编辑器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编辑文件：vim [file]</span><br><span class=\"line\">三种模式：命令模式（esc进入）、底线命令模式（:/?进入）、编辑模式（i、a、o、r、I、A、O、R进入）、块模式（ctrl+v进入）</span><br><span class=\"line\">命令模式（前面加数字可以达到重复的效果）</span><br><span class=\"line\">    删除行：dd</span><br><span class=\"line\">    复制行：yy</span><br><span class=\"line\">    拷贝行：p</span><br><span class=\"line\">    首行：gg</span><br><span class=\"line\">    尾行：G</span><br><span class=\"line\">    删除数字：x（X为向前删除）</span><br><span class=\"line\">    撤销：u（ctrl+r反撤销）</span><br><span class=\"line\">    重复上一次命令：.</span><br><span class=\"line\">    显示当前文件名和位置：ctrl+g</span><br><span class=\"line\">    合并两行：J</span><br><span class=\"line\"></span><br><span class=\"line\">底线命令模式</span><br><span class=\"line\">    退出：:wq!、:q!、:x!、:qa!</span><br><span class=\"line\">    跳转到行：:20</span><br><span class=\"line\">    查找：/xxx （忽略大小写:\\c，n下一个，N上一个）</span><br><span class=\"line\">    反向查找：?xxx（忽略转义和大小写）</span><br><span class=\"line\">    替换每行所有：:%s/aaa/bbb/g（替换当前行第一个：:s/aaa/bbb/，用其他分割符：%s#aaa#bbb#g）</span><br><span class=\"line\">    列出所有匹配项：:g/aaa（忽略大小写:\\c）</span><br><span class=\"line\">    显示行号：set number（关闭行号：set nonumber，可写在~/.vimrc里面）</span><br><span class=\"line\">    取消自动换行：set nowrap（换行：set wrap）</span><br><span class=\"line\">    搜索关键字高亮：set incsearch（关闭高亮：set noincsearch）</span><br><span class=\"line\">    忽略大小写：set ignorecase（关闭忽略大小写：set noignorecase）</span><br><span class=\"line\">    取消粘贴缩进：set paste</span><br><span class=\"line\">    取消鼠标选择：set mouse=（开启鼠标选择：set mouse=a）</span><br><span class=\"line\"></span><br><span class=\"line\">其他</span><br><span class=\"line\">    vim分屏：:vs [file]（左右分屏），ctrl + w w（切换屏幕）</span><br><span class=\"line\">    vimdiff对比文件：vimdiff file1 file2（dp：应用于另一边，do：获得另一边的修改，zo：展开）</span><br><span class=\"line\">    meld对比文件：meld file1 file2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置静态ip\"><a href=\"#配置静态ip\" class=\"headerlink\" title=\"配置静态ip\"></a>配置静态ip</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network（ubuntu16及以下）</span><br><span class=\"line\">    sudo vim /etc/network/interfaces</span><br><span class=\"line\">        auto enp3s0</span><br><span class=\"line\">        iface enp3s0 inet static</span><br><span class=\"line\">        address 192.168.0.200</span><br><span class=\"line\">        netmask 255.255.255.0</span><br><span class=\"line\">        gateway 192.168.0.1</span><br><span class=\"line\">        dns-nameserver 8.8.8.8</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo service networking restart</span><br><span class=\"line\"></span><br><span class=\"line\">netplan（ubuntu18及以上）</span><br><span class=\"line\">    sudo vim /etc/netplan/01-network-manager-all.yaml</span><br><span class=\"line\">        network:</span><br><span class=\"line\">          version: 2</span><br><span class=\"line\">          renderer: NetworkManager</span><br><span class=\"line\">          ethernets:</span><br><span class=\"line\">             eno1: # 网卡</span><br><span class=\"line\">               dhcp4: no # dhcp4关闭</span><br><span class=\"line\">               addresses: [192.168.202.36/24] # ip和掩码</span><br><span class=\"line\">               gateway4: 192.168.202.1 # 网关</span><br><span class=\"line\">               nameservers:</span><br><span class=\"line\">                 addresses: [8.8.8.8,114.114.114.114] #设置DNS</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo netplan apply</span><br><span class=\"line\"></span><br><span class=\"line\">netplan（ubuntu20及以上）</span><br><span class=\"line\">    sudo vim /etc/netplan/01-network-manager-all.yaml</span><br><span class=\"line\">        network:</span><br><span class=\"line\">          version: 2</span><br><span class=\"line\">          renderer: NetworkManager</span><br><span class=\"line\">          ethernets:</span><br><span class=\"line\">             eno1:</span><br><span class=\"line\">               dhcp4: no</span><br><span class=\"line\">               addresses: [10.170.0.238/23]</span><br><span class=\"line\">               routes:</span><br><span class=\"line\">               - to: default</span><br><span class=\"line\">                 via: 10.170.0.1</span><br><span class=\"line\">               nameservers:</span><br><span class=\"line\">                 addresses: [8.8.8.8,114.114.114.114] #设置DNS</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo netplan apply</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dependency-problems-leaving-unconfigured问题\"><a href=\"#dependency-problems-leaving-unconfigured问题\" class=\"headerlink\" title=\"dependency problems - leaving unconfigured问题\"></a>dependency problems - leaving unconfigured问题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv /var/lib/dpkg/info/ /var/lib/dpkg/info_old/</span><br><span class=\"line\">sudo mkdir /var/lib/dpkg/info/</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -f install</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"profile和bashrc\"><a href=\"#profile和bashrc\" class=\"headerlink\" title=\"profile和bashrc\"></a>profile和bashrc</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">profile：系统全局环境登录的一些配置</span><br><span class=\"line\">bashrc：用户bash的一些配置</span><br><span class=\"line\">.env：进入目录时初始化环境</span><br><span class=\"line\">执⾏顺序为：/etc/profile -&gt; (~/.bash_profile | ~/.bash_login | ~/.profile) -&gt; ~/.bashrc -&gt; /etc/bashrc -&gt; ~/.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文本处理三剑客（grep-x2F-egrep、sed、awk）\"><a href=\"#文本处理三剑客（grep-x2F-egrep、sed、awk）\" class=\"headerlink\" title=\"文本处理三剑客（grep&#x2F;egrep、sed、awk）\"></a>文本处理三剑客（grep&#x2F;egrep、sed、awk）</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正则支持（三剑客都是以行为单位进行处理）</span><br><span class=\"line\">    grep：默认不支持扩展正则，加上-E支持扩展正则，如果不加上-E，使用\\&#123;\\&#125;要加上\\进行转义。</span><br><span class=\"line\">    egrep：支持基础和扩展正则，相当于grep -E。</span><br><span class=\"line\">    sed：默认不支持扩展正则，机上-r选项支持扩展正则，如果不加上-r，使用\\&#123;\\&#125;要加上\\进行转义。</span><br><span class=\"line\">    awk：默认支持所有正则。</span><br><span class=\"line\"></span><br><span class=\"line\">    shell的正则分为两类：</span><br><span class=\"line\">        基础正则表达式、扩展正则表达式 &#123;扩展的有+、？、|、（）&#125;</span><br><span class=\"line\">    区分正则和通配符：</span><br><span class=\"line\">        1、只要涉及grep/egrep sed awk都是正则。其他的都是统配符</span><br><span class=\"line\">        2、涉及文件和目录名——统配符；涉及文本内容——正则</span><br><span class=\"line\">    基础正则</span><br><span class=\"line\">        ^ ：表示匹配字符串开头</span><br><span class=\"line\">        . ：匹配一个字符，且该字符必须存在</span><br><span class=\"line\">        * ：匹配前面一个字符的0个或者多个</span><br><span class=\"line\">        .* ：可以匹配任意长度的任意内容</span><br><span class=\"line\">        $ ：匹配字符串结尾</span><br><span class=\"line\">        [] ：表示匹配括号里的任意一个字符</span><br><span class=\"line\">        ^[^s] ：^在中括号中有^表示取反，非。匹配不以s开头的字符</span><br><span class=\"line\">        \\&#123;n,m\\&#125; ：匹配字符n到m次，至少n次，至多m次</span><br><span class=\"line\">        \\(\\) ：分组</span><br><span class=\"line\">        \\&lt;\\&gt; ：单词锚定，\\&lt;root\\&lt;，root必须作为一行的单词出现,也可\\broot\\b</span><br><span class=\"line\">    拓展正则</span><br><span class=\"line\">        grep -E ：-E支持拓展正则，或者直接使用egrep，拓展正则支持所有的基础正则</span><br><span class=\"line\">        ? ：最多匹配一个，可以是0个</span><br><span class=\"line\">        + ：至少匹配一个可以是多个</span><br><span class=\"line\">        | ：或</span><br><span class=\"line\">        () ：分组</span><br><span class=\"line\"></span><br><span class=\"line\">grep使用</span><br><span class=\"line\">    -r：目录递归</span><br><span class=\"line\">    -n：打印行号</span><br><span class=\"line\">    -s：不显示错误</span><br><span class=\"line\">    -i：忽略大小写</span><br><span class=\"line\">    -o：只打印匹配的内容</span><br><span class=\"line\">    -v：取反，打印不匹配的行</span><br><span class=\"line\">    -q：如果有匹配的内容则返回状态值0</span><br><span class=\"line\">    -c：匹配的内容有多少行</span><br><span class=\"line\">    -E：扩展正则表达式</span><br><span class=\"line\">    -P：支持perl的正则语法</span><br><span class=\"line\">    -A1：after打印匹配的后几行</span><br><span class=\"line\">    -B1：before打印匹配的后几行</span><br><span class=\"line\">    -C1：打印匹配的前后几行</span><br><span class=\"line\"></span><br><span class=\"line\">sed操作</span><br><span class=\"line\">    选项</span><br><span class=\"line\">        -i：直接修改写入到文件内容，而不是输出到终端。如果不使用-i那么只会修改内存中的内容，而不会写入到磁盘。</span><br><span class=\"line\">        -n：输出模式，取消默认的sed软件输出，常与sed-commands的p连用</span><br><span class=\"line\">        -e：多点操作，一条命令语句执行多个sed操作。</span><br><span class=\"line\">        -r：使用扩展正则表达式</span><br><span class=\"line\">    sed-commands（$表示行末）：</span><br><span class=\"line\">        i ：insert 插入，在指定的行前添加一行或多行文本</span><br><span class=\"line\">        a ：append 在指定行后面追加一行或者多行文本</span><br><span class=\"line\">        s ：search 搜索字符串</span><br><span class=\"line\">        c ：change 取代指定的行或者多行</span><br><span class=\"line\">        d ：delete 删除指定的行或者多行</span><br><span class=\"line\">        p ：print 打印模式空间的内容，通常p和-n选项一起使用</span><br><span class=\"line\">        ! ：取非，对指定行以外的所有行应用命令</span><br><span class=\"line\">    例子</span><br><span class=\"line\">        第一行前添加：sed &quot;1 i hello world&quot; xxx.xml</span><br><span class=\"line\">        第一行后添加：sed &quot;1 a hello world&quot; xxx.xml</span><br><span class=\"line\">        最后一行之后添加：sed &quot;$ a hello world&quot; xxx.xml</span><br><span class=\"line\">        删除第一行：sed &quot;1 d&quot; xxx.xml</span><br><span class=\"line\">        删除1-最后行：sed &quot;1,$ d&quot; xxx.xml</span><br><span class=\"line\">        取代第一行：sed &quot;1 c hello world\\nname&quot; xxx.xml</span><br><span class=\"line\">        取代1-最后行：sed &quot;1,$ c hello world\\nname&quot; xxx.xml</span><br><span class=\"line\">        打印第一行：sed -n &quot;1 p&quot; xxx.xml</span><br><span class=\"line\">        打印1-最后行：sed -n &quot;1,$ p&quot; xxx.xml</span><br><span class=\"line\">        打印除2-5行：sed -n &#x27;2,5! p&#x27; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        找到某行在前添加：sed &quot;/path=\\&quot;build\\/make\\&quot;/i hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行在后添加：sed &quot;/path=\\&quot;build\\/make\\&quot;/a hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行后删除：sed &quot;/path=\\&quot;build\\/make\\&quot;/d&quot; xxx.xml</span><br><span class=\"line\">        找到某行后取代：sed &quot;/path=\\&quot;build\\/make\\&quot;/c hello world&quot; xxx.xml</span><br><span class=\"line\">        找到某行后打印：sed -n &quot;/path=\\&quot;build\\/make\\&quot;/p&quot; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        多点操作：sed -e &#x27;1d&#x27; -e &#x27;5,7d&#x27; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">        替换文件内容：sed &quot;s/path=\\&quot;build\\/make\\&quot;/path=\\&quot;hello world\\&quot;/g&quot; xxx.xml</span><br><span class=\"line\">        替换文件内容（基础正则，使用取反来达到懒汉模式）：sed &quot;s/path=\\&quot;[^\\&quot;]*\\&quot;/path=\\&quot;hello world\\&quot;/g&quot; xxx.xml</span><br><span class=\"line\"></span><br><span class=\"line\">awk操作</span><br><span class=\"line\">    $0，整条记录</span><br><span class=\"line\">    $1、$2、$3，输出一个指定的字段</span><br><span class=\"line\">    FS，段分隔符，默认空格</span><br><span class=\"line\">    RS，行分隔符</span><br><span class=\"line\">    NR，行号</span><br><span class=\"line\">    NF，字段数量，$NF，最后一个字段</span><br><span class=\"line\">    ~，表示正则匹配</span><br><span class=\"line\">    //，进行内容匹配</span><br><span class=\"line\"></span><br><span class=\"line\">    输出所有行：awk &#x27;&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出第二行：awk &#x27;NR==2&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出二到五行：awk &#x27;NR&gt;=2&amp;&amp;NR&lt;=5&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出行号：awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    输出行号：awk &#x27;&#123;print NR&quot; &quot;$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    分隔符：awk -F &#x27;:&#x27; &#x27;&#123;print $1,$2,$3,$4&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    锚定查找并输出：awk &#x27;/\\&lt;root\\&gt;/&#123;print NR&quot;\\t&quot;$0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    正则匹配：awk &#x27;$0~/root/&#x27; /etc/passwd</span><br><span class=\"line\">    末尾查找字串：awk -F &#x27;:&#x27; &#x27;$NF~/sbin/&#123;print $0&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    多个分隔符：awk -F &#x27;[:/]+&#x27; &#x27;&#123;print $5,$6,$7,$8&#125;&#x27; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">    开始前输入：awk -F : &#x27;BEGIN&#123;print &quot;USERNAME&quot;&#125; &#123;print $1&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    前后输入：awk -F : &#x27;BEGIN&#123;print &quot;USERNAME&quot;&#125; &#123;print $1&#125; END&#123;print &quot;END OF FILE&quot;&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    统计次数：awk &#x27;BEGIN&#123;num=0&#125;/nologin/&#123;num++&#125;END&#123;print num&#125;&#x27; /etc/passwd</span><br><span class=\"line\">    遍历：awk -F : &#x27;&#123;ken[$NF]++&#125;END&#123;for (i in ken) print ken[i] i&#125;&#x27; /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    cat access.log | awk &#x27;&#123;print $1&#125;&#x27; | sort | uniq -c | sort -rn | head -3</span><br><span class=\"line\">    awk &#x27;&#123;ken[$1]++&#125;END&#123;for (i in ken) print ken[i],i&#125;&#x27; access.log | sort -rn | head -3</span><br></pre></td></tr></table></figure>"},{"title":"Python常见问题","date":"2022-06-28T16:00:00.000Z","_content":"\nPython常见问题\n\n<!--more-->\n\n## python和pip安装\n```\npython\n    安装：sudo apt install python3\n\n    运行\n        python3 xxx.py\n            -u：不带缓存输出\n            -m：模块当做脚本运行\n            -i：镜像源\n            -c：允许cmd\npip\n    安装：sudo apt install python3-pip\n\n    查看所有库：pip3 list\n    升级pip：pip3 install --upgrade pip\n    安装库：pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple\n    卸载并重装pip：sudo python3 -m pip uninstall pip && sudo apt install python3-pip --reinstall\n\n库安装\n    1.离线安装\n        python install setup.py\n    2.pip安装\n        pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple\n    3.idea安装\n        Settings -> Project: script -> Project Interpreter\n```\n\n## 设置镜像源\n```\nubuntu：\n    vim ~/.pip/pip.conf\n        [global]\n        index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\nwindows：\n    C:\\Users\\xxx\\pip\\pip.ini\n        [global]\n        index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## Pycharm设置\n```\nSettings -> Editor -> File Encodings -> UTF-8\nSettings -> Editor -> Code Style -> Tab size 改成 4\nSettings -> Project: script -> Project Interpreter -> 设置python版本\nSettings -> Project: script -> Project Interpreter -> 点+号，设置镜像源（https://pypi.tuna.tsinghua.edu.cn/simple）\n```\n\n## 生成包依赖\n```\n安装\n    pip3 install pipreqs\n生成\n    pipreqs ./ --encoding=utf8\n安装依赖\n    pip3 install -r requirements.txt\n```\n\n## 虚拟环境\n```\nlinux\n    mkdir myproject\n    cd myproject\n    python3 -m venv venv\n    . venv/bin/activate\n\nwindows\n    mkdir myproject\n    cd myproject\n    py -3 -m venv venv\n    venv\\Scripts\\activate\n```\n\n## 模块导入和使用\n```\n1. 在同一目录下:\n    # 导入模块\n        import support\n    # 使用\n        support.print_func('Runoob')\n        print(support.count)\n\n    # 导入模块内具体内容\n        from support import print_func\n        from support import count\n    # 使用\n        print_func('Runoob')\n        print(count)\n\n2. 子目录\n    import os\n    import sys\n    sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'sub_dir'))\n\n3. 父目录\n    import os\n    import sys\n    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n```\n\n## 默认解释器、编码\n```\n#!/usr/bin/python3\n# encoding: utf-8\n```\n\n## Python引号\n```\nPython 可以使用引号( ' )、双引号( \" )、三引号( ''' 或 \"\"\" ) 来表示字符串，其中三引号可以由多行组成。\nword = 'word'\nsentence = \"这是一个句子。\"\nparagraph = \"\"\"这是一个段落。\n包含了多个语句\"\"\"\n```\n\n## is 与 == 区别\n```\nis 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。\n```\n\n## 异常处理\n```\n捕获异常：\ntry:\n    doxxx\nexcept Exception as e:\n    print(e)\n    print(traceback.format_exc())\n\n抛出异常：\nraise Exception('haha')\n```\n\n## 全局变量\n```\n引用全局变量，不需要global声明，修改全局变量，需要使用global声明\n```\n\n## 解析参数\n```\nopts,args = getopt.getopt(sys.argv[1:],'hf:v',['help','filename=','version'])\nfor opt_name,opt_value in opts:\n    if opt_name in ('-h','--help'):\n        print(\"[*] Help info\")\n        sys.exit()\n    if opt_name in ('-v','--version'):\n        print(\"[*] Version is 0.01 \")\n        sys.exit()\n    if opt_name in ('-f','--filename'):\n        fileName = opt_value\n        print(\"[*] Filename is \",fileName)\n        # do something\n        sys.exit()\n```\n\n\n## wheel包\n```\n    安装\n        pip3 install wheel\n        pip3 install --upgrade setuptools\n\n    setup.py\n        from setuptools import setup\n\n        setup(\n            name='webscm',\n            version='1.0',\n            py_modules='webscm'\n        )\n\n    生成包\n        python3 setup.py bdist_wheel\n\n    导入包\n        pip3 install webscm-1.0-py3-none-any.whl\n\n    部署\n        pip3 install waitress\n        waitress-serve --call 'flaskr:create_app'\n```\n\n## url编码和解码\n```\nfrom urllib.parse import quote\n\n# 将字符串‘程序设计’进行编码\ntext = quote(\"程序设计\", 'utf-8')\n\n# 对字符串‘%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1’进行解密\ntext = unquote(\"%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\", 'utf-8')\n```\n\n## 列表推导\n```\nlist comprehensions\ntmp_list = [var['file_name'] for var in LONG_SAVE_FILE_LIST]\n```","source":"_posts/2022-6-29Python常见问题.md","raw":"---\ntitle: Python常见问题\ndate: 2022-6-29\ntags: [python]\n---\n\nPython常见问题\n\n<!--more-->\n\n## python和pip安装\n```\npython\n    安装：sudo apt install python3\n\n    运行\n        python3 xxx.py\n            -u：不带缓存输出\n            -m：模块当做脚本运行\n            -i：镜像源\n            -c：允许cmd\npip\n    安装：sudo apt install python3-pip\n\n    查看所有库：pip3 list\n    升级pip：pip3 install --upgrade pip\n    安装库：pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple\n    卸载并重装pip：sudo python3 -m pip uninstall pip && sudo apt install python3-pip --reinstall\n\n库安装\n    1.离线安装\n        python install setup.py\n    2.pip安装\n        pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple\n    3.idea安装\n        Settings -> Project: script -> Project Interpreter\n```\n\n## 设置镜像源\n```\nubuntu：\n    vim ~/.pip/pip.conf\n        [global]\n        index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\nwindows：\n    C:\\Users\\xxx\\pip\\pip.ini\n        [global]\n        index-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## Pycharm设置\n```\nSettings -> Editor -> File Encodings -> UTF-8\nSettings -> Editor -> Code Style -> Tab size 改成 4\nSettings -> Project: script -> Project Interpreter -> 设置python版本\nSettings -> Project: script -> Project Interpreter -> 点+号，设置镜像源（https://pypi.tuna.tsinghua.edu.cn/simple）\n```\n\n## 生成包依赖\n```\n安装\n    pip3 install pipreqs\n生成\n    pipreqs ./ --encoding=utf8\n安装依赖\n    pip3 install -r requirements.txt\n```\n\n## 虚拟环境\n```\nlinux\n    mkdir myproject\n    cd myproject\n    python3 -m venv venv\n    . venv/bin/activate\n\nwindows\n    mkdir myproject\n    cd myproject\n    py -3 -m venv venv\n    venv\\Scripts\\activate\n```\n\n## 模块导入和使用\n```\n1. 在同一目录下:\n    # 导入模块\n        import support\n    # 使用\n        support.print_func('Runoob')\n        print(support.count)\n\n    # 导入模块内具体内容\n        from support import print_func\n        from support import count\n    # 使用\n        print_func('Runoob')\n        print(count)\n\n2. 子目录\n    import os\n    import sys\n    sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'sub_dir'))\n\n3. 父目录\n    import os\n    import sys\n    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n```\n\n## 默认解释器、编码\n```\n#!/usr/bin/python3\n# encoding: utf-8\n```\n\n## Python引号\n```\nPython 可以使用引号( ' )、双引号( \" )、三引号( ''' 或 \"\"\" ) 来表示字符串，其中三引号可以由多行组成。\nword = 'word'\nsentence = \"这是一个句子。\"\nparagraph = \"\"\"这是一个段落。\n包含了多个语句\"\"\"\n```\n\n## is 与 == 区别\n```\nis 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。\n```\n\n## 异常处理\n```\n捕获异常：\ntry:\n    doxxx\nexcept Exception as e:\n    print(e)\n    print(traceback.format_exc())\n\n抛出异常：\nraise Exception('haha')\n```\n\n## 全局变量\n```\n引用全局变量，不需要global声明，修改全局变量，需要使用global声明\n```\n\n## 解析参数\n```\nopts,args = getopt.getopt(sys.argv[1:],'hf:v',['help','filename=','version'])\nfor opt_name,opt_value in opts:\n    if opt_name in ('-h','--help'):\n        print(\"[*] Help info\")\n        sys.exit()\n    if opt_name in ('-v','--version'):\n        print(\"[*] Version is 0.01 \")\n        sys.exit()\n    if opt_name in ('-f','--filename'):\n        fileName = opt_value\n        print(\"[*] Filename is \",fileName)\n        # do something\n        sys.exit()\n```\n\n\n## wheel包\n```\n    安装\n        pip3 install wheel\n        pip3 install --upgrade setuptools\n\n    setup.py\n        from setuptools import setup\n\n        setup(\n            name='webscm',\n            version='1.0',\n            py_modules='webscm'\n        )\n\n    生成包\n        python3 setup.py bdist_wheel\n\n    导入包\n        pip3 install webscm-1.0-py3-none-any.whl\n\n    部署\n        pip3 install waitress\n        waitress-serve --call 'flaskr:create_app'\n```\n\n## url编码和解码\n```\nfrom urllib.parse import quote\n\n# 将字符串‘程序设计’进行编码\ntext = quote(\"程序设计\", 'utf-8')\n\n# 对字符串‘%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1’进行解密\ntext = unquote(\"%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\", 'utf-8')\n```\n\n## 列表推导\n```\nlist comprehensions\ntmp_list = [var['file_name'] for var in LONG_SAVE_FILE_LIST]\n```","slug":"2022-6-29Python常见问题","published":1,"updated":"2022-06-29T08:17:31.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooez000hnkvv7qz23drl","content":"<p>Python常见问题</p>\n<span id=\"more\"></span>\n\n<h2 id=\"python和pip安装\"><a href=\"#python和pip安装\" class=\"headerlink\" title=\"python和pip安装\"></a>python和pip安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python</span><br><span class=\"line\">    安装：sudo apt install python3</span><br><span class=\"line\"></span><br><span class=\"line\">    运行</span><br><span class=\"line\">        python3 xxx.py</span><br><span class=\"line\">            -u：不带缓存输出</span><br><span class=\"line\">            -m：模块当做脚本运行</span><br><span class=\"line\">            -i：镜像源</span><br><span class=\"line\">            -c：允许cmd</span><br><span class=\"line\">pip</span><br><span class=\"line\">    安装：sudo apt install python3-pip</span><br><span class=\"line\"></span><br><span class=\"line\">    查看所有库：pip3 list</span><br><span class=\"line\">    升级pip：pip3 install --upgrade pip</span><br><span class=\"line\">    安装库：pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">    卸载并重装pip：sudo python3 -m pip uninstall pip &amp;&amp; sudo apt install python3-pip --reinstall</span><br><span class=\"line\"></span><br><span class=\"line\">库安装</span><br><span class=\"line\">    1.离线安装</span><br><span class=\"line\">        python install setup.py</span><br><span class=\"line\">    2.pip安装</span><br><span class=\"line\">        pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">    3.idea安装</span><br><span class=\"line\">        Settings -&gt; Project: script -&gt; Project Interpreter</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置镜像源\"><a href=\"#设置镜像源\" class=\"headerlink\" title=\"设置镜像源\"></a>设置镜像源</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu：</span><br><span class=\"line\">    vim ~/.pip/pip.conf</span><br><span class=\"line\">        [global]</span><br><span class=\"line\">        index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\"></span><br><span class=\"line\">windows：</span><br><span class=\"line\">    C:\\Users\\xxx\\pip\\pip.ini</span><br><span class=\"line\">        [global]</span><br><span class=\"line\">        index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Pycharm设置\"><a href=\"#Pycharm设置\" class=\"headerlink\" title=\"Pycharm设置\"></a>Pycharm设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Settings -&gt; Editor -&gt; File Encodings -&gt; UTF-8</span><br><span class=\"line\">Settings -&gt; Editor -&gt; Code Style -&gt; Tab size 改成 4</span><br><span class=\"line\">Settings -&gt; Project: script -&gt; Project Interpreter -&gt; 设置python版本</span><br><span class=\"line\">Settings -&gt; Project: script -&gt; Project Interpreter -&gt; 点+号，设置镜像源（https://pypi.tuna.tsinghua.edu.cn/simple）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生成包依赖\"><a href=\"#生成包依赖\" class=\"headerlink\" title=\"生成包依赖\"></a>生成包依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装</span><br><span class=\"line\">    pip3 install pipreqs</span><br><span class=\"line\">生成</span><br><span class=\"line\">    pipreqs ./ --encoding=utf8</span><br><span class=\"line\">安装依赖</span><br><span class=\"line\">    pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">linux</span><br><span class=\"line\">    mkdir myproject</span><br><span class=\"line\">    cd myproject</span><br><span class=\"line\">    python3 -m venv venv</span><br><span class=\"line\">    . venv/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">windows</span><br><span class=\"line\">    mkdir myproject</span><br><span class=\"line\">    cd myproject</span><br><span class=\"line\">    py -3 -m venv venv</span><br><span class=\"line\">    venv\\Scripts\\activate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块导入和使用\"><a href=\"#模块导入和使用\" class=\"headerlink\" title=\"模块导入和使用\"></a>模块导入和使用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 在同一目录下:</span><br><span class=\"line\">    # 导入模块</span><br><span class=\"line\">        import support</span><br><span class=\"line\">    # 使用</span><br><span class=\"line\">        support.print_func(&#x27;Runoob&#x27;)</span><br><span class=\"line\">        print(support.count)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 导入模块内具体内容</span><br><span class=\"line\">        from support import print_func</span><br><span class=\"line\">        from support import count</span><br><span class=\"line\">    # 使用</span><br><span class=\"line\">        print_func(&#x27;Runoob&#x27;)</span><br><span class=\"line\">        print(count)</span><br><span class=\"line\"></span><br><span class=\"line\">2. 子目录</span><br><span class=\"line\">    import os</span><br><span class=\"line\">    import sys</span><br><span class=\"line\">    sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), &#x27;sub_dir&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">3. 父目录</span><br><span class=\"line\">    import os</span><br><span class=\"line\">    import sys</span><br><span class=\"line\">    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"默认解释器、编码\"><a href=\"#默认解释器、编码\" class=\"headerlink\" title=\"默认解释器、编码\"></a>默认解释器、编码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/python3</span><br><span class=\"line\"># encoding: utf-8</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Python引号\"><a href=\"#Python引号\" class=\"headerlink\" title=\"Python引号\"></a>Python引号</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 可以使用引号( &#x27; )、双引号( &quot; )、三引号( &#x27;&#x27;&#x27; 或 &quot;&quot;&quot; ) 来表示字符串，其中三引号可以由多行组成。</span><br><span class=\"line\">word = &#x27;word&#x27;</span><br><span class=\"line\">sentence = &quot;这是一个句子。&quot;</span><br><span class=\"line\">paragraph = &quot;&quot;&quot;这是一个段落。</span><br><span class=\"line\">包含了多个语句&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"is-与-x3D-x3D-区别\"><a href=\"#is-与-x3D-x3D-区别\" class=\"headerlink\" title=\"is 与 &#x3D;&#x3D; 区别\"></a>is 与 &#x3D;&#x3D; 区别</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">is 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">捕获异常：</span><br><span class=\"line\">try:</span><br><span class=\"line\">    doxxx</span><br><span class=\"line\">except Exception as e:</span><br><span class=\"line\">    print(e)</span><br><span class=\"line\">    print(traceback.format_exc())</span><br><span class=\"line\"></span><br><span class=\"line\">抛出异常：</span><br><span class=\"line\">raise Exception(&#x27;haha&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">引用全局变量，不需要global声明，修改全局变量，需要使用global声明</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析参数\"><a href=\"#解析参数\" class=\"headerlink\" title=\"解析参数\"></a>解析参数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">opts,args = getopt.getopt(sys.argv[1:],&#x27;hf:v&#x27;,[&#x27;help&#x27;,&#x27;filename=&#x27;,&#x27;version&#x27;])</span><br><span class=\"line\">for opt_name,opt_value in opts:</span><br><span class=\"line\">    if opt_name in (&#x27;-h&#x27;,&#x27;--help&#x27;):</span><br><span class=\"line\">        print(&quot;[*] Help info&quot;)</span><br><span class=\"line\">        sys.exit()</span><br><span class=\"line\">    if opt_name in (&#x27;-v&#x27;,&#x27;--version&#x27;):</span><br><span class=\"line\">        print(&quot;[*] Version is 0.01 &quot;)</span><br><span class=\"line\">        sys.exit()</span><br><span class=\"line\">    if opt_name in (&#x27;-f&#x27;,&#x27;--filename&#x27;):</span><br><span class=\"line\">        fileName = opt_value</span><br><span class=\"line\">        print(&quot;[*] Filename is &quot;,fileName)</span><br><span class=\"line\">        # do something</span><br><span class=\"line\">        sys.exit()</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"wheel包\"><a href=\"#wheel包\" class=\"headerlink\" title=\"wheel包\"></a>wheel包</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装</span><br><span class=\"line\">    pip3 install wheel</span><br><span class=\"line\">    pip3 install --upgrade setuptools</span><br><span class=\"line\"></span><br><span class=\"line\">setup.py</span><br><span class=\"line\">    from setuptools import setup</span><br><span class=\"line\"></span><br><span class=\"line\">    setup(</span><br><span class=\"line\">        name=&#x27;webscm&#x27;,</span><br><span class=\"line\">        version=&#x27;1.0&#x27;,</span><br><span class=\"line\">        py_modules=&#x27;webscm&#x27;</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">生成包</span><br><span class=\"line\">    python3 setup.py bdist_wheel</span><br><span class=\"line\"></span><br><span class=\"line\">导入包</span><br><span class=\"line\">    pip3 install webscm-1.0-py3-none-any.whl</span><br><span class=\"line\"></span><br><span class=\"line\">部署</span><br><span class=\"line\">    pip3 install waitress</span><br><span class=\"line\">    waitress-serve --call &#x27;flaskr:create_app&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"url编码和解码\"><a href=\"#url编码和解码\" class=\"headerlink\" title=\"url编码和解码\"></a>url编码和解码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from urllib.parse import quote</span><br><span class=\"line\"></span><br><span class=\"line\"># 将字符串‘程序设计’进行编码</span><br><span class=\"line\">text = quote(&quot;程序设计&quot;, &#x27;utf-8&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 对字符串‘%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1’进行解密</span><br><span class=\"line\">text = unquote(&quot;%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1&quot;, &#x27;utf-8&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表推导\"><a href=\"#列表推导\" class=\"headerlink\" title=\"列表推导\"></a>列表推导</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list comprehensions</span><br><span class=\"line\">tmp_list = [var[&#x27;file_name&#x27;] for var in LONG_SAVE_FILE_LIST]</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Python常见问题</p>","more":"<h2 id=\"python和pip安装\"><a href=\"#python和pip安装\" class=\"headerlink\" title=\"python和pip安装\"></a>python和pip安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python</span><br><span class=\"line\">    安装：sudo apt install python3</span><br><span class=\"line\"></span><br><span class=\"line\">    运行</span><br><span class=\"line\">        python3 xxx.py</span><br><span class=\"line\">            -u：不带缓存输出</span><br><span class=\"line\">            -m：模块当做脚本运行</span><br><span class=\"line\">            -i：镜像源</span><br><span class=\"line\">            -c：允许cmd</span><br><span class=\"line\">pip</span><br><span class=\"line\">    安装：sudo apt install python3-pip</span><br><span class=\"line\"></span><br><span class=\"line\">    查看所有库：pip3 list</span><br><span class=\"line\">    升级pip：pip3 install --upgrade pip</span><br><span class=\"line\">    安装库：pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">    卸载并重装pip：sudo python3 -m pip uninstall pip &amp;&amp; sudo apt install python3-pip --reinstall</span><br><span class=\"line\"></span><br><span class=\"line\">库安装</span><br><span class=\"line\">    1.离线安装</span><br><span class=\"line\">        python install setup.py</span><br><span class=\"line\">    2.pip安装</span><br><span class=\"line\">        pip3 install requests=[版本号] -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">    3.idea安装</span><br><span class=\"line\">        Settings -&gt; Project: script -&gt; Project Interpreter</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置镜像源\"><a href=\"#设置镜像源\" class=\"headerlink\" title=\"设置镜像源\"></a>设置镜像源</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu：</span><br><span class=\"line\">    vim ~/.pip/pip.conf</span><br><span class=\"line\">        [global]</span><br><span class=\"line\">        index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\"></span><br><span class=\"line\">windows：</span><br><span class=\"line\">    C:\\Users\\xxx\\pip\\pip.ini</span><br><span class=\"line\">        [global]</span><br><span class=\"line\">        index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Pycharm设置\"><a href=\"#Pycharm设置\" class=\"headerlink\" title=\"Pycharm设置\"></a>Pycharm设置</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Settings -&gt; Editor -&gt; File Encodings -&gt; UTF-8</span><br><span class=\"line\">Settings -&gt; Editor -&gt; Code Style -&gt; Tab size 改成 4</span><br><span class=\"line\">Settings -&gt; Project: script -&gt; Project Interpreter -&gt; 设置python版本</span><br><span class=\"line\">Settings -&gt; Project: script -&gt; Project Interpreter -&gt; 点+号，设置镜像源（https://pypi.tuna.tsinghua.edu.cn/simple）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生成包依赖\"><a href=\"#生成包依赖\" class=\"headerlink\" title=\"生成包依赖\"></a>生成包依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装</span><br><span class=\"line\">    pip3 install pipreqs</span><br><span class=\"line\">生成</span><br><span class=\"line\">    pipreqs ./ --encoding=utf8</span><br><span class=\"line\">安装依赖</span><br><span class=\"line\">    pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">linux</span><br><span class=\"line\">    mkdir myproject</span><br><span class=\"line\">    cd myproject</span><br><span class=\"line\">    python3 -m venv venv</span><br><span class=\"line\">    . venv/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">windows</span><br><span class=\"line\">    mkdir myproject</span><br><span class=\"line\">    cd myproject</span><br><span class=\"line\">    py -3 -m venv venv</span><br><span class=\"line\">    venv\\Scripts\\activate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模块导入和使用\"><a href=\"#模块导入和使用\" class=\"headerlink\" title=\"模块导入和使用\"></a>模块导入和使用</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 在同一目录下:</span><br><span class=\"line\">    # 导入模块</span><br><span class=\"line\">        import support</span><br><span class=\"line\">    # 使用</span><br><span class=\"line\">        support.print_func(&#x27;Runoob&#x27;)</span><br><span class=\"line\">        print(support.count)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 导入模块内具体内容</span><br><span class=\"line\">        from support import print_func</span><br><span class=\"line\">        from support import count</span><br><span class=\"line\">    # 使用</span><br><span class=\"line\">        print_func(&#x27;Runoob&#x27;)</span><br><span class=\"line\">        print(count)</span><br><span class=\"line\"></span><br><span class=\"line\">2. 子目录</span><br><span class=\"line\">    import os</span><br><span class=\"line\">    import sys</span><br><span class=\"line\">    sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), &#x27;sub_dir&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">3. 父目录</span><br><span class=\"line\">    import os</span><br><span class=\"line\">    import sys</span><br><span class=\"line\">    sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"默认解释器、编码\"><a href=\"#默认解释器、编码\" class=\"headerlink\" title=\"默认解释器、编码\"></a>默认解释器、编码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/python3</span><br><span class=\"line\"># encoding: utf-8</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Python引号\"><a href=\"#Python引号\" class=\"headerlink\" title=\"Python引号\"></a>Python引号</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 可以使用引号( &#x27; )、双引号( &quot; )、三引号( &#x27;&#x27;&#x27; 或 &quot;&quot;&quot; ) 来表示字符串，其中三引号可以由多行组成。</span><br><span class=\"line\">word = &#x27;word&#x27;</span><br><span class=\"line\">sentence = &quot;这是一个句子。&quot;</span><br><span class=\"line\">paragraph = &quot;&quot;&quot;这是一个段落。</span><br><span class=\"line\">包含了多个语句&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"is-与-x3D-x3D-区别\"><a href=\"#is-与-x3D-x3D-区别\" class=\"headerlink\" title=\"is 与 &#x3D;&#x3D; 区别\"></a>is 与 &#x3D;&#x3D; 区别</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">is 用于判断两个变量引用对象是否为同一个(同一块内存空间)， == 用于判断引用变量的值是否相等。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">捕获异常：</span><br><span class=\"line\">try:</span><br><span class=\"line\">    doxxx</span><br><span class=\"line\">except Exception as e:</span><br><span class=\"line\">    print(e)</span><br><span class=\"line\">    print(traceback.format_exc())</span><br><span class=\"line\"></span><br><span class=\"line\">抛出异常：</span><br><span class=\"line\">raise Exception(&#x27;haha&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">引用全局变量，不需要global声明，修改全局变量，需要使用global声明</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析参数\"><a href=\"#解析参数\" class=\"headerlink\" title=\"解析参数\"></a>解析参数</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">opts,args = getopt.getopt(sys.argv[1:],&#x27;hf:v&#x27;,[&#x27;help&#x27;,&#x27;filename=&#x27;,&#x27;version&#x27;])</span><br><span class=\"line\">for opt_name,opt_value in opts:</span><br><span class=\"line\">    if opt_name in (&#x27;-h&#x27;,&#x27;--help&#x27;):</span><br><span class=\"line\">        print(&quot;[*] Help info&quot;)</span><br><span class=\"line\">        sys.exit()</span><br><span class=\"line\">    if opt_name in (&#x27;-v&#x27;,&#x27;--version&#x27;):</span><br><span class=\"line\">        print(&quot;[*] Version is 0.01 &quot;)</span><br><span class=\"line\">        sys.exit()</span><br><span class=\"line\">    if opt_name in (&#x27;-f&#x27;,&#x27;--filename&#x27;):</span><br><span class=\"line\">        fileName = opt_value</span><br><span class=\"line\">        print(&quot;[*] Filename is &quot;,fileName)</span><br><span class=\"line\">        # do something</span><br><span class=\"line\">        sys.exit()</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"wheel包\"><a href=\"#wheel包\" class=\"headerlink\" title=\"wheel包\"></a>wheel包</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装</span><br><span class=\"line\">    pip3 install wheel</span><br><span class=\"line\">    pip3 install --upgrade setuptools</span><br><span class=\"line\"></span><br><span class=\"line\">setup.py</span><br><span class=\"line\">    from setuptools import setup</span><br><span class=\"line\"></span><br><span class=\"line\">    setup(</span><br><span class=\"line\">        name=&#x27;webscm&#x27;,</span><br><span class=\"line\">        version=&#x27;1.0&#x27;,</span><br><span class=\"line\">        py_modules=&#x27;webscm&#x27;</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">生成包</span><br><span class=\"line\">    python3 setup.py bdist_wheel</span><br><span class=\"line\"></span><br><span class=\"line\">导入包</span><br><span class=\"line\">    pip3 install webscm-1.0-py3-none-any.whl</span><br><span class=\"line\"></span><br><span class=\"line\">部署</span><br><span class=\"line\">    pip3 install waitress</span><br><span class=\"line\">    waitress-serve --call &#x27;flaskr:create_app&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"url编码和解码\"><a href=\"#url编码和解码\" class=\"headerlink\" title=\"url编码和解码\"></a>url编码和解码</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from urllib.parse import quote</span><br><span class=\"line\"></span><br><span class=\"line\"># 将字符串‘程序设计’进行编码</span><br><span class=\"line\">text = quote(&quot;程序设计&quot;, &#x27;utf-8&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 对字符串‘%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1’进行解密</span><br><span class=\"line\">text = unquote(&quot;%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1&quot;, &#x27;utf-8&#x27;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"列表推导\"><a href=\"#列表推导\" class=\"headerlink\" title=\"列表推导\"></a>列表推导</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list comprehensions</span><br><span class=\"line\">tmp_list = [var[&#x27;file_name&#x27;] for var in LONG_SAVE_FILE_LIST]</span><br></pre></td></tr></table></figure>"},{"title":"git-lfs","date":"2022-06-29T16:00:00.000Z","_content":"\ngit-lfs\n\n<!--more-->\n\n## Github 对文件大小的限制\n如果你在命令行用 ``git push > 50 MB`` 的文件，你会收到一个 ``warning``，但是你仍然可以正常 ``push``，但是 ``> 100 MB`` 的时候就无法 push 了\n\n如果你在浏览器要上传文件的话，限制更为严重，不能超过 25 MB\n\n另外有几点值得注意：\n\nGithub 建议仓库的大小理想情况下不要超过 1 GB，最好不要超过 5 GB\nGithub 从来不建议把仓库当成一种备份工具\n\n## 为什么需要 gif-lfs\n前面提到的 Github 对文件大小的限制是一点\n\n另外因为每次我们在使用 ``git commit`` 的时候，其实是给当前的仓库创建了一次快照，本质是全仓库的克隆，如果大文件太多是很不好的，你的 Git 仓库会越来越大\n\n## 什么情况下不需要用 gif-lfs\n文件没有超过限制当然就没有必要用了\n如果是要分发二进制文件（比如 *.exe）等，此时直接用 Github 提供的 release 功能就好了\n\n## git-lfs 原理\n使用 ``gif-lfs`` 之后，在仓库中存储的其实是对大文件的引用，可以理解为指针。而真正的大文件托管在 Git Lfs 的服务器上\n\nGithub 给不同用户的 ``git-lfs`` 提供的额度不一样，免费用户和 Pro 用户都是 2 GB\n\n## 引用文件长什么样子\n比如官方文档里面提到的例子：\n```\nversion https://git-lfs.github.com/spec/v1\noid sha256:4cac19622fc3ada9c0fdeadb33f88f367b541f38b89102a3f1261ac81fd5bcb5\nsize 84977953\n```\n其中 ``version`` 是你正在使用的 ``git-lfs`` 的版本，``oid`` 是标志符（id），``size`` 是文件的真实大小\n\n## 开始使用 git-lfs\n### 如何安装 git-lfs (Mac 环境下)\n```commandline\n> brew install git-lfs\n> git lfa install                 # 如果输出为 Git LFS initialized. 就是正常安装好了\n```\n\n### Case 1. 从 0 开始配置使用 git-lfs\n我们要指定 ``git-lfs`` 会把哪些文件当作大文件，指定方式比如有：\n\n指定文件后缀名——``git lfs track \"*.filetype\"``\n\n指定某个目录下的所有文件——``git lfs track \"directory/*\"``\n\n具体指定某个文件——``git lfs track \"path/to/file\"``\n\n```\n> mkdir <repo>\n> cd <repo>\n> git init\n> git lfs track \"*.filetype\"         # 比如 *.zip\n \n# 其实 git lfs track 会修改 .gitattributes 文件的内容，可以做一个快速的验证\n# > cat .gitattributes\n# *.zip filter=lfs diff=lfs merge=lfs -text\n \n# 下面假定在 Github 有一个远程仓库供我们使用\n# 往仓库里加你先前指定的文件类型的大文件\n> git add .                                         \n> git commit -m \"\"\n> git branch -M main\n> git remote add origin git@github.com:<username>/<remote_repo_name>.git     # 这里替换为自己的用户名和远程仓库名\n> git push -u origin main\n# 此时命令行会显示\n# > uploading LFS objects\n# 如果没有采用 git-lfs，则显示如下内容\n# > Enumerating objects: 3, done.\n#   Counting objects: 100% (3/3), done.\n#   Delta compression using up to 8 threads\n#   Compressing objects: 100% (2/2), done.\n```\n\n### Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件\n\n此时只是简单的使用 ``git lfs track \"\"`` 是没用的，因为你之前的 commit 已经生成了快照，你无法追踪历史中的这些大文件。\n\n``git-lfs`` **只会在你开始设置的此刻之后追踪新生成的指定文件**\n\n可以快速做个验证，假设我们还在这个仓库里\n\n```\n> ls > test1.txt\n> ls -l > test2.txt\n> git add test1.txt test2.txt\n> git commit -m \"Add txt files\"\n \n# 假设我们现在要把 txt 文件当成是大文件，我们可能会想这么做\n> git lfs track \"*.txt\"\n> git add .gitattributes\n> git commit -m \"Track *.txt files\"\n> git lfs ls-files                      # 此时你会发现 git-lfs 并没有追踪 txt 文件\n \n> echo \"hello\" > test3.txt\n> git add test3.txt\n> git commit -m \"Add test3.txt\"\n> git lfs ls-files                      # 此时你可以在输出中看到 test3.txt\n```\n\n正确的方法是使用 ``git lfs migrate``，这里只列举了简单的用法，更复杂的可以看看手册。比如可以用 ``--include-ref=`` 指定分支，多个分支的时候最好一个分支一个分支地迁移，最后是 ``git push --all -f``\n\n```\n> git lfs migrate import --include=\"*.txt\"  # 在当前分支上执行\n> git lfs ls-files                          # 此时可以发现 text1.txt 和 text2.txt 也被追踪到了\n> git push --force                          # 让远程仓库也改过来\n```\n\n### Case 3. 不再跟踪某些文件\n```\n> git lfs untrack \"*.filetype\"\n> git rm --cached \"*.txt\"\n```\n\n### 其他常用命令\n查看当前 ``git-lfs`` 正在追踪的文件类型——``git lfs track``\n查看当前 ``git-lfs`` 正在追踪哪些文件——``git lfs ls-file``\n\n## 参考\nhttps://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\n\nhttp://www.zyiz.net/tech/detail-259950.html","source":"_posts/2022-6-30git-lfs.md","raw":"---\ntitle: git-lfs\ndate: 2022-6-30\ntags: [git, lfs]\n---\n\ngit-lfs\n\n<!--more-->\n\n## Github 对文件大小的限制\n如果你在命令行用 ``git push > 50 MB`` 的文件，你会收到一个 ``warning``，但是你仍然可以正常 ``push``，但是 ``> 100 MB`` 的时候就无法 push 了\n\n如果你在浏览器要上传文件的话，限制更为严重，不能超过 25 MB\n\n另外有几点值得注意：\n\nGithub 建议仓库的大小理想情况下不要超过 1 GB，最好不要超过 5 GB\nGithub 从来不建议把仓库当成一种备份工具\n\n## 为什么需要 gif-lfs\n前面提到的 Github 对文件大小的限制是一点\n\n另外因为每次我们在使用 ``git commit`` 的时候，其实是给当前的仓库创建了一次快照，本质是全仓库的克隆，如果大文件太多是很不好的，你的 Git 仓库会越来越大\n\n## 什么情况下不需要用 gif-lfs\n文件没有超过限制当然就没有必要用了\n如果是要分发二进制文件（比如 *.exe）等，此时直接用 Github 提供的 release 功能就好了\n\n## git-lfs 原理\n使用 ``gif-lfs`` 之后，在仓库中存储的其实是对大文件的引用，可以理解为指针。而真正的大文件托管在 Git Lfs 的服务器上\n\nGithub 给不同用户的 ``git-lfs`` 提供的额度不一样，免费用户和 Pro 用户都是 2 GB\n\n## 引用文件长什么样子\n比如官方文档里面提到的例子：\n```\nversion https://git-lfs.github.com/spec/v1\noid sha256:4cac19622fc3ada9c0fdeadb33f88f367b541f38b89102a3f1261ac81fd5bcb5\nsize 84977953\n```\n其中 ``version`` 是你正在使用的 ``git-lfs`` 的版本，``oid`` 是标志符（id），``size`` 是文件的真实大小\n\n## 开始使用 git-lfs\n### 如何安装 git-lfs (Mac 环境下)\n```commandline\n> brew install git-lfs\n> git lfa install                 # 如果输出为 Git LFS initialized. 就是正常安装好了\n```\n\n### Case 1. 从 0 开始配置使用 git-lfs\n我们要指定 ``git-lfs`` 会把哪些文件当作大文件，指定方式比如有：\n\n指定文件后缀名——``git lfs track \"*.filetype\"``\n\n指定某个目录下的所有文件——``git lfs track \"directory/*\"``\n\n具体指定某个文件——``git lfs track \"path/to/file\"``\n\n```\n> mkdir <repo>\n> cd <repo>\n> git init\n> git lfs track \"*.filetype\"         # 比如 *.zip\n \n# 其实 git lfs track 会修改 .gitattributes 文件的内容，可以做一个快速的验证\n# > cat .gitattributes\n# *.zip filter=lfs diff=lfs merge=lfs -text\n \n# 下面假定在 Github 有一个远程仓库供我们使用\n# 往仓库里加你先前指定的文件类型的大文件\n> git add .                                         \n> git commit -m \"\"\n> git branch -M main\n> git remote add origin git@github.com:<username>/<remote_repo_name>.git     # 这里替换为自己的用户名和远程仓库名\n> git push -u origin main\n# 此时命令行会显示\n# > uploading LFS objects\n# 如果没有采用 git-lfs，则显示如下内容\n# > Enumerating objects: 3, done.\n#   Counting objects: 100% (3/3), done.\n#   Delta compression using up to 8 threads\n#   Compressing objects: 100% (2/2), done.\n```\n\n### Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件\n\n此时只是简单的使用 ``git lfs track \"\"`` 是没用的，因为你之前的 commit 已经生成了快照，你无法追踪历史中的这些大文件。\n\n``git-lfs`` **只会在你开始设置的此刻之后追踪新生成的指定文件**\n\n可以快速做个验证，假设我们还在这个仓库里\n\n```\n> ls > test1.txt\n> ls -l > test2.txt\n> git add test1.txt test2.txt\n> git commit -m \"Add txt files\"\n \n# 假设我们现在要把 txt 文件当成是大文件，我们可能会想这么做\n> git lfs track \"*.txt\"\n> git add .gitattributes\n> git commit -m \"Track *.txt files\"\n> git lfs ls-files                      # 此时你会发现 git-lfs 并没有追踪 txt 文件\n \n> echo \"hello\" > test3.txt\n> git add test3.txt\n> git commit -m \"Add test3.txt\"\n> git lfs ls-files                      # 此时你可以在输出中看到 test3.txt\n```\n\n正确的方法是使用 ``git lfs migrate``，这里只列举了简单的用法，更复杂的可以看看手册。比如可以用 ``--include-ref=`` 指定分支，多个分支的时候最好一个分支一个分支地迁移，最后是 ``git push --all -f``\n\n```\n> git lfs migrate import --include=\"*.txt\"  # 在当前分支上执行\n> git lfs ls-files                          # 此时可以发现 text1.txt 和 text2.txt 也被追踪到了\n> git push --force                          # 让远程仓库也改过来\n```\n\n### Case 3. 不再跟踪某些文件\n```\n> git lfs untrack \"*.filetype\"\n> git rm --cached \"*.txt\"\n```\n\n### 其他常用命令\n查看当前 ``git-lfs`` 正在追踪的文件类型——``git lfs track``\n查看当前 ``git-lfs`` 正在追踪哪些文件——``git lfs ls-file``\n\n## 参考\nhttps://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\n\nhttp://www.zyiz.net/tech/detail-259950.html","slug":"2022-6-30git-lfs","published":1,"updated":"2022-06-30T09:32:02.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooez000jnkvv42skcp6a","content":"<p>git-lfs</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Github-对文件大小的限制\"><a href=\"#Github-对文件大小的限制\" class=\"headerlink\" title=\"Github 对文件大小的限制\"></a>Github 对文件大小的限制</h2><p>如果你在命令行用 <code>git push &gt; 50 MB</code> 的文件，你会收到一个 <code>warning</code>，但是你仍然可以正常 <code>push</code>，但是 <code>&gt; 100 MB</code> 的时候就无法 push 了</p>\n<p>如果你在浏览器要上传文件的话，限制更为严重，不能超过 25 MB</p>\n<p>另外有几点值得注意：</p>\n<p>Github 建议仓库的大小理想情况下不要超过 1 GB，最好不要超过 5 GB<br>Github 从来不建议把仓库当成一种备份工具</p>\n<h2 id=\"为什么需要-gif-lfs\"><a href=\"#为什么需要-gif-lfs\" class=\"headerlink\" title=\"为什么需要 gif-lfs\"></a>为什么需要 gif-lfs</h2><p>前面提到的 Github 对文件大小的限制是一点</p>\n<p>另外因为每次我们在使用 <code>git commit</code> 的时候，其实是给当前的仓库创建了一次快照，本质是全仓库的克隆，如果大文件太多是很不好的，你的 Git 仓库会越来越大</p>\n<h2 id=\"什么情况下不需要用-gif-lfs\"><a href=\"#什么情况下不需要用-gif-lfs\" class=\"headerlink\" title=\"什么情况下不需要用 gif-lfs\"></a>什么情况下不需要用 gif-lfs</h2><p>文件没有超过限制当然就没有必要用了<br>如果是要分发二进制文件（比如 *.exe）等，此时直接用 Github 提供的 release 功能就好了</p>\n<h2 id=\"git-lfs-原理\"><a href=\"#git-lfs-原理\" class=\"headerlink\" title=\"git-lfs 原理\"></a>git-lfs 原理</h2><p>使用 <code>gif-lfs</code> 之后，在仓库中存储的其实是对大文件的引用，可以理解为指针。而真正的大文件托管在 Git Lfs 的服务器上</p>\n<p>Github 给不同用户的 <code>git-lfs</code> 提供的额度不一样，免费用户和 Pro 用户都是 2 GB</p>\n<h2 id=\"引用文件长什么样子\"><a href=\"#引用文件长什么样子\" class=\"headerlink\" title=\"引用文件长什么样子\"></a>引用文件长什么样子</h2><p>比如官方文档里面提到的例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version https://git-lfs.github.com/spec/v1</span><br><span class=\"line\">oid sha256:4cac19622fc3ada9c0fdeadb33f88f367b541f38b89102a3f1261ac81fd5bcb5</span><br><span class=\"line\">size 84977953</span><br></pre></td></tr></table></figure>\n<p>其中 <code>version</code> 是你正在使用的 <code>git-lfs</code> 的版本，<code>oid</code> 是标志符（id），<code>size</code> 是文件的真实大小</p>\n<h2 id=\"开始使用-git-lfs\"><a href=\"#开始使用-git-lfs\" class=\"headerlink\" title=\"开始使用 git-lfs\"></a>开始使用 git-lfs</h2><h3 id=\"如何安装-git-lfs-Mac-环境下\"><a href=\"#如何安装-git-lfs-Mac-环境下\" class=\"headerlink\" title=\"如何安装 git-lfs (Mac 环境下)\"></a>如何安装 git-lfs (Mac 环境下)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; brew install git-lfs</span><br><span class=\"line\">&gt; git lfa install                 # 如果输出为 Git LFS initialized. 就是正常安装好了</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-1-从-0-开始配置使用-git-lfs\"><a href=\"#Case-1-从-0-开始配置使用-git-lfs\" class=\"headerlink\" title=\"Case 1. 从 0 开始配置使用 git-lfs\"></a>Case 1. 从 0 开始配置使用 git-lfs</h3><p>我们要指定 <code>git-lfs</code> 会把哪些文件当作大文件，指定方式比如有：</p>\n<p>指定文件后缀名——<code>git lfs track &quot;*.filetype&quot;</code></p>\n<p>指定某个目录下的所有文件——<code>git lfs track &quot;directory/*&quot;</code></p>\n<p>具体指定某个文件——<code>git lfs track &quot;path/to/file&quot;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; mkdir &lt;repo&gt;</span><br><span class=\"line\">&gt; cd &lt;repo&gt;</span><br><span class=\"line\">&gt; git init</span><br><span class=\"line\">&gt; git lfs track &quot;*.filetype&quot;         # 比如 *.zip</span><br><span class=\"line\"> </span><br><span class=\"line\"># 其实 git lfs track 会修改 .gitattributes 文件的内容，可以做一个快速的验证</span><br><span class=\"line\"># &gt; cat .gitattributes</span><br><span class=\"line\"># *.zip filter=lfs diff=lfs merge=lfs -text</span><br><span class=\"line\"> </span><br><span class=\"line\"># 下面假定在 Github 有一个远程仓库供我们使用</span><br><span class=\"line\"># 往仓库里加你先前指定的文件类型的大文件</span><br><span class=\"line\">&gt; git add .                                         </span><br><span class=\"line\">&gt; git commit -m &quot;&quot;</span><br><span class=\"line\">&gt; git branch -M main</span><br><span class=\"line\">&gt; git remote add origin git@github.com:&lt;username&gt;/&lt;remote_repo_name&gt;.git     # 这里替换为自己的用户名和远程仓库名</span><br><span class=\"line\">&gt; git push -u origin main</span><br><span class=\"line\"># 此时命令行会显示</span><br><span class=\"line\"># &gt; uploading LFS objects</span><br><span class=\"line\"># 如果没有采用 git-lfs，则显示如下内容</span><br><span class=\"line\"># &gt; Enumerating objects: 3, done.</span><br><span class=\"line\">#   Counting objects: 100% (3/3), done.</span><br><span class=\"line\">#   Delta compression using up to 8 threads</span><br><span class=\"line\">#   Compressing objects: 100% (2/2), done.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-2-要在已有的仓库上用-git-lfs-追踪某些文件\"><a href=\"#Case-2-要在已有的仓库上用-git-lfs-追踪某些文件\" class=\"headerlink\" title=\"Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件\"></a>Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件</h3><p>此时只是简单的使用 <code>git lfs track &quot;&quot;</code> 是没用的，因为你之前的 commit 已经生成了快照，你无法追踪历史中的这些大文件。</p>\n<p><code>git-lfs</code> <strong>只会在你开始设置的此刻之后追踪新生成的指定文件</strong></p>\n<p>可以快速做个验证，假设我们还在这个仓库里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ls &gt; test1.txt</span><br><span class=\"line\">&gt; ls -l &gt; test2.txt</span><br><span class=\"line\">&gt; git add test1.txt test2.txt</span><br><span class=\"line\">&gt; git commit -m &quot;Add txt files&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 假设我们现在要把 txt 文件当成是大文件，我们可能会想这么做</span><br><span class=\"line\">&gt; git lfs track &quot;*.txt&quot;</span><br><span class=\"line\">&gt; git add .gitattributes</span><br><span class=\"line\">&gt; git commit -m &quot;Track *.txt files&quot;</span><br><span class=\"line\">&gt; git lfs ls-files                      # 此时你会发现 git-lfs 并没有追踪 txt 文件</span><br><span class=\"line\"> </span><br><span class=\"line\">&gt; echo &quot;hello&quot; &gt; test3.txt</span><br><span class=\"line\">&gt; git add test3.txt</span><br><span class=\"line\">&gt; git commit -m &quot;Add test3.txt&quot;</span><br><span class=\"line\">&gt; git lfs ls-files                      # 此时你可以在输出中看到 test3.txt</span><br></pre></td></tr></table></figure>\n\n<p>正确的方法是使用 <code>git lfs migrate</code>，这里只列举了简单的用法，更复杂的可以看看手册。比如可以用 <code>--include-ref=</code> 指定分支，多个分支的时候最好一个分支一个分支地迁移，最后是 <code>git push --all -f</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git lfs migrate import --include=&quot;*.txt&quot;  # 在当前分支上执行</span><br><span class=\"line\">&gt; git lfs ls-files                          # 此时可以发现 text1.txt 和 text2.txt 也被追踪到了</span><br><span class=\"line\">&gt; git push --force                          # 让远程仓库也改过来</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-3-不再跟踪某些文件\"><a href=\"#Case-3-不再跟踪某些文件\" class=\"headerlink\" title=\"Case 3. 不再跟踪某些文件\"></a>Case 3. 不再跟踪某些文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git lfs untrack &quot;*.filetype&quot;</span><br><span class=\"line\">&gt; git rm --cached &quot;*.txt&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h3><p>查看当前 <code>git-lfs</code> 正在追踪的文件类型——<code>git lfs track</code><br>查看当前 <code>git-lfs</code> 正在追踪哪些文件——<code>git lfs ls-file</code></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\">https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github</a></p>\n<p><a href=\"http://www.zyiz.net/tech/detail-259950.html\">http://www.zyiz.net/tech/detail-259950.html</a></p>\n","site":{"data":{}},"excerpt":"<p>git-lfs</p>","more":"<h2 id=\"Github-对文件大小的限制\"><a href=\"#Github-对文件大小的限制\" class=\"headerlink\" title=\"Github 对文件大小的限制\"></a>Github 对文件大小的限制</h2><p>如果你在命令行用 <code>git push &gt; 50 MB</code> 的文件，你会收到一个 <code>warning</code>，但是你仍然可以正常 <code>push</code>，但是 <code>&gt; 100 MB</code> 的时候就无法 push 了</p>\n<p>如果你在浏览器要上传文件的话，限制更为严重，不能超过 25 MB</p>\n<p>另外有几点值得注意：</p>\n<p>Github 建议仓库的大小理想情况下不要超过 1 GB，最好不要超过 5 GB<br>Github 从来不建议把仓库当成一种备份工具</p>\n<h2 id=\"为什么需要-gif-lfs\"><a href=\"#为什么需要-gif-lfs\" class=\"headerlink\" title=\"为什么需要 gif-lfs\"></a>为什么需要 gif-lfs</h2><p>前面提到的 Github 对文件大小的限制是一点</p>\n<p>另外因为每次我们在使用 <code>git commit</code> 的时候，其实是给当前的仓库创建了一次快照，本质是全仓库的克隆，如果大文件太多是很不好的，你的 Git 仓库会越来越大</p>\n<h2 id=\"什么情况下不需要用-gif-lfs\"><a href=\"#什么情况下不需要用-gif-lfs\" class=\"headerlink\" title=\"什么情况下不需要用 gif-lfs\"></a>什么情况下不需要用 gif-lfs</h2><p>文件没有超过限制当然就没有必要用了<br>如果是要分发二进制文件（比如 *.exe）等，此时直接用 Github 提供的 release 功能就好了</p>\n<h2 id=\"git-lfs-原理\"><a href=\"#git-lfs-原理\" class=\"headerlink\" title=\"git-lfs 原理\"></a>git-lfs 原理</h2><p>使用 <code>gif-lfs</code> 之后，在仓库中存储的其实是对大文件的引用，可以理解为指针。而真正的大文件托管在 Git Lfs 的服务器上</p>\n<p>Github 给不同用户的 <code>git-lfs</code> 提供的额度不一样，免费用户和 Pro 用户都是 2 GB</p>\n<h2 id=\"引用文件长什么样子\"><a href=\"#引用文件长什么样子\" class=\"headerlink\" title=\"引用文件长什么样子\"></a>引用文件长什么样子</h2><p>比如官方文档里面提到的例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version https://git-lfs.github.com/spec/v1</span><br><span class=\"line\">oid sha256:4cac19622fc3ada9c0fdeadb33f88f367b541f38b89102a3f1261ac81fd5bcb5</span><br><span class=\"line\">size 84977953</span><br></pre></td></tr></table></figure>\n<p>其中 <code>version</code> 是你正在使用的 <code>git-lfs</code> 的版本，<code>oid</code> 是标志符（id），<code>size</code> 是文件的真实大小</p>\n<h2 id=\"开始使用-git-lfs\"><a href=\"#开始使用-git-lfs\" class=\"headerlink\" title=\"开始使用 git-lfs\"></a>开始使用 git-lfs</h2><h3 id=\"如何安装-git-lfs-Mac-环境下\"><a href=\"#如何安装-git-lfs-Mac-环境下\" class=\"headerlink\" title=\"如何安装 git-lfs (Mac 环境下)\"></a>如何安装 git-lfs (Mac 环境下)</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; brew install git-lfs</span><br><span class=\"line\">&gt; git lfa install                 # 如果输出为 Git LFS initialized. 就是正常安装好了</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-1-从-0-开始配置使用-git-lfs\"><a href=\"#Case-1-从-0-开始配置使用-git-lfs\" class=\"headerlink\" title=\"Case 1. 从 0 开始配置使用 git-lfs\"></a>Case 1. 从 0 开始配置使用 git-lfs</h3><p>我们要指定 <code>git-lfs</code> 会把哪些文件当作大文件，指定方式比如有：</p>\n<p>指定文件后缀名——<code>git lfs track &quot;*.filetype&quot;</code></p>\n<p>指定某个目录下的所有文件——<code>git lfs track &quot;directory/*&quot;</code></p>\n<p>具体指定某个文件——<code>git lfs track &quot;path/to/file&quot;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; mkdir &lt;repo&gt;</span><br><span class=\"line\">&gt; cd &lt;repo&gt;</span><br><span class=\"line\">&gt; git init</span><br><span class=\"line\">&gt; git lfs track &quot;*.filetype&quot;         # 比如 *.zip</span><br><span class=\"line\"> </span><br><span class=\"line\"># 其实 git lfs track 会修改 .gitattributes 文件的内容，可以做一个快速的验证</span><br><span class=\"line\"># &gt; cat .gitattributes</span><br><span class=\"line\"># *.zip filter=lfs diff=lfs merge=lfs -text</span><br><span class=\"line\"> </span><br><span class=\"line\"># 下面假定在 Github 有一个远程仓库供我们使用</span><br><span class=\"line\"># 往仓库里加你先前指定的文件类型的大文件</span><br><span class=\"line\">&gt; git add .                                         </span><br><span class=\"line\">&gt; git commit -m &quot;&quot;</span><br><span class=\"line\">&gt; git branch -M main</span><br><span class=\"line\">&gt; git remote add origin git@github.com:&lt;username&gt;/&lt;remote_repo_name&gt;.git     # 这里替换为自己的用户名和远程仓库名</span><br><span class=\"line\">&gt; git push -u origin main</span><br><span class=\"line\"># 此时命令行会显示</span><br><span class=\"line\"># &gt; uploading LFS objects</span><br><span class=\"line\"># 如果没有采用 git-lfs，则显示如下内容</span><br><span class=\"line\"># &gt; Enumerating objects: 3, done.</span><br><span class=\"line\">#   Counting objects: 100% (3/3), done.</span><br><span class=\"line\">#   Delta compression using up to 8 threads</span><br><span class=\"line\">#   Compressing objects: 100% (2/2), done.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-2-要在已有的仓库上用-git-lfs-追踪某些文件\"><a href=\"#Case-2-要在已有的仓库上用-git-lfs-追踪某些文件\" class=\"headerlink\" title=\"Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件\"></a>Case 2. 要在已有的仓库上用 git-lfs 追踪某些文件</h3><p>此时只是简单的使用 <code>git lfs track &quot;&quot;</code> 是没用的，因为你之前的 commit 已经生成了快照，你无法追踪历史中的这些大文件。</p>\n<p><code>git-lfs</code> <strong>只会在你开始设置的此刻之后追踪新生成的指定文件</strong></p>\n<p>可以快速做个验证，假设我们还在这个仓库里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ls &gt; test1.txt</span><br><span class=\"line\">&gt; ls -l &gt; test2.txt</span><br><span class=\"line\">&gt; git add test1.txt test2.txt</span><br><span class=\"line\">&gt; git commit -m &quot;Add txt files&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 假设我们现在要把 txt 文件当成是大文件，我们可能会想这么做</span><br><span class=\"line\">&gt; git lfs track &quot;*.txt&quot;</span><br><span class=\"line\">&gt; git add .gitattributes</span><br><span class=\"line\">&gt; git commit -m &quot;Track *.txt files&quot;</span><br><span class=\"line\">&gt; git lfs ls-files                      # 此时你会发现 git-lfs 并没有追踪 txt 文件</span><br><span class=\"line\"> </span><br><span class=\"line\">&gt; echo &quot;hello&quot; &gt; test3.txt</span><br><span class=\"line\">&gt; git add test3.txt</span><br><span class=\"line\">&gt; git commit -m &quot;Add test3.txt&quot;</span><br><span class=\"line\">&gt; git lfs ls-files                      # 此时你可以在输出中看到 test3.txt</span><br></pre></td></tr></table></figure>\n\n<p>正确的方法是使用 <code>git lfs migrate</code>，这里只列举了简单的用法，更复杂的可以看看手册。比如可以用 <code>--include-ref=</code> 指定分支，多个分支的时候最好一个分支一个分支地迁移，最后是 <code>git push --all -f</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git lfs migrate import --include=&quot;*.txt&quot;  # 在当前分支上执行</span><br><span class=\"line\">&gt; git lfs ls-files                          # 此时可以发现 text1.txt 和 text2.txt 也被追踪到了</span><br><span class=\"line\">&gt; git push --force                          # 让远程仓库也改过来</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Case-3-不再跟踪某些文件\"><a href=\"#Case-3-不再跟踪某些文件\" class=\"headerlink\" title=\"Case 3. 不再跟踪某些文件\"></a>Case 3. 不再跟踪某些文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git lfs untrack &quot;*.filetype&quot;</span><br><span class=\"line\">&gt; git rm --cached &quot;*.txt&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h3><p>查看当前 <code>git-lfs</code> 正在追踪的文件类型——<code>git lfs track</code><br>查看当前 <code>git-lfs</code> 正在追踪哪些文件——<code>git lfs ls-file</code></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github\">https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github</a></p>\n<p><a href=\"http://www.zyiz.net/tech/detail-259950.html\">http://www.zyiz.net/tech/detail-259950.html</a></p>"},{"title":"flask基础","date":"2022-06-29T16:00:00.000Z","_content":"\nflask基础\n\n<!--more-->\n\n## 文档：\n```\nw3c教程：https://www.w3cschool.cn/flask/flask_static_files.html\nJinja2语法：https://zhuanlan.zhihu.com/p/462352820\n\n首页：https://dormousehole.readthedocs.io/en/latest/\n文档：https://dormousehole.readthedocs.io/en/latest/installation.html\n快速上手：https://dormousehole.readthedocs.io/en/latest/quickstart.html\n教程：https://dormousehole.readthedocs.io/en/latest/tutorial/index.html\n方案：https://dormousehole.readthedocs.io/en/latest/patterns/index.html\nAPI：https://dormousehole.readthedocs.io/en/latest/api.html\n部署方式：https://dormousehole.readthedocs.io/en/latest/deploying/index.html\n部署：https://dormousehole.readthedocs.io/en/latest/tutorial/deploy.html#\n```\n\n## Python 版本\n```\n我们推荐使用最新版本的 Python 。 Flask 支持 Python 3.6 以上版本。\n如果要支持 async ，那么因为会用到 contextvars.ContextVar ，所以需要 Python 3.7 以上版本。\n```\n\n## 依赖\n```\n当安装 Flask 时，以下配套软件会被自动安装。\nWerkzeug 用于实现 WSGI ，应用和服务之间的标准 Python 接口。\nJinja 用于渲染页面的模板语言。\nMarkupSafe 与 Jinja 共用，在渲染页面时用于避免不可信的输入，防止注入攻击。\nItsDangerous 保证数据完整性的安全标志数据，用于保护 Flask 的 session cookie.\nClick 是一个命令行应用的框架。用于提供 flask 命令，并允许添加自定义 管理命令。\n```\n\n## 可选依赖\n```\n以下配套软件不会被自动安装。如果安装了，那么 Flask 会检测到这些软件。\nBlinker 为 信号 提供支持。\npython-dotenv 当运行 flask 命令时为 通过 dotenv 设置环境变量 提供支持。\nWatchdog 为开发服务器提供快速高效的重载。\n```\n\n## 虚拟环境\n```\n建议在开发环境和生产环境下都使用虚拟环境来管理项目的依赖。\n为什么要使用虚拟环境？随着你的 Python 项目越来越多，你会发现不同的项目 会需要不同的版本的 Python 库。同一个 Python 库的不同版本可能不兼容。\n虚拟环境可以为每一个项目安装独立的 Python 库，这样就可以隔离不同项目之 间的 Python 库，也可以隔离项目与操作系统之间的 Python 库。\nPython 内置了用于创建虚拟环境的 venv 模块。\n```\n\n## 安装 Flask\n```\npip install Flask\n```\n\n\n\n\n\n\n\n\n\n## 开发说明\n\n### 支持热部署：\n```\n如果您打开调试模式，那么服务 器会在修改应用代码之后自动重启\n```\n\n### 手动转义，防止注入如：`<script>alert(\"bad\")</script>`\n```\n@app.route(\"/<name>\")\ndef hello(name):\n    return f\"Hello, {escape(name)}!\"\n```\n\n### 接受url参数和类型转换\n```\n@app.route('/user/<username>')\ndef show_user_profile(username):\n    # show the user profile for that user\n    return f'User {escape(username)}'\n\n@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    # show the post with the given id, the id is an integer\n    return f'Post {post_id}'\n\n@app.route('/path/<path:subpath>')\ndef show_subpath(subpath):\n    # show the subpath after /path/\n    return f'Subpath {escape(subpath)}'\n\n类型\n    string （缺省值） 接受任何不包含斜杠的文本\n    int 接受正整数\n    float 接受正浮点数\n    path 类似 string ，但可以包含斜杠\n    uuid 接受 UUID 字符串\n```\n\n### url_for作用\n```\n转义路径\n```\n\n### get和post处理\n```\nfrom flask import request\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        return do_the_login()\n    else:\n        return show_the_login_form()\n```\n\n### Jinja2模板引擎\n```\nfrom flask import render_template\n\n@app.route('/hello/')\n@app.route('/hello/<name>')\ndef hello(name=None):\n    return render_template('hello.html', name=name)\n\n{% ... %} 语法\n{{ ... }} 打印输出\n{# ... #} 注释\n# ... ## for Line Statements\n\n判断\n    {% if username == \"xxY\" %}\n        <p>{{ username }}</p>\n    {% else %}\n        <p>当前的用户名不是xxY</p>\n    {% endif %}\n\n遍历\n    {% for item in data_ %}\n        <tr>\n            <td>{{ item[0] }}</td>\n            <td>{{ item[1] }}</td>\n        </tr>\n    {% endfor %}\n\n    {% for key,value in users.items() %}\n    {% endfor %}\n\n包含\n    {% include 'HTML/samepart/header.html' %}\n\n\n设置局部变量\n    {% with dict={'name': 'Sleet', 'sex': 'male'} %}\n        {% for key in dict.keys() %}\n            <p>{{ dict[key] }}</p>\n        {% endfor %}\n    {% endwith %}\n\n    {% with lst = [1,2,3] %}\n        {% for i in lst %}\n            <p>{{ i }}</p>\n        {% endfor %}\n    {% endwith %}\n```\n\n### 单元测试\n```\nfrom flask import request\n\nwith app.test_request_context('/hello', method='POST'):\n    # now you can do something with the request until the\n    # end of the with block, such as basic assertions:\n    assert request.path == '/hello'\n    assert request.method == 'POST'\n```\n\n### 请求对象\n```\n@app.route('/login', methods=['POST', 'GET'])\ndef login():\n    error = None\n    if request.method == 'POST':\n        if valid_login(request.form['username'],\n                       request.form['password']):\n            return log_the_user_in(request.form['username'])\n        else:\n            error = 'Invalid username/password'\n    # the code below is executed if the request method\n    # was GET or the credentials were invalid\n    return render_template('login.html', error=error)\n```\n\n### 文件上传\n```\nfrom flask import request\n\n@app.route('/upload', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == 'POST':\n        f = request.files['the_file']\n        f.save('/var/www/uploads/uploaded_file.txt')\n    ...\n\nfrom werkzeug.utils import secure_filename\n\n@app.route('/upload', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == 'POST':\n        file = request.files['the_file']\n        file.save(f\"/var/www/uploads/{secure_filename(file.filename)}\")\n    ...\n```\n\n### cookies\n```\nfrom flask import request\n\n@app.route('/')\ndef index():\n    username = request.cookies.get('username')\n    # use cookies.get(key) instead of cookies[key] to not get a\n    # KeyError if the cookie is missing.\n储存 cookies:\n\nfrom flask import make_response\n\n@app.route('/')\ndef index():\n    resp = make_response(render_template(...))\n    resp.set_cookie('username', 'the username')\n    return resp\n```\n\n### session\n```\n除了请求对象之外还有一种称为 session 的对象，允许您在不同请求 之间储存信息。这个对象相当于用密钥签名加密的 cookie ，\n即用户可以查看您的 cookie ，但是如果没有密钥就无法修改它。\n\n使用会话之前您必须设置一个密钥。举例说明:\n\nfrom flask import session\n\n# Set the secret key to some random bytes. Keep this really secret!\napp.secret_key = b'_5#y2L\"F4Q8z\\n\\xec]/'\n\n@app.route('/')\ndef index():\n    if 'username' in session:\n        return f'Logged in as {session[\"username\"]}'\n    return 'You are not logged in'\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        session['username'] = request.form['username']\n        return redirect(url_for('index'))\n    return '''\n        <form method=\"post\">\n            <p><input type=text name=username>\n            <p><input type=submit value=Login>\n        </form>\n    '''\n\n@app.route('/logout')\ndef logout():\n    # remove the username from the session if it's there\n    session.pop('username', None)\n    return redirect(url_for('index'))\n```\n\n### 重定向和错误\n```\nfrom flask import abort, redirect, url_for\n\n@app.route('/')\ndef index():\n    return redirect(url_for('login'))\n\n@app.route('/login')\ndef login():\n    abort(401)\n    this_is_never_executed()\n```\n\n### 重定向和错误\n```\nfrom flask import abort, redirect, url_for\n\n@app.route('/')\ndef index():\n    return redirect(url_for('login'))\n\n@app.route('/login')\ndef login():\n    abort(401)\n    this_is_never_executed()\n\n\n缺省情况下每种出错代码都会对应显示一个黑白的出错页面。使用 errorhandler() 装饰器可以定制出错页面:\n@app.errorhandler(404)\ndef page_not_found(error):\n    return render_template('page_not_found.html'), 404\n注意 render_template() 后面的 404 ，这表示页面对就的出错 代码是 404 ，即页面不存在。缺省情况下 200 表示：一切正常。\n\n可以使用 make_response() 包裹返回表达式，获得响应对象，并对该对象 进行修改，然后再返回:\n@app.errorhandler(404)\ndef not_found(error):\n    resp = make_response(render_template('error.html'), 404)\n    resp.headers['X-Something'] = 'A value'\n    return resp\n```\n\n### json格式相应\n```\nJSON 格式的响应是常见的，用 Flask 写这样的 API 是很容易上手的。如果从视图 返回一个 dict ，那么它会被转换为一个 JSON 响应。\n    @app.route(\"/me\")\n    def me_api():\n        user = get_current_user()\n        return {\n            \"username\": user.username,\n            \"theme\": user.theme,\n            \"image\": url_for(\"user_image\", filename=user.image),\n        }\n\n如果 dict 还不能满足需求，还需要创建其他类型的 JSON 格式响应，可以使用 jsonify() 函数。该函数会序列化任何支持的 JSON 数据类型。 也可以研究研究 Flask 社区扩展，以支持更复杂的应用。\n    @app.route(\"/users\")\n    def users_api():\n        users = get_all_users()\n        return jsonify([user.to_json() for user in users])\n```\n\n### 消息闪现\n```\nget_flashed_messages()\n```\n\n### 日志处理\n```\napp.logger.debug('A value for debugging')\napp.logger.warning('A warning occurred (%d apples)', 42)\napp.logger.error('An error occurred')\n```","source":"_posts/2022-6-30flask基础.md","raw":"---\ntitle: flask基础\ndate: 2022-6-30\ntags: [flask]\n---\n\nflask基础\n\n<!--more-->\n\n## 文档：\n```\nw3c教程：https://www.w3cschool.cn/flask/flask_static_files.html\nJinja2语法：https://zhuanlan.zhihu.com/p/462352820\n\n首页：https://dormousehole.readthedocs.io/en/latest/\n文档：https://dormousehole.readthedocs.io/en/latest/installation.html\n快速上手：https://dormousehole.readthedocs.io/en/latest/quickstart.html\n教程：https://dormousehole.readthedocs.io/en/latest/tutorial/index.html\n方案：https://dormousehole.readthedocs.io/en/latest/patterns/index.html\nAPI：https://dormousehole.readthedocs.io/en/latest/api.html\n部署方式：https://dormousehole.readthedocs.io/en/latest/deploying/index.html\n部署：https://dormousehole.readthedocs.io/en/latest/tutorial/deploy.html#\n```\n\n## Python 版本\n```\n我们推荐使用最新版本的 Python 。 Flask 支持 Python 3.6 以上版本。\n如果要支持 async ，那么因为会用到 contextvars.ContextVar ，所以需要 Python 3.7 以上版本。\n```\n\n## 依赖\n```\n当安装 Flask 时，以下配套软件会被自动安装。\nWerkzeug 用于实现 WSGI ，应用和服务之间的标准 Python 接口。\nJinja 用于渲染页面的模板语言。\nMarkupSafe 与 Jinja 共用，在渲染页面时用于避免不可信的输入，防止注入攻击。\nItsDangerous 保证数据完整性的安全标志数据，用于保护 Flask 的 session cookie.\nClick 是一个命令行应用的框架。用于提供 flask 命令，并允许添加自定义 管理命令。\n```\n\n## 可选依赖\n```\n以下配套软件不会被自动安装。如果安装了，那么 Flask 会检测到这些软件。\nBlinker 为 信号 提供支持。\npython-dotenv 当运行 flask 命令时为 通过 dotenv 设置环境变量 提供支持。\nWatchdog 为开发服务器提供快速高效的重载。\n```\n\n## 虚拟环境\n```\n建议在开发环境和生产环境下都使用虚拟环境来管理项目的依赖。\n为什么要使用虚拟环境？随着你的 Python 项目越来越多，你会发现不同的项目 会需要不同的版本的 Python 库。同一个 Python 库的不同版本可能不兼容。\n虚拟环境可以为每一个项目安装独立的 Python 库，这样就可以隔离不同项目之 间的 Python 库，也可以隔离项目与操作系统之间的 Python 库。\nPython 内置了用于创建虚拟环境的 venv 模块。\n```\n\n## 安装 Flask\n```\npip install Flask\n```\n\n\n\n\n\n\n\n\n\n## 开发说明\n\n### 支持热部署：\n```\n如果您打开调试模式，那么服务 器会在修改应用代码之后自动重启\n```\n\n### 手动转义，防止注入如：`<script>alert(\"bad\")</script>`\n```\n@app.route(\"/<name>\")\ndef hello(name):\n    return f\"Hello, {escape(name)}!\"\n```\n\n### 接受url参数和类型转换\n```\n@app.route('/user/<username>')\ndef show_user_profile(username):\n    # show the user profile for that user\n    return f'User {escape(username)}'\n\n@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    # show the post with the given id, the id is an integer\n    return f'Post {post_id}'\n\n@app.route('/path/<path:subpath>')\ndef show_subpath(subpath):\n    # show the subpath after /path/\n    return f'Subpath {escape(subpath)}'\n\n类型\n    string （缺省值） 接受任何不包含斜杠的文本\n    int 接受正整数\n    float 接受正浮点数\n    path 类似 string ，但可以包含斜杠\n    uuid 接受 UUID 字符串\n```\n\n### url_for作用\n```\n转义路径\n```\n\n### get和post处理\n```\nfrom flask import request\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        return do_the_login()\n    else:\n        return show_the_login_form()\n```\n\n### Jinja2模板引擎\n```\nfrom flask import render_template\n\n@app.route('/hello/')\n@app.route('/hello/<name>')\ndef hello(name=None):\n    return render_template('hello.html', name=name)\n\n{% ... %} 语法\n{{ ... }} 打印输出\n{# ... #} 注释\n# ... ## for Line Statements\n\n判断\n    {% if username == \"xxY\" %}\n        <p>{{ username }}</p>\n    {% else %}\n        <p>当前的用户名不是xxY</p>\n    {% endif %}\n\n遍历\n    {% for item in data_ %}\n        <tr>\n            <td>{{ item[0] }}</td>\n            <td>{{ item[1] }}</td>\n        </tr>\n    {% endfor %}\n\n    {% for key,value in users.items() %}\n    {% endfor %}\n\n包含\n    {% include 'HTML/samepart/header.html' %}\n\n\n设置局部变量\n    {% with dict={'name': 'Sleet', 'sex': 'male'} %}\n        {% for key in dict.keys() %}\n            <p>{{ dict[key] }}</p>\n        {% endfor %}\n    {% endwith %}\n\n    {% with lst = [1,2,3] %}\n        {% for i in lst %}\n            <p>{{ i }}</p>\n        {% endfor %}\n    {% endwith %}\n```\n\n### 单元测试\n```\nfrom flask import request\n\nwith app.test_request_context('/hello', method='POST'):\n    # now you can do something with the request until the\n    # end of the with block, such as basic assertions:\n    assert request.path == '/hello'\n    assert request.method == 'POST'\n```\n\n### 请求对象\n```\n@app.route('/login', methods=['POST', 'GET'])\ndef login():\n    error = None\n    if request.method == 'POST':\n        if valid_login(request.form['username'],\n                       request.form['password']):\n            return log_the_user_in(request.form['username'])\n        else:\n            error = 'Invalid username/password'\n    # the code below is executed if the request method\n    # was GET or the credentials were invalid\n    return render_template('login.html', error=error)\n```\n\n### 文件上传\n```\nfrom flask import request\n\n@app.route('/upload', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == 'POST':\n        f = request.files['the_file']\n        f.save('/var/www/uploads/uploaded_file.txt')\n    ...\n\nfrom werkzeug.utils import secure_filename\n\n@app.route('/upload', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == 'POST':\n        file = request.files['the_file']\n        file.save(f\"/var/www/uploads/{secure_filename(file.filename)}\")\n    ...\n```\n\n### cookies\n```\nfrom flask import request\n\n@app.route('/')\ndef index():\n    username = request.cookies.get('username')\n    # use cookies.get(key) instead of cookies[key] to not get a\n    # KeyError if the cookie is missing.\n储存 cookies:\n\nfrom flask import make_response\n\n@app.route('/')\ndef index():\n    resp = make_response(render_template(...))\n    resp.set_cookie('username', 'the username')\n    return resp\n```\n\n### session\n```\n除了请求对象之外还有一种称为 session 的对象，允许您在不同请求 之间储存信息。这个对象相当于用密钥签名加密的 cookie ，\n即用户可以查看您的 cookie ，但是如果没有密钥就无法修改它。\n\n使用会话之前您必须设置一个密钥。举例说明:\n\nfrom flask import session\n\n# Set the secret key to some random bytes. Keep this really secret!\napp.secret_key = b'_5#y2L\"F4Q8z\\n\\xec]/'\n\n@app.route('/')\ndef index():\n    if 'username' in session:\n        return f'Logged in as {session[\"username\"]}'\n    return 'You are not logged in'\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        session['username'] = request.form['username']\n        return redirect(url_for('index'))\n    return '''\n        <form method=\"post\">\n            <p><input type=text name=username>\n            <p><input type=submit value=Login>\n        </form>\n    '''\n\n@app.route('/logout')\ndef logout():\n    # remove the username from the session if it's there\n    session.pop('username', None)\n    return redirect(url_for('index'))\n```\n\n### 重定向和错误\n```\nfrom flask import abort, redirect, url_for\n\n@app.route('/')\ndef index():\n    return redirect(url_for('login'))\n\n@app.route('/login')\ndef login():\n    abort(401)\n    this_is_never_executed()\n```\n\n### 重定向和错误\n```\nfrom flask import abort, redirect, url_for\n\n@app.route('/')\ndef index():\n    return redirect(url_for('login'))\n\n@app.route('/login')\ndef login():\n    abort(401)\n    this_is_never_executed()\n\n\n缺省情况下每种出错代码都会对应显示一个黑白的出错页面。使用 errorhandler() 装饰器可以定制出错页面:\n@app.errorhandler(404)\ndef page_not_found(error):\n    return render_template('page_not_found.html'), 404\n注意 render_template() 后面的 404 ，这表示页面对就的出错 代码是 404 ，即页面不存在。缺省情况下 200 表示：一切正常。\n\n可以使用 make_response() 包裹返回表达式，获得响应对象，并对该对象 进行修改，然后再返回:\n@app.errorhandler(404)\ndef not_found(error):\n    resp = make_response(render_template('error.html'), 404)\n    resp.headers['X-Something'] = 'A value'\n    return resp\n```\n\n### json格式相应\n```\nJSON 格式的响应是常见的，用 Flask 写这样的 API 是很容易上手的。如果从视图 返回一个 dict ，那么它会被转换为一个 JSON 响应。\n    @app.route(\"/me\")\n    def me_api():\n        user = get_current_user()\n        return {\n            \"username\": user.username,\n            \"theme\": user.theme,\n            \"image\": url_for(\"user_image\", filename=user.image),\n        }\n\n如果 dict 还不能满足需求，还需要创建其他类型的 JSON 格式响应，可以使用 jsonify() 函数。该函数会序列化任何支持的 JSON 数据类型。 也可以研究研究 Flask 社区扩展，以支持更复杂的应用。\n    @app.route(\"/users\")\n    def users_api():\n        users = get_all_users()\n        return jsonify([user.to_json() for user in users])\n```\n\n### 消息闪现\n```\nget_flashed_messages()\n```\n\n### 日志处理\n```\napp.logger.debug('A value for debugging')\napp.logger.warning('A warning occurred (%d apples)', 42)\napp.logger.error('An error occurred')\n```","slug":"2022-6-30flask基础","published":1,"updated":"2022-06-30T16:08:03.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof0000lnkvvb2ub0fbv","content":"<p>flask基础</p>\n<span id=\"more\"></span>\n\n<h2 id=\"文档：\"><a href=\"#文档：\" class=\"headerlink\" title=\"文档：\"></a>文档：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w3c教程：https://www.w3cschool.cn/flask/flask_static_files.html</span><br><span class=\"line\">Jinja2语法：https://zhuanlan.zhihu.com/p/462352820</span><br><span class=\"line\"></span><br><span class=\"line\">首页：https://dormousehole.readthedocs.io/en/latest/</span><br><span class=\"line\">文档：https://dormousehole.readthedocs.io/en/latest/installation.html</span><br><span class=\"line\">快速上手：https://dormousehole.readthedocs.io/en/latest/quickstart.html</span><br><span class=\"line\">教程：https://dormousehole.readthedocs.io/en/latest/tutorial/index.html</span><br><span class=\"line\">方案：https://dormousehole.readthedocs.io/en/latest/patterns/index.html</span><br><span class=\"line\">API：https://dormousehole.readthedocs.io/en/latest/api.html</span><br><span class=\"line\">部署方式：https://dormousehole.readthedocs.io/en/latest/deploying/index.html</span><br><span class=\"line\">部署：https://dormousehole.readthedocs.io/en/latest/tutorial/deploy.html#</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Python-版本\"><a href=\"#Python-版本\" class=\"headerlink\" title=\"Python 版本\"></a>Python 版本</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们推荐使用最新版本的 Python 。 Flask 支持 Python 3.6 以上版本。</span><br><span class=\"line\">如果要支持 async ，那么因为会用到 contextvars.ContextVar ，所以需要 Python 3.7 以上版本。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当安装 Flask 时，以下配套软件会被自动安装。</span><br><span class=\"line\">Werkzeug 用于实现 WSGI ，应用和服务之间的标准 Python 接口。</span><br><span class=\"line\">Jinja 用于渲染页面的模板语言。</span><br><span class=\"line\">MarkupSafe 与 Jinja 共用，在渲染页面时用于避免不可信的输入，防止注入攻击。</span><br><span class=\"line\">ItsDangerous 保证数据完整性的安全标志数据，用于保护 Flask 的 session cookie.</span><br><span class=\"line\">Click 是一个命令行应用的框架。用于提供 flask 命令，并允许添加自定义 管理命令。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"可选依赖\"><a href=\"#可选依赖\" class=\"headerlink\" title=\"可选依赖\"></a>可选依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以下配套软件不会被自动安装。如果安装了，那么 Flask 会检测到这些软件。</span><br><span class=\"line\">Blinker 为 信号 提供支持。</span><br><span class=\"line\">python-dotenv 当运行 flask 命令时为 通过 dotenv 设置环境变量 提供支持。</span><br><span class=\"line\">Watchdog 为开发服务器提供快速高效的重载。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">建议在开发环境和生产环境下都使用虚拟环境来管理项目的依赖。</span><br><span class=\"line\">为什么要使用虚拟环境？随着你的 Python 项目越来越多，你会发现不同的项目 会需要不同的版本的 Python 库。同一个 Python 库的不同版本可能不兼容。</span><br><span class=\"line\">虚拟环境可以为每一个项目安装独立的 Python 库，这样就可以隔离不同项目之 间的 Python 库，也可以隔离项目与操作系统之间的 Python 库。</span><br><span class=\"line\">Python 内置了用于创建虚拟环境的 venv 模块。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-Flask\"><a href=\"#安装-Flask\" class=\"headerlink\" title=\"安装 Flask\"></a>安装 Flask</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Flask</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"开发说明\"><a href=\"#开发说明\" class=\"headerlink\" title=\"开发说明\"></a>开发说明</h2><h3 id=\"支持热部署：\"><a href=\"#支持热部署：\" class=\"headerlink\" title=\"支持热部署：\"></a>支持热部署：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果您打开调试模式，那么服务 器会在修改应用代码之后自动重启</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"手动转义，防止注入如：-lt-script-gt-alert-quot-bad-quot-lt-script-gt\"><a href=\"#手动转义，防止注入如：-lt-script-gt-alert-quot-bad-quot-lt-script-gt\" class=\"headerlink\" title=\"手动转义，防止注入如：&lt;script&gt;alert(&quot;bad&quot;)&lt;/script&gt;\"></a>手动转义，防止注入如：<code>&lt;script&gt;alert(&quot;bad&quot;)&lt;/script&gt;</code></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&quot;/&lt;name&gt;&quot;)</span><br><span class=\"line\">def hello(name):</span><br><span class=\"line\">    return f&quot;Hello, &#123;escape(name)&#125;!&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"接受url参数和类型转换\"><a href=\"#接受url参数和类型转换\" class=\"headerlink\" title=\"接受url参数和类型转换\"></a>接受url参数和类型转换</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/user/&lt;username&gt;&#x27;)</span><br><span class=\"line\">def show_user_profile(username):</span><br><span class=\"line\">    # show the user profile for that user</span><br><span class=\"line\">    return f&#x27;User &#123;escape(username)&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/post/&lt;int:post_id&gt;&#x27;)</span><br><span class=\"line\">def show_post(post_id):</span><br><span class=\"line\">    # show the post with the given id, the id is an integer</span><br><span class=\"line\">    return f&#x27;Post &#123;post_id&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/path/&lt;path:subpath&gt;&#x27;)</span><br><span class=\"line\">def show_subpath(subpath):</span><br><span class=\"line\">    # show the subpath after /path/</span><br><span class=\"line\">    return f&#x27;Subpath &#123;escape(subpath)&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">类型</span><br><span class=\"line\">    string （缺省值） 接受任何不包含斜杠的文本</span><br><span class=\"line\">    int 接受正整数</span><br><span class=\"line\">    float 接受正浮点数</span><br><span class=\"line\">    path 类似 string ，但可以包含斜杠</span><br><span class=\"line\">    uuid 接受 UUID 字符串</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"url-for作用\"><a href=\"#url-for作用\" class=\"headerlink\" title=\"url_for作用\"></a>url_for作用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">转义路径</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"get和post处理\"><a href=\"#get和post处理\" class=\"headerlink\" title=\"get和post处理\"></a>get和post处理</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        return do_the_login()</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return show_the_login_form()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jinja2模板引擎\"><a href=\"#Jinja2模板引擎\" class=\"headerlink\" title=\"Jinja2模板引擎\"></a>Jinja2模板引擎</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import render_template</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/hello/&#x27;)</span><br><span class=\"line\">@app.route(&#x27;/hello/&lt;name&gt;&#x27;)</span><br><span class=\"line\">def hello(name=None):</span><br><span class=\"line\">    return render_template(&#x27;hello.html&#x27;, name=name)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% ... %&#125; 语法</span><br><span class=\"line\">&#123;&#123; ... &#125;&#125; 打印输出</span><br><span class=\"line\">&#123;# ... #&#125; 注释</span><br><span class=\"line\"># ... ## for Line Statements</span><br><span class=\"line\"></span><br><span class=\"line\">判断</span><br><span class=\"line\">    &#123;% if username == &quot;xxY&quot; %&#125;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123; username &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">        &lt;p&gt;当前的用户名不是xxY&lt;/p&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">遍历</span><br><span class=\"line\">    &#123;% for item in data_ %&#125;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">            &lt;td&gt;&#123;&#123; item[0] &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&#123;&#123; item[1] &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% for key,value in users.items() %&#125;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">包含</span><br><span class=\"line\">    &#123;% include &#x27;HTML/samepart/header.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">设置局部变量</span><br><span class=\"line\">    &#123;% with dict=&#123;&#x27;name&#x27;: &#x27;Sleet&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125; %&#125;</span><br><span class=\"line\">        &#123;% for key in dict.keys() %&#125;</span><br><span class=\"line\">            &lt;p&gt;&#123;&#123; dict[key] &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    &#123;% endwith %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% with lst = [1,2,3] %&#125;</span><br><span class=\"line\">        &#123;% for i in lst %&#125;</span><br><span class=\"line\">            &lt;p&gt;&#123;&#123; i &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    &#123;% endwith %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"单元测试\"><a href=\"#单元测试\" class=\"headerlink\" title=\"单元测试\"></a>单元测试</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">with app.test_request_context(&#x27;/hello&#x27;, method=&#x27;POST&#x27;):</span><br><span class=\"line\">    # now you can do something with the request until the</span><br><span class=\"line\">    # end of the with block, such as basic assertions:</span><br><span class=\"line\">    assert request.path == &#x27;/hello&#x27;</span><br><span class=\"line\">    assert request.method == &#x27;POST&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"请求对象\"><a href=\"#请求对象\" class=\"headerlink\" title=\"请求对象\"></a>请求对象</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;POST&#x27;, &#x27;GET&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    error = None</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        if valid_login(request.form[&#x27;username&#x27;],</span><br><span class=\"line\">                       request.form[&#x27;password&#x27;]):</span><br><span class=\"line\">            return log_the_user_in(request.form[&#x27;username&#x27;])</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            error = &#x27;Invalid username/password&#x27;</span><br><span class=\"line\">    # the code below is executed if the request method</span><br><span class=\"line\">    # was GET or the credentials were invalid</span><br><span class=\"line\">    return render_template(&#x27;login.html&#x27;, error=error)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def upload_file():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        f = request.files[&#x27;the_file&#x27;]</span><br><span class=\"line\">        f.save(&#x27;/var/www/uploads/uploaded_file.txt&#x27;)</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">from werkzeug.utils import secure_filename</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def upload_file():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        file = request.files[&#x27;the_file&#x27;]</span><br><span class=\"line\">        file.save(f&quot;/var/www/uploads/&#123;secure_filename(file.filename)&#125;&quot;)</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cookies\"><a href=\"#cookies\" class=\"headerlink\" title=\"cookies\"></a>cookies</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    username = request.cookies.get(&#x27;username&#x27;)</span><br><span class=\"line\">    # use cookies.get(key) instead of cookies[key] to not get a</span><br><span class=\"line\">    # KeyError if the cookie is missing.</span><br><span class=\"line\">储存 cookies:</span><br><span class=\"line\"></span><br><span class=\"line\">from flask import make_response</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    resp = make_response(render_template(...))</span><br><span class=\"line\">    resp.set_cookie(&#x27;username&#x27;, &#x27;the username&#x27;)</span><br><span class=\"line\">    return resp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">除了请求对象之外还有一种称为 session 的对象，允许您在不同请求 之间储存信息。这个对象相当于用密钥签名加密的 cookie ，</span><br><span class=\"line\">即用户可以查看您的 cookie ，但是如果没有密钥就无法修改它。</span><br><span class=\"line\"></span><br><span class=\"line\">使用会话之前您必须设置一个密钥。举例说明:</span><br><span class=\"line\"></span><br><span class=\"line\">from flask import session</span><br><span class=\"line\"></span><br><span class=\"line\"># Set the secret key to some random bytes. Keep this really secret!</span><br><span class=\"line\">app.secret_key = b&#x27;_5#y2L&quot;F4Q8z\\n\\xec]/&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if &#x27;username&#x27; in session:</span><br><span class=\"line\">        return f&#x27;Logged in as &#123;session[&quot;username&quot;]&#125;&#x27;</span><br><span class=\"line\">    return &#x27;You are not logged in&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        session[&#x27;username&#x27;] = request.form[&#x27;username&#x27;]</span><br><span class=\"line\">        return redirect(url_for(&#x27;index&#x27;))</span><br><span class=\"line\">    return &#x27;&#x27;&#x27;</span><br><span class=\"line\">        &lt;form method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;input type=text name=username&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/logout&#x27;)</span><br><span class=\"line\">def logout():</span><br><span class=\"line\">    # remove the username from the session if it&#x27;s there</span><br><span class=\"line\">    session.pop(&#x27;username&#x27;, None)</span><br><span class=\"line\">    return redirect(url_for(&#x27;index&#x27;))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向和错误\"><a href=\"#重定向和错误\" class=\"headerlink\" title=\"重定向和错误\"></a>重定向和错误</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import abort, redirect, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    return redirect(url_for(&#x27;login&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;)</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    abort(401)</span><br><span class=\"line\">    this_is_never_executed()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向和错误-1\"><a href=\"#重定向和错误-1\" class=\"headerlink\" title=\"重定向和错误\"></a>重定向和错误</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import abort, redirect, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    return redirect(url_for(&#x27;login&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;)</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    abort(401)</span><br><span class=\"line\">    this_is_never_executed()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">缺省情况下每种出错代码都会对应显示一个黑白的出错页面。使用 errorhandler() 装饰器可以定制出错页面:</span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def page_not_found(error):</span><br><span class=\"line\">    return render_template(&#x27;page_not_found.html&#x27;), 404</span><br><span class=\"line\">注意 render_template() 后面的 404 ，这表示页面对就的出错 代码是 404 ，即页面不存在。缺省情况下 200 表示：一切正常。</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用 make_response() 包裹返回表达式，获得响应对象，并对该对象 进行修改，然后再返回:</span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def not_found(error):</span><br><span class=\"line\">    resp = make_response(render_template(&#x27;error.html&#x27;), 404)</span><br><span class=\"line\">    resp.headers[&#x27;X-Something&#x27;] = &#x27;A value&#x27;</span><br><span class=\"line\">    return resp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"json格式相应\"><a href=\"#json格式相应\" class=\"headerlink\" title=\"json格式相应\"></a>json格式相应</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSON 格式的响应是常见的，用 Flask 写这样的 API 是很容易上手的。如果从视图 返回一个 dict ，那么它会被转换为一个 JSON 响应。</span><br><span class=\"line\">    @app.route(&quot;/me&quot;)</span><br><span class=\"line\">    def me_api():</span><br><span class=\"line\">        user = get_current_user()</span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            &quot;username&quot;: user.username,</span><br><span class=\"line\">            &quot;theme&quot;: user.theme,</span><br><span class=\"line\">            &quot;image&quot;: url_for(&quot;user_image&quot;, filename=user.image),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">如果 dict 还不能满足需求，还需要创建其他类型的 JSON 格式响应，可以使用 jsonify() 函数。该函数会序列化任何支持的 JSON 数据类型。 也可以研究研究 Flask 社区扩展，以支持更复杂的应用。</span><br><span class=\"line\">    @app.route(&quot;/users&quot;)</span><br><span class=\"line\">    def users_api():</span><br><span class=\"line\">        users = get_all_users()</span><br><span class=\"line\">        return jsonify([user.to_json() for user in users])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消息闪现\"><a href=\"#消息闪现\" class=\"headerlink\" title=\"消息闪现\"></a>消息闪现</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get_flashed_messages()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日志处理\"><a href=\"#日志处理\" class=\"headerlink\" title=\"日志处理\"></a>日志处理</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.logger.debug(&#x27;A value for debugging&#x27;)</span><br><span class=\"line\">app.logger.warning(&#x27;A warning occurred (%d apples)&#x27;, 42)</span><br><span class=\"line\">app.logger.error(&#x27;An error occurred&#x27;)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>flask基础</p>","more":"<h2 id=\"文档：\"><a href=\"#文档：\" class=\"headerlink\" title=\"文档：\"></a>文档：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w3c教程：https://www.w3cschool.cn/flask/flask_static_files.html</span><br><span class=\"line\">Jinja2语法：https://zhuanlan.zhihu.com/p/462352820</span><br><span class=\"line\"></span><br><span class=\"line\">首页：https://dormousehole.readthedocs.io/en/latest/</span><br><span class=\"line\">文档：https://dormousehole.readthedocs.io/en/latest/installation.html</span><br><span class=\"line\">快速上手：https://dormousehole.readthedocs.io/en/latest/quickstart.html</span><br><span class=\"line\">教程：https://dormousehole.readthedocs.io/en/latest/tutorial/index.html</span><br><span class=\"line\">方案：https://dormousehole.readthedocs.io/en/latest/patterns/index.html</span><br><span class=\"line\">API：https://dormousehole.readthedocs.io/en/latest/api.html</span><br><span class=\"line\">部署方式：https://dormousehole.readthedocs.io/en/latest/deploying/index.html</span><br><span class=\"line\">部署：https://dormousehole.readthedocs.io/en/latest/tutorial/deploy.html#</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Python-版本\"><a href=\"#Python-版本\" class=\"headerlink\" title=\"Python 版本\"></a>Python 版本</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们推荐使用最新版本的 Python 。 Flask 支持 Python 3.6 以上版本。</span><br><span class=\"line\">如果要支持 async ，那么因为会用到 contextvars.ContextVar ，所以需要 Python 3.7 以上版本。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当安装 Flask 时，以下配套软件会被自动安装。</span><br><span class=\"line\">Werkzeug 用于实现 WSGI ，应用和服务之间的标准 Python 接口。</span><br><span class=\"line\">Jinja 用于渲染页面的模板语言。</span><br><span class=\"line\">MarkupSafe 与 Jinja 共用，在渲染页面时用于避免不可信的输入，防止注入攻击。</span><br><span class=\"line\">ItsDangerous 保证数据完整性的安全标志数据，用于保护 Flask 的 session cookie.</span><br><span class=\"line\">Click 是一个命令行应用的框架。用于提供 flask 命令，并允许添加自定义 管理命令。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"可选依赖\"><a href=\"#可选依赖\" class=\"headerlink\" title=\"可选依赖\"></a>可选依赖</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以下配套软件不会被自动安装。如果安装了，那么 Flask 会检测到这些软件。</span><br><span class=\"line\">Blinker 为 信号 提供支持。</span><br><span class=\"line\">python-dotenv 当运行 flask 命令时为 通过 dotenv 设置环境变量 提供支持。</span><br><span class=\"line\">Watchdog 为开发服务器提供快速高效的重载。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">建议在开发环境和生产环境下都使用虚拟环境来管理项目的依赖。</span><br><span class=\"line\">为什么要使用虚拟环境？随着你的 Python 项目越来越多，你会发现不同的项目 会需要不同的版本的 Python 库。同一个 Python 库的不同版本可能不兼容。</span><br><span class=\"line\">虚拟环境可以为每一个项目安装独立的 Python 库，这样就可以隔离不同项目之 间的 Python 库，也可以隔离项目与操作系统之间的 Python 库。</span><br><span class=\"line\">Python 内置了用于创建虚拟环境的 venv 模块。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装-Flask\"><a href=\"#安装-Flask\" class=\"headerlink\" title=\"安装 Flask\"></a>安装 Flask</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Flask</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<h2 id=\"开发说明\"><a href=\"#开发说明\" class=\"headerlink\" title=\"开发说明\"></a>开发说明</h2><h3 id=\"支持热部署：\"><a href=\"#支持热部署：\" class=\"headerlink\" title=\"支持热部署：\"></a>支持热部署：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果您打开调试模式，那么服务 器会在修改应用代码之后自动重启</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"手动转义，防止注入如：-lt-script-gt-alert-quot-bad-quot-lt-script-gt\"><a href=\"#手动转义，防止注入如：-lt-script-gt-alert-quot-bad-quot-lt-script-gt\" class=\"headerlink\" title=\"手动转义，防止注入如：&lt;script&gt;alert(&quot;bad&quot;)&lt;/script&gt;\"></a>手动转义，防止注入如：<code>&lt;script&gt;alert(&quot;bad&quot;)&lt;/script&gt;</code></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&quot;/&lt;name&gt;&quot;)</span><br><span class=\"line\">def hello(name):</span><br><span class=\"line\">    return f&quot;Hello, &#123;escape(name)&#125;!&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"接受url参数和类型转换\"><a href=\"#接受url参数和类型转换\" class=\"headerlink\" title=\"接受url参数和类型转换\"></a>接受url参数和类型转换</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/user/&lt;username&gt;&#x27;)</span><br><span class=\"line\">def show_user_profile(username):</span><br><span class=\"line\">    # show the user profile for that user</span><br><span class=\"line\">    return f&#x27;User &#123;escape(username)&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/post/&lt;int:post_id&gt;&#x27;)</span><br><span class=\"line\">def show_post(post_id):</span><br><span class=\"line\">    # show the post with the given id, the id is an integer</span><br><span class=\"line\">    return f&#x27;Post &#123;post_id&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/path/&lt;path:subpath&gt;&#x27;)</span><br><span class=\"line\">def show_subpath(subpath):</span><br><span class=\"line\">    # show the subpath after /path/</span><br><span class=\"line\">    return f&#x27;Subpath &#123;escape(subpath)&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">类型</span><br><span class=\"line\">    string （缺省值） 接受任何不包含斜杠的文本</span><br><span class=\"line\">    int 接受正整数</span><br><span class=\"line\">    float 接受正浮点数</span><br><span class=\"line\">    path 类似 string ，但可以包含斜杠</span><br><span class=\"line\">    uuid 接受 UUID 字符串</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"url-for作用\"><a href=\"#url-for作用\" class=\"headerlink\" title=\"url_for作用\"></a>url_for作用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">转义路径</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"get和post处理\"><a href=\"#get和post处理\" class=\"headerlink\" title=\"get和post处理\"></a>get和post处理</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        return do_the_login()</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return show_the_login_form()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jinja2模板引擎\"><a href=\"#Jinja2模板引擎\" class=\"headerlink\" title=\"Jinja2模板引擎\"></a>Jinja2模板引擎</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import render_template</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/hello/&#x27;)</span><br><span class=\"line\">@app.route(&#x27;/hello/&lt;name&gt;&#x27;)</span><br><span class=\"line\">def hello(name=None):</span><br><span class=\"line\">    return render_template(&#x27;hello.html&#x27;, name=name)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% ... %&#125; 语法</span><br><span class=\"line\">&#123;&#123; ... &#125;&#125; 打印输出</span><br><span class=\"line\">&#123;# ... #&#125; 注释</span><br><span class=\"line\"># ... ## for Line Statements</span><br><span class=\"line\"></span><br><span class=\"line\">判断</span><br><span class=\"line\">    &#123;% if username == &quot;xxY&quot; %&#125;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123; username &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">        &lt;p&gt;当前的用户名不是xxY&lt;/p&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">遍历</span><br><span class=\"line\">    &#123;% for item in data_ %&#125;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">            &lt;td&gt;&#123;&#123; item[0] &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&#123;&#123; item[1] &#125;&#125;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% for key,value in users.items() %&#125;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">包含</span><br><span class=\"line\">    &#123;% include &#x27;HTML/samepart/header.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">设置局部变量</span><br><span class=\"line\">    &#123;% with dict=&#123;&#x27;name&#x27;: &#x27;Sleet&#x27;, &#x27;sex&#x27;: &#x27;male&#x27;&#125; %&#125;</span><br><span class=\"line\">        &#123;% for key in dict.keys() %&#125;</span><br><span class=\"line\">            &lt;p&gt;&#123;&#123; dict[key] &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    &#123;% endwith %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% with lst = [1,2,3] %&#125;</span><br><span class=\"line\">        &#123;% for i in lst %&#125;</span><br><span class=\"line\">            &lt;p&gt;&#123;&#123; i &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &#123;% endfor %&#125;</span><br><span class=\"line\">    &#123;% endwith %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"单元测试\"><a href=\"#单元测试\" class=\"headerlink\" title=\"单元测试\"></a>单元测试</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">with app.test_request_context(&#x27;/hello&#x27;, method=&#x27;POST&#x27;):</span><br><span class=\"line\">    # now you can do something with the request until the</span><br><span class=\"line\">    # end of the with block, such as basic assertions:</span><br><span class=\"line\">    assert request.path == &#x27;/hello&#x27;</span><br><span class=\"line\">    assert request.method == &#x27;POST&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"请求对象\"><a href=\"#请求对象\" class=\"headerlink\" title=\"请求对象\"></a>请求对象</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;POST&#x27;, &#x27;GET&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    error = None</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        if valid_login(request.form[&#x27;username&#x27;],</span><br><span class=\"line\">                       request.form[&#x27;password&#x27;]):</span><br><span class=\"line\">            return log_the_user_in(request.form[&#x27;username&#x27;])</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            error = &#x27;Invalid username/password&#x27;</span><br><span class=\"line\">    # the code below is executed if the request method</span><br><span class=\"line\">    # was GET or the credentials were invalid</span><br><span class=\"line\">    return render_template(&#x27;login.html&#x27;, error=error)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def upload_file():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        f = request.files[&#x27;the_file&#x27;]</span><br><span class=\"line\">        f.save(&#x27;/var/www/uploads/uploaded_file.txt&#x27;)</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">from werkzeug.utils import secure_filename</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def upload_file():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        file = request.files[&#x27;the_file&#x27;]</span><br><span class=\"line\">        file.save(f&quot;/var/www/uploads/&#123;secure_filename(file.filename)&#125;&quot;)</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cookies\"><a href=\"#cookies\" class=\"headerlink\" title=\"cookies\"></a>cookies</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import request</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    username = request.cookies.get(&#x27;username&#x27;)</span><br><span class=\"line\">    # use cookies.get(key) instead of cookies[key] to not get a</span><br><span class=\"line\">    # KeyError if the cookie is missing.</span><br><span class=\"line\">储存 cookies:</span><br><span class=\"line\"></span><br><span class=\"line\">from flask import make_response</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    resp = make_response(render_template(...))</span><br><span class=\"line\">    resp.set_cookie(&#x27;username&#x27;, &#x27;the username&#x27;)</span><br><span class=\"line\">    return resp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">除了请求对象之外还有一种称为 session 的对象，允许您在不同请求 之间储存信息。这个对象相当于用密钥签名加密的 cookie ，</span><br><span class=\"line\">即用户可以查看您的 cookie ，但是如果没有密钥就无法修改它。</span><br><span class=\"line\"></span><br><span class=\"line\">使用会话之前您必须设置一个密钥。举例说明:</span><br><span class=\"line\"></span><br><span class=\"line\">from flask import session</span><br><span class=\"line\"></span><br><span class=\"line\"># Set the secret key to some random bytes. Keep this really secret!</span><br><span class=\"line\">app.secret_key = b&#x27;_5#y2L&quot;F4Q8z\\n\\xec]/&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    if &#x27;username&#x27; in session:</span><br><span class=\"line\">        return f&#x27;Logged in as &#123;session[&quot;username&quot;]&#125;&#x27;</span><br><span class=\"line\">    return &#x27;You are not logged in&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    if request.method == &#x27;POST&#x27;:</span><br><span class=\"line\">        session[&#x27;username&#x27;] = request.form[&#x27;username&#x27;]</span><br><span class=\"line\">        return redirect(url_for(&#x27;index&#x27;))</span><br><span class=\"line\">    return &#x27;&#x27;&#x27;</span><br><span class=\"line\">        &lt;form method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;input type=text name=username&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;input type=submit value=Login&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/logout&#x27;)</span><br><span class=\"line\">def logout():</span><br><span class=\"line\">    # remove the username from the session if it&#x27;s there</span><br><span class=\"line\">    session.pop(&#x27;username&#x27;, None)</span><br><span class=\"line\">    return redirect(url_for(&#x27;index&#x27;))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向和错误\"><a href=\"#重定向和错误\" class=\"headerlink\" title=\"重定向和错误\"></a>重定向和错误</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import abort, redirect, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    return redirect(url_for(&#x27;login&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;)</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    abort(401)</span><br><span class=\"line\">    this_is_never_executed()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重定向和错误-1\"><a href=\"#重定向和错误-1\" class=\"headerlink\" title=\"重定向和错误\"></a>重定向和错误</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import abort, redirect, url_for</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/&#x27;)</span><br><span class=\"line\">def index():</span><br><span class=\"line\">    return redirect(url_for(&#x27;login&#x27;))</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&#x27;/login&#x27;)</span><br><span class=\"line\">def login():</span><br><span class=\"line\">    abort(401)</span><br><span class=\"line\">    this_is_never_executed()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">缺省情况下每种出错代码都会对应显示一个黑白的出错页面。使用 errorhandler() 装饰器可以定制出错页面:</span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def page_not_found(error):</span><br><span class=\"line\">    return render_template(&#x27;page_not_found.html&#x27;), 404</span><br><span class=\"line\">注意 render_template() 后面的 404 ，这表示页面对就的出错 代码是 404 ，即页面不存在。缺省情况下 200 表示：一切正常。</span><br><span class=\"line\"></span><br><span class=\"line\">可以使用 make_response() 包裹返回表达式，获得响应对象，并对该对象 进行修改，然后再返回:</span><br><span class=\"line\">@app.errorhandler(404)</span><br><span class=\"line\">def not_found(error):</span><br><span class=\"line\">    resp = make_response(render_template(&#x27;error.html&#x27;), 404)</span><br><span class=\"line\">    resp.headers[&#x27;X-Something&#x27;] = &#x27;A value&#x27;</span><br><span class=\"line\">    return resp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"json格式相应\"><a href=\"#json格式相应\" class=\"headerlink\" title=\"json格式相应\"></a>json格式相应</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JSON 格式的响应是常见的，用 Flask 写这样的 API 是很容易上手的。如果从视图 返回一个 dict ，那么它会被转换为一个 JSON 响应。</span><br><span class=\"line\">    @app.route(&quot;/me&quot;)</span><br><span class=\"line\">    def me_api():</span><br><span class=\"line\">        user = get_current_user()</span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            &quot;username&quot;: user.username,</span><br><span class=\"line\">            &quot;theme&quot;: user.theme,</span><br><span class=\"line\">            &quot;image&quot;: url_for(&quot;user_image&quot;, filename=user.image),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">如果 dict 还不能满足需求，还需要创建其他类型的 JSON 格式响应，可以使用 jsonify() 函数。该函数会序列化任何支持的 JSON 数据类型。 也可以研究研究 Flask 社区扩展，以支持更复杂的应用。</span><br><span class=\"line\">    @app.route(&quot;/users&quot;)</span><br><span class=\"line\">    def users_api():</span><br><span class=\"line\">        users = get_all_users()</span><br><span class=\"line\">        return jsonify([user.to_json() for user in users])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消息闪现\"><a href=\"#消息闪现\" class=\"headerlink\" title=\"消息闪现\"></a>消息闪现</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get_flashed_messages()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"日志处理\"><a href=\"#日志处理\" class=\"headerlink\" title=\"日志处理\"></a>日志处理</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.logger.debug(&#x27;A value for debugging&#x27;)</span><br><span class=\"line\">app.logger.warning(&#x27;A warning occurred (%d apples)&#x27;, 42)</span><br><span class=\"line\">app.logger.error(&#x27;An error occurred&#x27;)</span><br></pre></td></tr></table></figure>"},{"title":"升级repo的好处","date":"2022-06-29T16:00:00.000Z","_content":"\n升级repo的好处\n\n<!--more-->\n\n## Gerrit升级提示\n升级Gerrit之后, 由于很多新feature只在新版的git和repo上得到支持. 已经不兼容过旧的git和repo版本. \n停止对python3.5以下,git版本在2.26.1和repo launcher 2.21以下的支持\n\n届时, repo init和repo sync会在这些老版本的组件上报错.\n\n## 如何升级?\n### Ubuntu 17.04, 18.04(含)及以上\nUbuntu 18.04以上已经自带python3.6+的版本. 所以只需要升级git以及repo launcher即可\n\n### Ubuntu 16.04(含)及以下\nUbuntu 16.04及以下的机器. 默认是python是3.5以下的, 所以除了18.04需要做的升级之外. 还需要升级python.\n另外你只需要安装了python3.6+就可以, 即使默认还是在使用python2.7也不会有问题. (切了环境就很容易崩掉)\n\n但是请务必注意, 升级python有可能造成系统组件的紊乱.发现很多官方都已经宣布不支持16.04以下的版本的, 比如很多apt源以及packages. 同时, 16.04以及以下的OS会遇到越来越多的麻烦.所以强烈建议还在使用16.04的朋友尽快升级到20.04以上的版本\n\n## 这些组件升级了之后有哪些好处?\n\n### 升级git\n1. `git的fetch协议`, 已经有了更有效率的`protocol v2`. 这个协议在`git fetch`最开始的`refs advertised`阶段的提升尤为明显.尤其对于`platform/frameworks/base`这种动辄`40万refs`的大仓库\n从`git 2.18`开始, `git`支持`protocol V2`,从`2.26`开始,` git`默认使用`protocol V2`\n然而`Ubuntu 18.04`最高只能下载到`2.17`的`git`. 所以实际上, 几乎`80%`的研发使用的`git`版本过老\n`Git`进阶这篇文档详细解释了`protocol V1`. 有兴趣的朋友可以和官方文档对照着一起看, 了解其中的原因 [Git protocol V2](https://git-scm.com/docs/protocol-v2)\n2. `partial-clone`.这个功能可以极大改善我们的工程师下载大型仓库的体验. 根据实验我们下载大仓库的代码时间从2小时30分钟, 减少为45分钟左右. 提升极其巨大.\n然而此功能也只能在`2.22`之后的版本才支持\n3. `git-lfs`也是一个重要功能. 我们会逐步迁移binary过多的仓库到lfs上. 众所周知git本身并不适合处理`binary`, 以至于我们的git性能在各方面都大幅下降. 当我们迁移完毕之后, 版本过低的用户将无法下载到正常的文件.\n\n### 升级repo launcher\n1. 很多人使用的repo, 已经是2015年的了, 严重落后. 很多重要feature都未得到更新.比如partial-clone git-lfs, 以及新的push fetch的url分离 等等功能. 我们建议无论你使用的是什么版本的repo启动器, 都统一升级到最新版\n2. `git-lfs`需要最新版本的launcher的支持, 否则upload将会出现一些问题\n\n### 升级Python\n1. 新版repo只支持`python3.6+`的版本. 所以我们需要更新python","source":"_posts/2022-6-30升级repo的好处.md","raw":"---\ntitle: 升级repo的好处\ndate: 2022-6-30\ntags: [git, repo]\n---\n\n升级repo的好处\n\n<!--more-->\n\n## Gerrit升级提示\n升级Gerrit之后, 由于很多新feature只在新版的git和repo上得到支持. 已经不兼容过旧的git和repo版本. \n停止对python3.5以下,git版本在2.26.1和repo launcher 2.21以下的支持\n\n届时, repo init和repo sync会在这些老版本的组件上报错.\n\n## 如何升级?\n### Ubuntu 17.04, 18.04(含)及以上\nUbuntu 18.04以上已经自带python3.6+的版本. 所以只需要升级git以及repo launcher即可\n\n### Ubuntu 16.04(含)及以下\nUbuntu 16.04及以下的机器. 默认是python是3.5以下的, 所以除了18.04需要做的升级之外. 还需要升级python.\n另外你只需要安装了python3.6+就可以, 即使默认还是在使用python2.7也不会有问题. (切了环境就很容易崩掉)\n\n但是请务必注意, 升级python有可能造成系统组件的紊乱.发现很多官方都已经宣布不支持16.04以下的版本的, 比如很多apt源以及packages. 同时, 16.04以及以下的OS会遇到越来越多的麻烦.所以强烈建议还在使用16.04的朋友尽快升级到20.04以上的版本\n\n## 这些组件升级了之后有哪些好处?\n\n### 升级git\n1. `git的fetch协议`, 已经有了更有效率的`protocol v2`. 这个协议在`git fetch`最开始的`refs advertised`阶段的提升尤为明显.尤其对于`platform/frameworks/base`这种动辄`40万refs`的大仓库\n从`git 2.18`开始, `git`支持`protocol V2`,从`2.26`开始,` git`默认使用`protocol V2`\n然而`Ubuntu 18.04`最高只能下载到`2.17`的`git`. 所以实际上, 几乎`80%`的研发使用的`git`版本过老\n`Git`进阶这篇文档详细解释了`protocol V1`. 有兴趣的朋友可以和官方文档对照着一起看, 了解其中的原因 [Git protocol V2](https://git-scm.com/docs/protocol-v2)\n2. `partial-clone`.这个功能可以极大改善我们的工程师下载大型仓库的体验. 根据实验我们下载大仓库的代码时间从2小时30分钟, 减少为45分钟左右. 提升极其巨大.\n然而此功能也只能在`2.22`之后的版本才支持\n3. `git-lfs`也是一个重要功能. 我们会逐步迁移binary过多的仓库到lfs上. 众所周知git本身并不适合处理`binary`, 以至于我们的git性能在各方面都大幅下降. 当我们迁移完毕之后, 版本过低的用户将无法下载到正常的文件.\n\n### 升级repo launcher\n1. 很多人使用的repo, 已经是2015年的了, 严重落后. 很多重要feature都未得到更新.比如partial-clone git-lfs, 以及新的push fetch的url分离 等等功能. 我们建议无论你使用的是什么版本的repo启动器, 都统一升级到最新版\n2. `git-lfs`需要最新版本的launcher的支持, 否则upload将会出现一些问题\n\n### 升级Python\n1. 新版repo只支持`python3.6+`的版本. 所以我们需要更新python","slug":"2022-6-30升级repo的好处","published":1,"updated":"2022-06-30T16:08:03.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof1000mnkvvajav3bp8","content":"<p>升级repo的好处</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Gerrit升级提示\"><a href=\"#Gerrit升级提示\" class=\"headerlink\" title=\"Gerrit升级提示\"></a>Gerrit升级提示</h2><p>升级Gerrit之后, 由于很多新feature只在新版的git和repo上得到支持. 已经不兼容过旧的git和repo版本.<br>停止对python3.5以下,git版本在2.26.1和repo launcher 2.21以下的支持</p>\n<p>届时, repo init和repo sync会在这些老版本的组件上报错.</p>\n<h2 id=\"如何升级\"><a href=\"#如何升级\" class=\"headerlink\" title=\"如何升级?\"></a>如何升级?</h2><h3 id=\"Ubuntu-17-04-18-04-含-及以上\"><a href=\"#Ubuntu-17-04-18-04-含-及以上\" class=\"headerlink\" title=\"Ubuntu 17.04, 18.04(含)及以上\"></a>Ubuntu 17.04, 18.04(含)及以上</h3><p>Ubuntu 18.04以上已经自带python3.6+的版本. 所以只需要升级git以及repo launcher即可</p>\n<h3 id=\"Ubuntu-16-04-含-及以下\"><a href=\"#Ubuntu-16-04-含-及以下\" class=\"headerlink\" title=\"Ubuntu 16.04(含)及以下\"></a>Ubuntu 16.04(含)及以下</h3><p>Ubuntu 16.04及以下的机器. 默认是python是3.5以下的, 所以除了18.04需要做的升级之外. 还需要升级python.<br>另外你只需要安装了python3.6+就可以, 即使默认还是在使用python2.7也不会有问题. (切了环境就很容易崩掉)</p>\n<p>但是请务必注意, 升级python有可能造成系统组件的紊乱.发现很多官方都已经宣布不支持16.04以下的版本的, 比如很多apt源以及packages. 同时, 16.04以及以下的OS会遇到越来越多的麻烦.所以强烈建议还在使用16.04的朋友尽快升级到20.04以上的版本</p>\n<h2 id=\"这些组件升级了之后有哪些好处\"><a href=\"#这些组件升级了之后有哪些好处\" class=\"headerlink\" title=\"这些组件升级了之后有哪些好处?\"></a>这些组件升级了之后有哪些好处?</h2><h3 id=\"升级git\"><a href=\"#升级git\" class=\"headerlink\" title=\"升级git\"></a>升级git</h3><ol>\n<li><code>git的fetch协议</code>, 已经有了更有效率的<code>protocol v2</code>. 这个协议在<code>git fetch</code>最开始的<code>refs advertised</code>阶段的提升尤为明显.尤其对于<code>platform/frameworks/base</code>这种动辄<code>40万refs</code>的大仓库<br>从<code>git 2.18</code>开始, <code>git</code>支持<code>protocol V2</code>,从<code>2.26</code>开始,<code> git</code>默认使用<code>protocol V2</code><br>然而<code>Ubuntu 18.04</code>最高只能下载到<code>2.17</code>的<code>git</code>. 所以实际上, 几乎<code>80%</code>的研发使用的<code>git</code>版本过老<br><code>Git</code>进阶这篇文档详细解释了<code>protocol V1</code>. 有兴趣的朋友可以和官方文档对照着一起看, 了解其中的原因 <a href=\"https://git-scm.com/docs/protocol-v2\">Git protocol V2</a></li>\n<li><code>partial-clone</code>.这个功能可以极大改善我们的工程师下载大型仓库的体验. 根据实验我们下载大仓库的代码时间从2小时30分钟, 减少为45分钟左右. 提升极其巨大.<br>然而此功能也只能在<code>2.22</code>之后的版本才支持</li>\n<li><code>git-lfs</code>也是一个重要功能. 我们会逐步迁移binary过多的仓库到lfs上. 众所周知git本身并不适合处理<code>binary</code>, 以至于我们的git性能在各方面都大幅下降. 当我们迁移完毕之后, 版本过低的用户将无法下载到正常的文件.</li>\n</ol>\n<h3 id=\"升级repo-launcher\"><a href=\"#升级repo-launcher\" class=\"headerlink\" title=\"升级repo launcher\"></a>升级repo launcher</h3><ol>\n<li>很多人使用的repo, 已经是2015年的了, 严重落后. 很多重要feature都未得到更新.比如partial-clone git-lfs, 以及新的push fetch的url分离 等等功能. 我们建议无论你使用的是什么版本的repo启动器, 都统一升级到最新版</li>\n<li><code>git-lfs</code>需要最新版本的launcher的支持, 否则upload将会出现一些问题</li>\n</ol>\n<h3 id=\"升级Python\"><a href=\"#升级Python\" class=\"headerlink\" title=\"升级Python\"></a>升级Python</h3><ol>\n<li>新版repo只支持<code>python3.6+</code>的版本. 所以我们需要更新python</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>升级repo的好处</p>","more":"<h2 id=\"Gerrit升级提示\"><a href=\"#Gerrit升级提示\" class=\"headerlink\" title=\"Gerrit升级提示\"></a>Gerrit升级提示</h2><p>升级Gerrit之后, 由于很多新feature只在新版的git和repo上得到支持. 已经不兼容过旧的git和repo版本.<br>停止对python3.5以下,git版本在2.26.1和repo launcher 2.21以下的支持</p>\n<p>届时, repo init和repo sync会在这些老版本的组件上报错.</p>\n<h2 id=\"如何升级\"><a href=\"#如何升级\" class=\"headerlink\" title=\"如何升级?\"></a>如何升级?</h2><h3 id=\"Ubuntu-17-04-18-04-含-及以上\"><a href=\"#Ubuntu-17-04-18-04-含-及以上\" class=\"headerlink\" title=\"Ubuntu 17.04, 18.04(含)及以上\"></a>Ubuntu 17.04, 18.04(含)及以上</h3><p>Ubuntu 18.04以上已经自带python3.6+的版本. 所以只需要升级git以及repo launcher即可</p>\n<h3 id=\"Ubuntu-16-04-含-及以下\"><a href=\"#Ubuntu-16-04-含-及以下\" class=\"headerlink\" title=\"Ubuntu 16.04(含)及以下\"></a>Ubuntu 16.04(含)及以下</h3><p>Ubuntu 16.04及以下的机器. 默认是python是3.5以下的, 所以除了18.04需要做的升级之外. 还需要升级python.<br>另外你只需要安装了python3.6+就可以, 即使默认还是在使用python2.7也不会有问题. (切了环境就很容易崩掉)</p>\n<p>但是请务必注意, 升级python有可能造成系统组件的紊乱.发现很多官方都已经宣布不支持16.04以下的版本的, 比如很多apt源以及packages. 同时, 16.04以及以下的OS会遇到越来越多的麻烦.所以强烈建议还在使用16.04的朋友尽快升级到20.04以上的版本</p>\n<h2 id=\"这些组件升级了之后有哪些好处\"><a href=\"#这些组件升级了之后有哪些好处\" class=\"headerlink\" title=\"这些组件升级了之后有哪些好处?\"></a>这些组件升级了之后有哪些好处?</h2><h3 id=\"升级git\"><a href=\"#升级git\" class=\"headerlink\" title=\"升级git\"></a>升级git</h3><ol>\n<li><code>git的fetch协议</code>, 已经有了更有效率的<code>protocol v2</code>. 这个协议在<code>git fetch</code>最开始的<code>refs advertised</code>阶段的提升尤为明显.尤其对于<code>platform/frameworks/base</code>这种动辄<code>40万refs</code>的大仓库<br>从<code>git 2.18</code>开始, <code>git</code>支持<code>protocol V2</code>,从<code>2.26</code>开始,<code> git</code>默认使用<code>protocol V2</code><br>然而<code>Ubuntu 18.04</code>最高只能下载到<code>2.17</code>的<code>git</code>. 所以实际上, 几乎<code>80%</code>的研发使用的<code>git</code>版本过老<br><code>Git</code>进阶这篇文档详细解释了<code>protocol V1</code>. 有兴趣的朋友可以和官方文档对照着一起看, 了解其中的原因 <a href=\"https://git-scm.com/docs/protocol-v2\">Git protocol V2</a></li>\n<li><code>partial-clone</code>.这个功能可以极大改善我们的工程师下载大型仓库的体验. 根据实验我们下载大仓库的代码时间从2小时30分钟, 减少为45分钟左右. 提升极其巨大.<br>然而此功能也只能在<code>2.22</code>之后的版本才支持</li>\n<li><code>git-lfs</code>也是一个重要功能. 我们会逐步迁移binary过多的仓库到lfs上. 众所周知git本身并不适合处理<code>binary</code>, 以至于我们的git性能在各方面都大幅下降. 当我们迁移完毕之后, 版本过低的用户将无法下载到正常的文件.</li>\n</ol>\n<h3 id=\"升级repo-launcher\"><a href=\"#升级repo-launcher\" class=\"headerlink\" title=\"升级repo launcher\"></a>升级repo launcher</h3><ol>\n<li>很多人使用的repo, 已经是2015年的了, 严重落后. 很多重要feature都未得到更新.比如partial-clone git-lfs, 以及新的push fetch的url分离 等等功能. 我们建议无论你使用的是什么版本的repo启动器, 都统一升级到最新版</li>\n<li><code>git-lfs</code>需要最新版本的launcher的支持, 否则upload将会出现一些问题</li>\n</ol>\n<h3 id=\"升级Python\"><a href=\"#升级Python\" class=\"headerlink\" title=\"升级Python\"></a>升级Python</h3><ol>\n<li>新版repo只支持<code>python3.6+</code>的版本. 所以我们需要更新python</li>\n</ol>"},{"title":"git底层原理","date":"2022-06-29T16:00:00.000Z","_content":"\ngit底层原理\n\n<!--more-->\n\n## Git的底层原理:\n### Blob 对象\ngit在本质上就是一个键值对(key-value)的数据库. key是根据内容计算出来的hash值. value则是你需要存储的数据. 你可以使用``git hash-object``来确认一段数据的key.\n在此之前, 请重新建一个新的git仓库\n\n```bash\ncd /tmp\nmkdir test-git2\ncd test-git2\ngit init\n```\n```bash\necho 'test content' | git hash-object -w --stdin\n# d670460b4b4aece5915caf5c68d12f560a9fe3e4\n```\n你这时候会发现你的``.git/objects``目录下面多了一个文件\n\n```bash\nls -l .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n# -r--r--r-- 1 cy cy 32 Feb 11 13:19 .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n```\n在这个文件中, 存储的就是一些元信息和test content这个文件内容. 这个文件具体的内容, 可以查看[对象存储](https://git-scm.com/book/zh/v2/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-Git-%E5%AF%B9%E8%B1%A1#_%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8)\n存储完了之后, 你也可以用``git cat-file``命令读取它\n```bash\ngit cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4\n# test content\n```\n你现在应该已经能初步理解git是如何存储信息的了. 任意数据你都可以存到git里. 它是最原始的信息, 我们把这种对象称之为``blob object``\n\n### Tree 对象\n敏锐的同学应该已经发现了, 那文件名存在哪里? 答案是git会单独用另外一种object来存储\n```commandline\ngit update-index --add --cacheinfo 100644 d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n此时你使用运行``git status``会发现Index区域变了\n\n```bash\ngit status\n# HEAD detached from f8f34a1 \n# Changes to be committed: \n#   (use \"git restore --staged <file>...\" to unstage) \n#     new file:   test.txt \n#  \n# Changes not staged for commit: \n#   (use \"git add/rm <file>...\" to update what will be committed) \n#   (use \"git restore <file>...\" to discard changes in working directory) \n#     deleted:    test.txt \n# \n```\n\n``git add``实际上就是``git hash-object``和``git update-index``的组合. ``实际上是把d670460b4b4aece5915caf5c68d12f560a9fe3e4`` 这个object复制到了Index区域\n\n接下来就可以使用``git write-tree``命令.将Index区域的内容写入到一个``Tree Object``中.\n\n```bash\ngit write-tree\n#  80865964295ae2f11d27383e5f9c0b58a8ef21da\ngit cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da\n# 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n### Commit 对象\n\n有了树对象, 我们就可以创建一个提交对象了\n\n```bash\necho 'first commit' | git commit-tree 80865964295ae2f11d27383e5f9c0b58a8ef21da\ne137f356afa88b2b8984c4105326d74826a8c5c1\n```\n\n```bash\ngit log e137f356afa88b2b8984c4105326d74826a8c5c1\n\n# commit e137f356afa88b2b8984c4105326d74826a8c5c1 \n# Author: Cheng Yang <chengyang@xiaomi.com> \n# Date:   Fri Feb 11 19:39:09 2022 +0800 \n \n#     first commit \n```\n\n至此, 我们在不使用``git add``和``git commit``的情况下, 创建了一个提交\n\n### 反过来看看``Commit 对象``\n\ngit里, 万物皆对象.凡是有hash的东西一定是一个对象. 那么我们来从后往前看看, 一个提交里到底有什么?\n\n```bash\ngit cat-file -p e137f356afa88b2b8984c4105326d74826a8c5c1\n# tree 80865964295ae2f11d27383e5f9c0b58a8ef21da \n# author Cheng Yang <chengyang@xiaomi.com> 1644579549 +0800 \n# committer Cheng Yang <chengyang@xiaomi.com> 1644579549 +0800 \n \n# first commit \n```\n\n你会发现, ``Commit Object``也不过是一个普通object, 只不过内容是存储了提交者, 作者, 时间戳, 以及这个提交所包含的``Tree Object``. 一如你运行``git log``所看到的内容\n\n那么我们再次运行``cat-file``查看这个``Tree Object``\n\n```bash\ngit cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da \n# 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n很显然, 和刚才一样, 这个``Tree Object``的意思是包含``test.txt``这个文件, 文件内容存储在`d670460b4b4aece5915caf5c68d12f560a9fe3e4` 这个对象中\n那么再继续看看这个对象\n\n```bash\ngit cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4 \n# test content \n```\n\n所以, 这个`Commit Object`包含了一个`Tree Object`, 而这个`Tree Object`包含了一个叫`test.txt`, 而`test.txt`文件里的内容是`test content`.\n这里你会注意到, 我们的硬盘中甚至从头到尾都没有出现过一个叫`test.txt`的文件\n\n## 传输协议\n\n### Fetch:\n\n理解git的传输协议, 我们可以使用`GIT_TRACE_PACKET`宏, 让git能自动打印出所有发送的网络包\n```bash\ncd /tmp\nmkdir fetch-test\ncd fetch-test\n\nGIT_TRACE_PACKET=1 git -c protocol.version=1 clone /tmp/test-git1\n```\n\n这个地方设置`protocol.version=1`的原因是因为git默认使用v2协议还是2020年的事, 相当数量的服务器并未支持v2协议, 而且v2协议协商过程会稍微复杂一些, 所以我们使用比较常见的v1先来解释git如何远程传输数据\n\n```bash\nCloning into 'test-git1'... \n20:09:07.319608 pkt-line.c:80           packet:  upload-pack> version 1 \n20:09:07.319670 pkt-line.c:80           packet:        clone< version 1 \n20:09:07.319761 pkt-line.c:80           packet:  upload-pack> 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:09:07.319874 pkt-line.c:80           packet:  upload-pack> 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master \n20:09:07.319886 pkt-line.c:80           packet:  upload-pack> 0000 \n20:09:07.319908 pkt-line.c:80           packet:        clone< 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:09:07.319925 pkt-line.c:80           packet:        clone< 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master \n20:09:07.319929 pkt-line.c:80           packet:        clone< 0000 \ndone. \n20:09:07.321498 pkt-line.c:80           packet:        clone> 0000 \n20:09:07.321532 pkt-line.c:80           packet:  upload-pack< 0000\n```\n\n`<`表示收到, `>`表示发送. `upload-pack>`的意思就是`upload-pack`发送了数据. 而`upload-pack`是服务端上的进程, 其实意思也就是服务端发送了数据.\n在协商协议版本后, 远程服务器发送的第一项数据是一些元数据和能力, 主要是告诉客户端, 服务端支持哪些功能. 在此处我们不深入此处. 而第二项是最重要的\n`4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master`\n这个实际上是在告诉客户端, 服务端所拥有的所有`refs`.在此处我们的服务器只有`master`这么一个分支, 它指向`4cf4037e6bb2016fe30d1af96788ef6f8499d516` 这个`Commit Object`. 那么后面的传输信息也很好理解了. 就是客户端在告诉服务器, 我需要的是`refs/heads/master`这个`ref`上的所有内容.\n`clone`的过程比较简单, 那么增量`fetch`呢? 我们不妨给`test-git1`添加一个change\n\n```bash\ncd /tmp/test-git1\necho 3 > 1.txt\ngit commit -a -s -m \"3rd change\"\n```\n\n此时我们再执行fetch\n\n```bash\ncd /tmp/fetch-test/test-git1\nGIT_TRACE_PACKET=1 git -c protocol.version=1 fetch\n```\n\n```bash\n20:13:55.779809 pkt-line.c:80           packet:  upload-pack> version 1 \n20:13:55.779937 pkt-line.c:80           packet:        fetch< version 1 \n20:13:55.780221 pkt-line.c:80           packet:  upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:13:55.780500 pkt-line.c:80           packet:  upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master \n20:13:55.780531 pkt-line.c:80           packet:  upload-pack> 0000 \n20:13:55.780549 pkt-line.c:80           packet:        fetch< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:13:55.780596 pkt-line.c:80           packet:        fetch< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master \n20:13:55.780616 pkt-line.c:80           packet:        fetch< 0000 \n20:13:55.781535 pkt-line.c:80           packet:        fetch> want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 \n20:13:55.781553 pkt-line.c:80           packet:        fetch> 0000 \n20:13:55.781617 pkt-line.c:80           packet:        fetch> have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781612 pkt-line.c:80           packet:  upload-pack< want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 \n20:13:55.781628 pkt-line.c:80           packet:        fetch> have 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.781635 pkt-line.c:80           packet:        fetch> done \n20:13:55.781800 pkt-line.c:80           packet:  upload-pack< 0000 \n20:13:55.781819 pkt-line.c:80           packet:  upload-pack< have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781944 pkt-line.c:80           packet:  upload-pack> ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common \n20:13:55.781971 pkt-line.c:80           packet:  upload-pack< have 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.782004 pkt-line.c:80           packet:        fetch< ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common \n20:13:55.782061 pkt-line.c:80           packet:  upload-pack> ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common \n20:13:55.782094 pkt-line.c:80           packet:  upload-pack< done \n20:13:55.782109 pkt-line.c:80           packet:  upload-pack> ACK 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.782122 pkt-line.c:80           packet:        fetch< ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common \n20:13:55.782151 pkt-line.c:80           packet:        fetch< ACK 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.784146 pkt-line.c:80           packet:     sideband< \\2Enumerating objects: 5, done. \nremote: Enumerating objects: 5, done. \n20:13:55.784171 pkt-line.c:80           packet:     sideband< \\2Counting objects:  20% (1/5)\\15 \n20:13:55.784180 pkt-line.c:80           packet:     sideband< \\2Counting objects:  40% (2/5)\\15 \n20:13:55.784193 pkt-line.c:80           packet:     sideband< \\2Counting objects:  60% (3/5)\\15 \n20:13:55.784200 pkt-line.c:80           packet:     sideband< \\2Counting objects:  80% (4/5)\\15 \n20:13:55.784208 pkt-line.c:80           packet:     sideband< \\2Counting objects: 100% (5/5)\\15Counting objects: 100% (5/5), done. \nremote: Counting objects: 100% (5/5), done. \n20:13:55.784401 pkt-line.c:80           packet:     sideband< \\2Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 \nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 \n20:13:55.784421 pkt-line.c:80           packet:     sideband< PACK ... \n20:13:55.784526 pkt-line.c:80           packet:  upload-pack> 0000 \n20:13:55.784575 pkt-line.c:80           packet:     sideband< 0000 \nUnpacking objects: 100% (3/3), 360 bytes | 360.00 KiB/s, done. \nFrom /tmp/test-git1 \n   4cf4037..3fb2316  master     -> origin/master \n```\n\n最开始, 仍旧是服务器发送了他拥有的`refs`\n`upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master`\n此时, 客户端收到了之后, 就和自己的`refs/heads/master`做对比. 它告诉了服务器, 我需要哪个commit, 已经有了哪个commit\n\n```bash\n20:13:55.781535 pkt-line.c:80           packet:        fetch> want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed  \n20:13:55.781553 pkt-line.c:80           packet:        fetch> 0000 \n20:13:55.781617 pkt-line.c:80           packet:        fetch> have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781628 pkt-line.c:80           packet:        fetch> have 889cc4292ce266e4607fd12aecb482cb89b1430d\n```\n\n这时候, git服务器的最优做法, 是指发送客户端没有的东西, 而不是发送整个的`refs/heads/master`\n接下来的`Enumerating Objects`和`Couting Objects`都是在整理\"服务端有, 客户端没有的东西\". 并且发送回来.\n\n### Push:\npush的过程其实相对来说就是fetch的逆向操作\n\n```bash\ncd /tmp/fetch-test/test-git1\ngit checkout origin/master\necho 4 > 1.txt\ngit commit -a -s -m \"4th change\"\n\nGIT_TRACE_PACKET=1 git -c protocol.version=1 push origin  HEAD:master\n```\n\n这条命令的意思是, 把本地`HEAD`指向的内容, push到远程`refs/heads/master`上.这里可以注意下, 如果你想, 你甚至可以把HEAD替换为其他任意hash值\n输出会有一些报错, 只是因为`test-git1`不是`bare`仓库. 这不影响我们分析\n\n```bash\n20:30:46.011723 pkt-line.c:80           packet: receive-pack> version 1 \n20:30:46.011807 pkt-line.c:80           packet:         push< version 1 \n20:30:46.011846 pkt-line.c:80           packet: receive-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 \n20:30:46.011865 pkt-line.c:80           packet: receive-pack> 0000 \n20:30:46.011867 pkt-line.c:80           packet:         push< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 \n20:30:46.011878 pkt-line.c:80           packet:         push< 0000 \n20:30:46.012115 pkt-line.c:80           packet:         push> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 \n20:30:46.012125 pkt-line.c:80           packet:         push> 0000 \n20:30:46.012145 pkt-line.c:80           packet: receive-pack< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 \n20:30:46.012163 pkt-line.c:80           packet: receive-pack< 0000 \nEnumerating objects: 5, done. \nCounting objects: 100% (5/5), done. \nWriting objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done. \nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\n```\n\n当push收到了服务端`refs/heads/master`的内容之后\n\n```bash\npush< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1\n```\n\n然后对比自己所拥有的commit. 决定发送内容\n\n```bash\npush> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1\n```\n\n这个packet的意思是, 客户端会发送\n`3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90`和`37607550824f6769a97caa25d06a0335970abdb5`之间的内容.\n接下来和fetch如出一辙, 客户端开始计算这两笔commit之前所需要传送的object, 打包之后发送给服务器\n\n## 引用:\n\n- [ProGit](https://git-scm.com/book/zh/v2): Git开源社区官方维护的书籍\n- [Git Protocol v2](https://git-scm.com/docs/protocol-v2): git传输协议的官方文档","source":"_posts/2022-6-30git底层原理.md","raw":"---\ntitle: git底层原理\ndate: 2022-6-30\ntags: [git]\n---\n\ngit底层原理\n\n<!--more-->\n\n## Git的底层原理:\n### Blob 对象\ngit在本质上就是一个键值对(key-value)的数据库. key是根据内容计算出来的hash值. value则是你需要存储的数据. 你可以使用``git hash-object``来确认一段数据的key.\n在此之前, 请重新建一个新的git仓库\n\n```bash\ncd /tmp\nmkdir test-git2\ncd test-git2\ngit init\n```\n```bash\necho 'test content' | git hash-object -w --stdin\n# d670460b4b4aece5915caf5c68d12f560a9fe3e4\n```\n你这时候会发现你的``.git/objects``目录下面多了一个文件\n\n```bash\nls -l .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n# -r--r--r-- 1 cy cy 32 Feb 11 13:19 .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n```\n在这个文件中, 存储的就是一些元信息和test content这个文件内容. 这个文件具体的内容, 可以查看[对象存储](https://git-scm.com/book/zh/v2/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-Git-%E5%AF%B9%E8%B1%A1#_%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8)\n存储完了之后, 你也可以用``git cat-file``命令读取它\n```bash\ngit cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4\n# test content\n```\n你现在应该已经能初步理解git是如何存储信息的了. 任意数据你都可以存到git里. 它是最原始的信息, 我们把这种对象称之为``blob object``\n\n### Tree 对象\n敏锐的同学应该已经发现了, 那文件名存在哪里? 答案是git会单独用另外一种object来存储\n```commandline\ngit update-index --add --cacheinfo 100644 d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n此时你使用运行``git status``会发现Index区域变了\n\n```bash\ngit status\n# HEAD detached from f8f34a1 \n# Changes to be committed: \n#   (use \"git restore --staged <file>...\" to unstage) \n#     new file:   test.txt \n#  \n# Changes not staged for commit: \n#   (use \"git add/rm <file>...\" to update what will be committed) \n#   (use \"git restore <file>...\" to discard changes in working directory) \n#     deleted:    test.txt \n# \n```\n\n``git add``实际上就是``git hash-object``和``git update-index``的组合. ``实际上是把d670460b4b4aece5915caf5c68d12f560a9fe3e4`` 这个object复制到了Index区域\n\n接下来就可以使用``git write-tree``命令.将Index区域的内容写入到一个``Tree Object``中.\n\n```bash\ngit write-tree\n#  80865964295ae2f11d27383e5f9c0b58a8ef21da\ngit cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da\n# 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n### Commit 对象\n\n有了树对象, 我们就可以创建一个提交对象了\n\n```bash\necho 'first commit' | git commit-tree 80865964295ae2f11d27383e5f9c0b58a8ef21da\ne137f356afa88b2b8984c4105326d74826a8c5c1\n```\n\n```bash\ngit log e137f356afa88b2b8984c4105326d74826a8c5c1\n\n# commit e137f356afa88b2b8984c4105326d74826a8c5c1 \n# Author: Cheng Yang <chengyang@xiaomi.com> \n# Date:   Fri Feb 11 19:39:09 2022 +0800 \n \n#     first commit \n```\n\n至此, 我们在不使用``git add``和``git commit``的情况下, 创建了一个提交\n\n### 反过来看看``Commit 对象``\n\ngit里, 万物皆对象.凡是有hash的东西一定是一个对象. 那么我们来从后往前看看, 一个提交里到底有什么?\n\n```bash\ngit cat-file -p e137f356afa88b2b8984c4105326d74826a8c5c1\n# tree 80865964295ae2f11d27383e5f9c0b58a8ef21da \n# author Cheng Yang <chengyang@xiaomi.com> 1644579549 +0800 \n# committer Cheng Yang <chengyang@xiaomi.com> 1644579549 +0800 \n \n# first commit \n```\n\n你会发现, ``Commit Object``也不过是一个普通object, 只不过内容是存储了提交者, 作者, 时间戳, 以及这个提交所包含的``Tree Object``. 一如你运行``git log``所看到的内容\n\n那么我们再次运行``cat-file``查看这个``Tree Object``\n\n```bash\ngit cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da \n# 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt\n```\n\n很显然, 和刚才一样, 这个``Tree Object``的意思是包含``test.txt``这个文件, 文件内容存储在`d670460b4b4aece5915caf5c68d12f560a9fe3e4` 这个对象中\n那么再继续看看这个对象\n\n```bash\ngit cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4 \n# test content \n```\n\n所以, 这个`Commit Object`包含了一个`Tree Object`, 而这个`Tree Object`包含了一个叫`test.txt`, 而`test.txt`文件里的内容是`test content`.\n这里你会注意到, 我们的硬盘中甚至从头到尾都没有出现过一个叫`test.txt`的文件\n\n## 传输协议\n\n### Fetch:\n\n理解git的传输协议, 我们可以使用`GIT_TRACE_PACKET`宏, 让git能自动打印出所有发送的网络包\n```bash\ncd /tmp\nmkdir fetch-test\ncd fetch-test\n\nGIT_TRACE_PACKET=1 git -c protocol.version=1 clone /tmp/test-git1\n```\n\n这个地方设置`protocol.version=1`的原因是因为git默认使用v2协议还是2020年的事, 相当数量的服务器并未支持v2协议, 而且v2协议协商过程会稍微复杂一些, 所以我们使用比较常见的v1先来解释git如何远程传输数据\n\n```bash\nCloning into 'test-git1'... \n20:09:07.319608 pkt-line.c:80           packet:  upload-pack> version 1 \n20:09:07.319670 pkt-line.c:80           packet:        clone< version 1 \n20:09:07.319761 pkt-line.c:80           packet:  upload-pack> 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:09:07.319874 pkt-line.c:80           packet:  upload-pack> 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master \n20:09:07.319886 pkt-line.c:80           packet:  upload-pack> 0000 \n20:09:07.319908 pkt-line.c:80           packet:        clone< 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:09:07.319925 pkt-line.c:80           packet:        clone< 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master \n20:09:07.319929 pkt-line.c:80           packet:        clone< 0000 \ndone. \n20:09:07.321498 pkt-line.c:80           packet:        clone> 0000 \n20:09:07.321532 pkt-line.c:80           packet:  upload-pack< 0000\n```\n\n`<`表示收到, `>`表示发送. `upload-pack>`的意思就是`upload-pack`发送了数据. 而`upload-pack`是服务端上的进程, 其实意思也就是服务端发送了数据.\n在协商协议版本后, 远程服务器发送的第一项数据是一些元数据和能力, 主要是告诉客户端, 服务端支持哪些功能. 在此处我们不深入此处. 而第二项是最重要的\n`4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master`\n这个实际上是在告诉客户端, 服务端所拥有的所有`refs`.在此处我们的服务器只有`master`这么一个分支, 它指向`4cf4037e6bb2016fe30d1af96788ef6f8499d516` 这个`Commit Object`. 那么后面的传输信息也很好理解了. 就是客户端在告诉服务器, 我需要的是`refs/heads/master`这个`ref`上的所有内容.\n`clone`的过程比较简单, 那么增量`fetch`呢? 我们不妨给`test-git1`添加一个change\n\n```bash\ncd /tmp/test-git1\necho 3 > 1.txt\ngit commit -a -s -m \"3rd change\"\n```\n\n此时我们再执行fetch\n\n```bash\ncd /tmp/fetch-test/test-git1\nGIT_TRACE_PACKET=1 git -c protocol.version=1 fetch\n```\n\n```bash\n20:13:55.779809 pkt-line.c:80           packet:  upload-pack> version 1 \n20:13:55.779937 pkt-line.c:80           packet:        fetch< version 1 \n20:13:55.780221 pkt-line.c:80           packet:  upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:13:55.780500 pkt-line.c:80           packet:  upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master \n20:13:55.780531 pkt-line.c:80           packet:  upload-pack> 0000 \n20:13:55.780549 pkt-line.c:80           packet:        fetch< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 \n20:13:55.780596 pkt-line.c:80           packet:        fetch< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master \n20:13:55.780616 pkt-line.c:80           packet:        fetch< 0000 \n20:13:55.781535 pkt-line.c:80           packet:        fetch> want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 \n20:13:55.781553 pkt-line.c:80           packet:        fetch> 0000 \n20:13:55.781617 pkt-line.c:80           packet:        fetch> have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781612 pkt-line.c:80           packet:  upload-pack< want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 \n20:13:55.781628 pkt-line.c:80           packet:        fetch> have 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.781635 pkt-line.c:80           packet:        fetch> done \n20:13:55.781800 pkt-line.c:80           packet:  upload-pack< 0000 \n20:13:55.781819 pkt-line.c:80           packet:  upload-pack< have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781944 pkt-line.c:80           packet:  upload-pack> ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common \n20:13:55.781971 pkt-line.c:80           packet:  upload-pack< have 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.782004 pkt-line.c:80           packet:        fetch< ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common \n20:13:55.782061 pkt-line.c:80           packet:  upload-pack> ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common \n20:13:55.782094 pkt-line.c:80           packet:  upload-pack< done \n20:13:55.782109 pkt-line.c:80           packet:  upload-pack> ACK 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.782122 pkt-line.c:80           packet:        fetch< ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common \n20:13:55.782151 pkt-line.c:80           packet:        fetch< ACK 889cc4292ce266e4607fd12aecb482cb89b1430d \n20:13:55.784146 pkt-line.c:80           packet:     sideband< \\2Enumerating objects: 5, done. \nremote: Enumerating objects: 5, done. \n20:13:55.784171 pkt-line.c:80           packet:     sideband< \\2Counting objects:  20% (1/5)\\15 \n20:13:55.784180 pkt-line.c:80           packet:     sideband< \\2Counting objects:  40% (2/5)\\15 \n20:13:55.784193 pkt-line.c:80           packet:     sideband< \\2Counting objects:  60% (3/5)\\15 \n20:13:55.784200 pkt-line.c:80           packet:     sideband< \\2Counting objects:  80% (4/5)\\15 \n20:13:55.784208 pkt-line.c:80           packet:     sideband< \\2Counting objects: 100% (5/5)\\15Counting objects: 100% (5/5), done. \nremote: Counting objects: 100% (5/5), done. \n20:13:55.784401 pkt-line.c:80           packet:     sideband< \\2Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 \nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 \n20:13:55.784421 pkt-line.c:80           packet:     sideband< PACK ... \n20:13:55.784526 pkt-line.c:80           packet:  upload-pack> 0000 \n20:13:55.784575 pkt-line.c:80           packet:     sideband< 0000 \nUnpacking objects: 100% (3/3), 360 bytes | 360.00 KiB/s, done. \nFrom /tmp/test-git1 \n   4cf4037..3fb2316  master     -> origin/master \n```\n\n最开始, 仍旧是服务器发送了他拥有的`refs`\n`upload-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master`\n此时, 客户端收到了之后, 就和自己的`refs/heads/master`做对比. 它告诉了服务器, 我需要哪个commit, 已经有了哪个commit\n\n```bash\n20:13:55.781535 pkt-line.c:80           packet:        fetch> want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed  \n20:13:55.781553 pkt-line.c:80           packet:        fetch> 0000 \n20:13:55.781617 pkt-line.c:80           packet:        fetch> have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 \n20:13:55.781628 pkt-line.c:80           packet:        fetch> have 889cc4292ce266e4607fd12aecb482cb89b1430d\n```\n\n这时候, git服务器的最优做法, 是指发送客户端没有的东西, 而不是发送整个的`refs/heads/master`\n接下来的`Enumerating Objects`和`Couting Objects`都是在整理\"服务端有, 客户端没有的东西\". 并且发送回来.\n\n### Push:\npush的过程其实相对来说就是fetch的逆向操作\n\n```bash\ncd /tmp/fetch-test/test-git1\ngit checkout origin/master\necho 4 > 1.txt\ngit commit -a -s -m \"4th change\"\n\nGIT_TRACE_PACKET=1 git -c protocol.version=1 push origin  HEAD:master\n```\n\n这条命令的意思是, 把本地`HEAD`指向的内容, push到远程`refs/heads/master`上.这里可以注意下, 如果你想, 你甚至可以把HEAD替换为其他任意hash值\n输出会有一些报错, 只是因为`test-git1`不是`bare`仓库. 这不影响我们分析\n\n```bash\n20:30:46.011723 pkt-line.c:80           packet: receive-pack> version 1 \n20:30:46.011807 pkt-line.c:80           packet:         push< version 1 \n20:30:46.011846 pkt-line.c:80           packet: receive-pack> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 \n20:30:46.011865 pkt-line.c:80           packet: receive-pack> 0000 \n20:30:46.011867 pkt-line.c:80           packet:         push< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 \n20:30:46.011878 pkt-line.c:80           packet:         push< 0000 \n20:30:46.012115 pkt-line.c:80           packet:         push> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 \n20:30:46.012125 pkt-line.c:80           packet:         push> 0000 \n20:30:46.012145 pkt-line.c:80           packet: receive-pack< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 \n20:30:46.012163 pkt-line.c:80           packet: receive-pack< 0000 \nEnumerating objects: 5, done. \nCounting objects: 100% (5/5), done. \nWriting objects: 100% (3/3), 380 bytes | 380.00 KiB/s, done. \nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\n```\n\n当push收到了服务端`refs/heads/master`的内容之后\n\n```bash\npush< 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1\n```\n\n然后对比自己所拥有的commit. 决定发送内容\n\n```bash\npush> 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1\n```\n\n这个packet的意思是, 客户端会发送\n`3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90`和`37607550824f6769a97caa25d06a0335970abdb5`之间的内容.\n接下来和fetch如出一辙, 客户端开始计算这两笔commit之前所需要传送的object, 打包之后发送给服务器\n\n## 引用:\n\n- [ProGit](https://git-scm.com/book/zh/v2): Git开源社区官方维护的书籍\n- [Git Protocol v2](https://git-scm.com/docs/protocol-v2): git传输协议的官方文档","slug":"2022-6-30git底层原理","published":1,"updated":"2022-06-30T15:22:09.312Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof1000pnkvveiwc43jl","content":"<p>git底层原理</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Git的底层原理\"><a href=\"#Git的底层原理\" class=\"headerlink\" title=\"Git的底层原理:\"></a>Git的底层原理:</h2><h3 id=\"Blob-对象\"><a href=\"#Blob-对象\" class=\"headerlink\" title=\"Blob 对象\"></a>Blob 对象</h3><p>git在本质上就是一个键值对(key-value)的数据库. key是根据内容计算出来的hash值. value则是你需要存储的数据. 你可以使用<code>git hash-object</code>来确认一段数据的key.<br>在此之前, 请重新建一个新的git仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> test-git2</span><br><span class=\"line\"><span class=\"built_in\">cd</span> test-git2</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;test content&#x27;</span> | git hash-object -w --stdin</span><br><span class=\"line\"><span class=\"comment\"># d670460b4b4aece5915caf5c68d12f560a9fe3e4</span></span><br></pre></td></tr></table></figure>\n<p>你这时候会发现你的<code>.git/objects</code>目录下面多了一个文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> -l .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</span><br><span class=\"line\"><span class=\"comment\"># -r--r--r-- 1 cy cy 32 Feb 11 13:19 .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</span></span><br></pre></td></tr></table></figure>\n<p>在这个文件中, 存储的就是一些元信息和test content这个文件内容. 这个文件具体的内容, 可以查看<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-Git-%E5%AF%B9%E8%B1%A1#_%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8\">对象存储</a><br>存储完了之后, 你也可以用<code>git cat-file</code>命令读取它</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4</span><br><span class=\"line\"><span class=\"comment\"># test content</span></span><br></pre></td></tr></table></figure>\n<p>你现在应该已经能初步理解git是如何存储信息的了. 任意数据你都可以存到git里. 它是最原始的信息, 我们把这种对象称之为<code>blob object</code></p>\n<h3 id=\"Tree-对象\"><a href=\"#Tree-对象\" class=\"headerlink\" title=\"Tree 对象\"></a>Tree 对象</h3><p>敏锐的同学应该已经发现了, 那文件名存在哪里? 答案是git会单独用另外一种object来存储</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git update-index --add --cacheinfo 100644 d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span><br></pre></td></tr></table></figure>\n\n<p>此时你使用运行<code>git status</code>会发现Index区域变了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\"><span class=\"comment\"># HEAD detached from f8f34a1 </span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed: </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) </span></span><br><span class=\"line\"><span class=\"comment\">#     new file:   test.txt </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Changes not staged for commit: </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git add/rm &lt;file&gt;...&quot; to update what will be committed) </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory) </span></span><br><span class=\"line\"><span class=\"comment\">#     deleted:    test.txt </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br></pre></td></tr></table></figure>\n\n<p><code>git add</code>实际上就是<code>git hash-object</code>和<code>git update-index</code>的组合. <code>实际上是把d670460b4b4aece5915caf5c68d12f560a9fe3e4</code> 这个object复制到了Index区域</p>\n<p>接下来就可以使用<code>git write-tree</code>命令.将Index区域的内容写入到一个<code>Tree Object</code>中.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git write-tree</span><br><span class=\"line\"><span class=\"comment\">#  80865964295ae2f11d27383e5f9c0b58a8ef21da</span></span><br><span class=\"line\">git cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da</span><br><span class=\"line\"><span class=\"comment\"># 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Commit-对象\"><a href=\"#Commit-对象\" class=\"headerlink\" title=\"Commit 对象\"></a>Commit 对象</h3><p>有了树对象, 我们就可以创建一个提交对象了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;first commit&#x27;</span> | git commit-tree 80865964295ae2f11d27383e5f9c0b58a8ef21da</span><br><span class=\"line\">e137f356afa88b2b8984c4105326d74826a8c5c1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> e137f356afa88b2b8984c4105326d74826a8c5c1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># commit e137f356afa88b2b8984c4105326d74826a8c5c1 </span></span><br><span class=\"line\"><span class=\"comment\"># Author: Cheng Yang &lt;chengyang@xiaomi.com&gt; </span></span><br><span class=\"line\"><span class=\"comment\"># Date:   Fri Feb 11 19:39:09 2022 +0800 </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#     first commit </span></span><br></pre></td></tr></table></figure>\n\n<p>至此, 我们在不使用<code>git add</code>和<code>git commit</code>的情况下, 创建了一个提交</p>\n<h3 id=\"反过来看看Commit-对象\"><a href=\"#反过来看看Commit-对象\" class=\"headerlink\" title=\"反过来看看Commit 对象\"></a>反过来看看<code>Commit 对象</code></h3><p>git里, 万物皆对象.凡是有hash的东西一定是一个对象. 那么我们来从后往前看看, 一个提交里到底有什么?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p e137f356afa88b2b8984c4105326d74826a8c5c1</span><br><span class=\"line\"><span class=\"comment\"># tree 80865964295ae2f11d27383e5f9c0b58a8ef21da </span></span><br><span class=\"line\"><span class=\"comment\"># author Cheng Yang &lt;chengyang@xiaomi.com&gt; 1644579549 +0800 </span></span><br><span class=\"line\"><span class=\"comment\"># committer Cheng Yang &lt;chengyang@xiaomi.com&gt; 1644579549 +0800 </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># first commit </span></span><br></pre></td></tr></table></figure>\n\n<p>你会发现, <code>Commit Object</code>也不过是一个普通object, 只不过内容是存储了提交者, 作者, 时间戳, 以及这个提交所包含的<code>Tree Object</code>. 一如你运行<code>git log</code>所看到的内容</p>\n<p>那么我们再次运行<code>cat-file</code>查看这个<code>Tree Object</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da </span><br><span class=\"line\"><span class=\"comment\"># 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>很显然, 和刚才一样, 这个<code>Tree Object</code>的意思是包含<code>test.txt</code>这个文件, 文件内容存储在<code>d670460b4b4aece5915caf5c68d12f560a9fe3e4</code> 这个对象中<br>那么再继续看看这个对象</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4 </span><br><span class=\"line\"><span class=\"comment\"># test content </span></span><br></pre></td></tr></table></figure>\n\n<p>所以, 这个<code>Commit Object</code>包含了一个<code>Tree Object</code>, 而这个<code>Tree Object</code>包含了一个叫<code>test.txt</code>, 而<code>test.txt</code>文件里的内容是<code>test content</code>.<br>这里你会注意到, 我们的硬盘中甚至从头到尾都没有出现过一个叫<code>test.txt</code>的文件</p>\n<h2 id=\"传输协议\"><a href=\"#传输协议\" class=\"headerlink\" title=\"传输协议\"></a>传输协议</h2><h3 id=\"Fetch\"><a href=\"#Fetch\" class=\"headerlink\" title=\"Fetch:\"></a>Fetch:</h3><p>理解git的传输协议, 我们可以使用<code>GIT_TRACE_PACKET</code>宏, 让git能自动打印出所有发送的网络包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> fetch-test</span><br><span class=\"line\"><span class=\"built_in\">cd</span> fetch-test</span><br><span class=\"line\"></span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 <span class=\"built_in\">clone</span> /tmp/test-git1</span><br></pre></td></tr></table></figure>\n\n<p>这个地方设置<code>protocol.version=1</code>的原因是因为git默认使用v2协议还是2020年的事, 相当数量的服务器并未支持v2协议, 而且v2协议协商过程会稍微复杂一些, 所以我们使用比较常见的v1先来解释git如何远程传输数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">&#x27;test-git1&#x27;</span>... </span><br><span class=\"line\">20:09:07.319608 pkt-line.c:80           packet:  upload-pack&gt; version 1 </span><br><span class=\"line\">20:09:07.319670 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; version 1 </span><br><span class=\"line\">20:09:07.319761 pkt-line.c:80           packet:  upload-pack&gt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:09:07.319874 pkt-line.c:80           packet:  upload-pack&gt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master </span><br><span class=\"line\">20:09:07.319886 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:09:07.319908 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:09:07.319925 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master </span><br><span class=\"line\">20:09:07.319929 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 0000 </span><br><span class=\"line\"><span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:09:07.321498 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&gt; 0000 </span><br><span class=\"line\">20:09:07.321532 pkt-line.c:80           packet:  upload-pack&lt; 0000</span><br></pre></td></tr></table></figure>\n\n<p><code>&lt;</code>表示收到, <code>&gt;</code>表示发送. <code>upload-pack&gt;</code>的意思就是<code>upload-pack</code>发送了数据. 而<code>upload-pack</code>是服务端上的进程, 其实意思也就是服务端发送了数据.<br>在协商协议版本后, 远程服务器发送的第一项数据是一些元数据和能力, 主要是告诉客户端, 服务端支持哪些功能. 在此处我们不深入此处. 而第二项是最重要的<br><code>4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master</code><br>这个实际上是在告诉客户端, 服务端所拥有的所有<code>refs</code>.在此处我们的服务器只有<code>master</code>这么一个分支, 它指向<code>4cf4037e6bb2016fe30d1af96788ef6f8499d516</code> 这个<code>Commit Object</code>. 那么后面的传输信息也很好理解了. 就是客户端在告诉服务器, 我需要的是<code>refs/heads/master</code>这个<code>ref</code>上的所有内容.<br><code>clone</code>的过程比较简单, 那么增量<code>fetch</code>呢? 我们不妨给<code>test-git1</code>添加一个change</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/test-git1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 3 &gt; 1.txt</span><br><span class=\"line\">git commit -a -s -m <span class=\"string\">&quot;3rd change&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>此时我们再执行fetch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/fetch-test/test-git1</span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 fetch</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:13:55.779809 pkt-line.c:80           packet:  upload-pack&gt; version 1 </span><br><span class=\"line\">20:13:55.779937 pkt-line.c:80           packet:        fetch&lt; version 1 </span><br><span class=\"line\">20:13:55.780221 pkt-line.c:80           packet:  upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.780500 pkt-line.c:80           packet:  upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master </span><br><span class=\"line\">20:13:55.780531 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:13:55.780549 pkt-line.c:80           packet:        fetch&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.780596 pkt-line.c:80           packet:        fetch&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master </span><br><span class=\"line\">20:13:55.780616 pkt-line.c:80           packet:        fetch&lt; 0000 </span><br><span class=\"line\">20:13:55.781535 pkt-line.c:80           packet:        fetch&gt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.781553 pkt-line.c:80           packet:        fetch&gt; 0000 </span><br><span class=\"line\">20:13:55.781617 pkt-line.c:80           packet:        fetch&gt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781612 pkt-line.c:80           packet:  upload-pack&lt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.781628 pkt-line.c:80           packet:        fetch&gt; have 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.781635 pkt-line.c:80           packet:        fetch&gt; <span class=\"keyword\">done</span> </span><br><span class=\"line\">20:13:55.781800 pkt-line.c:80           packet:  upload-pack&lt; 0000 </span><br><span class=\"line\">20:13:55.781819 pkt-line.c:80           packet:  upload-pack&lt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781944 pkt-line.c:80           packet:  upload-pack&gt; ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common </span><br><span class=\"line\">20:13:55.781971 pkt-line.c:80           packet:  upload-pack&lt; have 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.782004 pkt-line.c:80           packet:        fetch&lt; ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common </span><br><span class=\"line\">20:13:55.782061 pkt-line.c:80           packet:  upload-pack&gt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common </span><br><span class=\"line\">20:13:55.782094 pkt-line.c:80           packet:  upload-pack&lt; <span class=\"keyword\">done</span> </span><br><span class=\"line\">20:13:55.782109 pkt-line.c:80           packet:  upload-pack&gt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.782122 pkt-line.c:80           packet:        fetch&lt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common </span><br><span class=\"line\">20:13:55.782151 pkt-line.c:80           packet:        fetch&lt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.784146 pkt-line.c:80           packet:     sideband&lt; \\2Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">remote: Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:13:55.784171 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  20% (1/5)\\15 </span><br><span class=\"line\">20:13:55.784180 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  40% (2/5)\\15 </span><br><span class=\"line\">20:13:55.784193 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  60% (3/5)\\15 </span><br><span class=\"line\">20:13:55.784200 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  80% (4/5)\\15 </span><br><span class=\"line\">20:13:55.784208 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects: 100% (5/5)\\15Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">remote: Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:13:55.784401 pkt-line.c:80           packet:     sideband&lt; \\2Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 </span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 </span><br><span class=\"line\">20:13:55.784421 pkt-line.c:80           packet:     sideband&lt; PACK ... </span><br><span class=\"line\">20:13:55.784526 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:13:55.784575 pkt-line.c:80           packet:     sideband&lt; 0000 </span><br><span class=\"line\">Unpacking objects: 100% (3/3), 360 bytes | 360.00 KiB/s, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">From /tmp/test-git1 </span><br><span class=\"line\">   4cf4037..3fb2316  master     -&gt; origin/master </span><br></pre></td></tr></table></figure>\n\n<p>最开始, 仍旧是服务器发送了他拥有的<code>refs</code><br><code>upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master</code><br>此时, 客户端收到了之后, 就和自己的<code>refs/heads/master</code>做对比. 它告诉了服务器, 我需要哪个commit, 已经有了哪个commit</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:13:55.781535 pkt-line.c:80           packet:        fetch&gt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed  </span><br><span class=\"line\">20:13:55.781553 pkt-line.c:80           packet:        fetch&gt; 0000 </span><br><span class=\"line\">20:13:55.781617 pkt-line.c:80           packet:        fetch&gt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781628 pkt-line.c:80           packet:        fetch&gt; have 889cc4292ce266e4607fd12aecb482cb89b1430d</span><br></pre></td></tr></table></figure>\n\n<p>这时候, git服务器的最优做法, 是指发送客户端没有的东西, 而不是发送整个的<code>refs/heads/master</code><br>接下来的<code>Enumerating Objects</code>和<code>Couting Objects</code>都是在整理”服务端有, 客户端没有的东西”. 并且发送回来.</p>\n<h3 id=\"Push\"><a href=\"#Push\" class=\"headerlink\" title=\"Push:\"></a>Push:</h3><p>push的过程其实相对来说就是fetch的逆向操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/fetch-test/test-git1</span><br><span class=\"line\">git checkout origin/master</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 4 &gt; 1.txt</span><br><span class=\"line\">git commit -a -s -m <span class=\"string\">&quot;4th change&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 push origin  HEAD:master</span><br></pre></td></tr></table></figure>\n\n<p>这条命令的意思是, 把本地<code>HEAD</code>指向的内容, push到远程<code>refs/heads/master</code>上.这里可以注意下, 如果你想, 你甚至可以把HEAD替换为其他任意hash值<br>输出会有一些报错, 只是因为<code>test-git1</code>不是<code>bare</code>仓库. 这不影响我们分析</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:30:46.011723 pkt-line.c:80           packet: receive-pack&gt; version 1 </span><br><span class=\"line\">20:30:46.011807 pkt-line.c:80           packet:         push&lt; version 1 </span><br><span class=\"line\">20:30:46.011846 pkt-line.c:80           packet: receive-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.011865 pkt-line.c:80           packet: receive-pack&gt; 0000 </span><br><span class=\"line\">20:30:46.011867 pkt-line.c:80           packet:         push&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.011878 pkt-line.c:80           packet:         push&lt; 0000 </span><br><span class=\"line\">20:30:46.012115 pkt-line.c:80           packet:         push&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.012125 pkt-line.c:80           packet:         push&gt; 0000 </span><br><span class=\"line\">20:30:46.012145 pkt-line.c:80           packet: receive-pack&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.012163 pkt-line.c:80           packet: receive-pack&lt; 0000 </span><br><span class=\"line\">Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br></pre></td></tr></table></figure>\n\n<p>当push收到了服务端<code>refs/heads/master</code>的内容之后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1</span><br></pre></td></tr></table></figure>\n\n<p>然后对比自己所拥有的commit. 决定发送内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1</span><br></pre></td></tr></table></figure>\n\n<p>这个packet的意思是, 客户端会发送<br><code>3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90</code>和<code>37607550824f6769a97caa25d06a0335970abdb5</code>之间的内容.<br>接下来和fetch如出一辙, 客户端开始计算这两笔commit之前所需要传送的object, 打包之后发送给服务器</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用:\"></a>引用:</h2><ul>\n<li><a href=\"https://git-scm.com/book/zh/v2\">ProGit</a>: Git开源社区官方维护的书籍</li>\n<li><a href=\"https://git-scm.com/docs/protocol-v2\">Git Protocol v2</a>: git传输协议的官方文档</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>git底层原理</p>","more":"<h2 id=\"Git的底层原理\"><a href=\"#Git的底层原理\" class=\"headerlink\" title=\"Git的底层原理:\"></a>Git的底层原理:</h2><h3 id=\"Blob-对象\"><a href=\"#Blob-对象\" class=\"headerlink\" title=\"Blob 对象\"></a>Blob 对象</h3><p>git在本质上就是一个键值对(key-value)的数据库. key是根据内容计算出来的hash值. value则是你需要存储的数据. 你可以使用<code>git hash-object</code>来确认一段数据的key.<br>在此之前, 请重新建一个新的git仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> test-git2</span><br><span class=\"line\"><span class=\"built_in\">cd</span> test-git2</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;test content&#x27;</span> | git hash-object -w --stdin</span><br><span class=\"line\"><span class=\"comment\"># d670460b4b4aece5915caf5c68d12f560a9fe3e4</span></span><br></pre></td></tr></table></figure>\n<p>你这时候会发现你的<code>.git/objects</code>目录下面多了一个文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> -l .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</span><br><span class=\"line\"><span class=\"comment\"># -r--r--r-- 1 cy cy 32 Feb 11 13:19 .git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</span></span><br></pre></td></tr></table></figure>\n<p>在这个文件中, 存储的就是一些元信息和test content这个文件内容. 这个文件具体的内容, 可以查看<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-Git-%E5%AF%B9%E8%B1%A1#_%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8\">对象存储</a><br>存储完了之后, 你也可以用<code>git cat-file</code>命令读取它</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4</span><br><span class=\"line\"><span class=\"comment\"># test content</span></span><br></pre></td></tr></table></figure>\n<p>你现在应该已经能初步理解git是如何存储信息的了. 任意数据你都可以存到git里. 它是最原始的信息, 我们把这种对象称之为<code>blob object</code></p>\n<h3 id=\"Tree-对象\"><a href=\"#Tree-对象\" class=\"headerlink\" title=\"Tree 对象\"></a>Tree 对象</h3><p>敏锐的同学应该已经发现了, 那文件名存在哪里? 答案是git会单独用另外一种object来存储</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git update-index --add --cacheinfo 100644 d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span><br></pre></td></tr></table></figure>\n\n<p>此时你使用运行<code>git status</code>会发现Index区域变了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\"><span class=\"comment\"># HEAD detached from f8f34a1 </span></span><br><span class=\"line\"><span class=\"comment\"># Changes to be committed: </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage) </span></span><br><span class=\"line\"><span class=\"comment\">#     new file:   test.txt </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Changes not staged for commit: </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git add/rm &lt;file&gt;...&quot; to update what will be committed) </span></span><br><span class=\"line\"><span class=\"comment\">#   (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory) </span></span><br><span class=\"line\"><span class=\"comment\">#     deleted:    test.txt </span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br></pre></td></tr></table></figure>\n\n<p><code>git add</code>实际上就是<code>git hash-object</code>和<code>git update-index</code>的组合. <code>实际上是把d670460b4b4aece5915caf5c68d12f560a9fe3e4</code> 这个object复制到了Index区域</p>\n<p>接下来就可以使用<code>git write-tree</code>命令.将Index区域的内容写入到一个<code>Tree Object</code>中.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git write-tree</span><br><span class=\"line\"><span class=\"comment\">#  80865964295ae2f11d27383e5f9c0b58a8ef21da</span></span><br><span class=\"line\">git cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da</span><br><span class=\"line\"><span class=\"comment\"># 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Commit-对象\"><a href=\"#Commit-对象\" class=\"headerlink\" title=\"Commit 对象\"></a>Commit 对象</h3><p>有了树对象, 我们就可以创建一个提交对象了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;first commit&#x27;</span> | git commit-tree 80865964295ae2f11d27383e5f9c0b58a8ef21da</span><br><span class=\"line\">e137f356afa88b2b8984c4105326d74826a8c5c1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> e137f356afa88b2b8984c4105326d74826a8c5c1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># commit e137f356afa88b2b8984c4105326d74826a8c5c1 </span></span><br><span class=\"line\"><span class=\"comment\"># Author: Cheng Yang &lt;chengyang@xiaomi.com&gt; </span></span><br><span class=\"line\"><span class=\"comment\"># Date:   Fri Feb 11 19:39:09 2022 +0800 </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#     first commit </span></span><br></pre></td></tr></table></figure>\n\n<p>至此, 我们在不使用<code>git add</code>和<code>git commit</code>的情况下, 创建了一个提交</p>\n<h3 id=\"反过来看看Commit-对象\"><a href=\"#反过来看看Commit-对象\" class=\"headerlink\" title=\"反过来看看Commit 对象\"></a>反过来看看<code>Commit 对象</code></h3><p>git里, 万物皆对象.凡是有hash的东西一定是一个对象. 那么我们来从后往前看看, 一个提交里到底有什么?</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p e137f356afa88b2b8984c4105326d74826a8c5c1</span><br><span class=\"line\"><span class=\"comment\"># tree 80865964295ae2f11d27383e5f9c0b58a8ef21da </span></span><br><span class=\"line\"><span class=\"comment\"># author Cheng Yang &lt;chengyang@xiaomi.com&gt; 1644579549 +0800 </span></span><br><span class=\"line\"><span class=\"comment\"># committer Cheng Yang &lt;chengyang@xiaomi.com&gt; 1644579549 +0800 </span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># first commit </span></span><br></pre></td></tr></table></figure>\n\n<p>你会发现, <code>Commit Object</code>也不过是一个普通object, 只不过内容是存储了提交者, 作者, 时间戳, 以及这个提交所包含的<code>Tree Object</code>. 一如你运行<code>git log</code>所看到的内容</p>\n<p>那么我们再次运行<code>cat-file</code>查看这个<code>Tree Object</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p 80865964295ae2f11d27383e5f9c0b58a8ef21da </span><br><span class=\"line\"><span class=\"comment\"># 100644 blob d670460b4b4aece5915caf5c68d12f560a9fe3e4 test.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>很显然, 和刚才一样, 这个<code>Tree Object</code>的意思是包含<code>test.txt</code>这个文件, 文件内容存储在<code>d670460b4b4aece5915caf5c68d12f560a9fe3e4</code> 这个对象中<br>那么再继续看看这个对象</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4 </span><br><span class=\"line\"><span class=\"comment\"># test content </span></span><br></pre></td></tr></table></figure>\n\n<p>所以, 这个<code>Commit Object</code>包含了一个<code>Tree Object</code>, 而这个<code>Tree Object</code>包含了一个叫<code>test.txt</code>, 而<code>test.txt</code>文件里的内容是<code>test content</code>.<br>这里你会注意到, 我们的硬盘中甚至从头到尾都没有出现过一个叫<code>test.txt</code>的文件</p>\n<h2 id=\"传输协议\"><a href=\"#传输协议\" class=\"headerlink\" title=\"传输协议\"></a>传输协议</h2><h3 id=\"Fetch\"><a href=\"#Fetch\" class=\"headerlink\" title=\"Fetch:\"></a>Fetch:</h3><p>理解git的传输协议, 我们可以使用<code>GIT_TRACE_PACKET</code>宏, 让git能自动打印出所有发送的网络包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> fetch-test</span><br><span class=\"line\"><span class=\"built_in\">cd</span> fetch-test</span><br><span class=\"line\"></span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 <span class=\"built_in\">clone</span> /tmp/test-git1</span><br></pre></td></tr></table></figure>\n\n<p>这个地方设置<code>protocol.version=1</code>的原因是因为git默认使用v2协议还是2020年的事, 相当数量的服务器并未支持v2协议, 而且v2协议协商过程会稍微复杂一些, 所以我们使用比较常见的v1先来解释git如何远程传输数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">&#x27;test-git1&#x27;</span>... </span><br><span class=\"line\">20:09:07.319608 pkt-line.c:80           packet:  upload-pack&gt; version 1 </span><br><span class=\"line\">20:09:07.319670 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; version 1 </span><br><span class=\"line\">20:09:07.319761 pkt-line.c:80           packet:  upload-pack&gt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:09:07.319874 pkt-line.c:80           packet:  upload-pack&gt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master </span><br><span class=\"line\">20:09:07.319886 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:09:07.319908 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:09:07.319925 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master </span><br><span class=\"line\">20:09:07.319929 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&lt; 0000 </span><br><span class=\"line\"><span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:09:07.321498 pkt-line.c:80           packet:        <span class=\"built_in\">clone</span>&gt; 0000 </span><br><span class=\"line\">20:09:07.321532 pkt-line.c:80           packet:  upload-pack&lt; 0000</span><br></pre></td></tr></table></figure>\n\n<p><code>&lt;</code>表示收到, <code>&gt;</code>表示发送. <code>upload-pack&gt;</code>的意思就是<code>upload-pack</code>发送了数据. 而<code>upload-pack</code>是服务端上的进程, 其实意思也就是服务端发送了数据.<br>在协商协议版本后, 远程服务器发送的第一项数据是一些元数据和能力, 主要是告诉客户端, 服务端支持哪些功能. 在此处我们不深入此处. 而第二项是最重要的<br><code>4cf4037e6bb2016fe30d1af96788ef6f8499d516 refs/heads/master</code><br>这个实际上是在告诉客户端, 服务端所拥有的所有<code>refs</code>.在此处我们的服务器只有<code>master</code>这么一个分支, 它指向<code>4cf4037e6bb2016fe30d1af96788ef6f8499d516</code> 这个<code>Commit Object</code>. 那么后面的传输信息也很好理解了. 就是客户端在告诉服务器, 我需要的是<code>refs/heads/master</code>这个<code>ref</code>上的所有内容.<br><code>clone</code>的过程比较简单, 那么增量<code>fetch</code>呢? 我们不妨给<code>test-git1</code>添加一个change</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/test-git1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 3 &gt; 1.txt</span><br><span class=\"line\">git commit -a -s -m <span class=\"string\">&quot;3rd change&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>此时我们再执行fetch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/fetch-test/test-git1</span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 fetch</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:13:55.779809 pkt-line.c:80           packet:  upload-pack&gt; version 1 </span><br><span class=\"line\">20:13:55.779937 pkt-line.c:80           packet:        fetch&lt; version 1 </span><br><span class=\"line\">20:13:55.780221 pkt-line.c:80           packet:  upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.780500 pkt-line.c:80           packet:  upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master </span><br><span class=\"line\">20:13:55.780531 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:13:55.780549 pkt-line.c:80           packet:        fetch&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed allow-tip-sha1-in-want allow-reachable-sha1-in-want symref=HEAD:refs/heads/master object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.780596 pkt-line.c:80           packet:        fetch&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master </span><br><span class=\"line\">20:13:55.780616 pkt-line.c:80           packet:        fetch&lt; 0000 </span><br><span class=\"line\">20:13:55.781535 pkt-line.c:80           packet:        fetch&gt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.781553 pkt-line.c:80           packet:        fetch&gt; 0000 </span><br><span class=\"line\">20:13:55.781617 pkt-line.c:80           packet:        fetch&gt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781612 pkt-line.c:80           packet:  upload-pack&lt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed side-band-64k thin-pack include-tag ofs-delta deepen-since deepen-not agent=git/2.35.1 </span><br><span class=\"line\">20:13:55.781628 pkt-line.c:80           packet:        fetch&gt; have 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.781635 pkt-line.c:80           packet:        fetch&gt; <span class=\"keyword\">done</span> </span><br><span class=\"line\">20:13:55.781800 pkt-line.c:80           packet:  upload-pack&lt; 0000 </span><br><span class=\"line\">20:13:55.781819 pkt-line.c:80           packet:  upload-pack&lt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781944 pkt-line.c:80           packet:  upload-pack&gt; ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common </span><br><span class=\"line\">20:13:55.781971 pkt-line.c:80           packet:  upload-pack&lt; have 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.782004 pkt-line.c:80           packet:        fetch&lt; ACK 4cf4037e6bb2016fe30d1af96788ef6f8499d516 common </span><br><span class=\"line\">20:13:55.782061 pkt-line.c:80           packet:  upload-pack&gt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common </span><br><span class=\"line\">20:13:55.782094 pkt-line.c:80           packet:  upload-pack&lt; <span class=\"keyword\">done</span> </span><br><span class=\"line\">20:13:55.782109 pkt-line.c:80           packet:  upload-pack&gt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.782122 pkt-line.c:80           packet:        fetch&lt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d common </span><br><span class=\"line\">20:13:55.782151 pkt-line.c:80           packet:        fetch&lt; ACK 889cc4292ce266e4607fd12aecb482cb89b1430d </span><br><span class=\"line\">20:13:55.784146 pkt-line.c:80           packet:     sideband&lt; \\2Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">remote: Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:13:55.784171 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  20% (1/5)\\15 </span><br><span class=\"line\">20:13:55.784180 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  40% (2/5)\\15 </span><br><span class=\"line\">20:13:55.784193 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  60% (3/5)\\15 </span><br><span class=\"line\">20:13:55.784200 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects:  80% (4/5)\\15 </span><br><span class=\"line\">20:13:55.784208 pkt-line.c:80           packet:     sideband&lt; \\2Counting objects: 100% (5/5)\\15Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">remote: Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">20:13:55.784401 pkt-line.c:80           packet:     sideband&lt; \\2Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 </span><br><span class=\"line\">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 </span><br><span class=\"line\">20:13:55.784421 pkt-line.c:80           packet:     sideband&lt; PACK ... </span><br><span class=\"line\">20:13:55.784526 pkt-line.c:80           packet:  upload-pack&gt; 0000 </span><br><span class=\"line\">20:13:55.784575 pkt-line.c:80           packet:     sideband&lt; 0000 </span><br><span class=\"line\">Unpacking objects: 100% (3/3), 360 bytes | 360.00 KiB/s, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">From /tmp/test-git1 </span><br><span class=\"line\">   4cf4037..3fb2316  master     -&gt; origin/master </span><br></pre></td></tr></table></figure>\n\n<p>最开始, 仍旧是服务器发送了他拥有的<code>refs</code><br><code>upload-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master</code><br>此时, 客户端收到了之后, 就和自己的<code>refs/heads/master</code>做对比. 它告诉了服务器, 我需要哪个commit, 已经有了哪个commit</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:13:55.781535 pkt-line.c:80           packet:        fetch&gt; want 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 multi_ack_detailed  </span><br><span class=\"line\">20:13:55.781553 pkt-line.c:80           packet:        fetch&gt; 0000 </span><br><span class=\"line\">20:13:55.781617 pkt-line.c:80           packet:        fetch&gt; have 4cf4037e6bb2016fe30d1af96788ef6f8499d516 </span><br><span class=\"line\">20:13:55.781628 pkt-line.c:80           packet:        fetch&gt; have 889cc4292ce266e4607fd12aecb482cb89b1430d</span><br></pre></td></tr></table></figure>\n\n<p>这时候, git服务器的最优做法, 是指发送客户端没有的东西, 而不是发送整个的<code>refs/heads/master</code><br>接下来的<code>Enumerating Objects</code>和<code>Couting Objects</code>都是在整理”服务端有, 客户端没有的东西”. 并且发送回来.</p>\n<h3 id=\"Push\"><a href=\"#Push\" class=\"headerlink\" title=\"Push:\"></a>Push:</h3><p>push的过程其实相对来说就是fetch的逆向操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/fetch-test/test-git1</span><br><span class=\"line\">git checkout origin/master</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 4 &gt; 1.txt</span><br><span class=\"line\">git commit -a -s -m <span class=\"string\">&quot;4th change&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">GIT_TRACE_PACKET=1 git -c protocol.version=1 push origin  HEAD:master</span><br></pre></td></tr></table></figure>\n\n<p>这条命令的意思是, 把本地<code>HEAD</code>指向的内容, push到远程<code>refs/heads/master</code>上.这里可以注意下, 如果你想, 你甚至可以把HEAD替换为其他任意hash值<br>输出会有一些报错, 只是因为<code>test-git1</code>不是<code>bare</code>仓库. 这不影响我们分析</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20:30:46.011723 pkt-line.c:80           packet: receive-pack&gt; version 1 </span><br><span class=\"line\">20:30:46.011807 pkt-line.c:80           packet:         push&lt; version 1 </span><br><span class=\"line\">20:30:46.011846 pkt-line.c:80           packet: receive-pack&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.011865 pkt-line.c:80           packet: receive-pack&gt; 0000 </span><br><span class=\"line\">20:30:46.011867 pkt-line.c:80           packet:         push&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.011878 pkt-line.c:80           packet:         push&lt; 0000 </span><br><span class=\"line\">20:30:46.012115 pkt-line.c:80           packet:         push&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.012125 pkt-line.c:80           packet:         push&gt; 0000 </span><br><span class=\"line\">20:30:46.012145 pkt-line.c:80           packet: receive-pack&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1 </span><br><span class=\"line\">20:30:46.012163 pkt-line.c:80           packet: receive-pack&lt; 0000 </span><br><span class=\"line\">Enumerating objects: 5, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Counting objects: 100% (5/5), <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Writing objects: 100% (3/3), 380 bytes | 380.00 KiB/s, <span class=\"keyword\">done</span>. </span><br><span class=\"line\">Total 3 (delta 0), reused 0 (delta 0), pack-reused 0</span><br></pre></td></tr></table></figure>\n\n<p>当push收到了服务端<code>refs/heads/master</code>的内容之后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push&lt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 refs/heads/master\\0report-status report-status-v2 delete-refs side-band-64k quiet atomic ofs-delta object-format=sha1 agent=git/2.35.1</span><br></pre></td></tr></table></figure>\n\n<p>然后对比自己所拥有的commit. 决定发送内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push&gt; 3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90 37607550824f6769a97caa25d06a0335970abdb5 refs/heads/master\\0 report-status-v2 side-band-64k object-format=sha1 agent=git/2.35.1</span><br></pre></td></tr></table></figure>\n\n<p>这个packet的意思是, 客户端会发送<br><code>3fb2316cbe6a7594b981c9bf8ef2fd08159a4b90</code>和<code>37607550824f6769a97caa25d06a0335970abdb5</code>之间的内容.<br>接下来和fetch如出一辙, 客户端开始计算这两笔commit之前所需要传送的object, 打包之后发送给服务器</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用:\"></a>引用:</h2><ul>\n<li><a href=\"https://git-scm.com/book/zh/v2\">ProGit</a>: Git开源社区官方维护的书籍</li>\n<li><a href=\"https://git-scm.com/docs/protocol-v2\">Git Protocol v2</a>: git传输协议的官方文档</li>\n</ul>"},{"title":"Android APK签名","date":"2022-06-30T16:00:00.000Z","_content":"\nAndroid APK签名\n\n<!--more-->\n\n## 平台签名\n\n### apk的签名\n\n简单说开发者可以通过签名 对应用进行标识和更新。包名在一个设备上是唯一的，这样可以**避免被相同包名应用随意覆盖安装**。这是一个非常重要的安全功能。系统中的签名文件，也是对系统中应用进行签名，编译应用是可以指定签名类型。\n\n### Android系统中的主要签名文件\n`media.pk8，media.x509.pem；platform.pk8，platform.x509.pem；releasekey.pk8，releasekey.x509.pem；shared.pk8，shared.x509.pem；testkey.pk8，testkey.x509.pem`\n\n### Android系统中的签名文件的路径\n默认在`build/target/product/security`目录下。\n\n### 编译时签名文件的配置\n在`Android.mk`通过设置`LOCAL_CERTIFICATE`实现。如：`LOCAL_CERTIFICATE := platform`即选择`platform`来签名。\n\n> 注：预置无源码的`apk`应用时，很多时候仍然使用原本第三方签名，`LOCAL_CERTIFICATE := PRESIGNED`。\n\n### `.pk8`和`.x509.pem`的区别\n\n`.pk8`就是私钥文件，用于对`apk`进行签名。这个私钥需要保密保存，不能公开。\n`.x509.pem`是证书文件，相当于公钥。这个可以公开，主要用于验证某个`apk`是否由相应的私钥签名。\n\n### 系统不同签名文件的区别\n- sharedUserId\n    - 每个apk或文件，系统都会分配属于自己的统一的用户ID（UID），创建沙箱保证其他应用的影响或影响其他应用。如：一般应用只能访问自己包名下的文件（/data/data/pkgname），不能反问其他包名下的，其他应用也访问不了自己包名下的文件。\n    - sharedUserId,拥有同一user id的应用 之间就可以共享数据库和文件，相互访问。这些应用可以运行在同一进程，也可以运行不同进程。\n\n- sharedUserId与签名文件\n    - 只有拥有相同sharedUserId标签的，且拥有相同签名的 应用才能分配相同的用户ID，实现数据共享。如果仅仅拥有相同sharedUserId标签，是无法确保安全的，也很容易被非法利用。\n\n- 系统中5类签名文件说明\n    - platform:平台的核心应用签名，签名的apk是完成系统的核心功能。这些apk所在的进程UID是system。manifest节点中有添加android:sharedUserId=\"android.uid.system\"。\n    - media: 这个签名的apk是media/download的一部分。manifest节点中有添加android:sharedUserId=\"android.media\"。\n    - shared:这个签名的apk可以和home/contacts进程共享数据。manifest节点中有添加android:sharedUserId=\"android.uid.shared\"。\n    - testkey/releasekey:平台默认key。在编译中未指定LOCAL_CERTIFICATE的，默认是用testkey。因为testkey是公开的，任何人都可以获取，不安全，所以一般使用 自己创建releasekey作为默认key。\n\n### 修改平台默认签名\n\n```\nbuild/core/config.mk路径下，修改下面变量为：\n    DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/releasekey\n    或者使用宏控选择。\nsystem/sepolicy/private/keys.conf 和 system/sepolicy/prebuilts/api/{apilevel}/private/keys.conf下，修改：\n    -ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    -USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    -USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    +ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\n    +USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\n    +USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\nbuild/core/core/Makefile下修改变量为：\n    BUILD_VERSION_TAGS = release-keys\n    或者使用宏控选择。\n```\n\n\n## pk8和x509.pem生成和签名\n\n### Android生成\n`./development/tools/make_key releasekey '/C=CN/CT=Beijing/L=Beijing View/O=Android/CN=Android/emailAddress=jmm@org.com'`\n\n### Apk生成\n`keytool -genkey -v -keystore app.keystore -alias gundam_wing -keyalg RSA -validity 20000`\n\n后续步骤如下\n```bash\n口令\n口令\nTechStone\nGundam\nGundam\nShanghai\nShanghai\nzh\nY\n回车\n```\n```\nkeytool -importkeystore -srckeystore app.keystore -destkeystore tmp.p12 -srcstoretype JKS -deststoretype PKCS12\nopenssl pkcs12 -in tmp.p12 -nodes -out tmp.rsa.pem\n将 -----BEGIN PRIVATE KEY----- 到 -----END PRIVATE KEY----- 这一段（包含这两个tag）的文本复制出来，新建为文件my_private.rsa.pem\n将 -----BEGIN CERTIFICATE----- 到 -----END CERTIFICATE----- 这一段（包含这两个tag）的文本复制出来，新建为文件my.x509.pem（签名时用到的公钥）\nopenssl pkcs8 -topk8 -outform DER -in my_private.rsa.pem -inform PEM -out my_private.pk8 -nocrypt\n```\n\n## 单独签名\n`java -jar signapk.jar my.x509.pem my_private.pk8 my.apk my_signed.apk`","source":"_posts/2022-7-1Android APK签名.md","raw":"---\ntitle: Android APK签名\ndate: 2022-7-1\ntags: [android, apk, 签名]\n---\n\nAndroid APK签名\n\n<!--more-->\n\n## 平台签名\n\n### apk的签名\n\n简单说开发者可以通过签名 对应用进行标识和更新。包名在一个设备上是唯一的，这样可以**避免被相同包名应用随意覆盖安装**。这是一个非常重要的安全功能。系统中的签名文件，也是对系统中应用进行签名，编译应用是可以指定签名类型。\n\n### Android系统中的主要签名文件\n`media.pk8，media.x509.pem；platform.pk8，platform.x509.pem；releasekey.pk8，releasekey.x509.pem；shared.pk8，shared.x509.pem；testkey.pk8，testkey.x509.pem`\n\n### Android系统中的签名文件的路径\n默认在`build/target/product/security`目录下。\n\n### 编译时签名文件的配置\n在`Android.mk`通过设置`LOCAL_CERTIFICATE`实现。如：`LOCAL_CERTIFICATE := platform`即选择`platform`来签名。\n\n> 注：预置无源码的`apk`应用时，很多时候仍然使用原本第三方签名，`LOCAL_CERTIFICATE := PRESIGNED`。\n\n### `.pk8`和`.x509.pem`的区别\n\n`.pk8`就是私钥文件，用于对`apk`进行签名。这个私钥需要保密保存，不能公开。\n`.x509.pem`是证书文件，相当于公钥。这个可以公开，主要用于验证某个`apk`是否由相应的私钥签名。\n\n### 系统不同签名文件的区别\n- sharedUserId\n    - 每个apk或文件，系统都会分配属于自己的统一的用户ID（UID），创建沙箱保证其他应用的影响或影响其他应用。如：一般应用只能访问自己包名下的文件（/data/data/pkgname），不能反问其他包名下的，其他应用也访问不了自己包名下的文件。\n    - sharedUserId,拥有同一user id的应用 之间就可以共享数据库和文件，相互访问。这些应用可以运行在同一进程，也可以运行不同进程。\n\n- sharedUserId与签名文件\n    - 只有拥有相同sharedUserId标签的，且拥有相同签名的 应用才能分配相同的用户ID，实现数据共享。如果仅仅拥有相同sharedUserId标签，是无法确保安全的，也很容易被非法利用。\n\n- 系统中5类签名文件说明\n    - platform:平台的核心应用签名，签名的apk是完成系统的核心功能。这些apk所在的进程UID是system。manifest节点中有添加android:sharedUserId=\"android.uid.system\"。\n    - media: 这个签名的apk是media/download的一部分。manifest节点中有添加android:sharedUserId=\"android.media\"。\n    - shared:这个签名的apk可以和home/contacts进程共享数据。manifest节点中有添加android:sharedUserId=\"android.uid.shared\"。\n    - testkey/releasekey:平台默认key。在编译中未指定LOCAL_CERTIFICATE的，默认是用testkey。因为testkey是公开的，任何人都可以获取，不安全，所以一般使用 自己创建releasekey作为默认key。\n\n### 修改平台默认签名\n\n```\nbuild/core/config.mk路径下，修改下面变量为：\n    DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/releasekey\n    或者使用宏控选择。\nsystem/sepolicy/private/keys.conf 和 system/sepolicy/prebuilts/api/{apilevel}/private/keys.conf下，修改：\n    -ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    -USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    -USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem\n    +ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\n    +USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\n    +USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem\nbuild/core/core/Makefile下修改变量为：\n    BUILD_VERSION_TAGS = release-keys\n    或者使用宏控选择。\n```\n\n\n## pk8和x509.pem生成和签名\n\n### Android生成\n`./development/tools/make_key releasekey '/C=CN/CT=Beijing/L=Beijing View/O=Android/CN=Android/emailAddress=jmm@org.com'`\n\n### Apk生成\n`keytool -genkey -v -keystore app.keystore -alias gundam_wing -keyalg RSA -validity 20000`\n\n后续步骤如下\n```bash\n口令\n口令\nTechStone\nGundam\nGundam\nShanghai\nShanghai\nzh\nY\n回车\n```\n```\nkeytool -importkeystore -srckeystore app.keystore -destkeystore tmp.p12 -srcstoretype JKS -deststoretype PKCS12\nopenssl pkcs12 -in tmp.p12 -nodes -out tmp.rsa.pem\n将 -----BEGIN PRIVATE KEY----- 到 -----END PRIVATE KEY----- 这一段（包含这两个tag）的文本复制出来，新建为文件my_private.rsa.pem\n将 -----BEGIN CERTIFICATE----- 到 -----END CERTIFICATE----- 这一段（包含这两个tag）的文本复制出来，新建为文件my.x509.pem（签名时用到的公钥）\nopenssl pkcs8 -topk8 -outform DER -in my_private.rsa.pem -inform PEM -out my_private.pk8 -nocrypt\n```\n\n## 单独签名\n`java -jar signapk.jar my.x509.pem my_private.pk8 my.apk my_signed.apk`","slug":"2022-7-1Android APK签名","published":1,"updated":"2022-07-02T03:26:10.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof2000qnkvvfs7ea2mk","content":"<p>Android APK签名</p>\n<span id=\"more\"></span>\n\n<h2 id=\"平台签名\"><a href=\"#平台签名\" class=\"headerlink\" title=\"平台签名\"></a>平台签名</h2><h3 id=\"apk的签名\"><a href=\"#apk的签名\" class=\"headerlink\" title=\"apk的签名\"></a>apk的签名</h3><p>简单说开发者可以通过签名 对应用进行标识和更新。包名在一个设备上是唯一的，这样可以<strong>避免被相同包名应用随意覆盖安装</strong>。这是一个非常重要的安全功能。系统中的签名文件，也是对系统中应用进行签名，编译应用是可以指定签名类型。</p>\n<h3 id=\"Android系统中的主要签名文件\"><a href=\"#Android系统中的主要签名文件\" class=\"headerlink\" title=\"Android系统中的主要签名文件\"></a>Android系统中的主要签名文件</h3><p><code>media.pk8，media.x509.pem；platform.pk8，platform.x509.pem；releasekey.pk8，releasekey.x509.pem；shared.pk8，shared.x509.pem；testkey.pk8，testkey.x509.pem</code></p>\n<h3 id=\"Android系统中的签名文件的路径\"><a href=\"#Android系统中的签名文件的路径\" class=\"headerlink\" title=\"Android系统中的签名文件的路径\"></a>Android系统中的签名文件的路径</h3><p>默认在<code>build/target/product/security</code>目录下。</p>\n<h3 id=\"编译时签名文件的配置\"><a href=\"#编译时签名文件的配置\" class=\"headerlink\" title=\"编译时签名文件的配置\"></a>编译时签名文件的配置</h3><p>在<code>Android.mk</code>通过设置<code>LOCAL_CERTIFICATE</code>实现。如：<code>LOCAL_CERTIFICATE := platform</code>即选择<code>platform</code>来签名。</p>\n<blockquote>\n<p>注：预置无源码的<code>apk</code>应用时，很多时候仍然使用原本第三方签名，<code>LOCAL_CERTIFICATE := PRESIGNED</code>。</p>\n</blockquote>\n<h3 id=\"pk8和-x509-pem的区别\"><a href=\"#pk8和-x509-pem的区别\" class=\"headerlink\" title=\".pk8和.x509.pem的区别\"></a><code>.pk8</code>和<code>.x509.pem</code>的区别</h3><p><code>.pk8</code>就是私钥文件，用于对<code>apk</code>进行签名。这个私钥需要保密保存，不能公开。<br><code>.x509.pem</code>是证书文件，相当于公钥。这个可以公开，主要用于验证某个<code>apk</code>是否由相应的私钥签名。</p>\n<h3 id=\"系统不同签名文件的区别\"><a href=\"#系统不同签名文件的区别\" class=\"headerlink\" title=\"系统不同签名文件的区别\"></a>系统不同签名文件的区别</h3><ul>\n<li><p>sharedUserId</p>\n<ul>\n<li>每个apk或文件，系统都会分配属于自己的统一的用户ID（UID），创建沙箱保证其他应用的影响或影响其他应用。如：一般应用只能访问自己包名下的文件（&#x2F;data&#x2F;data&#x2F;pkgname），不能反问其他包名下的，其他应用也访问不了自己包名下的文件。</li>\n<li>sharedUserId,拥有同一user id的应用 之间就可以共享数据库和文件，相互访问。这些应用可以运行在同一进程，也可以运行不同进程。</li>\n</ul>\n</li>\n<li><p>sharedUserId与签名文件</p>\n<ul>\n<li>只有拥有相同sharedUserId标签的，且拥有相同签名的 应用才能分配相同的用户ID，实现数据共享。如果仅仅拥有相同sharedUserId标签，是无法确保安全的，也很容易被非法利用。</li>\n</ul>\n</li>\n<li><p>系统中5类签名文件说明</p>\n<ul>\n<li>platform:平台的核心应用签名，签名的apk是完成系统的核心功能。这些apk所在的进程UID是system。manifest节点中有添加android:sharedUserId&#x3D;”android.uid.system”。</li>\n<li>media: 这个签名的apk是media&#x2F;download的一部分。manifest节点中有添加android:sharedUserId&#x3D;”android.media”。</li>\n<li>shared:这个签名的apk可以和home&#x2F;contacts进程共享数据。manifest节点中有添加android:sharedUserId&#x3D;”android.uid.shared”。</li>\n<li>testkey&#x2F;releasekey:平台默认key。在编译中未指定LOCAL_CERTIFICATE的，默认是用testkey。因为testkey是公开的，任何人都可以获取，不安全，所以一般使用 自己创建releasekey作为默认key。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改平台默认签名\"><a href=\"#修改平台默认签名\" class=\"headerlink\" title=\"修改平台默认签名\"></a>修改平台默认签名</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/core/config.mk路径下，修改下面变量为：</span><br><span class=\"line\">    DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/releasekey</span><br><span class=\"line\">    或者使用宏控选择。</span><br><span class=\"line\">system/sepolicy/private/keys.conf 和 system/sepolicy/prebuilts/api/&#123;apilevel&#125;/private/keys.conf下，修改：</span><br><span class=\"line\">    -ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    -USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    -USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    +ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">    +USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">    +USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">build/core/core/Makefile下修改变量为：</span><br><span class=\"line\">    BUILD_VERSION_TAGS = release-keys</span><br><span class=\"line\">    或者使用宏控选择。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"pk8和x509-pem生成和签名\"><a href=\"#pk8和x509-pem生成和签名\" class=\"headerlink\" title=\"pk8和x509.pem生成和签名\"></a>pk8和x509.pem生成和签名</h2><h3 id=\"Android生成\"><a href=\"#Android生成\" class=\"headerlink\" title=\"Android生成\"></a>Android生成</h3><p><code>./development/tools/make_key releasekey &#39;/C=CN/CT=Beijing/L=Beijing View/O=Android/CN=Android/emailAddress=jmm@org.com&#39;</code></p>\n<h3 id=\"Apk生成\"><a href=\"#Apk生成\" class=\"headerlink\" title=\"Apk生成\"></a>Apk生成</h3><p><code>keytool -genkey -v -keystore app.keystore -alias gundam_wing -keyalg RSA -validity 20000</code></p>\n<p>后续步骤如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">口令</span><br><span class=\"line\">口令</span><br><span class=\"line\">TechStone</span><br><span class=\"line\">Gundam</span><br><span class=\"line\">Gundam</span><br><span class=\"line\">Shanghai</span><br><span class=\"line\">Shanghai</span><br><span class=\"line\">zh</span><br><span class=\"line\">Y</span><br><span class=\"line\">回车</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -importkeystore -srckeystore app.keystore -destkeystore tmp.p12 -srcstoretype JKS -deststoretype PKCS12</span><br><span class=\"line\">openssl pkcs12 -in tmp.p12 -nodes -out tmp.rsa.pem</span><br><span class=\"line\">将 -----BEGIN PRIVATE KEY----- 到 -----END PRIVATE KEY----- 这一段（包含这两个tag）的文本复制出来，新建为文件my_private.rsa.pem</span><br><span class=\"line\">将 -----BEGIN CERTIFICATE----- 到 -----END CERTIFICATE----- 这一段（包含这两个tag）的文本复制出来，新建为文件my.x509.pem（签名时用到的公钥）</span><br><span class=\"line\">openssl pkcs8 -topk8 -outform DER -in my_private.rsa.pem -inform PEM -out my_private.pk8 -nocrypt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"单独签名\"><a href=\"#单独签名\" class=\"headerlink\" title=\"单独签名\"></a>单独签名</h2><p><code>java -jar signapk.jar my.x509.pem my_private.pk8 my.apk my_signed.apk</code></p>\n","site":{"data":{}},"excerpt":"<p>Android APK签名</p>","more":"<h2 id=\"平台签名\"><a href=\"#平台签名\" class=\"headerlink\" title=\"平台签名\"></a>平台签名</h2><h3 id=\"apk的签名\"><a href=\"#apk的签名\" class=\"headerlink\" title=\"apk的签名\"></a>apk的签名</h3><p>简单说开发者可以通过签名 对应用进行标识和更新。包名在一个设备上是唯一的，这样可以<strong>避免被相同包名应用随意覆盖安装</strong>。这是一个非常重要的安全功能。系统中的签名文件，也是对系统中应用进行签名，编译应用是可以指定签名类型。</p>\n<h3 id=\"Android系统中的主要签名文件\"><a href=\"#Android系统中的主要签名文件\" class=\"headerlink\" title=\"Android系统中的主要签名文件\"></a>Android系统中的主要签名文件</h3><p><code>media.pk8，media.x509.pem；platform.pk8，platform.x509.pem；releasekey.pk8，releasekey.x509.pem；shared.pk8，shared.x509.pem；testkey.pk8，testkey.x509.pem</code></p>\n<h3 id=\"Android系统中的签名文件的路径\"><a href=\"#Android系统中的签名文件的路径\" class=\"headerlink\" title=\"Android系统中的签名文件的路径\"></a>Android系统中的签名文件的路径</h3><p>默认在<code>build/target/product/security</code>目录下。</p>\n<h3 id=\"编译时签名文件的配置\"><a href=\"#编译时签名文件的配置\" class=\"headerlink\" title=\"编译时签名文件的配置\"></a>编译时签名文件的配置</h3><p>在<code>Android.mk</code>通过设置<code>LOCAL_CERTIFICATE</code>实现。如：<code>LOCAL_CERTIFICATE := platform</code>即选择<code>platform</code>来签名。</p>\n<blockquote>\n<p>注：预置无源码的<code>apk</code>应用时，很多时候仍然使用原本第三方签名，<code>LOCAL_CERTIFICATE := PRESIGNED</code>。</p>\n</blockquote>\n<h3 id=\"pk8和-x509-pem的区别\"><a href=\"#pk8和-x509-pem的区别\" class=\"headerlink\" title=\".pk8和.x509.pem的区别\"></a><code>.pk8</code>和<code>.x509.pem</code>的区别</h3><p><code>.pk8</code>就是私钥文件，用于对<code>apk</code>进行签名。这个私钥需要保密保存，不能公开。<br><code>.x509.pem</code>是证书文件，相当于公钥。这个可以公开，主要用于验证某个<code>apk</code>是否由相应的私钥签名。</p>\n<h3 id=\"系统不同签名文件的区别\"><a href=\"#系统不同签名文件的区别\" class=\"headerlink\" title=\"系统不同签名文件的区别\"></a>系统不同签名文件的区别</h3><ul>\n<li><p>sharedUserId</p>\n<ul>\n<li>每个apk或文件，系统都会分配属于自己的统一的用户ID（UID），创建沙箱保证其他应用的影响或影响其他应用。如：一般应用只能访问自己包名下的文件（&#x2F;data&#x2F;data&#x2F;pkgname），不能反问其他包名下的，其他应用也访问不了自己包名下的文件。</li>\n<li>sharedUserId,拥有同一user id的应用 之间就可以共享数据库和文件，相互访问。这些应用可以运行在同一进程，也可以运行不同进程。</li>\n</ul>\n</li>\n<li><p>sharedUserId与签名文件</p>\n<ul>\n<li>只有拥有相同sharedUserId标签的，且拥有相同签名的 应用才能分配相同的用户ID，实现数据共享。如果仅仅拥有相同sharedUserId标签，是无法确保安全的，也很容易被非法利用。</li>\n</ul>\n</li>\n<li><p>系统中5类签名文件说明</p>\n<ul>\n<li>platform:平台的核心应用签名，签名的apk是完成系统的核心功能。这些apk所在的进程UID是system。manifest节点中有添加android:sharedUserId&#x3D;”android.uid.system”。</li>\n<li>media: 这个签名的apk是media&#x2F;download的一部分。manifest节点中有添加android:sharedUserId&#x3D;”android.media”。</li>\n<li>shared:这个签名的apk可以和home&#x2F;contacts进程共享数据。manifest节点中有添加android:sharedUserId&#x3D;”android.uid.shared”。</li>\n<li>testkey&#x2F;releasekey:平台默认key。在编译中未指定LOCAL_CERTIFICATE的，默认是用testkey。因为testkey是公开的，任何人都可以获取，不安全，所以一般使用 自己创建releasekey作为默认key。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"修改平台默认签名\"><a href=\"#修改平台默认签名\" class=\"headerlink\" title=\"修改平台默认签名\"></a>修改平台默认签名</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/core/config.mk路径下，修改下面变量为：</span><br><span class=\"line\">    DEFAULT_SYSTEM_DEV_CERTIFICATE := build/target/product/security/releasekey</span><br><span class=\"line\">    或者使用宏控选择。</span><br><span class=\"line\">system/sepolicy/private/keys.conf 和 system/sepolicy/prebuilts/api/&#123;apilevel&#125;/private/keys.conf下，修改：</span><br><span class=\"line\">    -ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    -USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    -USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/testkey.x509.pem</span><br><span class=\"line\">    +ENG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">    +USER : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">    +USERDEBUG : $DEFAULT_SYSTEM_DEV_CERTIFICATE/releasekey.x509.pem</span><br><span class=\"line\">build/core/core/Makefile下修改变量为：</span><br><span class=\"line\">    BUILD_VERSION_TAGS = release-keys</span><br><span class=\"line\">    或者使用宏控选择。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"pk8和x509-pem生成和签名\"><a href=\"#pk8和x509-pem生成和签名\" class=\"headerlink\" title=\"pk8和x509.pem生成和签名\"></a>pk8和x509.pem生成和签名</h2><h3 id=\"Android生成\"><a href=\"#Android生成\" class=\"headerlink\" title=\"Android生成\"></a>Android生成</h3><p><code>./development/tools/make_key releasekey &#39;/C=CN/CT=Beijing/L=Beijing View/O=Android/CN=Android/emailAddress=jmm@org.com&#39;</code></p>\n<h3 id=\"Apk生成\"><a href=\"#Apk生成\" class=\"headerlink\" title=\"Apk生成\"></a>Apk生成</h3><p><code>keytool -genkey -v -keystore app.keystore -alias gundam_wing -keyalg RSA -validity 20000</code></p>\n<p>后续步骤如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">口令</span><br><span class=\"line\">口令</span><br><span class=\"line\">TechStone</span><br><span class=\"line\">Gundam</span><br><span class=\"line\">Gundam</span><br><span class=\"line\">Shanghai</span><br><span class=\"line\">Shanghai</span><br><span class=\"line\">zh</span><br><span class=\"line\">Y</span><br><span class=\"line\">回车</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -importkeystore -srckeystore app.keystore -destkeystore tmp.p12 -srcstoretype JKS -deststoretype PKCS12</span><br><span class=\"line\">openssl pkcs12 -in tmp.p12 -nodes -out tmp.rsa.pem</span><br><span class=\"line\">将 -----BEGIN PRIVATE KEY----- 到 -----END PRIVATE KEY----- 这一段（包含这两个tag）的文本复制出来，新建为文件my_private.rsa.pem</span><br><span class=\"line\">将 -----BEGIN CERTIFICATE----- 到 -----END CERTIFICATE----- 这一段（包含这两个tag）的文本复制出来，新建为文件my.x509.pem（签名时用到的公钥）</span><br><span class=\"line\">openssl pkcs8 -topk8 -outform DER -in my_private.rsa.pem -inform PEM -out my_private.pk8 -nocrypt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"单独签名\"><a href=\"#单独签名\" class=\"headerlink\" title=\"单独签名\"></a>单独签名</h2><p><code>java -jar signapk.jar my.x509.pem my_private.pk8 my.apk my_signed.apk</code></p>"},{"title":"Android系统介绍","date":"2022-06-30T16:00:00.000Z","_content":"\nAndroid系统介绍\n\n<!--more-->\n\n## 单编\n* make clean（清理）\n* make update-api（更新api和doc一致）\n* make systemimage（单编 system.img，make snod）\n* make bootimage（单编 boot.img，由kernel, dtb, ramdisk组成）\n* make userdataimage-nodeps（单编 userdata.img）\n* make aboot（单编 abl.elf，也是bootloader，uboot）\n* make target-files-package\t编target-files\n\n## 启动流程\n`bootloader.img -> boot.img -> system.img`\n`Android` 在启动的时候，会由 `UBOOT` 传入一个 `init` 参数，这个`init` 参数指定了开机的时候第一个运行的程序，默认就是 `init` 程序，这个程序在 `ramdisk.img`中。\n可以分析一下它的代码，看看在其中到底做了一些什么样的初始化任务，它的源文件在`system/core/init/init.c` 中。\n它会调用到 `init.rc`初始化文件，这个文件在 `out/target/product/generic/root` 下，我们在启动以后，会发现根目录是只读属性的，\n而且 `sdcard` 的 `owner` 是`system`，就是在这个文件中做了些手脚，可以将它改过来，实现根目录的可读写。\n\n通过分析这几个文件，还可以发现，`android` 启动时首先加载 `ramdisk.img` 镜像，并挂载到`/`目录下，并进行了一系列的初始化动作，\n包括创建各种需要的目录，初始化 `console`，开启服务等。\n`System.img`是在 `init.rc`中指定一些脚本命令，通过 `init.c` 进行解析并挂载到根目录下的`/system` 目录下的。\n\n## 镜像介绍\n1. ramdisk.img : 一个分区镜像文件，它会在`kernel` 启动的时候，以只读的方式被 `mount` ， 这个文件中只是包含了 `/init` 以及一些配置文件，这个`ramdisk` 被用来调用`init`，以及把真正的`root file system mount` 起来。\n2. system.img：是包含了整个系统，`android` 的`framework`，`application` 等等，会被挂接到 “`/`” 上，包含了系统中所有的二进制文件\n3. userdata.img： 将会被挂接到 `/data` 下，包含了所有应用相关的配置文件，以及用户相关的数据 。\n4. boot.img：包括 `boot header，kernel， ramdisk`\n`boot`镜像不是普通意义上的文件系统，而是一种特殊的`Android`定制格式，由文件头信息`boot header`，压缩的内核，\n文件系统数据`ramdisk`以及`second stage loader`（可选）组成，它们之间非页面对齐部分用0填充\n5. update.img：将所有的img文件，通过指定打包工具，制作`update.img`，批量生产中常用到此镜像文件\n\n## 分区\n### Modem分区\n```\n实现手机必需的通信功能，大家通常所的刷RADIO就是刷写modem分区，在所有适配的ROM中这部分是不动，否则会造成通话不稳定\n```\n\n### bootloader分区\n```\n1.bootloader的primary bootloader部分，主要执行硬件检测，确保硬件能正常工作，然后将second bootloader拷贝到内存(RAM)开始执行\n2.Second bootloader会进行一些硬件初始化工作，获取内存大小信息等，然后根据用户的按键进入到某种启动模式。\n    比如说大家所熟知的通过电源键和其它一些按键的组合，可以进入到recovery，fastboot或者选择启动模式的启动界面等。\n3.区分\n    高通分为xbl.elf和abl.elf\n        bootable/bootloader/edk2\n    mtk分为preloader和lk，后者是一些接口，调用前者的实现\n        vendor/mediatek/proprietary/bootable/bootloader/lk\n        vendor/mediatek/proprietary/bootable/bootloader/preloader\n\n    fastboot模式：fastboot是android定义的一种简单的刷机协议，用户可以通过fastboot命令行工具来进行刷机。\n    比如说fastboot flash boot boot.img这个命令就是把boot.img的内容刷写到boot分区中。\n    一般的手机厂商不直接提供fastboot模式刷机，总是会提供自己专有的刷机工具和刷机方法。比如说三星的Odin，摩托的RSD，华为的粉屏等等。\n    但是其本质实际上是相同的，都是将软件直接flash到各个分区中。这种通常称为线刷，是比较原始的方法。当手机处于开不了机的情况下，可以使用此厂家提供的工具进行刷入\n```\n\n### boot分区\n```\n当我们只是按下电源键开机时，会进入正常启动模式。\nSecondarystagebootloader会从boot分区开始启动。Boot分区的格式是固定的，首先是一个头部，然后是Linux内核，最后是用作根文件系统的ramdisk。\n当Linux内核启动完毕后，就开始执行根文件系统中的init程序，\ninit程序会读取启动脚本文件(init.rc和init.xxxx.rc),执行脚本中指定的动作和命令，脚本中的一部分是运行system分区的程序\n```\n\n### recoverty分区\n```\nrecovery模式：recovery是android定义的一个标准刷机协议。\n当进入recovery模式时，second bootloader从recovery分区开始启动，recovery分区实际上是一个简单的Linux系统，\n当内核启动完毕后，开始执行第一个程序init(init程序是Linux系统所有程序的老祖宗)。\ninit会启动一个叫做recovery的程序（recovery模式的名称也由此而来）。\n通过recovery程序，用户可以执行清除数据，安装刷机包等操作。\n一般的手机厂商都提供一个简单的recovery刷机，多只能进行upate的操作。不能进行卡刷；如果想要自已卡刷，则需要事先刷入第三方的Recovery，然后选择刷机包。\n```\n\n### system分区\n```\n除linux Kernel部分位于boot分区外，在其上的Library、runtime、framework、core application都是处于system分区\n1、/system/priv-app\n    特权App，比system_app权限还要高，其不仅System_app标识是true，同时还置了Priv-app标识。\n2、/system/app\n    核心应用程序档(*.apk: Android应用程序包)，都是放在这。像是Phone、Alarm Clock, Browser, Contacts 等等。\n3、/system/framework\n    这里放 Android 系统的核心程序库，就是上图中application framework部分的库。像是core.jar, framework-res.apk, framework.jar等等。\n4、system/lib\n    存放Library部分的库，存放的是所有动态链接库(.so文件)，这些.SO是JNI层，Dalvik虚拟机，本地库，HAL层所需要的，\n    因为系统应用/system/app下的apk是不会解压的SO到程序的目录下，所以其相应用的SO，都应放在/system/lib 下面。\n    当一个系统apk的SO加载时，会从此目录下寻找对应用的SO文件；\n5、/system/media/audio/(notification, alarms, ringtones, ui)\n    这里放系统的声音档，像是闹铃声，来电铃声等等。这些声音档，多是 ogg 格式。\n6、/system/bin\n    存放的是一些可执行文件，基本上是由C/C++编写的。其中有一个重要的命令叫app_process。一般大家称之为Zygote。\n    （Zygote是卵的意思，所有的Android进程都是由它生出来的)。Zygote首先会加载dalvik虚拟机，然后产生一个叫做system_server的进程。\n    system_server顾名思义被称作Android的系统服务程序，它主要管理整个android系统。\n    system_server启动完成后开始寻找一个叫做启动器的程序，找到之后由zygote开始启动执行启动器，这就是我们常见到的桌面程序。\n7、system/xbin\n    存放的是一些扩展的可执行文件，既该目录可以为空。大家常用的busybox就放在该目录下。Busybox所建立的各种符号链接命令都是放在该目录。\n8、system/build.prop\n    build.prop和上节说得根文件系统中的default.prop文件格式一样，都称为属性配置文件。它们都定义了一些属性值，代码可以读取或者修改这些属性值。属性值有一些命名规范：\n    　　ro开头的表示只读属性，即这些属性的值代码是无法修改的。\n    　　persist开头的表示这些属性值会保存在文件中，这样重新启动之后这些值还保留。\n    　　其它的属性一般以所属的类别开头，这些属性是可读可写的，但是对它们的修改重启之后不会保留。\n9、system/etc\n    目录存放一些配置文件，和属性配置文件不一样，这下面的配置文件可能稍微没那么的有规律。\n    一般来说，一些脚本程序，还有大家所熟悉GPS配置文件(gps.conf)和APN配置文件(apns-conf.xml)放在这个目录。\n    像HTC将相机特效所使用的一些文件也放在这个目录下。\n```\n\n### data分区\n```\n当我们开机进入桌面程序后，一般来说我们都会下载安装一些APP，这些APP都安装在data/app目录下。所有的Android程序生成的数据基本上都保存在data/data目录下。\nwipedata实质上就是格式化data分区，这样我们安装的所有APP和程序数据就都丢失了。\n1、/data/app\n    放的是使用者自己安装的应用程式执行档(*.apk)。\n2、/data/data/\n    当你在程式中用Context.openFileOutput() 所建立的档案，都放在这个目录下的files 子目录内。而用Context.getSharedPreferences() 所建立的preferences 档(*.xml) ，则是放在shared_pref 这个子目录中。\n3、/data/anr/traces.txt\n    当你的应用程式发生ANR (Application is Not Responding) 错误时，Android 会自动将问题点的code stack list 写在这个档案内，你直接用cat 命令就可以看他的内容。\n4、/data/system/dropbox/***.txt\n    主要是系统内apk发生crash时写的日志文件，主要有system_app_crash、data_app_crash等日志。\n5、/data/location/gps\n    是给GPS location provider 用的。其中的 properties 档案的内容如下：\n6、/data/system/location/location.gps\n    一般文字档。主要是记录最后的经纬度座标。 LocationManager.getLastKnownLocation() 就在来这抓值的。\n7、/data/property/persist.sys.timezone\n    这个档案也是个一般文字档。主要是记录目前系统所使用的时区。在我的模拟器上，他记录着Asia/Taipei 这个字串。\n```\n\n### cache分区\n```\n此分区是安卓系统缓存区，他保存系统最常访问的数据和应用程序。\n擦除这个分区，不会影响个人数据，只是删除了这个分区中已经保存的缓存内容，缓存内容会在后续手机使用过程中重新自动生成。\n```\n\n### misc分区\n```\nmisc分区中有Bootloader Control Block（BCB），主要是用于存放Recovery引导信息。\n```\n\n### vbmeta分区\n```\n验证启动（Verified Boot）是Android一个重要的安全功能，主要是为了访问启动镜像被篡改，提高系统的抗攻击能力，简单描述做法就是在启动过程中增加一条校验链，即 ROM code 校验 BootLoader，确保 BootLoader 的合法性和完整性，BootLoader 则需要校验 boot image，确保 Kernel 启动所需 image 的合法性和完整性，而 Kernel 则负责校验 System 分区和 vendor 分区。\n由于 ROM code 和 BootLoader 通常都是由设备厂商 OEM 提供，而各家实际做法和研发能力不尽相同，为了让设备厂商更方便的引入 Verified boot 功能，Google 在 Android O上推出了一个统一的验证启动框架 Android verified boot 2.0，好处是既保证了基于该框架开发的verified boot 功能能够满足 CDD 要求，也保留了各家 OEM 定制启动校验流程的弹性。\n由于 ROM code 校验 BootLoader 的功能通常与 IC的设计相关，所以 AVB 2.0 关注的重点在 BootLoader 之后的校验流程。BootLoader 之后系统启动所涉及的关键镜像通常包括 boot.img，system.img，Android O 的 treble Project 还引入了 dtbo 和 vendor.img。这些 image 挨个校验可以说费时费力，而 AVB 2.0 的做法事实上十分简单，引入一个新的分区：vbmeta.img（verified boot metadata），然后把所有需要校验的内容在编译时就计算好打包到这个分区，那么启动过程中 BootLoader 只需要校验 vbmeta.img，就能确认 vbmeta 内的数据是否可信。再用 vbmeta 中的数据去比对 bootimg，dtbo，system,img，vendor.img 即可。至于 OEM 是还需要放什么其他东西到 vbmeta 中，则可以由 OEM 自由定制，可以说保留了很好的客制化空间。\n除了最基本的验证启动之外，AVB 2.0 还提供防止回滚的功能和对AB分区备份的支持，具体的可以看README文档（安卓源码external/avb/README.md）。\n生成过程：\n    vbmeta.img 这个镜像不是编译生成的，它是依赖avbtool 工具生成，这个其实是一个python脚本，详细原理可以参阅external/avb/avbtool 源码，这里我们只整理Android源码下的生成流程，用最原始的方法追踪生成流程（事实证明是最直接、最有效的 ），安卓代码编译之后，在编译log只能看到一句log：\n```\n\n### dtbo分区\n```\ndt或者dto镜像在这里Google把它笼统地称作dtbo镜像，他们的格式是一样的，都是把多个dtc编译出来的dtb二进制或者dto二进制打包到一个image\n每个硬件设备对应一个dtb和dto，把多个dtb或者dto按照图示的格式打包成对应的dt.img和dto.img，这样软件可以做到共镜像，方便了厂商对产品的维护工作\n```\n","source":"_posts/2022-7-1Android系统介绍.md","raw":"---\ntitle: Android系统介绍\ndate: 2022-7-1\ntags: [android]\n---\n\nAndroid系统介绍\n\n<!--more-->\n\n## 单编\n* make clean（清理）\n* make update-api（更新api和doc一致）\n* make systemimage（单编 system.img，make snod）\n* make bootimage（单编 boot.img，由kernel, dtb, ramdisk组成）\n* make userdataimage-nodeps（单编 userdata.img）\n* make aboot（单编 abl.elf，也是bootloader，uboot）\n* make target-files-package\t编target-files\n\n## 启动流程\n`bootloader.img -> boot.img -> system.img`\n`Android` 在启动的时候，会由 `UBOOT` 传入一个 `init` 参数，这个`init` 参数指定了开机的时候第一个运行的程序，默认就是 `init` 程序，这个程序在 `ramdisk.img`中。\n可以分析一下它的代码，看看在其中到底做了一些什么样的初始化任务，它的源文件在`system/core/init/init.c` 中。\n它会调用到 `init.rc`初始化文件，这个文件在 `out/target/product/generic/root` 下，我们在启动以后，会发现根目录是只读属性的，\n而且 `sdcard` 的 `owner` 是`system`，就是在这个文件中做了些手脚，可以将它改过来，实现根目录的可读写。\n\n通过分析这几个文件，还可以发现，`android` 启动时首先加载 `ramdisk.img` 镜像，并挂载到`/`目录下，并进行了一系列的初始化动作，\n包括创建各种需要的目录，初始化 `console`，开启服务等。\n`System.img`是在 `init.rc`中指定一些脚本命令，通过 `init.c` 进行解析并挂载到根目录下的`/system` 目录下的。\n\n## 镜像介绍\n1. ramdisk.img : 一个分区镜像文件，它会在`kernel` 启动的时候，以只读的方式被 `mount` ， 这个文件中只是包含了 `/init` 以及一些配置文件，这个`ramdisk` 被用来调用`init`，以及把真正的`root file system mount` 起来。\n2. system.img：是包含了整个系统，`android` 的`framework`，`application` 等等，会被挂接到 “`/`” 上，包含了系统中所有的二进制文件\n3. userdata.img： 将会被挂接到 `/data` 下，包含了所有应用相关的配置文件，以及用户相关的数据 。\n4. boot.img：包括 `boot header，kernel， ramdisk`\n`boot`镜像不是普通意义上的文件系统，而是一种特殊的`Android`定制格式，由文件头信息`boot header`，压缩的内核，\n文件系统数据`ramdisk`以及`second stage loader`（可选）组成，它们之间非页面对齐部分用0填充\n5. update.img：将所有的img文件，通过指定打包工具，制作`update.img`，批量生产中常用到此镜像文件\n\n## 分区\n### Modem分区\n```\n实现手机必需的通信功能，大家通常所的刷RADIO就是刷写modem分区，在所有适配的ROM中这部分是不动，否则会造成通话不稳定\n```\n\n### bootloader分区\n```\n1.bootloader的primary bootloader部分，主要执行硬件检测，确保硬件能正常工作，然后将second bootloader拷贝到内存(RAM)开始执行\n2.Second bootloader会进行一些硬件初始化工作，获取内存大小信息等，然后根据用户的按键进入到某种启动模式。\n    比如说大家所熟知的通过电源键和其它一些按键的组合，可以进入到recovery，fastboot或者选择启动模式的启动界面等。\n3.区分\n    高通分为xbl.elf和abl.elf\n        bootable/bootloader/edk2\n    mtk分为preloader和lk，后者是一些接口，调用前者的实现\n        vendor/mediatek/proprietary/bootable/bootloader/lk\n        vendor/mediatek/proprietary/bootable/bootloader/preloader\n\n    fastboot模式：fastboot是android定义的一种简单的刷机协议，用户可以通过fastboot命令行工具来进行刷机。\n    比如说fastboot flash boot boot.img这个命令就是把boot.img的内容刷写到boot分区中。\n    一般的手机厂商不直接提供fastboot模式刷机，总是会提供自己专有的刷机工具和刷机方法。比如说三星的Odin，摩托的RSD，华为的粉屏等等。\n    但是其本质实际上是相同的，都是将软件直接flash到各个分区中。这种通常称为线刷，是比较原始的方法。当手机处于开不了机的情况下，可以使用此厂家提供的工具进行刷入\n```\n\n### boot分区\n```\n当我们只是按下电源键开机时，会进入正常启动模式。\nSecondarystagebootloader会从boot分区开始启动。Boot分区的格式是固定的，首先是一个头部，然后是Linux内核，最后是用作根文件系统的ramdisk。\n当Linux内核启动完毕后，就开始执行根文件系统中的init程序，\ninit程序会读取启动脚本文件(init.rc和init.xxxx.rc),执行脚本中指定的动作和命令，脚本中的一部分是运行system分区的程序\n```\n\n### recoverty分区\n```\nrecovery模式：recovery是android定义的一个标准刷机协议。\n当进入recovery模式时，second bootloader从recovery分区开始启动，recovery分区实际上是一个简单的Linux系统，\n当内核启动完毕后，开始执行第一个程序init(init程序是Linux系统所有程序的老祖宗)。\ninit会启动一个叫做recovery的程序（recovery模式的名称也由此而来）。\n通过recovery程序，用户可以执行清除数据，安装刷机包等操作。\n一般的手机厂商都提供一个简单的recovery刷机，多只能进行upate的操作。不能进行卡刷；如果想要自已卡刷，则需要事先刷入第三方的Recovery，然后选择刷机包。\n```\n\n### system分区\n```\n除linux Kernel部分位于boot分区外，在其上的Library、runtime、framework、core application都是处于system分区\n1、/system/priv-app\n    特权App，比system_app权限还要高，其不仅System_app标识是true，同时还置了Priv-app标识。\n2、/system/app\n    核心应用程序档(*.apk: Android应用程序包)，都是放在这。像是Phone、Alarm Clock, Browser, Contacts 等等。\n3、/system/framework\n    这里放 Android 系统的核心程序库，就是上图中application framework部分的库。像是core.jar, framework-res.apk, framework.jar等等。\n4、system/lib\n    存放Library部分的库，存放的是所有动态链接库(.so文件)，这些.SO是JNI层，Dalvik虚拟机，本地库，HAL层所需要的，\n    因为系统应用/system/app下的apk是不会解压的SO到程序的目录下，所以其相应用的SO，都应放在/system/lib 下面。\n    当一个系统apk的SO加载时，会从此目录下寻找对应用的SO文件；\n5、/system/media/audio/(notification, alarms, ringtones, ui)\n    这里放系统的声音档，像是闹铃声，来电铃声等等。这些声音档，多是 ogg 格式。\n6、/system/bin\n    存放的是一些可执行文件，基本上是由C/C++编写的。其中有一个重要的命令叫app_process。一般大家称之为Zygote。\n    （Zygote是卵的意思，所有的Android进程都是由它生出来的)。Zygote首先会加载dalvik虚拟机，然后产生一个叫做system_server的进程。\n    system_server顾名思义被称作Android的系统服务程序，它主要管理整个android系统。\n    system_server启动完成后开始寻找一个叫做启动器的程序，找到之后由zygote开始启动执行启动器，这就是我们常见到的桌面程序。\n7、system/xbin\n    存放的是一些扩展的可执行文件，既该目录可以为空。大家常用的busybox就放在该目录下。Busybox所建立的各种符号链接命令都是放在该目录。\n8、system/build.prop\n    build.prop和上节说得根文件系统中的default.prop文件格式一样，都称为属性配置文件。它们都定义了一些属性值，代码可以读取或者修改这些属性值。属性值有一些命名规范：\n    　　ro开头的表示只读属性，即这些属性的值代码是无法修改的。\n    　　persist开头的表示这些属性值会保存在文件中，这样重新启动之后这些值还保留。\n    　　其它的属性一般以所属的类别开头，这些属性是可读可写的，但是对它们的修改重启之后不会保留。\n9、system/etc\n    目录存放一些配置文件，和属性配置文件不一样，这下面的配置文件可能稍微没那么的有规律。\n    一般来说，一些脚本程序，还有大家所熟悉GPS配置文件(gps.conf)和APN配置文件(apns-conf.xml)放在这个目录。\n    像HTC将相机特效所使用的一些文件也放在这个目录下。\n```\n\n### data分区\n```\n当我们开机进入桌面程序后，一般来说我们都会下载安装一些APP，这些APP都安装在data/app目录下。所有的Android程序生成的数据基本上都保存在data/data目录下。\nwipedata实质上就是格式化data分区，这样我们安装的所有APP和程序数据就都丢失了。\n1、/data/app\n    放的是使用者自己安装的应用程式执行档(*.apk)。\n2、/data/data/\n    当你在程式中用Context.openFileOutput() 所建立的档案，都放在这个目录下的files 子目录内。而用Context.getSharedPreferences() 所建立的preferences 档(*.xml) ，则是放在shared_pref 这个子目录中。\n3、/data/anr/traces.txt\n    当你的应用程式发生ANR (Application is Not Responding) 错误时，Android 会自动将问题点的code stack list 写在这个档案内，你直接用cat 命令就可以看他的内容。\n4、/data/system/dropbox/***.txt\n    主要是系统内apk发生crash时写的日志文件，主要有system_app_crash、data_app_crash等日志。\n5、/data/location/gps\n    是给GPS location provider 用的。其中的 properties 档案的内容如下：\n6、/data/system/location/location.gps\n    一般文字档。主要是记录最后的经纬度座标。 LocationManager.getLastKnownLocation() 就在来这抓值的。\n7、/data/property/persist.sys.timezone\n    这个档案也是个一般文字档。主要是记录目前系统所使用的时区。在我的模拟器上，他记录着Asia/Taipei 这个字串。\n```\n\n### cache分区\n```\n此分区是安卓系统缓存区，他保存系统最常访问的数据和应用程序。\n擦除这个分区，不会影响个人数据，只是删除了这个分区中已经保存的缓存内容，缓存内容会在后续手机使用过程中重新自动生成。\n```\n\n### misc分区\n```\nmisc分区中有Bootloader Control Block（BCB），主要是用于存放Recovery引导信息。\n```\n\n### vbmeta分区\n```\n验证启动（Verified Boot）是Android一个重要的安全功能，主要是为了访问启动镜像被篡改，提高系统的抗攻击能力，简单描述做法就是在启动过程中增加一条校验链，即 ROM code 校验 BootLoader，确保 BootLoader 的合法性和完整性，BootLoader 则需要校验 boot image，确保 Kernel 启动所需 image 的合法性和完整性，而 Kernel 则负责校验 System 分区和 vendor 分区。\n由于 ROM code 和 BootLoader 通常都是由设备厂商 OEM 提供，而各家实际做法和研发能力不尽相同，为了让设备厂商更方便的引入 Verified boot 功能，Google 在 Android O上推出了一个统一的验证启动框架 Android verified boot 2.0，好处是既保证了基于该框架开发的verified boot 功能能够满足 CDD 要求，也保留了各家 OEM 定制启动校验流程的弹性。\n由于 ROM code 校验 BootLoader 的功能通常与 IC的设计相关，所以 AVB 2.0 关注的重点在 BootLoader 之后的校验流程。BootLoader 之后系统启动所涉及的关键镜像通常包括 boot.img，system.img，Android O 的 treble Project 还引入了 dtbo 和 vendor.img。这些 image 挨个校验可以说费时费力，而 AVB 2.0 的做法事实上十分简单，引入一个新的分区：vbmeta.img（verified boot metadata），然后把所有需要校验的内容在编译时就计算好打包到这个分区，那么启动过程中 BootLoader 只需要校验 vbmeta.img，就能确认 vbmeta 内的数据是否可信。再用 vbmeta 中的数据去比对 bootimg，dtbo，system,img，vendor.img 即可。至于 OEM 是还需要放什么其他东西到 vbmeta 中，则可以由 OEM 自由定制，可以说保留了很好的客制化空间。\n除了最基本的验证启动之外，AVB 2.0 还提供防止回滚的功能和对AB分区备份的支持，具体的可以看README文档（安卓源码external/avb/README.md）。\n生成过程：\n    vbmeta.img 这个镜像不是编译生成的，它是依赖avbtool 工具生成，这个其实是一个python脚本，详细原理可以参阅external/avb/avbtool 源码，这里我们只整理Android源码下的生成流程，用最原始的方法追踪生成流程（事实证明是最直接、最有效的 ），安卓代码编译之后，在编译log只能看到一句log：\n```\n\n### dtbo分区\n```\ndt或者dto镜像在这里Google把它笼统地称作dtbo镜像，他们的格式是一样的，都是把多个dtc编译出来的dtb二进制或者dto二进制打包到一个image\n每个硬件设备对应一个dtb和dto，把多个dtb或者dto按照图示的格式打包成对应的dt.img和dto.img，这样软件可以做到共镜像，方便了厂商对产品的维护工作\n```\n","slug":"2022-7-1Android系统介绍","published":1,"updated":"2022-07-02T13:41:12.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof3000snkvv8bl32bly","content":"<p>Android系统介绍</p>\n<span id=\"more\"></span>\n\n<h2 id=\"单编\"><a href=\"#单编\" class=\"headerlink\" title=\"单编\"></a>单编</h2><ul>\n<li>make clean（清理）</li>\n<li>make update-api（更新api和doc一致）</li>\n<li>make systemimage（单编 system.img，make snod）</li>\n<li>make bootimage（单编 boot.img，由kernel, dtb, ramdisk组成）</li>\n<li>make userdataimage-nodeps（单编 userdata.img）</li>\n<li>make aboot（单编 abl.elf，也是bootloader，uboot）</li>\n<li>make target-files-package\t编target-files</li>\n</ul>\n<h2 id=\"启动流程\"><a href=\"#启动流程\" class=\"headerlink\" title=\"启动流程\"></a>启动流程</h2><p><code>bootloader.img -&gt; boot.img -&gt; system.img</code><br><code>Android</code> 在启动的时候，会由 <code>UBOOT</code> 传入一个 <code>init</code> 参数，这个<code>init</code> 参数指定了开机的时候第一个运行的程序，默认就是 <code>init</code> 程序，这个程序在 <code>ramdisk.img</code>中。<br>可以分析一下它的代码，看看在其中到底做了一些什么样的初始化任务，它的源文件在<code>system/core/init/init.c</code> 中。<br>它会调用到 <code>init.rc</code>初始化文件，这个文件在 <code>out/target/product/generic/root</code> 下，我们在启动以后，会发现根目录是只读属性的，<br>而且 <code>sdcard</code> 的 <code>owner</code> 是<code>system</code>，就是在这个文件中做了些手脚，可以将它改过来，实现根目录的可读写。</p>\n<p>通过分析这几个文件，还可以发现，<code>android</code> 启动时首先加载 <code>ramdisk.img</code> 镜像，并挂载到<code>/</code>目录下，并进行了一系列的初始化动作，<br>包括创建各种需要的目录，初始化 <code>console</code>，开启服务等。<br><code>System.img</code>是在 <code>init.rc</code>中指定一些脚本命令，通过 <code>init.c</code> 进行解析并挂载到根目录下的<code>/system</code> 目录下的。</p>\n<h2 id=\"镜像介绍\"><a href=\"#镜像介绍\" class=\"headerlink\" title=\"镜像介绍\"></a>镜像介绍</h2><ol>\n<li>ramdisk.img : 一个分区镜像文件，它会在<code>kernel</code> 启动的时候，以只读的方式被 <code>mount</code> ， 这个文件中只是包含了 <code>/init</code> 以及一些配置文件，这个<code>ramdisk</code> 被用来调用<code>init</code>，以及把真正的<code>root file system mount</code> 起来。</li>\n<li>system.img：是包含了整个系统，<code>android</code> 的<code>framework</code>，<code>application</code> 等等，会被挂接到 “<code>/</code>” 上，包含了系统中所有的二进制文件</li>\n<li>userdata.img： 将会被挂接到 <code>/data</code> 下，包含了所有应用相关的配置文件，以及用户相关的数据 。</li>\n<li>boot.img：包括 <code>boot header，kernel， ramdisk</code><br><code>boot</code>镜像不是普通意义上的文件系统，而是一种特殊的<code>Android</code>定制格式，由文件头信息<code>boot header</code>，压缩的内核，<br>文件系统数据<code>ramdisk</code>以及<code>second stage loader</code>（可选）组成，它们之间非页面对齐部分用0填充</li>\n<li>update.img：将所有的img文件，通过指定打包工具，制作<code>update.img</code>，批量生产中常用到此镜像文件</li>\n</ol>\n<h2 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h2><h3 id=\"Modem分区\"><a href=\"#Modem分区\" class=\"headerlink\" title=\"Modem分区\"></a>Modem分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">实现手机必需的通信功能，大家通常所的刷RADIO就是刷写modem分区，在所有适配的ROM中这部分是不动，否则会造成通话不稳定</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"bootloader分区\"><a href=\"#bootloader分区\" class=\"headerlink\" title=\"bootloader分区\"></a>bootloader分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.bootloader的primary bootloader部分，主要执行硬件检测，确保硬件能正常工作，然后将second bootloader拷贝到内存(RAM)开始执行</span><br><span class=\"line\">2.Second bootloader会进行一些硬件初始化工作，获取内存大小信息等，然后根据用户的按键进入到某种启动模式。</span><br><span class=\"line\">    比如说大家所熟知的通过电源键和其它一些按键的组合，可以进入到recovery，fastboot或者选择启动模式的启动界面等。</span><br><span class=\"line\">3.区分</span><br><span class=\"line\">    高通分为xbl.elf和abl.elf</span><br><span class=\"line\">        bootable/bootloader/edk2</span><br><span class=\"line\">    mtk分为preloader和lk，后者是一些接口，调用前者的实现</span><br><span class=\"line\">        vendor/mediatek/proprietary/bootable/bootloader/lk</span><br><span class=\"line\">        vendor/mediatek/proprietary/bootable/bootloader/preloader</span><br><span class=\"line\"></span><br><span class=\"line\">    fastboot模式：fastboot是android定义的一种简单的刷机协议，用户可以通过fastboot命令行工具来进行刷机。</span><br><span class=\"line\">    比如说fastboot flash boot boot.img这个命令就是把boot.img的内容刷写到boot分区中。</span><br><span class=\"line\">    一般的手机厂商不直接提供fastboot模式刷机，总是会提供自己专有的刷机工具和刷机方法。比如说三星的Odin，摩托的RSD，华为的粉屏等等。</span><br><span class=\"line\">    但是其本质实际上是相同的，都是将软件直接flash到各个分区中。这种通常称为线刷，是比较原始的方法。当手机处于开不了机的情况下，可以使用此厂家提供的工具进行刷入</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"boot分区\"><a href=\"#boot分区\" class=\"headerlink\" title=\"boot分区\"></a>boot分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们只是按下电源键开机时，会进入正常启动模式。</span><br><span class=\"line\">Secondarystagebootloader会从boot分区开始启动。Boot分区的格式是固定的，首先是一个头部，然后是Linux内核，最后是用作根文件系统的ramdisk。</span><br><span class=\"line\">当Linux内核启动完毕后，就开始执行根文件系统中的init程序，</span><br><span class=\"line\">init程序会读取启动脚本文件(init.rc和init.xxxx.rc),执行脚本中指定的动作和命令，脚本中的一部分是运行system分区的程序</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recoverty分区\"><a href=\"#recoverty分区\" class=\"headerlink\" title=\"recoverty分区\"></a>recoverty分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recovery模式：recovery是android定义的一个标准刷机协议。</span><br><span class=\"line\">当进入recovery模式时，second bootloader从recovery分区开始启动，recovery分区实际上是一个简单的Linux系统，</span><br><span class=\"line\">当内核启动完毕后，开始执行第一个程序init(init程序是Linux系统所有程序的老祖宗)。</span><br><span class=\"line\">init会启动一个叫做recovery的程序（recovery模式的名称也由此而来）。</span><br><span class=\"line\">通过recovery程序，用户可以执行清除数据，安装刷机包等操作。</span><br><span class=\"line\">一般的手机厂商都提供一个简单的recovery刷机，多只能进行upate的操作。不能进行卡刷；如果想要自已卡刷，则需要事先刷入第三方的Recovery，然后选择刷机包。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"system分区\"><a href=\"#system分区\" class=\"headerlink\" title=\"system分区\"></a>system分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">除linux Kernel部分位于boot分区外，在其上的Library、runtime、framework、core application都是处于system分区</span><br><span class=\"line\">1、/system/priv-app</span><br><span class=\"line\">    特权App，比system_app权限还要高，其不仅System_app标识是true，同时还置了Priv-app标识。</span><br><span class=\"line\">2、/system/app</span><br><span class=\"line\">    核心应用程序档(*.apk: Android应用程序包)，都是放在这。像是Phone、Alarm Clock, Browser, Contacts 等等。</span><br><span class=\"line\">3、/system/framework</span><br><span class=\"line\">    这里放 Android 系统的核心程序库，就是上图中application framework部分的库。像是core.jar, framework-res.apk, framework.jar等等。</span><br><span class=\"line\">4、system/lib</span><br><span class=\"line\">    存放Library部分的库，存放的是所有动态链接库(.so文件)，这些.SO是JNI层，Dalvik虚拟机，本地库，HAL层所需要的，</span><br><span class=\"line\">    因为系统应用/system/app下的apk是不会解压的SO到程序的目录下，所以其相应用的SO，都应放在/system/lib 下面。</span><br><span class=\"line\">    当一个系统apk的SO加载时，会从此目录下寻找对应用的SO文件；</span><br><span class=\"line\">5、/system/media/audio/(notification, alarms, ringtones, ui)</span><br><span class=\"line\">    这里放系统的声音档，像是闹铃声，来电铃声等等。这些声音档，多是 ogg 格式。</span><br><span class=\"line\">6、/system/bin</span><br><span class=\"line\">    存放的是一些可执行文件，基本上是由C/C++编写的。其中有一个重要的命令叫app_process。一般大家称之为Zygote。</span><br><span class=\"line\">    （Zygote是卵的意思，所有的Android进程都是由它生出来的)。Zygote首先会加载dalvik虚拟机，然后产生一个叫做system_server的进程。</span><br><span class=\"line\">    system_server顾名思义被称作Android的系统服务程序，它主要管理整个android系统。</span><br><span class=\"line\">    system_server启动完成后开始寻找一个叫做启动器的程序，找到之后由zygote开始启动执行启动器，这就是我们常见到的桌面程序。</span><br><span class=\"line\">7、system/xbin</span><br><span class=\"line\">    存放的是一些扩展的可执行文件，既该目录可以为空。大家常用的busybox就放在该目录下。Busybox所建立的各种符号链接命令都是放在该目录。</span><br><span class=\"line\">8、system/build.prop</span><br><span class=\"line\">    build.prop和上节说得根文件系统中的default.prop文件格式一样，都称为属性配置文件。它们都定义了一些属性值，代码可以读取或者修改这些属性值。属性值有一些命名规范：</span><br><span class=\"line\">    　　ro开头的表示只读属性，即这些属性的值代码是无法修改的。</span><br><span class=\"line\">    　　persist开头的表示这些属性值会保存在文件中，这样重新启动之后这些值还保留。</span><br><span class=\"line\">    　　其它的属性一般以所属的类别开头，这些属性是可读可写的，但是对它们的修改重启之后不会保留。</span><br><span class=\"line\">9、system/etc</span><br><span class=\"line\">    目录存放一些配置文件，和属性配置文件不一样，这下面的配置文件可能稍微没那么的有规律。</span><br><span class=\"line\">    一般来说，一些脚本程序，还有大家所熟悉GPS配置文件(gps.conf)和APN配置文件(apns-conf.xml)放在这个目录。</span><br><span class=\"line\">    像HTC将相机特效所使用的一些文件也放在这个目录下。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"data分区\"><a href=\"#data分区\" class=\"headerlink\" title=\"data分区\"></a>data分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们开机进入桌面程序后，一般来说我们都会下载安装一些APP，这些APP都安装在data/app目录下。所有的Android程序生成的数据基本上都保存在data/data目录下。</span><br><span class=\"line\">wipedata实质上就是格式化data分区，这样我们安装的所有APP和程序数据就都丢失了。</span><br><span class=\"line\">1、/data/app</span><br><span class=\"line\">    放的是使用者自己安装的应用程式执行档(*.apk)。</span><br><span class=\"line\">2、/data/data/</span><br><span class=\"line\">    当你在程式中用Context.openFileOutput() 所建立的档案，都放在这个目录下的files 子目录内。而用Context.getSharedPreferences() 所建立的preferences 档(*.xml) ，则是放在shared_pref 这个子目录中。</span><br><span class=\"line\">3、/data/anr/traces.txt</span><br><span class=\"line\">    当你的应用程式发生ANR (Application is Not Responding) 错误时，Android 会自动将问题点的code stack list 写在这个档案内，你直接用cat 命令就可以看他的内容。</span><br><span class=\"line\">4、/data/system/dropbox/***.txt</span><br><span class=\"line\">    主要是系统内apk发生crash时写的日志文件，主要有system_app_crash、data_app_crash等日志。</span><br><span class=\"line\">5、/data/location/gps</span><br><span class=\"line\">    是给GPS location provider 用的。其中的 properties 档案的内容如下：</span><br><span class=\"line\">6、/data/system/location/location.gps</span><br><span class=\"line\">    一般文字档。主要是记录最后的经纬度座标。 LocationManager.getLastKnownLocation() 就在来这抓值的。</span><br><span class=\"line\">7、/data/property/persist.sys.timezone</span><br><span class=\"line\">    这个档案也是个一般文字档。主要是记录目前系统所使用的时区。在我的模拟器上，他记录着Asia/Taipei 这个字串。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cache分区\"><a href=\"#cache分区\" class=\"headerlink\" title=\"cache分区\"></a>cache分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此分区是安卓系统缓存区，他保存系统最常访问的数据和应用程序。</span><br><span class=\"line\">擦除这个分区，不会影响个人数据，只是删除了这个分区中已经保存的缓存内容，缓存内容会在后续手机使用过程中重新自动生成。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"misc分区\"><a href=\"#misc分区\" class=\"headerlink\" title=\"misc分区\"></a>misc分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">misc分区中有Bootloader Control Block（BCB），主要是用于存放Recovery引导信息。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vbmeta分区\"><a href=\"#vbmeta分区\" class=\"headerlink\" title=\"vbmeta分区\"></a>vbmeta分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证启动（Verified Boot）是Android一个重要的安全功能，主要是为了访问启动镜像被篡改，提高系统的抗攻击能力，简单描述做法就是在启动过程中增加一条校验链，即 ROM code 校验 BootLoader，确保 BootLoader 的合法性和完整性，BootLoader 则需要校验 boot image，确保 Kernel 启动所需 image 的合法性和完整性，而 Kernel 则负责校验 System 分区和 vendor 分区。</span><br><span class=\"line\">由于 ROM code 和 BootLoader 通常都是由设备厂商 OEM 提供，而各家实际做法和研发能力不尽相同，为了让设备厂商更方便的引入 Verified boot 功能，Google 在 Android O上推出了一个统一的验证启动框架 Android verified boot 2.0，好处是既保证了基于该框架开发的verified boot 功能能够满足 CDD 要求，也保留了各家 OEM 定制启动校验流程的弹性。</span><br><span class=\"line\">由于 ROM code 校验 BootLoader 的功能通常与 IC的设计相关，所以 AVB 2.0 关注的重点在 BootLoader 之后的校验流程。BootLoader 之后系统启动所涉及的关键镜像通常包括 boot.img，system.img，Android O 的 treble Project 还引入了 dtbo 和 vendor.img。这些 image 挨个校验可以说费时费力，而 AVB 2.0 的做法事实上十分简单，引入一个新的分区：vbmeta.img（verified boot metadata），然后把所有需要校验的内容在编译时就计算好打包到这个分区，那么启动过程中 BootLoader 只需要校验 vbmeta.img，就能确认 vbmeta 内的数据是否可信。再用 vbmeta 中的数据去比对 bootimg，dtbo，system,img，vendor.img 即可。至于 OEM 是还需要放什么其他东西到 vbmeta 中，则可以由 OEM 自由定制，可以说保留了很好的客制化空间。</span><br><span class=\"line\">除了最基本的验证启动之外，AVB 2.0 还提供防止回滚的功能和对AB分区备份的支持，具体的可以看README文档（安卓源码external/avb/README.md）。</span><br><span class=\"line\">生成过程：</span><br><span class=\"line\">    vbmeta.img 这个镜像不是编译生成的，它是依赖avbtool 工具生成，这个其实是一个python脚本，详细原理可以参阅external/avb/avbtool 源码，这里我们只整理Android源码下的生成流程，用最原始的方法追踪生成流程（事实证明是最直接、最有效的 ），安卓代码编译之后，在编译log只能看到一句log：</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dtbo分区\"><a href=\"#dtbo分区\" class=\"headerlink\" title=\"dtbo分区\"></a>dtbo分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dt或者dto镜像在这里Google把它笼统地称作dtbo镜像，他们的格式是一样的，都是把多个dtc编译出来的dtb二进制或者dto二进制打包到一个image</span><br><span class=\"line\">每个硬件设备对应一个dtb和dto，把多个dtb或者dto按照图示的格式打包成对应的dt.img和dto.img，这样软件可以做到共镜像，方便了厂商对产品的维护工作</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Android系统介绍</p>","more":"<h2 id=\"单编\"><a href=\"#单编\" class=\"headerlink\" title=\"单编\"></a>单编</h2><ul>\n<li>make clean（清理）</li>\n<li>make update-api（更新api和doc一致）</li>\n<li>make systemimage（单编 system.img，make snod）</li>\n<li>make bootimage（单编 boot.img，由kernel, dtb, ramdisk组成）</li>\n<li>make userdataimage-nodeps（单编 userdata.img）</li>\n<li>make aboot（单编 abl.elf，也是bootloader，uboot）</li>\n<li>make target-files-package\t编target-files</li>\n</ul>\n<h2 id=\"启动流程\"><a href=\"#启动流程\" class=\"headerlink\" title=\"启动流程\"></a>启动流程</h2><p><code>bootloader.img -&gt; boot.img -&gt; system.img</code><br><code>Android</code> 在启动的时候，会由 <code>UBOOT</code> 传入一个 <code>init</code> 参数，这个<code>init</code> 参数指定了开机的时候第一个运行的程序，默认就是 <code>init</code> 程序，这个程序在 <code>ramdisk.img</code>中。<br>可以分析一下它的代码，看看在其中到底做了一些什么样的初始化任务，它的源文件在<code>system/core/init/init.c</code> 中。<br>它会调用到 <code>init.rc</code>初始化文件，这个文件在 <code>out/target/product/generic/root</code> 下，我们在启动以后，会发现根目录是只读属性的，<br>而且 <code>sdcard</code> 的 <code>owner</code> 是<code>system</code>，就是在这个文件中做了些手脚，可以将它改过来，实现根目录的可读写。</p>\n<p>通过分析这几个文件，还可以发现，<code>android</code> 启动时首先加载 <code>ramdisk.img</code> 镜像，并挂载到<code>/</code>目录下，并进行了一系列的初始化动作，<br>包括创建各种需要的目录，初始化 <code>console</code>，开启服务等。<br><code>System.img</code>是在 <code>init.rc</code>中指定一些脚本命令，通过 <code>init.c</code> 进行解析并挂载到根目录下的<code>/system</code> 目录下的。</p>\n<h2 id=\"镜像介绍\"><a href=\"#镜像介绍\" class=\"headerlink\" title=\"镜像介绍\"></a>镜像介绍</h2><ol>\n<li>ramdisk.img : 一个分区镜像文件，它会在<code>kernel</code> 启动的时候，以只读的方式被 <code>mount</code> ， 这个文件中只是包含了 <code>/init</code> 以及一些配置文件，这个<code>ramdisk</code> 被用来调用<code>init</code>，以及把真正的<code>root file system mount</code> 起来。</li>\n<li>system.img：是包含了整个系统，<code>android</code> 的<code>framework</code>，<code>application</code> 等等，会被挂接到 “<code>/</code>” 上，包含了系统中所有的二进制文件</li>\n<li>userdata.img： 将会被挂接到 <code>/data</code> 下，包含了所有应用相关的配置文件，以及用户相关的数据 。</li>\n<li>boot.img：包括 <code>boot header，kernel， ramdisk</code><br><code>boot</code>镜像不是普通意义上的文件系统，而是一种特殊的<code>Android</code>定制格式，由文件头信息<code>boot header</code>，压缩的内核，<br>文件系统数据<code>ramdisk</code>以及<code>second stage loader</code>（可选）组成，它们之间非页面对齐部分用0填充</li>\n<li>update.img：将所有的img文件，通过指定打包工具，制作<code>update.img</code>，批量生产中常用到此镜像文件</li>\n</ol>\n<h2 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h2><h3 id=\"Modem分区\"><a href=\"#Modem分区\" class=\"headerlink\" title=\"Modem分区\"></a>Modem分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">实现手机必需的通信功能，大家通常所的刷RADIO就是刷写modem分区，在所有适配的ROM中这部分是不动，否则会造成通话不稳定</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"bootloader分区\"><a href=\"#bootloader分区\" class=\"headerlink\" title=\"bootloader分区\"></a>bootloader分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.bootloader的primary bootloader部分，主要执行硬件检测，确保硬件能正常工作，然后将second bootloader拷贝到内存(RAM)开始执行</span><br><span class=\"line\">2.Second bootloader会进行一些硬件初始化工作，获取内存大小信息等，然后根据用户的按键进入到某种启动模式。</span><br><span class=\"line\">    比如说大家所熟知的通过电源键和其它一些按键的组合，可以进入到recovery，fastboot或者选择启动模式的启动界面等。</span><br><span class=\"line\">3.区分</span><br><span class=\"line\">    高通分为xbl.elf和abl.elf</span><br><span class=\"line\">        bootable/bootloader/edk2</span><br><span class=\"line\">    mtk分为preloader和lk，后者是一些接口，调用前者的实现</span><br><span class=\"line\">        vendor/mediatek/proprietary/bootable/bootloader/lk</span><br><span class=\"line\">        vendor/mediatek/proprietary/bootable/bootloader/preloader</span><br><span class=\"line\"></span><br><span class=\"line\">    fastboot模式：fastboot是android定义的一种简单的刷机协议，用户可以通过fastboot命令行工具来进行刷机。</span><br><span class=\"line\">    比如说fastboot flash boot boot.img这个命令就是把boot.img的内容刷写到boot分区中。</span><br><span class=\"line\">    一般的手机厂商不直接提供fastboot模式刷机，总是会提供自己专有的刷机工具和刷机方法。比如说三星的Odin，摩托的RSD，华为的粉屏等等。</span><br><span class=\"line\">    但是其本质实际上是相同的，都是将软件直接flash到各个分区中。这种通常称为线刷，是比较原始的方法。当手机处于开不了机的情况下，可以使用此厂家提供的工具进行刷入</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"boot分区\"><a href=\"#boot分区\" class=\"headerlink\" title=\"boot分区\"></a>boot分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们只是按下电源键开机时，会进入正常启动模式。</span><br><span class=\"line\">Secondarystagebootloader会从boot分区开始启动。Boot分区的格式是固定的，首先是一个头部，然后是Linux内核，最后是用作根文件系统的ramdisk。</span><br><span class=\"line\">当Linux内核启动完毕后，就开始执行根文件系统中的init程序，</span><br><span class=\"line\">init程序会读取启动脚本文件(init.rc和init.xxxx.rc),执行脚本中指定的动作和命令，脚本中的一部分是运行system分区的程序</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"recoverty分区\"><a href=\"#recoverty分区\" class=\"headerlink\" title=\"recoverty分区\"></a>recoverty分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recovery模式：recovery是android定义的一个标准刷机协议。</span><br><span class=\"line\">当进入recovery模式时，second bootloader从recovery分区开始启动，recovery分区实际上是一个简单的Linux系统，</span><br><span class=\"line\">当内核启动完毕后，开始执行第一个程序init(init程序是Linux系统所有程序的老祖宗)。</span><br><span class=\"line\">init会启动一个叫做recovery的程序（recovery模式的名称也由此而来）。</span><br><span class=\"line\">通过recovery程序，用户可以执行清除数据，安装刷机包等操作。</span><br><span class=\"line\">一般的手机厂商都提供一个简单的recovery刷机，多只能进行upate的操作。不能进行卡刷；如果想要自已卡刷，则需要事先刷入第三方的Recovery，然后选择刷机包。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"system分区\"><a href=\"#system分区\" class=\"headerlink\" title=\"system分区\"></a>system分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">除linux Kernel部分位于boot分区外，在其上的Library、runtime、framework、core application都是处于system分区</span><br><span class=\"line\">1、/system/priv-app</span><br><span class=\"line\">    特权App，比system_app权限还要高，其不仅System_app标识是true，同时还置了Priv-app标识。</span><br><span class=\"line\">2、/system/app</span><br><span class=\"line\">    核心应用程序档(*.apk: Android应用程序包)，都是放在这。像是Phone、Alarm Clock, Browser, Contacts 等等。</span><br><span class=\"line\">3、/system/framework</span><br><span class=\"line\">    这里放 Android 系统的核心程序库，就是上图中application framework部分的库。像是core.jar, framework-res.apk, framework.jar等等。</span><br><span class=\"line\">4、system/lib</span><br><span class=\"line\">    存放Library部分的库，存放的是所有动态链接库(.so文件)，这些.SO是JNI层，Dalvik虚拟机，本地库，HAL层所需要的，</span><br><span class=\"line\">    因为系统应用/system/app下的apk是不会解压的SO到程序的目录下，所以其相应用的SO，都应放在/system/lib 下面。</span><br><span class=\"line\">    当一个系统apk的SO加载时，会从此目录下寻找对应用的SO文件；</span><br><span class=\"line\">5、/system/media/audio/(notification, alarms, ringtones, ui)</span><br><span class=\"line\">    这里放系统的声音档，像是闹铃声，来电铃声等等。这些声音档，多是 ogg 格式。</span><br><span class=\"line\">6、/system/bin</span><br><span class=\"line\">    存放的是一些可执行文件，基本上是由C/C++编写的。其中有一个重要的命令叫app_process。一般大家称之为Zygote。</span><br><span class=\"line\">    （Zygote是卵的意思，所有的Android进程都是由它生出来的)。Zygote首先会加载dalvik虚拟机，然后产生一个叫做system_server的进程。</span><br><span class=\"line\">    system_server顾名思义被称作Android的系统服务程序，它主要管理整个android系统。</span><br><span class=\"line\">    system_server启动完成后开始寻找一个叫做启动器的程序，找到之后由zygote开始启动执行启动器，这就是我们常见到的桌面程序。</span><br><span class=\"line\">7、system/xbin</span><br><span class=\"line\">    存放的是一些扩展的可执行文件，既该目录可以为空。大家常用的busybox就放在该目录下。Busybox所建立的各种符号链接命令都是放在该目录。</span><br><span class=\"line\">8、system/build.prop</span><br><span class=\"line\">    build.prop和上节说得根文件系统中的default.prop文件格式一样，都称为属性配置文件。它们都定义了一些属性值，代码可以读取或者修改这些属性值。属性值有一些命名规范：</span><br><span class=\"line\">    　　ro开头的表示只读属性，即这些属性的值代码是无法修改的。</span><br><span class=\"line\">    　　persist开头的表示这些属性值会保存在文件中，这样重新启动之后这些值还保留。</span><br><span class=\"line\">    　　其它的属性一般以所属的类别开头，这些属性是可读可写的，但是对它们的修改重启之后不会保留。</span><br><span class=\"line\">9、system/etc</span><br><span class=\"line\">    目录存放一些配置文件，和属性配置文件不一样，这下面的配置文件可能稍微没那么的有规律。</span><br><span class=\"line\">    一般来说，一些脚本程序，还有大家所熟悉GPS配置文件(gps.conf)和APN配置文件(apns-conf.xml)放在这个目录。</span><br><span class=\"line\">    像HTC将相机特效所使用的一些文件也放在这个目录下。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"data分区\"><a href=\"#data分区\" class=\"headerlink\" title=\"data分区\"></a>data分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们开机进入桌面程序后，一般来说我们都会下载安装一些APP，这些APP都安装在data/app目录下。所有的Android程序生成的数据基本上都保存在data/data目录下。</span><br><span class=\"line\">wipedata实质上就是格式化data分区，这样我们安装的所有APP和程序数据就都丢失了。</span><br><span class=\"line\">1、/data/app</span><br><span class=\"line\">    放的是使用者自己安装的应用程式执行档(*.apk)。</span><br><span class=\"line\">2、/data/data/</span><br><span class=\"line\">    当你在程式中用Context.openFileOutput() 所建立的档案，都放在这个目录下的files 子目录内。而用Context.getSharedPreferences() 所建立的preferences 档(*.xml) ，则是放在shared_pref 这个子目录中。</span><br><span class=\"line\">3、/data/anr/traces.txt</span><br><span class=\"line\">    当你的应用程式发生ANR (Application is Not Responding) 错误时，Android 会自动将问题点的code stack list 写在这个档案内，你直接用cat 命令就可以看他的内容。</span><br><span class=\"line\">4、/data/system/dropbox/***.txt</span><br><span class=\"line\">    主要是系统内apk发生crash时写的日志文件，主要有system_app_crash、data_app_crash等日志。</span><br><span class=\"line\">5、/data/location/gps</span><br><span class=\"line\">    是给GPS location provider 用的。其中的 properties 档案的内容如下：</span><br><span class=\"line\">6、/data/system/location/location.gps</span><br><span class=\"line\">    一般文字档。主要是记录最后的经纬度座标。 LocationManager.getLastKnownLocation() 就在来这抓值的。</span><br><span class=\"line\">7、/data/property/persist.sys.timezone</span><br><span class=\"line\">    这个档案也是个一般文字档。主要是记录目前系统所使用的时区。在我的模拟器上，他记录着Asia/Taipei 这个字串。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"cache分区\"><a href=\"#cache分区\" class=\"headerlink\" title=\"cache分区\"></a>cache分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">此分区是安卓系统缓存区，他保存系统最常访问的数据和应用程序。</span><br><span class=\"line\">擦除这个分区，不会影响个人数据，只是删除了这个分区中已经保存的缓存内容，缓存内容会在后续手机使用过程中重新自动生成。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"misc分区\"><a href=\"#misc分区\" class=\"headerlink\" title=\"misc分区\"></a>misc分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">misc分区中有Bootloader Control Block（BCB），主要是用于存放Recovery引导信息。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vbmeta分区\"><a href=\"#vbmeta分区\" class=\"headerlink\" title=\"vbmeta分区\"></a>vbmeta分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证启动（Verified Boot）是Android一个重要的安全功能，主要是为了访问启动镜像被篡改，提高系统的抗攻击能力，简单描述做法就是在启动过程中增加一条校验链，即 ROM code 校验 BootLoader，确保 BootLoader 的合法性和完整性，BootLoader 则需要校验 boot image，确保 Kernel 启动所需 image 的合法性和完整性，而 Kernel 则负责校验 System 分区和 vendor 分区。</span><br><span class=\"line\">由于 ROM code 和 BootLoader 通常都是由设备厂商 OEM 提供，而各家实际做法和研发能力不尽相同，为了让设备厂商更方便的引入 Verified boot 功能，Google 在 Android O上推出了一个统一的验证启动框架 Android verified boot 2.0，好处是既保证了基于该框架开发的verified boot 功能能够满足 CDD 要求，也保留了各家 OEM 定制启动校验流程的弹性。</span><br><span class=\"line\">由于 ROM code 校验 BootLoader 的功能通常与 IC的设计相关，所以 AVB 2.0 关注的重点在 BootLoader 之后的校验流程。BootLoader 之后系统启动所涉及的关键镜像通常包括 boot.img，system.img，Android O 的 treble Project 还引入了 dtbo 和 vendor.img。这些 image 挨个校验可以说费时费力，而 AVB 2.0 的做法事实上十分简单，引入一个新的分区：vbmeta.img（verified boot metadata），然后把所有需要校验的内容在编译时就计算好打包到这个分区，那么启动过程中 BootLoader 只需要校验 vbmeta.img，就能确认 vbmeta 内的数据是否可信。再用 vbmeta 中的数据去比对 bootimg，dtbo，system,img，vendor.img 即可。至于 OEM 是还需要放什么其他东西到 vbmeta 中，则可以由 OEM 自由定制，可以说保留了很好的客制化空间。</span><br><span class=\"line\">除了最基本的验证启动之外，AVB 2.0 还提供防止回滚的功能和对AB分区备份的支持，具体的可以看README文档（安卓源码external/avb/README.md）。</span><br><span class=\"line\">生成过程：</span><br><span class=\"line\">    vbmeta.img 这个镜像不是编译生成的，它是依赖avbtool 工具生成，这个其实是一个python脚本，详细原理可以参阅external/avb/avbtool 源码，这里我们只整理Android源码下的生成流程，用最原始的方法追踪生成流程（事实证明是最直接、最有效的 ），安卓代码编译之后，在编译log只能看到一句log：</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dtbo分区\"><a href=\"#dtbo分区\" class=\"headerlink\" title=\"dtbo分区\"></a>dtbo分区</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dt或者dto镜像在这里Google把它笼统地称作dtbo镜像，他们的格式是一样的，都是把多个dtc编译出来的dtb二进制或者dto二进制打包到一个image</span><br><span class=\"line\">每个硬件设备对应一个dtb和dto，把多个dtb或者dto按照图示的格式打包成对应的dt.img和dto.img，这样软件可以做到共镜像，方便了厂商对产品的维护工作</span><br></pre></td></tr></table></figure>"},{"title":"OTA升级","date":"2022-06-30T16:00:00.000Z","_content":"\nOTA升级\n\n<!--more-->\n\n## otapackage（**会生成target包和ota完整包**）\n```bash\nname := $(TARGET_PRODUCT)\nifeq ($(TARGET_BUILD_TYPE),debug)\n  name := $(name)_debug\nendif\nname := $(name)-ota-$(FILE_NAME_TAG)\n\nINTERNAL_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name).zip\nINTERNAL_OTA_METADATA := $(PRODUCT_OUT)/ota_metadata\n\n$(INTERNAL_OTA_PACKAGE_TARGET): KEY_CERT_PAIR := $(DEFAULT_KEY_CERT_PAIR)\n$(INTERNAL_OTA_PACKAGE_TARGET): .KATI_IMPLICIT_OUTPUTS := $(INTERNAL_OTA_METADATA)\n$(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTA_FROM_TARGET_FILES)\n  @echo \"Package OTA: $@\"\n  $(call build-ota-package-target,$@,-k $(KEY_CERT_PAIR) --output_metadata_path $(INTERNAL_OTA_METADATA))\n\n.PHONY: otapackage\notapackage: $(INTERNAL_OTA_PACKAGE_TARGET)\n```\n\n## target-files-package（**会生成target**）\n```bash\nname := $(TARGET_PRODUCT)\nifeq ($(TARGET_BUILD_TYPE),debug)\n  name := $(name)_debug\nendif\nname := $(name)-target_files-$(FILE_NAME_TAG)\n\nintermediates := $(call intermediates-dir-for,PACKAGING,target_files)\nBUILT_TARGET_FILES_PACKAGE := $(intermediates)/$(name).zip\n$(BUILT_TARGET_FILES_PACKAGE): intermediates := $(intermediates)\n$(BUILT_TARGET_FILES_PACKAGE): \\\n      zip_root := $(intermediates)/$(name)\n\n.PHONY: target-files-package\ntarget-files-package: $(BUILT_TARGET_FILES_PACKAGE)\n```\n\n## 做差分包所需文件（**系统**）\n```bash\n├── bin\n├── build\n│     └── make\n│         └── target\n│             └── product\n│                 └── security\n├── device\n│     ├── google\n│     │     ├── cuttlefish\n│     │     │     └── host\n│     │     │         └── frontend\n│     │     └── vrservices\n│     │         └── vrcore\n│     │             └── sepolicy\n│     └── qcom\n│         └── sepolicy_vndr\n│             ├── legacy\n│             │     └── vendor\n│             └── qva\n│                 └── vendor\n├── external\n│     └── avb\n│         └── test\n│             └── data\n├── framework\n│     ├── apksigner.jar\n│     ├── boot_signer.jar\n│     ├── signapk.jar\n│     └── verity_signer.jar\n├── lib64\n├── releasetools\n└── vendor\n    ├── huaqin\n    │     └── factory\n    │         └── BaseFactoryKit\n    │             └── keystore\n    ├── partner_modules\n    │     └── NetworkStackPrebuilt\n    │         ├── localtest\n    │         │     └── networkstack.x509.pem\n    │         └── networkstack.x509.pem\n    └── qcom\n        └── proprietary\n            └── prebuilt_HY11\n                └── target\n```\n\n## 做差分包所需文件（**总结**）\n```bash\ncp -r build/target/product/security $target\ncp -r build/make/tools/releasetools $target\ncp -r out/host/linux-x86 $target\n```\n\n## 根据target包生成ota差分包\n```bash\nbuild/make/tools/resleasetools/ota_from_target_files -k key_path -i old new output\n    -k/--package_key build/make/target/product/security/testkey：key cert路径\n    -i old.zip new.zip update.zip：差分包参数\n    -p/--path out/host/linux-x86：host out路径\n    -s/--device_specific ./device/qcom/common：指定了device-specific extension路径\n    -v/--verify：校验和，仅非A/B设备\n    --block：为非A/B设备生成基于块\n    --skip_compatibility_check：跳过包的兼容性检查\n    --override_timestamp：覆盖时间戳\n    --downgrade：允许降级\n```","source":"_posts/2022-7-1OTA升级.md","raw":"---\ntitle: OTA升级\ndate: 2022-7-1\ntags: [ota]\n---\n\nOTA升级\n\n<!--more-->\n\n## otapackage（**会生成target包和ota完整包**）\n```bash\nname := $(TARGET_PRODUCT)\nifeq ($(TARGET_BUILD_TYPE),debug)\n  name := $(name)_debug\nendif\nname := $(name)-ota-$(FILE_NAME_TAG)\n\nINTERNAL_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name).zip\nINTERNAL_OTA_METADATA := $(PRODUCT_OUT)/ota_metadata\n\n$(INTERNAL_OTA_PACKAGE_TARGET): KEY_CERT_PAIR := $(DEFAULT_KEY_CERT_PAIR)\n$(INTERNAL_OTA_PACKAGE_TARGET): .KATI_IMPLICIT_OUTPUTS := $(INTERNAL_OTA_METADATA)\n$(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTA_FROM_TARGET_FILES)\n  @echo \"Package OTA: $@\"\n  $(call build-ota-package-target,$@,-k $(KEY_CERT_PAIR) --output_metadata_path $(INTERNAL_OTA_METADATA))\n\n.PHONY: otapackage\notapackage: $(INTERNAL_OTA_PACKAGE_TARGET)\n```\n\n## target-files-package（**会生成target**）\n```bash\nname := $(TARGET_PRODUCT)\nifeq ($(TARGET_BUILD_TYPE),debug)\n  name := $(name)_debug\nendif\nname := $(name)-target_files-$(FILE_NAME_TAG)\n\nintermediates := $(call intermediates-dir-for,PACKAGING,target_files)\nBUILT_TARGET_FILES_PACKAGE := $(intermediates)/$(name).zip\n$(BUILT_TARGET_FILES_PACKAGE): intermediates := $(intermediates)\n$(BUILT_TARGET_FILES_PACKAGE): \\\n      zip_root := $(intermediates)/$(name)\n\n.PHONY: target-files-package\ntarget-files-package: $(BUILT_TARGET_FILES_PACKAGE)\n```\n\n## 做差分包所需文件（**系统**）\n```bash\n├── bin\n├── build\n│     └── make\n│         └── target\n│             └── product\n│                 └── security\n├── device\n│     ├── google\n│     │     ├── cuttlefish\n│     │     │     └── host\n│     │     │         └── frontend\n│     │     └── vrservices\n│     │         └── vrcore\n│     │             └── sepolicy\n│     └── qcom\n│         └── sepolicy_vndr\n│             ├── legacy\n│             │     └── vendor\n│             └── qva\n│                 └── vendor\n├── external\n│     └── avb\n│         └── test\n│             └── data\n├── framework\n│     ├── apksigner.jar\n│     ├── boot_signer.jar\n│     ├── signapk.jar\n│     └── verity_signer.jar\n├── lib64\n├── releasetools\n└── vendor\n    ├── huaqin\n    │     └── factory\n    │         └── BaseFactoryKit\n    │             └── keystore\n    ├── partner_modules\n    │     └── NetworkStackPrebuilt\n    │         ├── localtest\n    │         │     └── networkstack.x509.pem\n    │         └── networkstack.x509.pem\n    └── qcom\n        └── proprietary\n            └── prebuilt_HY11\n                └── target\n```\n\n## 做差分包所需文件（**总结**）\n```bash\ncp -r build/target/product/security $target\ncp -r build/make/tools/releasetools $target\ncp -r out/host/linux-x86 $target\n```\n\n## 根据target包生成ota差分包\n```bash\nbuild/make/tools/resleasetools/ota_from_target_files -k key_path -i old new output\n    -k/--package_key build/make/target/product/security/testkey：key cert路径\n    -i old.zip new.zip update.zip：差分包参数\n    -p/--path out/host/linux-x86：host out路径\n    -s/--device_specific ./device/qcom/common：指定了device-specific extension路径\n    -v/--verify：校验和，仅非A/B设备\n    --block：为非A/B设备生成基于块\n    --skip_compatibility_check：跳过包的兼容性检查\n    --override_timestamp：覆盖时间戳\n    --downgrade：允许降级\n```","slug":"2022-7-1OTA升级","published":1,"updated":"2022-07-02T13:52:19.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof3000unkvv63jc9bi6","content":"<p>OTA升级</p>\n<span id=\"more\"></span>\n\n<h2 id=\"otapackage（会生成target包和ota完整包）\"><a href=\"#otapackage（会生成target包和ota完整包）\" class=\"headerlink\" title=\"otapackage（会生成target包和ota完整包）\"></a>otapackage（<strong>会生成target包和ota完整包</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name := $(TARGET_PRODUCT)</span><br><span class=\"line\">ifeq ($(TARGET_BUILD_TYPE),debug)</span><br><span class=\"line\">  name := $(name)_debug</span><br><span class=\"line\">endif</span><br><span class=\"line\">name := $(name)-ota-$(FILE_NAME_TAG)</span><br><span class=\"line\"></span><br><span class=\"line\">INTERNAL_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name).zip</span><br><span class=\"line\">INTERNAL_OTA_METADATA := $(PRODUCT_OUT)/ota_metadata</span><br><span class=\"line\"></span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): KEY_CERT_PAIR := $(DEFAULT_KEY_CERT_PAIR)</span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): .KATI_IMPLICIT_OUTPUTS := $(INTERNAL_OTA_METADATA)</span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTA_FROM_TARGET_FILES)</span><br><span class=\"line\">  @<span class=\"built_in\">echo</span> <span class=\"string\">&quot;Package OTA: <span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\">  $(call build-ota-package-target,<span class=\"variable\">$@</span>,-k $(KEY_CERT_PAIR) --output_metadata_path $(INTERNAL_OTA_METADATA))</span><br><span class=\"line\"></span><br><span class=\"line\">.PHONY: otapackage</span><br><span class=\"line\">otapackage: $(INTERNAL_OTA_PACKAGE_TARGET)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"target-files-package（会生成target）\"><a href=\"#target-files-package（会生成target）\" class=\"headerlink\" title=\"target-files-package（会生成target）\"></a>target-files-package（<strong>会生成target</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name := $(TARGET_PRODUCT)</span><br><span class=\"line\">ifeq ($(TARGET_BUILD_TYPE),debug)</span><br><span class=\"line\">  name := $(name)_debug</span><br><span class=\"line\">endif</span><br><span class=\"line\">name := $(name)-target_files-$(FILE_NAME_TAG)</span><br><span class=\"line\"></span><br><span class=\"line\">intermediates := $(call intermediates-dir-for,PACKAGING,target_files)</span><br><span class=\"line\">BUILT_TARGET_FILES_PACKAGE := $(intermediates)/$(name).zip</span><br><span class=\"line\">$(BUILT_TARGET_FILES_PACKAGE): intermediates := $(intermediates)</span><br><span class=\"line\">$(BUILT_TARGET_FILES_PACKAGE): \\</span><br><span class=\"line\">      zip_root := $(intermediates)/$(name)</span><br><span class=\"line\"></span><br><span class=\"line\">.PHONY: target-files-package</span><br><span class=\"line\">target-files-package: $(BUILT_TARGET_FILES_PACKAGE)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"做差分包所需文件（系统）\"><a href=\"#做差分包所需文件（系统）\" class=\"headerlink\" title=\"做差分包所需文件（系统）\"></a>做差分包所需文件（<strong>系统</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── bin</span><br><span class=\"line\">├── build</span><br><span class=\"line\">│     └── make</span><br><span class=\"line\">│         └── target</span><br><span class=\"line\">│             └── product</span><br><span class=\"line\">│                 └── security</span><br><span class=\"line\">├── device</span><br><span class=\"line\">│     ├── google</span><br><span class=\"line\">│     │     ├── cuttlefish</span><br><span class=\"line\">│     │     │     └── host</span><br><span class=\"line\">│     │     │         └── frontend</span><br><span class=\"line\">│     │     └── vrservices</span><br><span class=\"line\">│     │         └── vrcore</span><br><span class=\"line\">│     │             └── sepolicy</span><br><span class=\"line\">│     └── qcom</span><br><span class=\"line\">│         └── sepolicy_vndr</span><br><span class=\"line\">│             ├── legacy</span><br><span class=\"line\">│             │     └── vendor</span><br><span class=\"line\">│             └── qva</span><br><span class=\"line\">│                 └── vendor</span><br><span class=\"line\">├── external</span><br><span class=\"line\">│     └── avb</span><br><span class=\"line\">│         └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│             └── data</span><br><span class=\"line\">├── framework</span><br><span class=\"line\">│     ├── apksigner.jar</span><br><span class=\"line\">│     ├── boot_signer.jar</span><br><span class=\"line\">│     ├── signapk.jar</span><br><span class=\"line\">│     └── verity_signer.jar</span><br><span class=\"line\">├── lib64</span><br><span class=\"line\">├── releasetools</span><br><span class=\"line\">└── vendor</span><br><span class=\"line\">    ├── huaqin</span><br><span class=\"line\">    │     └── factory</span><br><span class=\"line\">    │         └── BaseFactoryKit</span><br><span class=\"line\">    │             └── keystore</span><br><span class=\"line\">    ├── partner_modules</span><br><span class=\"line\">    │     └── NetworkStackPrebuilt</span><br><span class=\"line\">    │         ├── localtest</span><br><span class=\"line\">    │         │     └── networkstack.x509.pem</span><br><span class=\"line\">    │         └── networkstack.x509.pem</span><br><span class=\"line\">    └── qcom</span><br><span class=\"line\">        └── proprietary</span><br><span class=\"line\">            └── prebuilt_HY11</span><br><span class=\"line\">                └── target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"做差分包所需文件（总结）\"><a href=\"#做差分包所需文件（总结）\" class=\"headerlink\" title=\"做差分包所需文件（总结）\"></a>做差分包所需文件（<strong>总结</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r build/target/product/security <span class=\"variable\">$target</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r build/make/tools/releasetools <span class=\"variable\">$target</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r out/host/linux-x86 <span class=\"variable\">$target</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"根据target包生成ota差分包\"><a href=\"#根据target包生成ota差分包\" class=\"headerlink\" title=\"根据target包生成ota差分包\"></a>根据target包生成ota差分包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/make/tools/resleasetools/ota_from_target_files -k key_path -i old new output</span><br><span class=\"line\">    -k/--package_key build/make/target/product/security/testkey：key cert路径</span><br><span class=\"line\">    -i old.zip new.zip update.zip：差分包参数</span><br><span class=\"line\">    -p/--path out/host/linux-x86：host out路径</span><br><span class=\"line\">    -s/--device_specific ./device/qcom/common：指定了device-specific extension路径</span><br><span class=\"line\">    -v/--verify：校验和，仅非A/B设备</span><br><span class=\"line\">    --block：为非A/B设备生成基于块</span><br><span class=\"line\">    --skip_compatibility_check：跳过包的兼容性检查</span><br><span class=\"line\">    --override_timestamp：覆盖时间戳</span><br><span class=\"line\">    --downgrade：允许降级</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>OTA升级</p>","more":"<h2 id=\"otapackage（会生成target包和ota完整包）\"><a href=\"#otapackage（会生成target包和ota完整包）\" class=\"headerlink\" title=\"otapackage（会生成target包和ota完整包）\"></a>otapackage（<strong>会生成target包和ota完整包</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name := $(TARGET_PRODUCT)</span><br><span class=\"line\">ifeq ($(TARGET_BUILD_TYPE),debug)</span><br><span class=\"line\">  name := $(name)_debug</span><br><span class=\"line\">endif</span><br><span class=\"line\">name := $(name)-ota-$(FILE_NAME_TAG)</span><br><span class=\"line\"></span><br><span class=\"line\">INTERNAL_OTA_PACKAGE_TARGET := $(PRODUCT_OUT)/$(name).zip</span><br><span class=\"line\">INTERNAL_OTA_METADATA := $(PRODUCT_OUT)/ota_metadata</span><br><span class=\"line\"></span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): KEY_CERT_PAIR := $(DEFAULT_KEY_CERT_PAIR)</span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): .KATI_IMPLICIT_OUTPUTS := $(INTERNAL_OTA_METADATA)</span><br><span class=\"line\">$(INTERNAL_OTA_PACKAGE_TARGET): $(BUILT_TARGET_FILES_PACKAGE) $(OTA_FROM_TARGET_FILES)</span><br><span class=\"line\">  @<span class=\"built_in\">echo</span> <span class=\"string\">&quot;Package OTA: <span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\">  $(call build-ota-package-target,<span class=\"variable\">$@</span>,-k $(KEY_CERT_PAIR) --output_metadata_path $(INTERNAL_OTA_METADATA))</span><br><span class=\"line\"></span><br><span class=\"line\">.PHONY: otapackage</span><br><span class=\"line\">otapackage: $(INTERNAL_OTA_PACKAGE_TARGET)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"target-files-package（会生成target）\"><a href=\"#target-files-package（会生成target）\" class=\"headerlink\" title=\"target-files-package（会生成target）\"></a>target-files-package（<strong>会生成target</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name := $(TARGET_PRODUCT)</span><br><span class=\"line\">ifeq ($(TARGET_BUILD_TYPE),debug)</span><br><span class=\"line\">  name := $(name)_debug</span><br><span class=\"line\">endif</span><br><span class=\"line\">name := $(name)-target_files-$(FILE_NAME_TAG)</span><br><span class=\"line\"></span><br><span class=\"line\">intermediates := $(call intermediates-dir-for,PACKAGING,target_files)</span><br><span class=\"line\">BUILT_TARGET_FILES_PACKAGE := $(intermediates)/$(name).zip</span><br><span class=\"line\">$(BUILT_TARGET_FILES_PACKAGE): intermediates := $(intermediates)</span><br><span class=\"line\">$(BUILT_TARGET_FILES_PACKAGE): \\</span><br><span class=\"line\">      zip_root := $(intermediates)/$(name)</span><br><span class=\"line\"></span><br><span class=\"line\">.PHONY: target-files-package</span><br><span class=\"line\">target-files-package: $(BUILT_TARGET_FILES_PACKAGE)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"做差分包所需文件（系统）\"><a href=\"#做差分包所需文件（系统）\" class=\"headerlink\" title=\"做差分包所需文件（系统）\"></a>做差分包所需文件（<strong>系统</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── bin</span><br><span class=\"line\">├── build</span><br><span class=\"line\">│     └── make</span><br><span class=\"line\">│         └── target</span><br><span class=\"line\">│             └── product</span><br><span class=\"line\">│                 └── security</span><br><span class=\"line\">├── device</span><br><span class=\"line\">│     ├── google</span><br><span class=\"line\">│     │     ├── cuttlefish</span><br><span class=\"line\">│     │     │     └── host</span><br><span class=\"line\">│     │     │         └── frontend</span><br><span class=\"line\">│     │     └── vrservices</span><br><span class=\"line\">│     │         └── vrcore</span><br><span class=\"line\">│     │             └── sepolicy</span><br><span class=\"line\">│     └── qcom</span><br><span class=\"line\">│         └── sepolicy_vndr</span><br><span class=\"line\">│             ├── legacy</span><br><span class=\"line\">│             │     └── vendor</span><br><span class=\"line\">│             └── qva</span><br><span class=\"line\">│                 └── vendor</span><br><span class=\"line\">├── external</span><br><span class=\"line\">│     └── avb</span><br><span class=\"line\">│         └── <span class=\"built_in\">test</span></span><br><span class=\"line\">│             └── data</span><br><span class=\"line\">├── framework</span><br><span class=\"line\">│     ├── apksigner.jar</span><br><span class=\"line\">│     ├── boot_signer.jar</span><br><span class=\"line\">│     ├── signapk.jar</span><br><span class=\"line\">│     └── verity_signer.jar</span><br><span class=\"line\">├── lib64</span><br><span class=\"line\">├── releasetools</span><br><span class=\"line\">└── vendor</span><br><span class=\"line\">    ├── huaqin</span><br><span class=\"line\">    │     └── factory</span><br><span class=\"line\">    │         └── BaseFactoryKit</span><br><span class=\"line\">    │             └── keystore</span><br><span class=\"line\">    ├── partner_modules</span><br><span class=\"line\">    │     └── NetworkStackPrebuilt</span><br><span class=\"line\">    │         ├── localtest</span><br><span class=\"line\">    │         │     └── networkstack.x509.pem</span><br><span class=\"line\">    │         └── networkstack.x509.pem</span><br><span class=\"line\">    └── qcom</span><br><span class=\"line\">        └── proprietary</span><br><span class=\"line\">            └── prebuilt_HY11</span><br><span class=\"line\">                └── target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"做差分包所需文件（总结）\"><a href=\"#做差分包所需文件（总结）\" class=\"headerlink\" title=\"做差分包所需文件（总结）\"></a>做差分包所需文件（<strong>总结</strong>）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r build/target/product/security <span class=\"variable\">$target</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r build/make/tools/releasetools <span class=\"variable\">$target</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r out/host/linux-x86 <span class=\"variable\">$target</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"根据target包生成ota差分包\"><a href=\"#根据target包生成ota差分包\" class=\"headerlink\" title=\"根据target包生成ota差分包\"></a>根据target包生成ota差分包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build/make/tools/resleasetools/ota_from_target_files -k key_path -i old new output</span><br><span class=\"line\">    -k/--package_key build/make/target/product/security/testkey：key cert路径</span><br><span class=\"line\">    -i old.zip new.zip update.zip：差分包参数</span><br><span class=\"line\">    -p/--path out/host/linux-x86：host out路径</span><br><span class=\"line\">    -s/--device_specific ./device/qcom/common：指定了device-specific extension路径</span><br><span class=\"line\">    -v/--verify：校验和，仅非A/B设备</span><br><span class=\"line\">    --block：为非A/B设备生成基于块</span><br><span class=\"line\">    --skip_compatibility_check：跳过包的兼容性检查</span><br><span class=\"line\">    --override_timestamp：覆盖时间戳</span><br><span class=\"line\">    --downgrade：允许降级</span><br></pre></td></tr></table></figure>"},{"title":"APK集成","date":"2022-07-01T16:00:00.000Z","_content":"\nAPK集成\n\n<!--more-->\n\n## APK集成\n```bash\nAndroid.mk\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE := FaceLock\n    LOCAL_SRC_FILES := ./FaceLock.apk\n    LOCAL_MODULE_TAGS := optional\n    LOCAL_MODULE_CLASS := APPS\n    LOCAL_CERTIFICATE := PRESIGNED          //表示该apk已经签名过，若修改为platform，就使用系统签名\n    LOCAL_OVERRIDES_PACKAGES := Dialer      //覆盖module name，module查看根据源码中的android.mk确定\n    LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/priv-app/\n    include $(BUILD_PREBUILT)\n\n添加权限\n    frameworks/base/data/etc/privapp-permissions.xml\n\ncommon.mk\n    PRODUCT_PACKAGES += FaceLock\n```\n\n\n## APK直接拷到目录下（`即使不经过签名操作，也会有APK对齐操作`）\n`LOCAL_APK_NAME := ApkName`\n`LOCAL_POST_PROCESS_COMMAND := $(shell mkdir -p $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME) && cp $(LOCAL_PATH)/$(LOCAL_APK_NAME).apk $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME)/)`\n","source":"_posts/2022-7-2APK集成.md","raw":"---\ntitle: APK集成\ndate: 2022-7-2\ntags: [apk, 集成]\n---\n\nAPK集成\n\n<!--more-->\n\n## APK集成\n```bash\nAndroid.mk\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE := FaceLock\n    LOCAL_SRC_FILES := ./FaceLock.apk\n    LOCAL_MODULE_TAGS := optional\n    LOCAL_MODULE_CLASS := APPS\n    LOCAL_CERTIFICATE := PRESIGNED          //表示该apk已经签名过，若修改为platform，就使用系统签名\n    LOCAL_OVERRIDES_PACKAGES := Dialer      //覆盖module name，module查看根据源码中的android.mk确定\n    LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/priv-app/\n    include $(BUILD_PREBUILT)\n\n添加权限\n    frameworks/base/data/etc/privapp-permissions.xml\n\ncommon.mk\n    PRODUCT_PACKAGES += FaceLock\n```\n\n\n## APK直接拷到目录下（`即使不经过签名操作，也会有APK对齐操作`）\n`LOCAL_APK_NAME := ApkName`\n`LOCAL_POST_PROCESS_COMMAND := $(shell mkdir -p $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME) && cp $(LOCAL_PATH)/$(LOCAL_APK_NAME).apk $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME)/)`\n","slug":"2022-7-2APK集成","published":1,"updated":"2022-07-02T13:57:40.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yoof4000wnkvvd08lh93o","content":"<p>APK集成</p>\n<span id=\"more\"></span>\n\n<h2 id=\"APK集成\"><a href=\"#APK集成\" class=\"headerlink\" title=\"APK集成\"></a>APK集成</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Android.mk</span><br><span class=\"line\">    LOCAL_PATH := $(call my-dir)</span><br><span class=\"line\">    include $(CLEAR_VARS)</span><br><span class=\"line\">    LOCAL_MODULE := FaceLock</span><br><span class=\"line\">    LOCAL_SRC_FILES := ./FaceLock.apk</span><br><span class=\"line\">    LOCAL_MODULE_TAGS := optional</span><br><span class=\"line\">    LOCAL_MODULE_CLASS := APPS</span><br><span class=\"line\">    LOCAL_CERTIFICATE := PRESIGNED          //表示该apk已经签名过，若修改为platform，就使用系统签名</span><br><span class=\"line\">    LOCAL_OVERRIDES_PACKAGES := Dialer      //覆盖module name，module查看根据源码中的android.mk确定</span><br><span class=\"line\">    LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/priv-app/</span><br><span class=\"line\">    include $(BUILD_PREBUILT)</span><br><span class=\"line\"></span><br><span class=\"line\">添加权限</span><br><span class=\"line\">    frameworks/base/data/etc/privapp-permissions.xml</span><br><span class=\"line\"></span><br><span class=\"line\">common.mk</span><br><span class=\"line\">    PRODUCT_PACKAGES += FaceLock</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\"><a href=\"#APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\" class=\"headerlink\" title=\"APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\"></a>APK直接拷到目录下（<code>即使不经过签名操作，也会有APK对齐操作</code>）</h2><p><code>LOCAL_APK_NAME := ApkName</code><br><code>LOCAL_POST_PROCESS_COMMAND := $(shell mkdir -p $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME) &amp;&amp; cp $(LOCAL_PATH)/$(LOCAL_APK_NAME).apk $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME)/)</code></p>\n","site":{"data":{}},"excerpt":"<p>APK集成</p>","more":"<h2 id=\"APK集成\"><a href=\"#APK集成\" class=\"headerlink\" title=\"APK集成\"></a>APK集成</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Android.mk</span><br><span class=\"line\">    LOCAL_PATH := $(call my-dir)</span><br><span class=\"line\">    include $(CLEAR_VARS)</span><br><span class=\"line\">    LOCAL_MODULE := FaceLock</span><br><span class=\"line\">    LOCAL_SRC_FILES := ./FaceLock.apk</span><br><span class=\"line\">    LOCAL_MODULE_TAGS := optional</span><br><span class=\"line\">    LOCAL_MODULE_CLASS := APPS</span><br><span class=\"line\">    LOCAL_CERTIFICATE := PRESIGNED          //表示该apk已经签名过，若修改为platform，就使用系统签名</span><br><span class=\"line\">    LOCAL_OVERRIDES_PACKAGES := Dialer      //覆盖module name，module查看根据源码中的android.mk确定</span><br><span class=\"line\">    LOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/priv-app/</span><br><span class=\"line\">    include $(BUILD_PREBUILT)</span><br><span class=\"line\"></span><br><span class=\"line\">添加权限</span><br><span class=\"line\">    frameworks/base/data/etc/privapp-permissions.xml</span><br><span class=\"line\"></span><br><span class=\"line\">common.mk</span><br><span class=\"line\">    PRODUCT_PACKAGES += FaceLock</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\"><a href=\"#APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\" class=\"headerlink\" title=\"APK直接拷到目录下（即使不经过签名操作，也会有APK对齐操作）\"></a>APK直接拷到目录下（<code>即使不经过签名操作，也会有APK对齐操作</code>）</h2><p><code>LOCAL_APK_NAME := ApkName</code><br><code>LOCAL_POST_PROCESS_COMMAND := $(shell mkdir -p $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME) &amp;&amp; cp $(LOCAL_PATH)/$(LOCAL_APK_NAME).apk $(TARGET_OUT)/vendor/operator/app/$(LOCAL_APK_NAME)/)</code></p>"},{"title":"Android.mk和Android.bp","date":"2022-07-01T16:00:00.000Z","_content":"\nAndroid.mk和Android.bp\n\n<!--more-->\n\n## Android.bp和Android.mk\n\n### 格式转换\n通过`Kati`将`Android.mk`转换成`ninja`格式的文件\n通过`Blueprint + Soong`将`Android.bp`转换成`ninja`格式的文件\n通过`androidmk`将将`Android.mk`转换成`Android.bp`，但针对没有分支、循环等流程控制的`Android.mk`才有效\n\n### 说明\n1. `ninja`是一个编译框架，会根据相应的`ninja`格式的配置文件进行编译，但是`ninja`文件一般不会手动修改，而是通过将 `Android.bp`文件转换成`ninja`格文件来编译\n2. `Android.bp`是纯粹的配置，没有分支、循环等流程控制，不能做算数逻辑运算。如果需要控制逻辑，那么只能通过`Go`语言编写\n3. `Soong`类似于之前的`Makefile`编译系统的核心，负责提供`Android.bp`语义解析，并将之转换成`Ninja`文件。`Soong`还会编译生成一个`androidmk`命令，用于将`Android.mk`文件转换为`Android.bp`文件\n4. `Blueprint`是生成、解析`Android.bp`的工具，是`Soong`的一部分。`Soong`负责`Android`编译而设计的工具，而`Blueprint`只是解析文件格式，`Soong`解析内容的具体含义。`Blueprint`和`Soong`都是由`Golang`写的项目，从`Android 7.0`，`prebuilts/go/`目录下新增`Golang`所需的运行环境，在编译时使用\n5. `kati`是专为`Android`开发的一个基于`Golang`和`C++`的工具，主要功能是把`Android`中的`Android.mk`文件转换成Ninja文件。代码路径是`build/kati/`，编译后的产物是`ckati`\n\n> Android.mk -> Android.bp\n> Android.mk 转换为 `Android.bp,Google`提供了官方工具`androidmk`，只针对简单的mk文件转换，涉及分支，循环等控制转换并不准确\n> androidmk使用 ：`androidmk android.mk > android.bp`\n\n### 调用流程\n`Makefile-> build/core/main.mk -> build/core/config.mk -> build/core/envsetup.mk -> build/core/product_config.mk`\n\n\n## Android.mk常用变量\n```bash\nPRODUCT_OUT\nTARGET_OUT_VENDOR\nTARGET_COPY_OUT_VENDOR\nTARGET_COPY_OUT_PRODUCT\nTARGET_COPY_OUT_SYSTEM_EXT\n```\n\n\n## inherit-product和include区别\n```bash\ninclude device/mediatek/mt2712/device.mk\n$(call inherit-product, device/mediatek/mt2712/device.mk)\n$(call inherit-product-if-exists, device/mediatek/mt2712/device.mk)\n\n从注释中可以看到，inherit-product 函数除了会执行通过其参数传入的 Makefile 文件之外，还会额外做 3 件事：\n    1、继承通过参数传入的 Makefile 文件中的所有变量（A继承B）；\n    2、在 .INHERITS_FROM 变量中记录下这些继承关系；\n    3、在 ALL_PRODUCTS 变量中标识出当前操作的 Makefile 文件已经被访问过了（以免重复访问）\n```\n\n\n## include $(call `all-subdir-makefiles`)和include $(call `all-makefiles-under`,$(LOCAL_PATH))区别\n```bash\n    include $(call all-subdir-makefiles)是直接包含子目录，不管当前目录\n        当一级的内容是include $(call all-subdir-makefiles)时候，$(LOCAL_PATH)指向的还是一级目录的路径\n    include $(call all-makefiles-under,$(LOCAL_PATH))是包含子目录和当前目录\n```\n","source":"_posts/2022-7-2Android.mk和Android.bp.md","raw":"---\ntitle: Android.mk和Android.bp\ndate: 2022-7-2\ntags: [android, mk, bp]\n---\n\nAndroid.mk和Android.bp\n\n<!--more-->\n\n## Android.bp和Android.mk\n\n### 格式转换\n通过`Kati`将`Android.mk`转换成`ninja`格式的文件\n通过`Blueprint + Soong`将`Android.bp`转换成`ninja`格式的文件\n通过`androidmk`将将`Android.mk`转换成`Android.bp`，但针对没有分支、循环等流程控制的`Android.mk`才有效\n\n### 说明\n1. `ninja`是一个编译框架，会根据相应的`ninja`格式的配置文件进行编译，但是`ninja`文件一般不会手动修改，而是通过将 `Android.bp`文件转换成`ninja`格文件来编译\n2. `Android.bp`是纯粹的配置，没有分支、循环等流程控制，不能做算数逻辑运算。如果需要控制逻辑，那么只能通过`Go`语言编写\n3. `Soong`类似于之前的`Makefile`编译系统的核心，负责提供`Android.bp`语义解析，并将之转换成`Ninja`文件。`Soong`还会编译生成一个`androidmk`命令，用于将`Android.mk`文件转换为`Android.bp`文件\n4. `Blueprint`是生成、解析`Android.bp`的工具，是`Soong`的一部分。`Soong`负责`Android`编译而设计的工具，而`Blueprint`只是解析文件格式，`Soong`解析内容的具体含义。`Blueprint`和`Soong`都是由`Golang`写的项目，从`Android 7.0`，`prebuilts/go/`目录下新增`Golang`所需的运行环境，在编译时使用\n5. `kati`是专为`Android`开发的一个基于`Golang`和`C++`的工具，主要功能是把`Android`中的`Android.mk`文件转换成Ninja文件。代码路径是`build/kati/`，编译后的产物是`ckati`\n\n> Android.mk -> Android.bp\n> Android.mk 转换为 `Android.bp,Google`提供了官方工具`androidmk`，只针对简单的mk文件转换，涉及分支，循环等控制转换并不准确\n> androidmk使用 ：`androidmk android.mk > android.bp`\n\n### 调用流程\n`Makefile-> build/core/main.mk -> build/core/config.mk -> build/core/envsetup.mk -> build/core/product_config.mk`\n\n\n## Android.mk常用变量\n```bash\nPRODUCT_OUT\nTARGET_OUT_VENDOR\nTARGET_COPY_OUT_VENDOR\nTARGET_COPY_OUT_PRODUCT\nTARGET_COPY_OUT_SYSTEM_EXT\n```\n\n\n## inherit-product和include区别\n```bash\ninclude device/mediatek/mt2712/device.mk\n$(call inherit-product, device/mediatek/mt2712/device.mk)\n$(call inherit-product-if-exists, device/mediatek/mt2712/device.mk)\n\n从注释中可以看到，inherit-product 函数除了会执行通过其参数传入的 Makefile 文件之外，还会额外做 3 件事：\n    1、继承通过参数传入的 Makefile 文件中的所有变量（A继承B）；\n    2、在 .INHERITS_FROM 变量中记录下这些继承关系；\n    3、在 ALL_PRODUCTS 变量中标识出当前操作的 Makefile 文件已经被访问过了（以免重复访问）\n```\n\n\n## include $(call `all-subdir-makefiles`)和include $(call `all-makefiles-under`,$(LOCAL_PATH))区别\n```bash\n    include $(call all-subdir-makefiles)是直接包含子目录，不管当前目录\n        当一级的内容是include $(call all-subdir-makefiles)时候，$(LOCAL_PATH)指向的还是一级目录的路径\n    include $(call all-makefiles-under,$(LOCAL_PATH))是包含子目录和当前目录\n```\n","slug":"2022-7-2Android.mk和Android.bp","published":1,"updated":"2022-07-02T14:10:11.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl53yooff001znkvv1un1h26y","content":"<p>Android.mk和Android.bp</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Android-bp和Android-mk\"><a href=\"#Android-bp和Android-mk\" class=\"headerlink\" title=\"Android.bp和Android.mk\"></a>Android.bp和Android.mk</h2><h3 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h3><p>通过<code>Kati</code>将<code>Android.mk</code>转换成<code>ninja</code>格式的文件<br>通过<code>Blueprint + Soong</code>将<code>Android.bp</code>转换成<code>ninja</code>格式的文件<br>通过<code>androidmk</code>将将<code>Android.mk</code>转换成<code>Android.bp</code>，但针对没有分支、循环等流程控制的<code>Android.mk</code>才有效</p>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><ol>\n<li><code>ninja</code>是一个编译框架，会根据相应的<code>ninja</code>格式的配置文件进行编译，但是<code>ninja</code>文件一般不会手动修改，而是通过将 <code>Android.bp</code>文件转换成<code>ninja</code>格文件来编译</li>\n<li><code>Android.bp</code>是纯粹的配置，没有分支、循环等流程控制，不能做算数逻辑运算。如果需要控制逻辑，那么只能通过<code>Go</code>语言编写</li>\n<li><code>Soong</code>类似于之前的<code>Makefile</code>编译系统的核心，负责提供<code>Android.bp</code>语义解析，并将之转换成<code>Ninja</code>文件。<code>Soong</code>还会编译生成一个<code>androidmk</code>命令，用于将<code>Android.mk</code>文件转换为<code>Android.bp</code>文件</li>\n<li><code>Blueprint</code>是生成、解析<code>Android.bp</code>的工具，是<code>Soong</code>的一部分。<code>Soong</code>负责<code>Android</code>编译而设计的工具，而<code>Blueprint</code>只是解析文件格式，<code>Soong</code>解析内容的具体含义。<code>Blueprint</code>和<code>Soong</code>都是由<code>Golang</code>写的项目，从<code>Android 7.0</code>，<code>prebuilts/go/</code>目录下新增<code>Golang</code>所需的运行环境，在编译时使用</li>\n<li><code>kati</code>是专为<code>Android</code>开发的一个基于<code>Golang</code>和<code>C++</code>的工具，主要功能是把<code>Android</code>中的<code>Android.mk</code>文件转换成Ninja文件。代码路径是<code>build/kati/</code>，编译后的产物是<code>ckati</code></li>\n</ol>\n<blockquote>\n<p>Android.mk -&gt; Android.bp<br>Android.mk 转换为 <code>Android.bp,Google</code>提供了官方工具<code>androidmk</code>，只针对简单的mk文件转换，涉及分支，循环等控制转换并不准确<br>androidmk使用 ：<code>androidmk android.mk &gt; android.bp</code></p>\n</blockquote>\n<h3 id=\"调用流程\"><a href=\"#调用流程\" class=\"headerlink\" title=\"调用流程\"></a>调用流程</h3><p><code>Makefile-&gt; build/core/main.mk -&gt; build/core/config.mk -&gt; build/core/envsetup.mk -&gt; build/core/product_config.mk</code></p>\n<h2 id=\"Android-mk常用变量\"><a href=\"#Android-mk常用变量\" class=\"headerlink\" title=\"Android.mk常用变量\"></a>Android.mk常用变量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRODUCT_OUT</span><br><span class=\"line\">TARGET_OUT_VENDOR</span><br><span class=\"line\">TARGET_COPY_OUT_VENDOR</span><br><span class=\"line\">TARGET_COPY_OUT_PRODUCT</span><br><span class=\"line\">TARGET_COPY_OUT_SYSTEM_EXT</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"inherit-product和include区别\"><a href=\"#inherit-product和include区别\" class=\"headerlink\" title=\"inherit-product和include区别\"></a>inherit-product和include区别</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include device/mediatek/mt2712/device.mk</span><br><span class=\"line\">$(call inherit-product, device/mediatek/mt2712/device.mk)</span><br><span class=\"line\">$(call inherit-product-if-exists, device/mediatek/mt2712/device.mk)</span><br><span class=\"line\"></span><br><span class=\"line\">从注释中可以看到，inherit-product 函数除了会执行通过其参数传入的 Makefile 文件之外，还会额外做 3 件事：</span><br><span class=\"line\">    1、继承通过参数传入的 Makefile 文件中的所有变量（A继承B）；</span><br><span class=\"line\">    2、在 .INHERITS_FROM 变量中记录下这些继承关系；</span><br><span class=\"line\">    3、在 ALL_PRODUCTS 变量中标识出当前操作的 Makefile 文件已经被访问过了（以免重复访问）</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"include-call-all-subdir-makefiles-和include-call-all-makefiles-under-LOCAL-PATH-区别\"><a href=\"#include-call-all-subdir-makefiles-和include-call-all-makefiles-under-LOCAL-PATH-区别\" class=\"headerlink\" title=\"include $(call all-subdir-makefiles)和include $(call all-makefiles-under,$(LOCAL_PATH))区别\"></a>include $(call <code>all-subdir-makefiles</code>)和include $(call <code>all-makefiles-under</code>,$(LOCAL_PATH))区别</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include $(call all-subdir-makefiles)是直接包含子目录，不管当前目录</span><br><span class=\"line\">    当一级的内容是include $(call all-subdir-makefiles)时候，$(LOCAL_PATH)指向的还是一级目录的路径</span><br><span class=\"line\">include $(call all-makefiles-under,$(LOCAL_PATH))是包含子目录和当前目录</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Android.mk和Android.bp</p>","more":"<h2 id=\"Android-bp和Android-mk\"><a href=\"#Android-bp和Android-mk\" class=\"headerlink\" title=\"Android.bp和Android.mk\"></a>Android.bp和Android.mk</h2><h3 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h3><p>通过<code>Kati</code>将<code>Android.mk</code>转换成<code>ninja</code>格式的文件<br>通过<code>Blueprint + Soong</code>将<code>Android.bp</code>转换成<code>ninja</code>格式的文件<br>通过<code>androidmk</code>将将<code>Android.mk</code>转换成<code>Android.bp</code>，但针对没有分支、循环等流程控制的<code>Android.mk</code>才有效</p>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><ol>\n<li><code>ninja</code>是一个编译框架，会根据相应的<code>ninja</code>格式的配置文件进行编译，但是<code>ninja</code>文件一般不会手动修改，而是通过将 <code>Android.bp</code>文件转换成<code>ninja</code>格文件来编译</li>\n<li><code>Android.bp</code>是纯粹的配置，没有分支、循环等流程控制，不能做算数逻辑运算。如果需要控制逻辑，那么只能通过<code>Go</code>语言编写</li>\n<li><code>Soong</code>类似于之前的<code>Makefile</code>编译系统的核心，负责提供<code>Android.bp</code>语义解析，并将之转换成<code>Ninja</code>文件。<code>Soong</code>还会编译生成一个<code>androidmk</code>命令，用于将<code>Android.mk</code>文件转换为<code>Android.bp</code>文件</li>\n<li><code>Blueprint</code>是生成、解析<code>Android.bp</code>的工具，是<code>Soong</code>的一部分。<code>Soong</code>负责<code>Android</code>编译而设计的工具，而<code>Blueprint</code>只是解析文件格式，<code>Soong</code>解析内容的具体含义。<code>Blueprint</code>和<code>Soong</code>都是由<code>Golang</code>写的项目，从<code>Android 7.0</code>，<code>prebuilts/go/</code>目录下新增<code>Golang</code>所需的运行环境，在编译时使用</li>\n<li><code>kati</code>是专为<code>Android</code>开发的一个基于<code>Golang</code>和<code>C++</code>的工具，主要功能是把<code>Android</code>中的<code>Android.mk</code>文件转换成Ninja文件。代码路径是<code>build/kati/</code>，编译后的产物是<code>ckati</code></li>\n</ol>\n<blockquote>\n<p>Android.mk -&gt; Android.bp<br>Android.mk 转换为 <code>Android.bp,Google</code>提供了官方工具<code>androidmk</code>，只针对简单的mk文件转换，涉及分支，循环等控制转换并不准确<br>androidmk使用 ：<code>androidmk android.mk &gt; android.bp</code></p>\n</blockquote>\n<h3 id=\"调用流程\"><a href=\"#调用流程\" class=\"headerlink\" title=\"调用流程\"></a>调用流程</h3><p><code>Makefile-&gt; build/core/main.mk -&gt; build/core/config.mk -&gt; build/core/envsetup.mk -&gt; build/core/product_config.mk</code></p>\n<h2 id=\"Android-mk常用变量\"><a href=\"#Android-mk常用变量\" class=\"headerlink\" title=\"Android.mk常用变量\"></a>Android.mk常用变量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PRODUCT_OUT</span><br><span class=\"line\">TARGET_OUT_VENDOR</span><br><span class=\"line\">TARGET_COPY_OUT_VENDOR</span><br><span class=\"line\">TARGET_COPY_OUT_PRODUCT</span><br><span class=\"line\">TARGET_COPY_OUT_SYSTEM_EXT</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"inherit-product和include区别\"><a href=\"#inherit-product和include区别\" class=\"headerlink\" title=\"inherit-product和include区别\"></a>inherit-product和include区别</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include device/mediatek/mt2712/device.mk</span><br><span class=\"line\">$(call inherit-product, device/mediatek/mt2712/device.mk)</span><br><span class=\"line\">$(call inherit-product-if-exists, device/mediatek/mt2712/device.mk)</span><br><span class=\"line\"></span><br><span class=\"line\">从注释中可以看到，inherit-product 函数除了会执行通过其参数传入的 Makefile 文件之外，还会额外做 3 件事：</span><br><span class=\"line\">    1、继承通过参数传入的 Makefile 文件中的所有变量（A继承B）；</span><br><span class=\"line\">    2、在 .INHERITS_FROM 变量中记录下这些继承关系；</span><br><span class=\"line\">    3、在 ALL_PRODUCTS 变量中标识出当前操作的 Makefile 文件已经被访问过了（以免重复访问）</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"include-call-all-subdir-makefiles-和include-call-all-makefiles-under-LOCAL-PATH-区别\"><a href=\"#include-call-all-subdir-makefiles-和include-call-all-makefiles-under-LOCAL-PATH-区别\" class=\"headerlink\" title=\"include $(call all-subdir-makefiles)和include $(call all-makefiles-under,$(LOCAL_PATH))区别\"></a>include $(call <code>all-subdir-makefiles</code>)和include $(call <code>all-makefiles-under</code>,$(LOCAL_PATH))区别</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include $(call all-subdir-makefiles)是直接包含子目录，不管当前目录</span><br><span class=\"line\">    当一级的内容是include $(call all-subdir-makefiles)时候，$(LOCAL_PATH)指向的还是一级目录的路径</span><br><span class=\"line\">include $(call all-makefiles-under,$(LOCAL_PATH))是包含子目录和当前目录</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl53yooej0000nkvv1ht7660g","tag_id":"cl53yooeq0002nkvvh99l7v4n","_id":"cl53yooeu0007nkvvfmdj8t16"},{"post_id":"cl53yooeo0001nkvvfrw7hl6u","tag_id":"cl53yooet0006nkvvbgxp5d0m","_id":"cl53yooew000cnkvv32ebdn4f"},{"post_id":"cl53yooer0003nkvvbp4q47xs","tag_id":"cl53yooev000ankvvh9vq306s","_id":"cl53yooey000gnkvvd3shea4q"},{"post_id":"cl53yooes0004nkvv16che7ks","tag_id":"cl53yooex000enkvvfwoz73h9","_id":"cl53yoof0000knkvv9hxv50qr"},{"post_id":"cl53yooet0005nkvv1w8m1cup","tag_id":"cl53yooez000inkvv685vdyh4","_id":"cl53yoof1000onkvvb7yo4lmp"},{"post_id":"cl53yooeu0008nkvvgs0957cw","tag_id":"cl53yoof1000nnkvv7lcgbcfv","_id":"cl53yoof3000tnkvvgm37ebs6"},{"post_id":"cl53yooeu0009nkvv23p5em4r","tag_id":"cl53yoof2000rnkvv7dt2a4uc","_id":"cl53yoof4000xnkvvex4z00yb"},{"post_id":"cl53yooev000bnkvv5lm24y68","tag_id":"cl53yoof4000vnkvv0ico1hzi","_id":"cl53yoof50011nkvvbpamh4g0"},{"post_id":"cl53yooev000bnkvv5lm24y68","tag_id":"cl53yoof4000ynkvv0xs432eo","_id":"cl53yoof50012nkvvdp8y493x"},{"post_id":"cl53yooev000bnkvv5lm24y68","tag_id":"cl53yoof5000znkvv2h5tci59","_id":"cl53yoof50014nkvv6ost2yd7"},{"post_id":"cl53yooew000dnkvvazy4966t","tag_id":"cl53yoof50010nkvvgpd5ddvu","_id":"cl53yoof60015nkvv08ka22rk"},{"post_id":"cl53yooey000fnkvvbu973p8n","tag_id":"cl53yoof50013nkvv45ouatsm","_id":"cl53yoof60017nkvv7u2d3cau"},{"post_id":"cl53yooez000hnkvv7qz23drl","tag_id":"cl53yoof60016nkvv7mlxcqz1","_id":"cl53yoof70019nkvv1lgmf2c9"},{"post_id":"cl53yooez000jnkvv42skcp6a","tag_id":"cl53yoof4000vnkvv0ico1hzi","_id":"cl53yoof7001cnkvvewgg90kz"},{"post_id":"cl53yooez000jnkvv42skcp6a","tag_id":"cl53yoof7001ankvv20o6c5hg","_id":"cl53yoof8001dnkvv4rtt4zps"},{"post_id":"cl53yoof0000lnkvvb2ub0fbv","tag_id":"cl53yoof7001bnkvv5nmq7zcm","_id":"cl53yoof8001fnkvvdkzael58"},{"post_id":"cl53yoof1000mnkvvajav3bp8","tag_id":"cl53yoof4000vnkvv0ico1hzi","_id":"cl53yoof8001inkvvckszahmj"},{"post_id":"cl53yoof1000mnkvvajav3bp8","tag_id":"cl53yoof8001gnkvveasn2kuj","_id":"cl53yoof8001jnkvvaas1bbwn"},{"post_id":"cl53yoof1000pnkvveiwc43jl","tag_id":"cl53yoof4000vnkvv0ico1hzi","_id":"cl53yoof9001lnkvvdr6jbpia"},{"post_id":"cl53yoof2000qnkvvfs7ea2mk","tag_id":"cl53yoof8001knkvvcnis4b40","_id":"cl53yoof9001pnkvv4fut8ur5"},{"post_id":"cl53yoof2000qnkvvfs7ea2mk","tag_id":"cl53yoof9001mnkvv8dpo93rc","_id":"cl53yoofa001qnkvvhtwc4rly"},{"post_id":"cl53yoof2000qnkvvfs7ea2mk","tag_id":"cl53yoof9001nnkvv7cbe2ksz","_id":"cl53yoofa001snkvv1ec075fd"},{"post_id":"cl53yoof3000snkvv8bl32bly","tag_id":"cl53yoof8001knkvvcnis4b40","_id":"cl53yoofa001tnkvv2t6qhw3i"},{"post_id":"cl53yoof3000unkvv63jc9bi6","tag_id":"cl53yoofa001rnkvv6qfheqvb","_id":"cl53yoofa001vnkvvd3n5alsu"},{"post_id":"cl53yoof4000wnkvvd08lh93o","tag_id":"cl53yoof9001mnkvv8dpo93rc","_id":"cl53yoofa001xnkvv44fsajoc"},{"post_id":"cl53yoof4000wnkvvd08lh93o","tag_id":"cl53yoofa001wnkvvfxylexbm","_id":"cl53yoofb001ynkvv74fqdrob"},{"post_id":"cl53yooff001znkvv1un1h26y","tag_id":"cl53yoof8001knkvvcnis4b40","_id":"cl53yoofg0022nkvv19ds4hsl"},{"post_id":"cl53yooff001znkvv1un1h26y","tag_id":"cl53yooff0020nkvv7otr128l","_id":"cl53yoofg0023nkvv44zo55gj"},{"post_id":"cl53yooff001znkvv1un1h26y","tag_id":"cl53yoofg0021nkvv4js58t8q","_id":"cl53yoofg0024nkvvatm3cyux"}],"Tag":[{"name":"DB","_id":"cl53yooeq0002nkvvh99l7v4n"},{"name":"环境","_id":"cl53yooet0006nkvvbgxp5d0m"},{"name":"html","_id":"cl53yooev000ankvvh9vq306s"},{"name":"Java","_id":"cl53yooex000enkvvfwoz73h9"},{"name":"C","_id":"cl53yooez000inkvv685vdyh4"},{"name":"攻击","_id":"cl53yoof1000nnkvv7lcgbcfv"},{"name":"Android","_id":"cl53yoof2000rnkvv7dt2a4uc"},{"name":"git","_id":"cl53yoof4000vnkvv0ico1hzi"},{"name":"merge","_id":"cl53yoof4000ynkvv0xs432eo"},{"name":"策略","_id":"cl53yoof5000znkvv2h5tci59"},{"name":"食物","_id":"cl53yoof50010nkvvgpd5ddvu"},{"name":"linux","_id":"cl53yoof50013nkvv45ouatsm"},{"name":"python","_id":"cl53yoof60016nkvv7mlxcqz1"},{"name":"lfs","_id":"cl53yoof7001ankvv20o6c5hg"},{"name":"flask","_id":"cl53yoof7001bnkvv5nmq7zcm"},{"name":"repo","_id":"cl53yoof8001gnkvveasn2kuj"},{"name":"android","_id":"cl53yoof8001knkvvcnis4b40"},{"name":"apk","_id":"cl53yoof9001mnkvv8dpo93rc"},{"name":"签名","_id":"cl53yoof9001nnkvv7cbe2ksz"},{"name":"ota","_id":"cl53yoofa001rnkvv6qfheqvb"},{"name":"集成","_id":"cl53yoofa001wnkvvfxylexbm"},{"name":"mk","_id":"cl53yooff0020nkvv7otr128l"},{"name":"bp","_id":"cl53yoofg0021nkvv4js58t8q"}]}}